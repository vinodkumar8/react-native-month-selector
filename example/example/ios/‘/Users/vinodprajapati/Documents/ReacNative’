{
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/cliEntry.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./commands",
            "imported": [
              "CommandT"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "CommandT",
                "local": "CommandT"
              }
            ]
          },
          {
            "source": "./core",
            "imported": [
              "RNConfig"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "RNConfig",
                "local": "RNConfig"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/cliEntry.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/cliEntry.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cliEntry.js",
      "sourceFileName": "cliEntry.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cliEntry"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n'use strict';\n\nconst config = require('./core');\n\nconst assertRequiredOptions = require('./util/assertRequiredOptions');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n                                                                        * found when Flow v0.54 was deployed. To see the error delete this comment and\n                                                                        * run Flow. */\nconst chalk = require('chalk');\nconst childProcess = require('child_process');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n                                                * found when Flow v0.54 was deployed. To see the error delete this comment and\n                                                * run Flow. */\nconst commander = require('commander');\nconst commands = require('./commands');\nconst init = require('./init/init');\nconst path = require('path');\nconst pkg = require('../package.json');\n\n\n\n\ncommander.version(pkg.version);\n\nconst defaultOptParser = val => val;\n\nconst handleError = err => {\n  console.error();\n  console.error(err.message || err);\n  console.error();\n  process.exit(1);\n};\n\n// Custom printHelpInformation command inspired by internal Commander.js\n// one modified to suit our needs\nfunction printHelpInformation() {\n  let cmdName = this._name;\n  if (this._alias) {\n    cmdName = cmdName + '|' + this._alias;\n  }\n\n  const sourceInformation = this.pkg ?\n  [\n  `  ${chalk.bold('Source:')} ${this.pkg.name}@${this.pkg.version}`,\n  ''] :\n\n  [];\n\n  let output = [\n  '',\n  chalk.bold(chalk.cyan(`  react-native ${cmdName} ${this.usage()}`)),\n  `  ${this._description}`,\n  '',\n  ...sourceInformation,\n  `  ${chalk.bold('Options:')}`,\n  '',\n  this.optionHelp().replace(/^/gm, '    '),\n  ''];\n\n\n  if (this.examples && this.examples.length > 0) {\n    const formattedUsage = this.examples.map(\n    example => `    ${example.desc}: \\n    ${chalk.cyan(example.cmd)}`).\n    join('\\n\\n');\n\n    output = output.concat([\n    chalk.bold('  Example usage:'),\n    '',\n    formattedUsage]);\n\n  }\n\n  return output.concat([\n  '',\n  '']).\n  join('\\n');\n}\n\nfunction printUnknownCommand(cmdName) {\n  console.log([\n  '',\n  cmdName ?\n  chalk.red(`  Unrecognized command '${cmdName}'`) :\n  chalk.red('  You didn\\'t pass any command'),\n  `  Run ${chalk.cyan('react-native --help')} to see list of all available commands`,\n  ''].\n  join('\\n'));\n}\n\nconst addCommand = (command, cfg) => {\n  const options = command.options || [];\n\n  const cmd = commander.\n  command(command.name, undefined, {\n    noHelp: !command.description }).\n\n  description(command.description).\n  action(function runAction() {\n    const passedOptions = this.opts();\n    const argv = Array.from(arguments).slice(0, -1);\n\n    Promise.resolve().\n    then(() => {\n      assertRequiredOptions(options, passedOptions);\n      return command.func(argv, cfg, passedOptions);\n    }).\n    catch(handleError);\n  });\n\n  cmd.helpInformation = printHelpInformation.bind(cmd);\n  cmd.examples = command.examples;\n  cmd.pkg = command.pkg;\n\n  options.\n  forEach(opt => cmd.option(\n  opt.command,\n  opt.description,\n  opt.parse || defaultOptParser,\n  typeof opt.default === 'function' ? opt.default(cfg) : opt.default));\n\n\n  // Placeholder option for --config, which is parsed before any other option,\n  // but needs to be here to avoid \"unknown option\" errors when specified\n  cmd.option('--config [string]', 'Path to the CLI configuration file');\n};\n\nfunction run() {\n  const setupEnvScript = /^win/.test(process.platform) ?\n  'setup_env.bat' :\n  'setup_env.sh';\n\n  childProcess.execFileSync(path.join(__dirname, setupEnvScript));\n\n  commands.forEach(cmd => addCommand(cmd, config));\n\n  commander.parse(process.argv);\n\n  const isValidCommand = commands.find(cmd => cmd.name.split(' ')[0] === process.argv[2]);\n\n  if (!isValidCommand) {\n    printUnknownCommand(process.argv[2]);\n    return;\n  }\n\n  if (!commander.args.length) {\n    commander.help();\n  }\n}\n\nmodule.exports = {\n  run: run,\n  init: init };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cliEntry.js"
      ],
      "names": [
        "config",
        "require",
        "assertRequiredOptions",
        "chalk",
        "childProcess",
        "commander",
        "commands",
        "init",
        "path",
        "pkg",
        "version",
        "defaultOptParser",
        "val",
        "handleError",
        "err",
        "console",
        "error",
        "message",
        "process",
        "exit",
        "printHelpInformation",
        "cmdName",
        "_name",
        "_alias",
        "sourceInformation",
        "bold",
        "name",
        "output",
        "cyan",
        "usage",
        "_description",
        "optionHelp",
        "replace",
        "examples",
        "length",
        "formattedUsage",
        "map",
        "example",
        "desc",
        "cmd",
        "join",
        "concat",
        "printUnknownCommand",
        "log",
        "red",
        "addCommand",
        "command",
        "cfg",
        "options",
        "undefined",
        "noHelp",
        "description",
        "action",
        "runAction",
        "passedOptions",
        "opts",
        "argv",
        "Array",
        "from",
        "arguments",
        "slice",
        "Promise",
        "resolve",
        "then",
        "func",
        "catch",
        "helpInformation",
        "bind",
        "forEach",
        "opt",
        "option",
        "parse",
        "default",
        "run",
        "setupEnvScript",
        "test",
        "platform",
        "execFileSync",
        "__dirname",
        "isValidCommand",
        "find",
        "split",
        "args",
        "help",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "cliEntry.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\nconst config = require('./core');\n\nconst assertRequiredOptions = require('./util/assertRequiredOptions');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst chalk = require('chalk');\nconst childProcess = require('child_process');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst commander = require('commander');\nconst commands = require('./commands');\nconst init = require('./init/init');\nconst path = require('path');\nconst pkg = require('../package.json');\n\nimport type {CommandT} from './commands';\nimport type {RNConfig} from './core';\n\ncommander.version(pkg.version);\n\nconst defaultOptParser = (val) => val;\n\nconst handleError = (err) => {\n  console.error();\n  console.error(err.message || err);\n  console.error();\n  process.exit(1);\n};\n\n// Custom printHelpInformation command inspired by internal Commander.js\n// one modified to suit our needs\nfunction printHelpInformation() {\n  let cmdName = this._name;\n  if (this._alias) {\n    cmdName = cmdName + '|' + this._alias;\n  }\n\n  const sourceInformation = this.pkg\n    ? [\n      `  ${chalk.bold('Source:')} ${this.pkg.name}@${this.pkg.version}`,\n      '',\n    ]\n    : [];\n\n  let output = [\n    '',\n    chalk.bold(chalk.cyan((`  react-native ${cmdName} ${this.usage()}`))),\n    `  ${this._description}`,\n    '',\n    ...sourceInformation,\n    `  ${chalk.bold('Options:')}`,\n    '',\n    this.optionHelp().replace(/^/gm, '    '),\n    '',\n  ];\n\n  if (this.examples && this.examples.length > 0) {\n    const formattedUsage = this.examples.map(\n      example => `    ${example.desc}: \\n    ${chalk.cyan(example.cmd)}`,\n    ).join('\\n\\n');\n\n    output = output.concat([\n      chalk.bold('  Example usage:'),\n      '',\n      formattedUsage,\n    ]);\n  }\n\n  return output.concat([\n    '',\n    '',\n  ]).join('\\n');\n}\n\nfunction printUnknownCommand(cmdName) {\n  console.log([\n    '',\n    cmdName\n      ? chalk.red(`  Unrecognized command '${cmdName}'`)\n      : chalk.red('  You didn\\'t pass any command'),\n    `  Run ${chalk.cyan('react-native --help')} to see list of all available commands`,\n    '',\n  ].join('\\n'));\n}\n\nconst addCommand = (command: CommandT, cfg: RNConfig) => {\n  const options = command.options || [];\n\n  const cmd = commander\n    .command(command.name, undefined, {\n      noHelp: !command.description,\n    })\n    .description(command.description)\n    .action(function runAction() {\n      const passedOptions = this.opts();\n      const argv: Array<string> = Array.from(arguments).slice(0, -1);\n\n      Promise.resolve()\n        .then(() => {\n          assertRequiredOptions(options, passedOptions);\n          return command.func(argv, cfg, passedOptions);\n        })\n        .catch(handleError);\n    });\n\n    cmd.helpInformation = printHelpInformation.bind(cmd);\n    cmd.examples = command.examples;\n    cmd.pkg = command.pkg;\n\n  options\n    .forEach(opt => cmd.option(\n      opt.command,\n      opt.description,\n      opt.parse || defaultOptParser,\n      typeof opt.default === 'function' ? opt.default(cfg) : opt.default,\n    ));\n\n  // Placeholder option for --config, which is parsed before any other option,\n  // but needs to be here to avoid \"unknown option\" errors when specified\n  cmd.option('--config [string]', 'Path to the CLI configuration file');\n};\n\nfunction run() {\n  const setupEnvScript = /^win/.test(process.platform)\n    ? 'setup_env.bat'\n    : 'setup_env.sh';\n\n  childProcess.execFileSync(path.join(__dirname, setupEnvScript));\n\n  commands.forEach(cmd => addCommand(cmd, config));\n\n  commander.parse(process.argv);\n\n  const isValidCommand = commands.find(cmd => cmd.name.split(' ')[0] === process.argv[2]);\n\n  if (!isValidCommand) {\n    printUnknownCommand(process.argv[2]);\n    return;\n  }\n\n  if (!commander.args.length) {\n    commander.help();\n  }\n}\n\nmodule.exports = {\n  run: run,\n  init: init,\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/index.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "extends"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../commands",
            "imported": [
              "CommandT"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "CommandT",
                "local": "CommandT"
              }
            ]
          },
          {
            "source": "metro",
            "imported": [
              "ConfigT"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "ConfigT",
                "local": "ConfigT"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "RNConfig"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "RNConfig",
              "exported": "RNConfig"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/index.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/index.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n'use strict';var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};\n\nconst android = require('./android');\nconst Config = require('../util/Config');\nconst findPlugins = require('./findPlugins');\nconst findAssets = require('./findAssets');\nconst ios = require('./ios');\nconst windows = require('./windows');\nconst wrapCommands = require('./wrapCommands');\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n                                                 * found when Flow v0.54 was deployed. To see the error delete this comment and\n                                                 * run Flow. */\nconst flatten = require('lodash').flatten;\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n                                            * found when Flow v0.54 was deployed. To see the error delete this comment and\n                                            * run Flow. */\nconst minimist = require('minimist');\nconst path = require('path');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst getRNPMConfig = folder =>\n// $FlowFixMe non-literal require\nrequire(path.join(folder, './package.json')).rnpm || {};\n\nconst attachPackage = (command, pkg) => Array.isArray(command) ?\ncommand.map(cmd => attachPackage(cmd, pkg)) : _extends({},\ncommand, { pkg });\n\nconst defaultRNConfig = {\n  getProjectCommands() {\n    const appRoot = process.cwd();\n    const plugins = findPlugins([appRoot]).\n    map(pathToCommands => {\n      const name = pathToCommands.split(path.sep)[0];\n\n      return attachPackage(\n      // $FlowFixMe non-literal require\n      require(path.join(appRoot, 'node_modules', pathToCommands)),\n      // $FlowFixMe non-literal require\n      require(path.join(appRoot, 'node_modules', name, 'package.json')));\n\n    });\n\n    return flatten(plugins);\n  },\n\n  getProjectConfig() {\n    const folder = process.cwd();\n    const rnpm = getRNPMConfig(folder);\n\n    return Object.assign({}, rnpm, {\n      ios: ios.projectConfig(folder, rnpm.ios || {}),\n      android: android.projectConfig(folder, rnpm.android || {}),\n      windows: windows.projectConfig(folder, rnpm.windows || {}),\n      assets: findAssets(folder, rnpm.assets) });\n\n  },\n\n  getDependencyConfig(packageName) {\n    const folder = path.join(process.cwd(), 'node_modules', packageName);\n    const rnpm = getRNPMConfig(\n    path.join(process.cwd(), 'node_modules', packageName));\n\n\n    return Object.assign({}, rnpm, {\n      ios: ios.dependencyConfig(folder, rnpm.ios || {}),\n      android: android.dependencyConfig(folder, rnpm.android || {}),\n      windows: windows.dependencyConfig(folder, rnpm.windows || {}),\n      assets: findAssets(folder, rnpm.assets),\n      commands: wrapCommands(rnpm.commands),\n      params: rnpm.params || [] });\n\n  } };\n\n\n/**\n        * Loads the CLI configuration\n        */\nfunction getCliConfig() {\n  const cliArgs = minimist(process.argv.slice(2));\n  const config = cliArgs.config != null ?\n  Config.load(path.resolve(__dirname, cliArgs.config)) :\n  Config.findOptional(__dirname);\n\n  return _extends({}, defaultRNConfig, config);\n}\n\nmodule.exports = getCliConfig();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFuZHJvaWQiLCJyZXF1aXJlIiwiQ29uZmlnIiwiZmluZFBsdWdpbnMiLCJmaW5kQXNzZXRzIiwiaW9zIiwid2luZG93cyIsIndyYXBDb21tYW5kcyIsImZsYXR0ZW4iLCJtaW5pbWlzdCIsInBhdGgiLCJnZXRSTlBNQ29uZmlnIiwiZm9sZGVyIiwiam9pbiIsInJucG0iLCJhdHRhY2hQYWNrYWdlIiwiY29tbWFuZCIsInBrZyIsIkFycmF5IiwiaXNBcnJheSIsIm1hcCIsImNtZCIsImRlZmF1bHRSTkNvbmZpZyIsImdldFByb2plY3RDb21tYW5kcyIsImFwcFJvb3QiLCJwcm9jZXNzIiwiY3dkIiwicGx1Z2lucyIsInBhdGhUb0NvbW1hbmRzIiwibmFtZSIsInNwbGl0Iiwic2VwIiwiZ2V0UHJvamVjdENvbmZpZyIsIk9iamVjdCIsImFzc2lnbiIsInByb2plY3RDb25maWciLCJhc3NldHMiLCJnZXREZXBlbmRlbmN5Q29uZmlnIiwicGFja2FnZU5hbWUiLCJkZXBlbmRlbmN5Q29uZmlnIiwiY29tbWFuZHMiLCJwYXJhbXMiLCJnZXRDbGlDb25maWciLCJjbGlBcmdzIiwiYXJndiIsInNsaWNlIiwiY29uZmlnIiwibG9hZCIsInJlc29sdmUiLCJfX2Rpcm5hbWUiLCJmaW5kT3B0aW9uYWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7OztBQVVBLGE7O0FBRUEsTUFBTUEsVUFBVUMsUUFBUSxXQUFSLENBQWhCO0FBQ0EsTUFBTUMsU0FBU0QsUUFBUSxnQkFBUixDQUFmO0FBQ0EsTUFBTUUsY0FBY0YsUUFBUSxlQUFSLENBQXBCO0FBQ0EsTUFBTUcsYUFBYUgsUUFBUSxjQUFSLENBQW5CO0FBQ0EsTUFBTUksTUFBTUosUUFBUSxPQUFSLENBQVo7QUFDQSxNQUFNSyxVQUFVTCxRQUFRLFdBQVIsQ0FBaEI7QUFDQSxNQUFNTSxlQUFlTixRQUFRLGdCQUFSLENBQXJCOztBQUVBOzs7QUFH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S3NCLE1BQXhCLENBSnFCO0FBSzdCSSxnQkFBVWpDLGFBQWFPLEtBQUswQixRQUFsQixDQUxtQjtBQU03QkMsY0FBUTNCLEtBQUsyQixNQUFMLElBQWUsRUFOTSxFQUF4QixDQUFQOztBQVFELEdBNUNxQixFQUF4Qjs7O0FBK0NBOzs7QUFHQSxTQUFTQyxZQUFULEdBQWtDO0FBQ2hDLFFBQU1DLFVBQVVsQyxTQUFTZ0IsUUFBUW1CLElBQVIsQ0FBYUMsS0FBYixDQUFtQixDQUFuQixDQUFULENBQWhCO0FBQ0EsUUFBTUMsU0FBU0gsUUFBUUcsTUFBUixJQUFrQixJQUFsQjtBQUNYNUMsU0FBTzZDLElBQVAsQ0FBWXJDLEtBQUtzQyxPQUFMLENBQWFDLFNBQWIsRUFBd0JOLFFBQVFHLE1BQWhDLENBQVosQ0FEVztBQUVYNUMsU0FBT2dELFlBQVAsQ0FBb0JELFNBQXBCLENBRko7O0FBSUEsc0JBQVczQixlQUFYLEVBQStCd0IsTUFBL0I7QUFDRDs7QUFFREssT0FBT0MsT0FBUCxHQUFpQlYsY0FBakIiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvY29yZSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAZmxvd1xuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IGFuZHJvaWQgPSByZXF1aXJlKCcuL2FuZHJvaWQnKTtcbmNvbnN0IENvbmZpZyA9IHJlcXVpcmUoJy4uL3V0aWwvQ29uZmlnJyk7XG5jb25zdCBmaW5kUGx1Z2lucyA9IHJlcXVpcmUoJy4vZmluZFBsdWdpbnMnKTtcbmNvbnN0IGZpbmRBc3NldHMgPSByZXF1aXJlKCcuL2ZpbmRBc3NldHMnKTtcbmNvbnN0IGlvcyA9IHJlcXVpcmUoJy4vaW9zJyk7XG5jb25zdCB3aW5kb3dzID0gcmVxdWlyZSgnLi93aW5kb3dzJyk7XG5jb25zdCB3cmFwQ29tbWFuZHMgPSByZXF1aXJlKCcuL3dyYXBDb21tYW5kcycpO1xuXG4vKiAkRmxvd0ZpeE1lKD49MC41NC4wIHNpdGU9cmVhY3RfbmF0aXZlX29zcykgVGhpcyBjb21tZW50IHN1cHByZXNzZXMgYW4gZXJyb3JcbiAqIGZvdW5kIHdoZW4gRmxvdyB2MC41NCB3YXMgZGVwbG95ZWQuIFRvIHNlZSB0aGUgZXJyb3IgZGVsZXRlIHRoaXMgY29tbWVudCBhbmRcbiAqIHJ1biBGbG93LiAqL1xuY29uc3QgZmxhdHRlbiA9IHJlcXVpcmUoJ2xvZGFzaCcpLmZsYXR0ZW47XG4vKiAkRmxvd0ZpeE1lKD49MC41NC4wIHNpdGU9cmVhY3RfbmF0aXZlX29zcykgVGhpcyBjb21tZW50IHN1cHByZXNzZXMgYW4gZXJyb3JcbiAqIGZvdW5kIHdoZW4gRmxvdyB2MC41NCB3YXMgZGVwbG95ZWQuIFRvIHNlZSB0aGUgZXJyb3IgZGVsZXRlIHRoaXMgY29tbWVudCBhbmRcbiAqIHJ1biBGbG93LiAqL1xuY29uc3QgbWluaW1pc3QgPSByZXF1aXJlKCdtaW5pbWlzdCcpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxuaW1wb3J0IHR5cGUge0NvbW1hbmRUfSBmcm9tICcuLi9jb21tYW5kcyc7XG5pbXBvcnQgdHlwZSB7Q29uZmlnVH0gZnJvbSAnbWV0cm8nO1xuXG5leHBvcnQgdHlwZSBSTkNvbmZpZyA9IHtcbiAgLi4uQ29uZmlnVCxcbiAgLyoqXG4gICAqIFJldHVybnMgYW4gYXJyYXkgb2YgcHJvamVjdCBjb21tYW5kcyB1c2VkIGJ5IHRoZSBDTEkgdG8gbG9hZFxuICAgKi9cbiAgZ2V0UHJvamVjdENvbW1hbmRzKCk6IEFycmF5PENvbW1hbmRUPixcbiAgLyoqXG4gICAqIFJldHVybnMgcHJvamVjdCBjb25maWcgZnJvbSB0aGUgY3VycmVudCB3b3JraW5nIGRpcmVjdG9yeVxuICAgKi9cbiAgZ2V0UHJvamVjdENvbmZpZygpOiBPYmplY3QsXG4gIC8qKlxuICAgKiBSZXR1cm5zIGRlcGVuZGVuY3kgY29uZmlnIGZyb20gPG5vZGVfbW9kdWxlcz4vcGFja2FnZU5hbWVcbiAgICovXG4gIGdldERlcGVuZGVuY3lDb25maWcocGtnTmFtZTogc3RyaW5nKTogT2JqZWN0LFxufTtcblxuY29uc3QgZ2V0Uk5QTUNvbmZpZyA9IChmb2xkZXIpID0+XG4gIC8vICRGbG93Rml4TWUgbm9uLWxpdGVyYWwgcmVxdWlyZVxuICByZXF1aXJlKHBhdGguam9pbihmb2xkZXIsICcuL3BhY2thZ2UuanNvbicpKS5ybnBtIHx8IHt9O1xuXG5jb25zdCBhdHRhY2hQYWNrYWdlID0gKGNvbW1hbmQsIHBrZykgPT4gQXJyYXkuaXNBcnJheShjb21tYW5kKVxuICA/IGNvbW1hbmQubWFwKGNtZCA9PiBhdHRhY2hQYWNrYWdlKGNtZCwgcGtnKSlcbiAgOiB7IC4uLmNvbW1hbmQsIHBrZyB9O1xuXG5jb25zdCBkZWZhdWx0Uk5Db25maWcgPSB7XG4gIGdldFByb2plY3RDb21tYW5kcygpOiBBcnJheTxDb21tYW5kVD4ge1xuICAgIGNvbnN0IGFwcFJvb3QgPSBwcm9jZXNzLmN3ZCgpO1xuICAgIGNvbnN0IHBsdWdpbnMgPSBmaW5kUGx1Z2lucyhbYXBwUm9vdF0pXG4gICAgICAubWFwKHBhdGhUb0NvbW1hbmRzID0+IHtcbiAgICAgICAgY29uc3QgbmFtZSA9IHBhdGhUb0NvbW1hbmRzLnNwbGl0KHBhdGguc2VwKVswXTtcblxuICAgICAgICByZXR1cm4gYXR0YWNoUGFja2FnZShcbiAgICAgICAgICAvLyAkRmxvd0ZpeE1lIG5vbi1saXRlcmFsIHJlcXVpcmVcbiAgICAgICAgICByZXF1aXJlKHBhdGguam9pbihhcHBSb290LCAnbm9kZV9tb2R1bGVzJywgcGF0aFRvQ29tbWFuZHMpKSxcbiAgICAgICAgICAvLyAkRmxvd0ZpeE1lIG5vbi1saXRlcmFsIHJlcXVpcmVcbiAgICAgICAgICByZXF1aXJlKHBhdGguam9pbihhcHBSb290LCAnbm9kZV9tb2R1bGVzJywgbmFtZSwgJ3BhY2thZ2UuanNvbicpKVxuICAgICAgICApO1xuICAgICAgfSk7XG5cbiAgICByZXR1cm4gZmxhdHRlbihwbHVnaW5zKTtcbiAgfSxcblxuICBnZXRQcm9qZWN0Q29uZmlnKCk6IE9iamVjdCB7XG4gICAgY29uc3QgZm9sZGVyID0gcHJvY2Vzcy5jd2QoKTtcbiAgICBjb25zdCBybnBtID0gZ2V0Uk5QTUNvbmZpZyhmb2xkZXIpO1xuXG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHJucG0sIHtcbiAgICAgIGlvczogaW9zLnByb2plY3RDb25maWcoZm9sZGVyLCBybnBtLmlvcyB8fCB7fSksXG4gICAgICBhbmRyb2lkOiBhbmRyb2lkLnByb2plY3RDb25maWcoZm9sZGVyLCBybnBtLmFuZHJvaWQgfHwge30pLFxuICAgICAgd2luZG93czogd2luZG93cy5wcm9qZWN0Q29uZmlnKGZvbGRlciwgcm5wbS53aW5kb3dzIHx8IHt9KSxcbiAgICAgIGFzc2V0czogZmluZEFzc2V0cyhmb2xkZXIsIHJucG0uYXNzZXRzKSxcbiAgICB9KTtcbiAgfSxcblxuICBnZXREZXBlbmRlbmN5Q29uZmlnKHBhY2thZ2VOYW1lOiBzdHJpbmcpIHtcbiAgICBjb25zdCBmb2xkZXIgPSBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ25vZGVfbW9kdWxlcycsIHBhY2thZ2VOYW1lKTtcbiAgICBjb25zdCBybnBtID0gZ2V0Uk5QTUNvbmZpZyhcbiAgICAgIHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAnbm9kZV9tb2R1bGVzJywgcGFja2FnZU5hbWUpXG4gICAgKTtcblxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBybnBtLCB7XG4gICAgICBpb3M6IGlvcy5kZXBlbmRlbmN5Q29uZmlnKGZvbGRlciwgcm5wbS5pb3MgfHwge30pLFxuICAgICAgYW5kcm9pZDogYW5kcm9pZC5kZXBlbmRlbmN5Q29uZmlnKGZvbGRlciwgcm5wbS5hbmRyb2lkIHx8IHt9KSxcbiAgICAgIHdpbmRvd3M6IHdpbmRvd3MuZGVwZW5kZW5jeUNvbmZpZyhmb2xkZXIsIHJucG0ud2luZG93cyB8fCB7fSksXG4gICAgICBhc3NldHM6IGZpbmRBc3NldHMoZm9sZGVyLCBybnBtLmFzc2V0cyksXG4gICAgICBjb21tYW5kczogd3JhcENvbW1hbmRzKHJucG0uY29tbWFuZHMpLFxuICAgICAgcGFyYW1zOiBybnBtLnBhcmFtcyB8fCBbXSxcbiAgICB9KTtcbiAgfSxcbn07XG5cbi8qKlxuICogTG9hZHMgdGhlIENMSSBjb25maWd1cmF0aW9uXG4gKi9cbmZ1bmN0aW9uIGdldENsaUNvbmZpZygpOiBSTkNvbmZpZyB7XG4gIGNvbnN0IGNsaUFyZ3MgPSBtaW5pbWlzdChwcm9jZXNzLmFyZ3Yuc2xpY2UoMikpO1xuICBjb25zdCBjb25maWcgPSBjbGlBcmdzLmNvbmZpZyAhPSBudWxsXG4gICAgPyBDb25maWcubG9hZChwYXRoLnJlc29sdmUoX19kaXJuYW1lLCBjbGlBcmdzLmNvbmZpZykpXG4gICAgOiBDb25maWcuZmluZE9wdGlvbmFsKF9fZGlybmFtZSk7XG5cbiAgcmV0dXJuIHsuLi5kZWZhdWx0Uk5Db25maWcsIC4uLmNvbmZpZ307XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0Q2xpQ29uZmlnKCk7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "android",
        "require",
        "Config",
        "findPlugins",
        "findAssets",
        "ios",
        "windows",
        "wrapCommands",
        "flatten",
        "minimist",
        "path",
        "getRNPMConfig",
        "folder",
        "join",
        "rnpm",
        "attachPackage",
        "command",
        "pkg",
        "Array",
        "isArray",
        "map",
        "cmd",
        "defaultRNConfig",
        "getProjectCommands",
        "appRoot",
        "process",
        "cwd",
        "plugins",
        "pathToCommands",
        "name",
        "split",
        "sep",
        "getProjectConfig",
        "Object",
        "assign",
        "projectConfig",
        "assets",
        "getDependencyConfig",
        "packageName",
        "dependencyConfig",
        "commands",
        "params",
        "getCliConfig",
        "cliArgs",
        "argv",
        "slice",
        "config",
        "load",
        "resolve",
        "__dirname",
        "findOptional",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "index.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\nconst android = require('./android');\nconst Config = require('../util/Config');\nconst findPlugins = require('./findPlugins');\nconst findAssets = require('./findAssets');\nconst ios = require('./ios');\nconst windows = require('./windows');\nconst wrapCommands = require('./wrapCommands');\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst flatten = require('lodash').flatten;\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst minimist = require('minimist');\nconst path = require('path');\n\nimport type {CommandT} from '../commands';\nimport type {ConfigT} from 'metro';\n\nexport type RNConfig = {\n  ...ConfigT,\n  /**\n   * Returns an array of project commands used by the CLI to load\n   */\n  getProjectCommands(): Array<CommandT>,\n  /**\n   * Returns project config from the current working directory\n   */\n  getProjectConfig(): Object,\n  /**\n   * Returns dependency config from <node_modules>/packageName\n   */\n  getDependencyConfig(pkgName: string): Object,\n};\n\nconst getRNPMConfig = (folder) =>\n  // $FlowFixMe non-literal require\n  require(path.join(folder, './package.json')).rnpm || {};\n\nconst attachPackage = (command, pkg) => Array.isArray(command)\n  ? command.map(cmd => attachPackage(cmd, pkg))\n  : { ...command, pkg };\n\nconst defaultRNConfig = {\n  getProjectCommands(): Array<CommandT> {\n    const appRoot = process.cwd();\n    const plugins = findPlugins([appRoot])\n      .map(pathToCommands => {\n        const name = pathToCommands.split(path.sep)[0];\n\n        return attachPackage(\n          // $FlowFixMe non-literal require\n          require(path.join(appRoot, 'node_modules', pathToCommands)),\n          // $FlowFixMe non-literal require\n          require(path.join(appRoot, 'node_modules', name, 'package.json'))\n        );\n      });\n\n    return flatten(plugins);\n  },\n\n  getProjectConfig(): Object {\n    const folder = process.cwd();\n    const rnpm = getRNPMConfig(folder);\n\n    return Object.assign({}, rnpm, {\n      ios: ios.projectConfig(folder, rnpm.ios || {}),\n      android: android.projectConfig(folder, rnpm.android || {}),\n      windows: windows.projectConfig(folder, rnpm.windows || {}),\n      assets: findAssets(folder, rnpm.assets),\n    });\n  },\n\n  getDependencyConfig(packageName: string) {\n    const folder = path.join(process.cwd(), 'node_modules', packageName);\n    const rnpm = getRNPMConfig(\n      path.join(process.cwd(), 'node_modules', packageName)\n    );\n\n    return Object.assign({}, rnpm, {\n      ios: ios.dependencyConfig(folder, rnpm.ios || {}),\n      android: android.dependencyConfig(folder, rnpm.android || {}),\n      windows: windows.dependencyConfig(folder, rnpm.windows || {}),\n      assets: findAssets(folder, rnpm.assets),\n      commands: wrapCommands(rnpm.commands),\n      params: rnpm.params || [],\n    });\n  },\n};\n\n/**\n * Loads the CLI configuration\n */\nfunction getCliConfig(): RNConfig {\n  const cliArgs = minimist(process.argv.slice(2));\n  const config = cliArgs.config != null\n    ? Config.load(path.resolve(__dirname, cliArgs.config))\n    : Config.findOptional(__dirname);\n\n  return {...defaultRNConfig, ...config};\n}\n\nmodule.exports = getCliConfig();\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android/index.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android/index.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android/index.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst findAndroidAppFolder = require('./findAndroidAppFolder');\nconst findManifest = require('./findManifest');\nconst findPackageClassName = require('./findPackageClassName');\nconst path = require('path');\nconst readManifest = require('./readManifest');\n\nconst getPackageName = manifest => manifest.attr.package;\n\n/**\n                                                           * Gets android project config by analyzing given folder and taking some\n                                                           * defaults specified by user into consideration\n                                                           */\nexports.projectConfig = function projectConfigAndroid(folder, userConfig) {\n  const src = userConfig.sourceDir || findAndroidAppFolder(folder);\n\n  if (!src) {\n    return null;\n  }\n\n  const sourceDir = path.join(folder, src);\n  const isFlat = sourceDir.indexOf('app') === -1;\n  const manifestPath = userConfig.manifestPath ?\n  path.join(sourceDir, userConfig.manifestPath) :\n  findManifest(sourceDir);\n\n  if (!manifestPath) {\n    return null;\n  }\n\n  const manifest = readManifest(manifestPath);\n\n  const packageName = userConfig.packageName || getPackageName(manifest);\n\n  if (!packageName) {\n    throw new Error(`Package name not found in ${manifestPath}`);\n  }\n\n  const packageFolder = userConfig.packageFolder ||\n  packageName.replace(/\\./g, path.sep);\n\n  const mainFilePath = path.join(\n  sourceDir,\n  userConfig.mainFilePath || `src/main/java/${packageFolder}/MainApplication.java`);\n\n\n  const stringsPath = path.join(\n  sourceDir,\n  userConfig.stringsPath || 'src/main/res/values/strings.xml');\n\n\n  const settingsGradlePath = path.join(\n  folder,\n  'android',\n  userConfig.settingsGradlePath || 'settings.gradle');\n\n\n  const assetsPath = path.join(\n  sourceDir,\n  userConfig.assetsPath || 'src/main/assets');\n\n\n  const buildGradlePath = path.join(\n  sourceDir,\n  userConfig.buildGradlePath || 'build.gradle');\n\n\n  return {\n    sourceDir,\n    isFlat,\n    folder,\n    stringsPath,\n    manifestPath,\n    buildGradlePath,\n    settingsGradlePath,\n    assetsPath,\n    mainFilePath };\n\n};\n\n/**\n    * Same as projectConfigAndroid except it returns\n    * different config that applies to packages only\n    */\nexports.dependencyConfig = function dependencyConfigAndroid(folder, userConfig) {\n  const src = userConfig.sourceDir || findAndroidAppFolder(folder);\n\n  if (!src) {\n    return null;\n  }\n\n  const sourceDir = path.join(folder, src);\n  const manifestPath = userConfig.manifestPath ?\n  path.join(sourceDir, userConfig.manifestPath) :\n  findManifest(sourceDir);\n\n  if (!manifestPath) {\n    return null;\n  }\n\n  const manifest = readManifest(manifestPath);\n  const packageName = userConfig.packageName || getPackageName(manifest);\n  const packageClassName = findPackageClassName(sourceDir);\n\n  /**\n                                                             * This module has no package to export\n                                                             */\n  if (!packageClassName) {\n    return null;\n  }\n\n  const packageImportPath = userConfig.packageImportPath ||\n  `import ${packageName}.${packageClassName};`;\n\n  const packageInstance = userConfig.packageInstance ||\n  `new ${packageClassName}()`;\n\n  return { sourceDir, folder, manifest, packageImportPath, packageInstance };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "findAndroidAppFolder",
        "require",
        "findManifest",
        "findPackageClassName",
        "path",
        "readManifest",
        "getPackageName",
        "manifest",
        "attr",
        "package",
        "exports",
        "projectConfig",
        "projectConfigAndroid",
        "folder",
        "userConfig",
        "src",
        "sourceDir",
        "join",
        "isFlat",
        "indexOf",
        "manifestPath",
        "packageName",
        "Error",
        "packageFolder",
        "replace",
        "sep",
        "mainFilePath",
        "stringsPath",
        "settingsGradlePath",
        "assetsPath",
        "buildGradlePath",
        "dependencyConfig",
        "dependencyConfigAndroid",
        "packageClassName",
        "packageImportPath",
        "packageInstance"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,uBAAuBC,QAAQ,wBAAR,CAA7B;AACA,MAAMC,eAAeD,QAAQ,gBAAR,CAArB;AACA,MAAME,uBAAuBF,QAAQ,wBAAR,CAA7B;AACA,MAAMG,OAAOH,QAAQ,MAAR,CAAb;AACA,MAAMI,eAAeJ,QAAQ,gBAAR,CAArB;;AAEA,MAAMK,iBAAkBC,QAAD,IAAcA,SAASC,IAAT,CAAcC,OAAnD;;AAEA;;;;AAIAC,QAAQC,aAAR,GAAwB,SAASC,oBAAT,CAA8BC,MAA9B,EAAsCC,UAAtC,EAAkD;AACxE,QAAMC,MAAMD,WAAWE,SAAX,IAAwBhB,qBAAqBa,MAArB,CAApC;;AAEA,MAAI,CAACE,GAAL,EAAU;AACR,WAAO,IAAP;AACD;;AAED,QAAMC,YAAYZ,KAAKa,IAAL,CAAUJ,MAAV,EAAkBE,GAAlB,CAAlB;AACA,QAAMG,SAASF,UAAUG,OAAV,CAAkB,KAAlB,MAA6B,CAAC,CAA7C;AACA,QAAMC,eAAeN,WAAWM,YAAX;AACjBhB,OAAKa,IAAL,CAAUD,SAAV,EAAqBF,WAAWM,YAAhC,CADiB;AAEjBlB,eAAac,SAAb,CAFJ;;AAIA,MAAI,CAACI,YAAL,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,QAAMb,WAAWF,aAAae,YAAb,CAAjB;;AAEA,QAAMC,cAAcP,WAAWO,WAAX,IAA0Bf,eAAeC,QAAf,CAA9C;;AAEA,MAAI,CAACc,WAAL,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAW,6BAA4BF,YAAa,EAApD,CAAN;AACD;;AAED,QAAMG,gBAAgBT,WAAWS,aAAX;AACpBF,cAAYG,OAAZ,CAAoB,KAApB,EAA2BpB,KAAKqB,GAAhC,CADF;;AAGA,QAAMC,eAAetB,KAAKa,IAAL;AACnBD,WADmB;AAEnBF,aAAWY,YAAX,IAA4B,iBAAgBH,aAAc,uBAFvC,CAArB;;;AAKA,QAAMI,cAAcvB,KAAKa,IAAL;AAClBD,WADkB;AAElBF,aAAWa,WAAX,IAA0B,iCAFR,CAApB;;;AAKA,QAAMC,qBAAqBxB,KAAKa,IAAL;AACzBJ,QADyB;AAEzB,WAFyB;AAGzBC,aAAWc,kBAAX,IAAiC,iBAHR,CAA3B;;;AAMA,QAAMC,aAAazB,KAAKa,IAAL;AACjBD,WADiB;AAEjBF,aAAWe,UAAX,IAAyB,iBAFR,CAAnB;;;AAKA,QAAMC,kBAAkB1B,KAAKa,IAAL;AACtBD,WADsB;AAEtBF,aAAWgB,eAAX,IAA8B,cAFR,CAAxB;;;AAKA,SAAO;AACLd,aADK;AAELE,UAFK;AAGLL,UAHK;AAILc,eAJK;AAKLP,gBALK;AAMLU,mBANK;AAOLF,sBAPK;AAQLC,cARK;AASLH,gBATK,EAAP;;AAWD,CAjED;;AAmEA;;;;AAIAhB,QAAQqB,gBAAR,GAA2B,SAASC,uBAAT,CAAiCnB,MAAjC,EAAyCC,UAAzC,EAAqD;AAC9E,QAAMC,MAAMD,WAAWE,SAAX,IAAwBhB,qBAAqBa,MAArB,CAApC;;AAEA,MAAI,CAACE,GAAL,EAAU;AACR,WAAO,IAAP;AACD;;AAED,QAAMC,YAAYZ,KAAKa,IAAL,CAAUJ,MAAV,EAAkBE,GAAlB,CAAlB;AACA,QAAMK,eAAeN,WAAWM,YAAX;AACjBhB,OAAKa,IAAL,CAAUD,SAAV,EAAqBF,WAAWM,YAAhC,CADiB;AAEjBlB,eAAac,SAAb,CAFJ;;AAIA,MAAI,CAACI,YAAL,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,QAAMb,WAAWF,aAAae,YAAb,CAAjB;AACA,QAAMC,cAAcP,WAAWO,WAAX,IAA0Bf,eAAeC,QAAf,CAA9C;AACA,QAAM0B,mBAAmB9B,qBAAqBa,SAArB,CAAzB;;AAEA;;;AAGA,MAAI,CAACiB,gBAAL,EAAuB;AACrB,WAAO,IAAP;AACD;;AAED,QAAMC,oBAAoBpB,WAAWoB,iBAAX;AACvB,YAASb,WAAY,IAAGY,gBAAiB,GAD5C;;AAGA,QAAME,kBAAkBrB,WAAWqB,eAAX;AACrB,SAAMF,gBAAiB,IAD1B;;AAGA,SAAO,EAAEjB,SAAF,EAAaH,MAAb,EAAqBN,QAArB,EAA+B2B,iBAA/B,EAAkDC,eAAlD,EAAP;AACD,CAlCD",
      "file": "index.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst findAndroidAppFolder = require('./findAndroidAppFolder');\nconst findManifest = require('./findManifest');\nconst findPackageClassName = require('./findPackageClassName');\nconst path = require('path');\nconst readManifest = require('./readManifest');\n\nconst getPackageName = (manifest) => manifest.attr.package;\n\n/**\n * Gets android project config by analyzing given folder and taking some\n * defaults specified by user into consideration\n */\nexports.projectConfig = function projectConfigAndroid(folder, userConfig) {\n  const src = userConfig.sourceDir || findAndroidAppFolder(folder);\n\n  if (!src) {\n    return null;\n  }\n\n  const sourceDir = path.join(folder, src);\n  const isFlat = sourceDir.indexOf('app') === -1;\n  const manifestPath = userConfig.manifestPath\n    ? path.join(sourceDir, userConfig.manifestPath)\n    : findManifest(sourceDir);\n\n  if (!manifestPath) {\n    return null;\n  }\n\n  const manifest = readManifest(manifestPath);\n\n  const packageName = userConfig.packageName || getPackageName(manifest);\n\n  if (!packageName) {\n    throw new Error(`Package name not found in ${manifestPath}`);\n  }\n\n  const packageFolder = userConfig.packageFolder ||\n    packageName.replace(/\\./g, path.sep);\n\n  const mainFilePath = path.join(\n    sourceDir,\n    userConfig.mainFilePath || `src/main/java/${packageFolder}/MainApplication.java`\n  );\n\n  const stringsPath = path.join(\n    sourceDir,\n    userConfig.stringsPath || 'src/main/res/values/strings.xml'\n  );\n\n  const settingsGradlePath = path.join(\n    folder,\n    'android',\n    userConfig.settingsGradlePath || 'settings.gradle'\n  );\n\n  const assetsPath = path.join(\n    sourceDir,\n    userConfig.assetsPath || 'src/main/assets'\n  );\n\n  const buildGradlePath = path.join(\n    sourceDir,\n    userConfig.buildGradlePath || 'build.gradle'\n  );\n\n  return {\n    sourceDir,\n    isFlat,\n    folder,\n    stringsPath,\n    manifestPath,\n    buildGradlePath,\n    settingsGradlePath,\n    assetsPath,\n    mainFilePath,\n  };\n};\n\n/**\n * Same as projectConfigAndroid except it returns\n * different config that applies to packages only\n */\nexports.dependencyConfig = function dependencyConfigAndroid(folder, userConfig) {\n  const src = userConfig.sourceDir || findAndroidAppFolder(folder);\n\n  if (!src) {\n    return null;\n  }\n\n  const sourceDir = path.join(folder, src);\n  const manifestPath = userConfig.manifestPath\n    ? path.join(sourceDir, userConfig.manifestPath)\n    : findManifest(sourceDir);\n\n  if (!manifestPath) {\n    return null;\n  }\n\n  const manifest = readManifest(manifestPath);\n  const packageName = userConfig.packageName || getPackageName(manifest);\n  const packageClassName = findPackageClassName(sourceDir);\n\n  /**\n   * This module has no package to export\n   */\n  if (!packageClassName) {\n    return null;\n  }\n\n  const packageImportPath = userConfig.packageImportPath ||\n    `import ${packageName}.${packageClassName};`;\n\n  const packageInstance = userConfig.packageInstance ||\n    `new ${packageClassName}()`;\n\n  return { sourceDir, folder, manifest, packageImportPath, packageInstance };\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android/findAndroidAppFolder.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android/findAndroidAppFolder.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android/findAndroidAppFolder.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findAndroidAppFolder.js",
      "sourceFileName": "findAndroidAppFolder.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findAndroidAppFolder"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\n/**\n                               * @param  {String} folder Folder to seek in\n                               * @return {String}\n                               */\nmodule.exports = function findAndroidAppFolder(folder) {\n  const flat = 'android';\n  const nested = path.join('android', 'app');\n\n  if (fs.existsSync(path.join(folder, nested))) {\n    return nested;\n  }\n\n  if (fs.existsSync(path.join(folder, flat))) {\n    return flat;\n  }\n\n  return null;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRBbmRyb2lkQXBwRm9sZGVyLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsInBhdGgiLCJtb2R1bGUiLCJleHBvcnRzIiwiZmluZEFuZHJvaWRBcHBGb2xkZXIiLCJmb2xkZXIiLCJmbGF0IiwibmVzdGVkIiwiam9pbiIsImV4aXN0c1N5bmMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLE1BQU1BLEtBQUtDLFFBQVEsSUFBUixDQUFYO0FBQ0EsTUFBTUMsT0FBT0QsUUFBUSxNQUFSLENBQWI7O0FBRUE7Ozs7QUFJQUUsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxvQkFBVCxDQUE4QkMsTUFBOUIsRUFBc0M7QUFDckQsUUFBTUMsT0FBTyxTQUFiO0FBQ0EsUUFBTUMsU0FBU04sS0FBS08sSUFBTCxDQUFVLFNBQVYsRUFBcUIsS0FBckIsQ0FBZjs7QUFFQSxNQUFJVCxHQUFHVSxVQUFILENBQWNSLEtBQUtPLElBQUwsQ0FBVUgsTUFBVixFQUFrQkUsTUFBbEIsQ0FBZCxDQUFKLEVBQThDO0FBQzVDLFdBQU9BLE1BQVA7QUFDRDs7QUFFRCxNQUFJUixHQUFHVSxVQUFILENBQWNSLEtBQUtPLElBQUwsQ0FBVUgsTUFBVixFQUFrQkMsSUFBbEIsQ0FBZCxDQUFKLEVBQTRDO0FBQzFDLFdBQU9BLElBQVA7QUFDRDs7QUFFRCxTQUFPLElBQVA7QUFDRCxDQWJEIiwiZmlsZSI6ImZpbmRBbmRyb2lkQXBwRm9sZGVyLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2NvcmUvYW5kcm9pZCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG4vKipcbiAqIEBwYXJhbSAge1N0cmluZ30gZm9sZGVyIEZvbGRlciB0byBzZWVrIGluXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZmluZEFuZHJvaWRBcHBGb2xkZXIoZm9sZGVyKSB7XG4gIGNvbnN0IGZsYXQgPSAnYW5kcm9pZCc7XG4gIGNvbnN0IG5lc3RlZCA9IHBhdGguam9pbignYW5kcm9pZCcsICdhcHAnKTtcblxuICBpZiAoZnMuZXhpc3RzU3luYyhwYXRoLmpvaW4oZm9sZGVyLCBuZXN0ZWQpKSkge1xuICAgIHJldHVybiBuZXN0ZWQ7XG4gIH1cblxuICBpZiAoZnMuZXhpc3RzU3luYyhwYXRoLmpvaW4oZm9sZGVyLCBmbGF0KSkpIHtcbiAgICByZXR1cm4gZmxhdDtcbiAgfVxuXG4gIHJldHVybiBudWxsO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findAndroidAppFolder.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "module",
        "exports",
        "findAndroidAppFolder",
        "folder",
        "flat",
        "nested",
        "join",
        "existsSync"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA;;;;AAIAE,OAAOC,OAAP,GAAiB,SAASC,oBAAT,CAA8BC,MAA9B,EAAsC;AACrD,QAAMC,OAAO,SAAb;AACA,QAAMC,SAASN,KAAKO,IAAL,CAAU,SAAV,EAAqB,KAArB,CAAf;;AAEA,MAAIT,GAAGU,UAAH,CAAcR,KAAKO,IAAL,CAAUH,MAAV,EAAkBE,MAAlB,CAAd,CAAJ,EAA8C;AAC5C,WAAOA,MAAP;AACD;;AAED,MAAIR,GAAGU,UAAH,CAAcR,KAAKO,IAAL,CAAUH,MAAV,EAAkBC,IAAlB,CAAd,CAAJ,EAA4C;AAC1C,WAAOA,IAAP;AACD;;AAED,SAAO,IAAP;AACD,CAbD",
      "file": "findAndroidAppFolder.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\n/**\n * @param  {String} folder Folder to seek in\n * @return {String}\n */\nmodule.exports = function findAndroidAppFolder(folder) {\n  const flat = 'android';\n  const nested = path.join('android', 'app');\n\n  if (fs.existsSync(path.join(folder, nested))) {\n    return nested;\n  }\n\n  if (fs.existsSync(path.join(folder, flat))) {\n    return flat;\n  }\n\n  return null;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android/findManifest.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android/findManifest.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android/findManifest.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findManifest.js",
      "sourceFileName": "findManifest.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findManifest"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst glob = require('glob');\nconst path = require('path');\n\n/**\n                               * Find an android application path in the folder\n                               *\n                               * @param {String} folder Name of the folder where to seek\n                               * @return {String}\n                               */\nmodule.exports = function findManifest(folder) {\n  const manifestPath = glob.sync(path.join('**', 'AndroidManifest.xml'), {\n    cwd: folder,\n    ignore: ['node_modules/**', '**/build/**', 'Examples/**', 'examples/**'] })[\n  0];\n\n  return manifestPath ? path.join(folder, manifestPath) : null;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRNYW5pZmVzdC5qcyJdLCJuYW1lcyI6WyJnbG9iIiwicmVxdWlyZSIsInBhdGgiLCJtb2R1bGUiLCJleHBvcnRzIiwiZmluZE1hbmlmZXN0IiwiZm9sZGVyIiwibWFuaWZlc3RQYXRoIiwic3luYyIsImpvaW4iLCJjd2QiLCJpZ25vcmUiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLE1BQU1BLE9BQU9DLFFBQVEsTUFBUixDQUFiO0FBQ0EsTUFBTUMsT0FBT0QsUUFBUSxNQUFSLENBQWI7O0FBRUE7Ozs7OztBQU1BRSxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLFlBQVQsQ0FBc0JDLE1BQXRCLEVBQThCO0FBQzdDLFFBQU1DLGVBQWVQLEtBQUtRLElBQUwsQ0FBVU4sS0FBS08sSUFBTCxDQUFVLElBQVYsRUFBZ0IscUJBQWhCLENBQVYsRUFBa0Q7QUFDckVDLFNBQUtKLE1BRGdFO0FBRXJFSyxZQUFRLENBQUMsaUJBQUQsRUFBb0IsYUFBcEIsRUFBbUMsYUFBbkMsRUFBa0QsYUFBbEQsQ0FGNkQsRUFBbEQ7QUFHbEIsR0FIa0IsQ0FBckI7O0FBS0EsU0FBT0osZUFBZUwsS0FBS08sSUFBTCxDQUFVSCxNQUFWLEVBQWtCQyxZQUFsQixDQUFmLEdBQWlELElBQXhEO0FBQ0QsQ0FQRCIsImZpbGUiOiJmaW5kTWFuaWZlc3QuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvY29yZS9hbmRyb2lkIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IGdsb2IgPSByZXF1aXJlKCdnbG9iJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG4vKipcbiAqIEZpbmQgYW4gYW5kcm9pZCBhcHBsaWNhdGlvbiBwYXRoIGluIHRoZSBmb2xkZXJcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gZm9sZGVyIE5hbWUgb2YgdGhlIGZvbGRlciB3aGVyZSB0byBzZWVrXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZmluZE1hbmlmZXN0KGZvbGRlcikge1xuICBjb25zdCBtYW5pZmVzdFBhdGggPSBnbG9iLnN5bmMocGF0aC5qb2luKCcqKicsICdBbmRyb2lkTWFuaWZlc3QueG1sJyksIHtcbiAgICBjd2Q6IGZvbGRlcixcbiAgICBpZ25vcmU6IFsnbm9kZV9tb2R1bGVzLyoqJywgJyoqL2J1aWxkLyoqJywgJ0V4YW1wbGVzLyoqJywgJ2V4YW1wbGVzLyoqJ10sXG4gIH0pWzBdO1xuXG4gIHJldHVybiBtYW5pZmVzdFBhdGggPyBwYXRoLmpvaW4oZm9sZGVyLCBtYW5pZmVzdFBhdGgpIDogbnVsbDtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findManifest.js"
      ],
      "names": [
        "glob",
        "require",
        "path",
        "module",
        "exports",
        "findManifest",
        "folder",
        "manifestPath",
        "sync",
        "join",
        "cwd",
        "ignore"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA;;;;;;AAMAE,OAAOC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC7C,QAAMC,eAAeP,KAAKQ,IAAL,CAAUN,KAAKO,IAAL,CAAU,IAAV,EAAgB,qBAAhB,CAAV,EAAkD;AACrEC,SAAKJ,MADgE;AAErEK,YAAQ,CAAC,iBAAD,EAAoB,aAApB,EAAmC,aAAnC,EAAkD,aAAlD,CAF6D,EAAlD;AAGlB,GAHkB,CAArB;;AAKA,SAAOJ,eAAeL,KAAKO,IAAL,CAAUH,MAAV,EAAkBC,YAAlB,CAAf,GAAiD,IAAxD;AACD,CAPD",
      "file": "findManifest.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst glob = require('glob');\nconst path = require('path');\n\n/**\n * Find an android application path in the folder\n *\n * @param {String} folder Name of the folder where to seek\n * @return {String}\n */\nmodule.exports = function findManifest(folder) {\n  const manifestPath = glob.sync(path.join('**', 'AndroidManifest.xml'), {\n    cwd: folder,\n    ignore: ['node_modules/**', '**/build/**', 'Examples/**', 'examples/**'],\n  })[0];\n\n  return manifestPath ? path.join(folder, manifestPath) : null;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android/findPackageClassName.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android/findPackageClassName.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android/findPackageClassName.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findPackageClassName.js",
      "sourceFileName": "findPackageClassName.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findPackageClassName"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst glob = require('glob');\nconst path = require('path');\n\n/**\n                               * Gets package's class name (class that implements ReactPackage)\n                               * by searching for its declaration in all Java/Kotlin files present in the folder\n                               *\n                               * @param {String} folder Folder to find java/kt files\n                               */\nmodule.exports = function getPackageClassName(folder) {\n  const files = glob.sync('**/+(*.java|*.kt)', { cwd: folder });\n\n  const packages = files.\n  map(filePath => fs.readFileSync(path.join(folder, filePath), 'utf8')).\n  map(file => file.match(/class (.*) +(implements|:) ReactPackage/)).\n  filter(match => match);\n\n  return packages.length ? packages[0][1] : null;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRQYWNrYWdlQ2xhc3NOYW1lLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsImdsb2IiLCJwYXRoIiwibW9kdWxlIiwiZXhwb3J0cyIsImdldFBhY2thZ2VDbGFzc05hbWUiLCJmb2xkZXIiLCJmaWxlcyIsInN5bmMiLCJjd2QiLCJwYWNrYWdlcyIsIm1hcCIsImZpbGVQYXRoIiwicmVhZEZpbGVTeW5jIiwiam9pbiIsImZpbGUiLCJtYXRjaCIsImZpbHRlciIsImxlbmd0aCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUEsTUFBTUEsS0FBS0MsUUFBUSxJQUFSLENBQVg7QUFDQSxNQUFNQyxPQUFPRCxRQUFRLE1BQVIsQ0FBYjtBQUNBLE1BQU1FLE9BQU9GLFFBQVEsTUFBUixDQUFiOztBQUVBOzs7Ozs7QUFNQUcsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxtQkFBVCxDQUE2QkMsTUFBN0IsRUFBcUM7QUFDcEQsUUFBTUMsUUFBUU4sS0FBS08sSUFBTCxDQUFVLG1CQUFWLEVBQStCLEVBQUVDLEtBQUtILE1BQVAsRUFBL0IsQ0FBZDs7QUFFQSxRQUFNSSxXQUFXSDtBQUNkSSxLQURjLENBQ1ZDLFlBQVliLEdBQUdjLFlBQUgsQ0FBZ0JYLEtBQUtZLElBQUwsQ0FBVVIsTUFBVixFQUFrQk0sUUFBbEIsQ0FBaEIsRUFBNkMsTUFBN0MsQ0FERjtBQUVkRCxLQUZjLENBRVZJLFFBQVFBLEtBQUtDLEtBQUwsQ0FBVyx5Q0FBWCxDQUZFO0FBR2RDLFFBSGMsQ0FHUEQsU0FBU0EsS0FIRixDQUFqQjs7QUFLQSxTQUFPTixTQUFTUSxNQUFULEdBQWtCUixTQUFTLENBQVQsRUFBWSxDQUFaLENBQWxCLEdBQW1DLElBQTFDO0FBQ0QsQ0FURCIsImZpbGUiOiJmaW5kUGFja2FnZUNsYXNzTmFtZS5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9jb3JlL2FuZHJvaWQiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3QgZ2xvYiA9IHJlcXVpcmUoJ2dsb2InKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5cbi8qKlxuICogR2V0cyBwYWNrYWdlJ3MgY2xhc3MgbmFtZSAoY2xhc3MgdGhhdCBpbXBsZW1lbnRzIFJlYWN0UGFja2FnZSlcbiAqIGJ5IHNlYXJjaGluZyBmb3IgaXRzIGRlY2xhcmF0aW9uIGluIGFsbCBKYXZhL0tvdGxpbiBmaWxlcyBwcmVzZW50IGluIHRoZSBmb2xkZXJcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gZm9sZGVyIEZvbGRlciB0byBmaW5kIGphdmEva3QgZmlsZXNcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXRQYWNrYWdlQ2xhc3NOYW1lKGZvbGRlcikge1xuICBjb25zdCBmaWxlcyA9IGdsb2Iuc3luYygnKiovKygqLmphdmF8Ki5rdCknLCB7IGN3ZDogZm9sZGVyIH0pO1xuXG4gIGNvbnN0IHBhY2thZ2VzID0gZmlsZXNcbiAgICAubWFwKGZpbGVQYXRoID0+IGZzLnJlYWRGaWxlU3luYyhwYXRoLmpvaW4oZm9sZGVyLCBmaWxlUGF0aCksICd1dGY4JykpXG4gICAgLm1hcChmaWxlID0+IGZpbGUubWF0Y2goL2NsYXNzICguKikgKyhpbXBsZW1lbnRzfDopIFJlYWN0UGFja2FnZS8pKVxuICAgIC5maWx0ZXIobWF0Y2ggPT4gbWF0Y2gpO1xuXG4gIHJldHVybiBwYWNrYWdlcy5sZW5ndGggPyBwYWNrYWdlc1swXVsxXSA6IG51bGw7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findPackageClassName.js"
      ],
      "names": [
        "fs",
        "require",
        "glob",
        "path",
        "module",
        "exports",
        "getPackageClassName",
        "folder",
        "files",
        "sync",
        "cwd",
        "packages",
        "map",
        "filePath",
        "readFileSync",
        "join",
        "file",
        "match",
        "filter",
        "length"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,OAAOF,QAAQ,MAAR,CAAb;;AAEA;;;;;;AAMAG,OAAOC,OAAP,GAAiB,SAASC,mBAAT,CAA6BC,MAA7B,EAAqC;AACpD,QAAMC,QAAQN,KAAKO,IAAL,CAAU,mBAAV,EAA+B,EAAEC,KAAKH,MAAP,EAA/B,CAAd;;AAEA,QAAMI,WAAWH;AACdI,KADc,CACVC,YAAYb,GAAGc,YAAH,CAAgBX,KAAKY,IAAL,CAAUR,MAAV,EAAkBM,QAAlB,CAAhB,EAA6C,MAA7C,CADF;AAEdD,KAFc,CAEVI,QAAQA,KAAKC,KAAL,CAAW,yCAAX,CAFE;AAGdC,QAHc,CAGPD,SAASA,KAHF,CAAjB;;AAKA,SAAON,SAASQ,MAAT,GAAkBR,SAAS,CAAT,EAAY,CAAZ,CAAlB,GAAmC,IAA1C;AACD,CATD",
      "file": "findPackageClassName.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst glob = require('glob');\nconst path = require('path');\n\n/**\n * Gets package's class name (class that implements ReactPackage)\n * by searching for its declaration in all Java/Kotlin files present in the folder\n *\n * @param {String} folder Folder to find java/kt files\n */\nmodule.exports = function getPackageClassName(folder) {\n  const files = glob.sync('**/+(*.java|*.kt)', { cwd: folder });\n\n  const packages = files\n    .map(filePath => fs.readFileSync(path.join(folder, filePath), 'utf8'))\n    .map(file => file.match(/class (.*) +(implements|:) ReactPackage/))\n    .filter(match => match);\n\n  return packages.length ? packages[0][1] : null;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android/readManifest.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android/readManifest.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android/readManifest.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "readManifest.js",
      "sourceFileName": "readManifest.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "readManifest"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst xml = require('xmldoc');\n\n/**\n                                * @param  {String} manifestPath\n                                * @return {XMLDocument} Parsed manifest's content\n                                */\nmodule.exports = function readManifest(manifestPath) {\n  return new xml.XmlDocument(fs.readFileSync(manifestPath, 'utf8'));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWRNYW5pZmVzdC5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJ4bWwiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVhZE1hbmlmZXN0IiwibWFuaWZlc3RQYXRoIiwiWG1sRG9jdW1lbnQiLCJyZWFkRmlsZVN5bmMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLE1BQU1BLEtBQUtDLFFBQVEsSUFBUixDQUFYO0FBQ0EsTUFBTUMsTUFBTUQsUUFBUSxRQUFSLENBQVo7O0FBRUE7Ozs7QUFJQUUsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxZQUFULENBQXNCQyxZQUF0QixFQUFvQztBQUNuRCxTQUFPLElBQUlKLElBQUlLLFdBQVIsQ0FBb0JQLEdBQUdRLFlBQUgsQ0FBZ0JGLFlBQWhCLEVBQThCLE1BQTlCLENBQXBCLENBQVA7QUFDRCxDQUZEIiwiZmlsZSI6InJlYWRNYW5pZmVzdC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9jb3JlL2FuZHJvaWQiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3QgeG1sID0gcmVxdWlyZSgneG1sZG9jJyk7XG5cbi8qKlxuICogQHBhcmFtICB7U3RyaW5nfSBtYW5pZmVzdFBhdGhcbiAqIEByZXR1cm4ge1hNTERvY3VtZW50fSBQYXJzZWQgbWFuaWZlc3QncyBjb250ZW50XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcmVhZE1hbmlmZXN0KG1hbmlmZXN0UGF0aCkge1xuICByZXR1cm4gbmV3IHhtbC5YbWxEb2N1bWVudChmcy5yZWFkRmlsZVN5bmMobWFuaWZlc3RQYXRoLCAndXRmOCcpKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "readManifest.js"
      ],
      "names": [
        "fs",
        "require",
        "xml",
        "module",
        "exports",
        "readManifest",
        "manifestPath",
        "XmlDocument",
        "readFileSync"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,MAAMD,QAAQ,QAAR,CAAZ;;AAEA;;;;AAIAE,OAAOC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,YAAtB,EAAoC;AACnD,SAAO,IAAIJ,IAAIK,WAAR,CAAoBP,GAAGQ,YAAH,CAAgBF,YAAhB,EAA8B,MAA9B,CAApB,CAAP;AACD,CAFD",
      "file": "readManifest.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/android",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst xml = require('xmldoc');\n\n/**\n * @param  {String} manifestPath\n * @return {XMLDocument} Parsed manifest's content\n */\nmodule.exports = function readManifest(manifestPath) {\n  return new xml.XmlDocument(fs.readFileSync(manifestPath, 'utf8'));\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/Config.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "extends"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "metro",
            "imported": [
              "ConfigT"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "ConfigT",
                "local": "MetroConfigT"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "ConfigT"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "ConfigT",
              "exported": "ConfigT"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/Config.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/Config.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "Config.js",
      "sourceFileName": "Config.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "Config"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @format\n * \n */\n'use strict';var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};\n\nconst findSymlinkedModules = require('./findSymlinkedModules');\nconst fs = require('fs');\nconst getPolyfills = require('../../rn-get-polyfills');\nconst invariant = require('fbjs/lib/invariant');\nconst path = require('path');\n\nconst { Config: MetroConfig } = require('metro');\n\nconst RN_CLI_CONFIG = 'rn-cli.config.js';\n\n\n\n/**\n                                           * Configuration file of the CLI.\n                                           */\n\n\nfunction getProjectPath() {\n  if (\n  __dirname.match(/node_modules[\\/\\\\]react-native[\\/\\\\]local-cli[\\/\\\\]util$/))\n  {\n    // Packager is running from node_modules.\n    // This is the default case for all projects created using 'react-native init'.\n    return path.resolve(__dirname, '../../../..');\n  } else if (__dirname.match(/Pods[\\/\\\\]React[\\/\\\\]packager$/)) {\n    // React Native was installed using CocoaPods.\n    return path.resolve(__dirname, '../../../..');\n  }\n  return path.resolve(__dirname, '../..');\n}\n\nconst resolveSymlinksForRoots = roots =>\nroots.reduce(\n(arr, rootPath) => arr.concat(findSymlinkedModules(rootPath, roots)),\n[...roots]);\n\n\nconst getProjectRoots = () => {\n  const root = process.env.REACT_NATIVE_APP_ROOT;\n  if (root) {\n    return resolveSymlinksForRoots([path.resolve(root)]);\n  }\n  return resolveSymlinksForRoots([getProjectPath()]);\n};\n\n/**\n    * Module capable of getting the configuration out of a given file.\n    *\n    * The function will return all the default configuration, as specified by the\n    * `DEFAULT` param overriden by those found on `rn-cli.config.js` files, if any. If no\n    * default config is provided and no configuration can be found in the directory\n    * hierarchy, an error will be thrown.\n    */\nconst Config = {\n  DEFAULT: _extends({},\n  MetroConfig.DEFAULT, {\n    getProjectRoots,\n    getPolyfills,\n    getModulesRunBeforeMainModule: () => [\n    require.resolve('../../Libraries/Core/InitializeCore')] }),\n\n\n\n  find(startDir) {\n    return this.findWithPath(startDir).config;\n  },\n\n  findWithPath(startDir) {\n    const configPath = findConfigPath(startDir);\n    invariant(\n    configPath,\n    `Can't find \"${RN_CLI_CONFIG}\" file in any parent folder of \"${startDir}\"`);\n\n    const projectPath = path.dirname(configPath);\n    return { config: this.load(configPath, startDir), projectPath };\n  },\n\n  findOptional(startDir) {\n    const configPath = findConfigPath(startDir);\n    return configPath ? this.load(configPath, startDir) : _extends({}, Config.DEFAULT);\n  },\n\n  load(configFile) {\n    return MetroConfig.load(configFile, Config.DEFAULT);\n  } };\n\n\nfunction findConfigPath(cwd) {\n  const parentDir = findParentDirectory(cwd, RN_CLI_CONFIG);\n  return parentDir ? path.join(parentDir, RN_CLI_CONFIG) : null;\n}\n\n// Finds the most near ancestor starting at `currentFullPath` that has\n// a file named `filename`\nfunction findParentDirectory(currentFullPath, filename) {\n  const root = path.parse(currentFullPath).root;\n  const testDir = parts => {\n    if (parts.length === 0) {\n      return null;\n    }\n\n    const fullPath = path.join(root, parts.join(path.sep));\n\n    var exists = fs.existsSync(path.join(fullPath, filename));\n    return exists ? fullPath : testDir(parts.slice(0, -1));\n  };\n\n  return testDir(currentFullPath.substring(root.length).split(path.sep));\n}\n\nmodule.exports = Config;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "Config.js"
      ],
      "names": [
        "findSymlinkedModules",
        "require",
        "fs",
        "getPolyfills",
        "invariant",
        "path",
        "Config",
        "MetroConfig",
        "RN_CLI_CONFIG",
        "getProjectPath",
        "__dirname",
        "match",
        "resolve",
        "resolveSymlinksForRoots",
        "roots",
        "reduce",
        "arr",
        "rootPath",
        "concat",
        "getProjectRoots",
        "root",
        "process",
        "env",
        "REACT_NATIVE_APP_ROOT",
        "DEFAULT",
        "getModulesRunBeforeMainModule",
        "find",
        "startDir",
        "findWithPath",
        "config",
        "configPath",
        "findConfigPath",
        "projectPath",
        "dirname",
        "load",
        "findOptional",
        "configFile",
        "cwd",
        "parentDir",
        "findParentDirectory",
        "join",
        "currentFullPath",
        "filename",
        "parse",
        "testDir",
        "parts",
        "length",
        "fullPath",
        "sep",
        "exists",
        "existsSync",
        "slice",
        "substring",
        "split",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "Config.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @format\n * @flow\n */\n'use strict';\n\nconst findSymlinkedModules = require('./findSymlinkedModules');\nconst fs = require('fs');\nconst getPolyfills = require('../../rn-get-polyfills');\nconst invariant = require('fbjs/lib/invariant');\nconst path = require('path');\n\nconst {Config: MetroConfig} = require('metro');\n\nconst RN_CLI_CONFIG = 'rn-cli.config.js';\n\nimport type {ConfigT as MetroConfigT} from 'metro';\n\n/**\n * Configuration file of the CLI.\n */\nexport type ConfigT = MetroConfigT;\n\nfunction getProjectPath() {\n  if (\n    __dirname.match(/node_modules[\\/\\\\]react-native[\\/\\\\]local-cli[\\/\\\\]util$/)\n  ) {\n    // Packager is running from node_modules.\n    // This is the default case for all projects created using 'react-native init'.\n    return path.resolve(__dirname, '../../../..');\n  } else if (__dirname.match(/Pods[\\/\\\\]React[\\/\\\\]packager$/)) {\n    // React Native was installed using CocoaPods.\n    return path.resolve(__dirname, '../../../..');\n  }\n  return path.resolve(__dirname, '../..');\n}\n\nconst resolveSymlinksForRoots = roots =>\n  roots.reduce(\n    (arr, rootPath) => arr.concat(findSymlinkedModules(rootPath, roots)),\n    [...roots],\n  );\n\nconst getProjectRoots = () => {\n  const root = process.env.REACT_NATIVE_APP_ROOT;\n  if (root) {\n    return resolveSymlinksForRoots([path.resolve(root)]);\n  }\n  return resolveSymlinksForRoots([getProjectPath()]);\n};\n\n/**\n * Module capable of getting the configuration out of a given file.\n *\n * The function will return all the default configuration, as specified by the\n * `DEFAULT` param overriden by those found on `rn-cli.config.js` files, if any. If no\n * default config is provided and no configuration can be found in the directory\n * hierarchy, an error will be thrown.\n */\nconst Config = {\n  DEFAULT: ({\n    ...MetroConfig.DEFAULT,\n    getProjectRoots,\n    getPolyfills,\n    getModulesRunBeforeMainModule: () => [\n      require.resolve('../../Libraries/Core/InitializeCore'),\n    ],\n  }: ConfigT),\n\n  find(startDir: string): ConfigT {\n    return this.findWithPath(startDir).config;\n  },\n\n  findWithPath(startDir: string): {config: ConfigT, projectPath: string} {\n    const configPath = findConfigPath(startDir);\n    invariant(\n      configPath,\n      `Can't find \"${RN_CLI_CONFIG}\" file in any parent folder of \"${startDir}\"`,\n    );\n    const projectPath = path.dirname(configPath);\n    return {config: this.load(configPath, startDir), projectPath};\n  },\n\n  findOptional(startDir: string): ConfigT {\n    const configPath = findConfigPath(startDir);\n    return configPath ? this.load(configPath, startDir) : {...Config.DEFAULT};\n  },\n\n  load(configFile: string): ConfigT {\n    return MetroConfig.load(configFile, Config.DEFAULT);\n  },\n};\n\nfunction findConfigPath(cwd: string): ?string {\n  const parentDir = findParentDirectory(cwd, RN_CLI_CONFIG);\n  return parentDir ? path.join(parentDir, RN_CLI_CONFIG) : null;\n}\n\n// Finds the most near ancestor starting at `currentFullPath` that has\n// a file named `filename`\nfunction findParentDirectory(currentFullPath, filename) {\n  const root = path.parse(currentFullPath).root;\n  const testDir = parts => {\n    if (parts.length === 0) {\n      return null;\n    }\n\n    const fullPath = path.join(root, parts.join(path.sep));\n\n    var exists = fs.existsSync(path.join(fullPath, filename));\n    return exists ? fullPath : testDir(parts.slice(0, -1));\n  };\n\n  return testDir(currentFullPath.substring(root.length).split(path.sep));\n}\n\nmodule.exports = Config;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/findSymlinkedModules.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/findSymlinkedModules.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/findSymlinkedModules.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findSymlinkedModules.js",
      "sourceFileName": "findSymlinkedModules.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findSymlinkedModules"
    },
    "ignored": false,
    "code": "'use strict'; /**\n               * Copyright (c) 2015-present, Facebook, Inc.\n               * All rights reserved.\n               *\n               * This source code is licensed under the BSD-style license found in the\n               * LICENSE file in the root directory of this source tree. An additional grant\n               * of patent rights can be found in the PATENTS file in the same directory.\n               *\n               * @format\n               * \n               */\n\nconst path = require('path');\nconst fs = require('fs');\n\n/**\n                           * Find symlinked modules inside \"node_modules.\"\n                           *\n                           * Naively, we could just perform a depth-first search of all folders in\n                           * node_modules, recursing when we find a symlink.\n                           *\n                           * We can be smarter than this due to our knowledge of how npm/Yarn lays out\n                           * \"node_modules\" / how tools that build on top of npm/Yarn (such as Lerna)\n                           * install dependencies.\n                           *\n                           * Starting from a given root node_modules folder, this algorithm will look at\n                           * both the top level descendants of the node_modules folder or second level\n                           * descendants of folders that start with \"@\" (which indicates a scoped\n                           * package). If any of those folders is a symlink, it will recurse into the\n                           * link, and perform the same search in the linked folder.\n                           *\n                           * The end result should be a list of all resolved module symlinks for a given\n                           * root.\n                           */\nmodule.exports = function findSymlinkedModules(\nprojectRoot,\nignoredRoots = [])\n{\n  const timeStart = Date.now();\n  const nodeModuleRoot = path.join(projectRoot, 'node_modules');\n  const resolvedSymlinks = findModuleSymlinks(nodeModuleRoot, [\n  ...ignoredRoots,\n  projectRoot]);\n\n  const timeEnd = Date.now();\n\n  console.log(\n  `Scanning folders for symlinks in ${nodeModuleRoot} (${timeEnd -\n  timeStart}ms)`);\n\n\n  return resolvedSymlinks;\n};\n\nfunction findModuleSymlinks(\nmodulesPath,\nignoredPaths = [])\n{\n  if (!fs.existsSync(modulesPath)) {\n    return [];\n  }\n\n  // Find module symlinks\n  const moduleFolders = fs.readdirSync(modulesPath);\n  const symlinks = moduleFolders.reduce((links, folderName) => {\n    const folderPath = path.join(modulesPath, folderName);\n    const maybeSymlinkPaths = [];\n    if (folderName.startsWith('@')) {\n      const scopedModuleFolders = fs.readdirSync(folderPath);\n      maybeSymlinkPaths.push(\n      ...scopedModuleFolders.map(name => path.join(folderPath, name)));\n\n    } else {\n      maybeSymlinkPaths.push(folderPath);\n    }\n    return links.concat(resolveSymlinkPaths(maybeSymlinkPaths, ignoredPaths));\n  }, []);\n\n  // For any symlinks found, look in _that_ modules node_modules directory\n  // and find any symlinked modules\n  const nestedSymlinks = symlinks.reduce(\n  (links, symlinkPath) =>\n  links.concat(\n  // We ignore any found symlinks or anything from the ignored list,\n  // to prevent infinite recursion\n  findModuleSymlinks(path.join(symlinkPath, 'node_modules'), [\n  ...ignoredPaths,\n  ...symlinks])),\n\n\n  []);\n\n\n  return [...new Set([...symlinks, ...nestedSymlinks])];\n}\n\nfunction resolveSymlinkPaths(maybeSymlinkPaths, ignoredPaths) {\n  return maybeSymlinkPaths.reduce((links, maybeSymlinkPath) => {\n    if (fs.lstatSync(maybeSymlinkPath).isSymbolicLink()) {\n      const resolved = path.resolve(\n      path.dirname(maybeSymlinkPath),\n      fs.readlinkSync(maybeSymlinkPath));\n\n      if (ignoredPaths.indexOf(resolved) === -1 && fs.existsSync(resolved)) {\n        links.push(resolved);\n      }\n    }\n    return links;\n  }, []);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findSymlinkedModules.js"
      ],
      "names": [
        "path",
        "require",
        "fs",
        "module",
        "exports",
        "findSymlinkedModules",
        "projectRoot",
        "ignoredRoots",
        "timeStart",
        "Date",
        "now",
        "nodeModuleRoot",
        "join",
        "resolvedSymlinks",
        "findModuleSymlinks",
        "timeEnd",
        "console",
        "log",
        "modulesPath",
        "ignoredPaths",
        "existsSync",
        "moduleFolders",
        "readdirSync",
        "symlinks",
        "reduce",
        "links",
        "folderName",
        "folderPath",
        "maybeSymlinkPaths",
        "startsWith",
        "scopedModuleFolders",
        "push",
        "map",
        "name",
        "concat",
        "resolveSymlinkPaths",
        "nestedSymlinks",
        "symlinkPath",
        "Set",
        "maybeSymlinkPath",
        "lstatSync",
        "isSymbolicLink",
        "resolved",
        "resolve",
        "dirname",
        "readlinkSync",
        "indexOf"
      ],
      "mappings": "cAAA;;;;;;;;;;;;AAYA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,MAAMC,KAAKD,QAAQ,IAAR,CAAX;;AAEA;;;;;;;;;;;;;;;;;;;AAmBAE,OAAOC,OAAP,GAAiB,SAASC,oBAAT;AACfC,WADe;AAEfC,eAA+B,EAFhB;AAGf;AACA,QAAMC,YAAYC,KAAKC,GAAL,EAAlB;AACA,QAAMC,iBAAiBX,KAAKY,IAAL,CAAUN,WAAV,EAAuB,cAAvB,CAAvB;AACA,QAAMO,mBAAmBC,mBAAmBH,cAAnB,EAAmC;AAC1D,KAAGJ,YADuD;AAE1DD,aAF0D,CAAnC,CAAzB;;AAIA,QAAMS,UAAUN,KAAKC,GAAL,EAAhB;;AAEAM,UAAQC,GAAR;AACG,sCAAmCN,cAAe,KAAII;AACrDP,WAAU,KAFd;;;AAKA,SAAOK,gBAAP;AACD,CAlBD;;AAoBA,SAASC,kBAAT;AACEI,WADF;AAEEC,eAA8B,EAFhC;AAGiB;AACf,MAAI,CAACjB,GAAGkB,UAAH,CAAcF,WAAd,CAAL,EAAiC;AAC/B,WAAO,EAAP;AACD;;AAED;AACA,QAAMG,gBAAgBnB,GAAGoB,WAAH,CAAeJ,WAAf,CAAtB;AACA,QAAMK,WAAWF,cAAcG,MAAd,CAAqB,CAACC,KAAD,EAAQC,UAAR,KAAuB;AAC3D,UAAMC,aAAa3B,KAAKY,IAAL,CAAUM,WAAV,EAAuBQ,UAAvB,CAAnB;AACA,UAAME,oBAAoB,EAA1B;AACA,QAAIF,WAAWG,UAAX,CAAsB,GAAtB,CAAJ,EAAgC;AAC9B,YAAMC,sBAAsB5B,GAAGoB,WAAH,CAAeK,UAAf,CAA5B;AACAC,wBAAkBG,IAAlB;AACE,SAAGD,oBAAoBE,GAApB,CAAwBC,QAAQjC,KAAKY,IAAL,CAAUe,UAAV,EAAsBM,IAAtB,CAAhC,CADL;;AAGD,KALD,MAKO;AACLL,wBAAkBG,IAAlB,CAAuBJ,UAAvB;AACD;AACD,WAAOF,MAAMS,MAAN,CAAaC,oBAAoBP,iBAApB,EAAuCT,YAAvC,CAAb,CAAP;AACD,GAZgB,EAYd,EAZc,CAAjB;;AAcA;AACA;AACA,QAAMiB,iBAAiBb,SAASC,MAAT;AACrB,GAACC,KAAD,EAAQY,WAAR;AACEZ,QAAMS,MAAN;AACE;AACA;AACApB,qBAAmBd,KAAKY,IAAL,CAAUyB,WAAV,EAAuB,cAAvB,CAAnB,EAA2D;AACzD,KAAGlB,YADsD;AAEzD,KAAGI,QAFsD,CAA3D,CAHF,CAFmB;;;AAUrB,IAVqB,CAAvB;;;AAaA,SAAO,CAAC,GAAG,IAAIe,GAAJ,CAAQ,CAAC,GAAGf,QAAJ,EAAc,GAAGa,cAAjB,CAAR,CAAJ,CAAP;AACD;;AAED,SAASD,mBAAT,CAA6BP,iBAA7B,EAAgDT,YAAhD,EAA8D;AAC5D,SAAOS,kBAAkBJ,MAAlB,CAAyB,CAACC,KAAD,EAAQc,gBAAR,KAA6B;AAC3D,QAAIrC,GAAGsC,SAAH,CAAaD,gBAAb,EAA+BE,cAA/B,EAAJ,EAAqD;AACnD,YAAMC,WAAW1C,KAAK2C,OAAL;AACf3C,WAAK4C,OAAL,CAAaL,gBAAb,CADe;AAEfrC,SAAG2C,YAAH,CAAgBN,gBAAhB,CAFe,CAAjB;;AAIA,UAAIpB,aAAa2B,OAAb,CAAqBJ,QAArB,MAAmC,CAAC,CAApC,IAAyCxC,GAAGkB,UAAH,CAAcsB,QAAd,CAA7C,EAAsE;AACpEjB,cAAMM,IAAN,CAAWW,QAAX;AACD;AACF;AACD,WAAOjB,KAAP;AACD,GAXM,EAWJ,EAXI,CAAP;AAYD",
      "file": "findSymlinkedModules.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @format\n * @flow\n */\n\nconst path = require('path');\nconst fs = require('fs');\n\n/**\n * Find symlinked modules inside \"node_modules.\"\n *\n * Naively, we could just perform a depth-first search of all folders in\n * node_modules, recursing when we find a symlink.\n *\n * We can be smarter than this due to our knowledge of how npm/Yarn lays out\n * \"node_modules\" / how tools that build on top of npm/Yarn (such as Lerna)\n * install dependencies.\n *\n * Starting from a given root node_modules folder, this algorithm will look at\n * both the top level descendants of the node_modules folder or second level\n * descendants of folders that start with \"@\" (which indicates a scoped\n * package). If any of those folders is a symlink, it will recurse into the\n * link, and perform the same search in the linked folder.\n *\n * The end result should be a list of all resolved module symlinks for a given\n * root.\n */\nmodule.exports = function findSymlinkedModules(\n  projectRoot: string,\n  ignoredRoots?: Array<string> = [],\n) {\n  const timeStart = Date.now();\n  const nodeModuleRoot = path.join(projectRoot, 'node_modules');\n  const resolvedSymlinks = findModuleSymlinks(nodeModuleRoot, [\n    ...ignoredRoots,\n    projectRoot,\n  ]);\n  const timeEnd = Date.now();\n\n  console.log(\n    `Scanning folders for symlinks in ${nodeModuleRoot} (${timeEnd -\n      timeStart}ms)`,\n  );\n\n  return resolvedSymlinks;\n};\n\nfunction findModuleSymlinks(\n  modulesPath: string,\n  ignoredPaths: Array<string> = [],\n): Array<string> {\n  if (!fs.existsSync(modulesPath)) {\n    return [];\n  }\n\n  // Find module symlinks\n  const moduleFolders = fs.readdirSync(modulesPath);\n  const symlinks = moduleFolders.reduce((links, folderName) => {\n    const folderPath = path.join(modulesPath, folderName);\n    const maybeSymlinkPaths = [];\n    if (folderName.startsWith('@')) {\n      const scopedModuleFolders = fs.readdirSync(folderPath);\n      maybeSymlinkPaths.push(\n        ...scopedModuleFolders.map(name => path.join(folderPath, name)),\n      );\n    } else {\n      maybeSymlinkPaths.push(folderPath);\n    }\n    return links.concat(resolveSymlinkPaths(maybeSymlinkPaths, ignoredPaths));\n  }, []);\n\n  // For any symlinks found, look in _that_ modules node_modules directory\n  // and find any symlinked modules\n  const nestedSymlinks = symlinks.reduce(\n    (links, symlinkPath) =>\n      links.concat(\n        // We ignore any found symlinks or anything from the ignored list,\n        // to prevent infinite recursion\n        findModuleSymlinks(path.join(symlinkPath, 'node_modules'), [\n          ...ignoredPaths,\n          ...symlinks,\n        ]),\n      ),\n    [],\n  );\n\n  return [...new Set([...symlinks, ...nestedSymlinks])];\n}\n\nfunction resolveSymlinkPaths(maybeSymlinkPaths, ignoredPaths) {\n  return maybeSymlinkPaths.reduce((links, maybeSymlinkPath) => {\n    if (fs.lstatSync(maybeSymlinkPath).isSymbolicLink()) {\n      const resolved = path.resolve(\n        path.dirname(maybeSymlinkPath),\n        fs.readlinkSync(maybeSymlinkPath),\n      );\n      if (ignoredPaths.indexOf(resolved) === -1 && fs.existsSync(resolved)) {\n        links.push(resolved);\n      }\n    }\n    return links;\n  }, []);\n}\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/findPlugins.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/findPlugins.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/findPlugins.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findPlugins.js",
      "sourceFileName": "findPlugins.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findPlugins"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst path = require('path');\nconst union = require('lodash').union;\nconst uniq = require('lodash').uniq;\nconst flatten = require('lodash').flatten;\n\n/**\n                                            * Filter dependencies by name pattern\n                                            * @param  {String} dependency Name of the dependency\n                                            * @return {Boolean}           If dependency is a rnpm plugin\n                                            */\nconst isRNPMPlugin = dependency => dependency.indexOf('rnpm-plugin-') === 0;\nconst isReactNativePlugin = dependency => dependency.indexOf('react-native-') === 0;\n\nconst readPackage = folder => {\n  try {\n    return require(path.join(folder, 'package.json'));\n  } catch (e) {\n    return null;\n  }\n};\n\nconst findPluginsInReactNativePackage = pjson => {\n  if (!pjson.rnpm || !pjson.rnpm.plugin) {\n    return [];\n  }\n\n  return path.join(pjson.name, pjson.rnpm.plugin);\n};\n\nconst findPluginInFolder = folder => {\n  const pjson = readPackage(folder);\n\n  if (!pjson) {\n    return [];\n  }\n\n  const deps = union(\n  Object.keys(pjson.dependencies || {}),\n  Object.keys(pjson.devDependencies || {}));\n\n\n  return deps.reduce(\n  (acc, pkg) => {\n    if (isRNPMPlugin(pkg)) {\n      return acc.concat(pkg);\n    }\n    if (isReactNativePlugin(pkg)) {\n      const pkgJson = readPackage(path.join(folder, 'node_modules', pkg));\n      if (!pkgJson) {\n        return acc;\n      }\n      return acc.concat(findPluginsInReactNativePackage(pkgJson));\n    }\n    return acc;\n  },\n  []);\n\n};\n\n/**\n    * Find plugins in package.json of the given folder\n    * @param {String} folder Path to the folder to get the package.json from\n    * @type  {Array}         Array of plugins or an empty array if no package.json found\n    */\nmodule.exports = function findPlugins(folders) {\n  return uniq(flatten(folders.map(findPluginInFolder)));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRQbHVnaW5zLmpzIl0sIm5hbWVzIjpbInBhdGgiLCJyZXF1aXJlIiwidW5pb24iLCJ1bmlxIiwiZmxhdHRlbiIsImlzUk5QTVBsdWdpbiIsImRlcGVuZGVuY3kiLCJpbmRleE9mIiwiaXNSZWFjdE5hdGl2ZVBsdWdpbiIsInJlYWRQYWNrYWdlIiwiZm9sZGVyIiwiam9pbiIsImUiLCJmaW5kUGx1Z2luc0luUmVhY3ROYXRpdmVQYWNrYWdlIiwicGpzb24iLCJybnBtIiwicGx1Z2luIiwibmFtZSIsImZpbmRQbHVnaW5JbkZvbGRlciIsImRlcHMiLCJPYmplY3QiLCJrZXlzIiwiZGVwZW5kZW5jaWVzIiwiZGV2RGVwZW5kZW5jaWVzIiwicmVkdWNlIiwiYWNjIiwicGtnIiwiY29uY2F0IiwicGtnSnNvbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJmaW5kUGx1Z2lucyIsImZvbGRlcnMiLCJtYXAiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLE1BQU1BLE9BQU9DLFFBQVEsTUFBUixDQUFiO0FBQ0EsTUFBTUMsUUFBUUQsUUFBUSxRQUFSLEVBQWtCQyxLQUFoQztBQUNBLE1BQU1DLE9BQU9GLFFBQVEsUUFBUixFQUFrQkUsSUFBL0I7QUFDQSxNQUFNQyxVQUFVSCxRQUFRLFFBQVIsRUFBa0JHLE9BQWxDOztBQUVBOzs7OztBQUtBLE1BQU1DLGVBQWdCQyxVQUFELElBQWdCQSxXQUFXQyxPQUFYLENBQW1CLGNBQW5CLE1BQXVDLENBQTVFO0FBQ0EsTUFBTUMsc0JBQXVCRixVQUFELElBQWdCQSxXQUFXQyxPQUFYLENBQW1CLGVBQW5CLE1BQXdDLENBQXBGOztBQUVBLE1BQU1FLGNBQWVDLE1BQUQsSUFBWTtBQUM5QixNQUFJO0FBQ0YsV0FBT1QsUUFBUUQsS0FBS1csSUFBTCxDQUFVRCxNQUFWLEVBQWtCLGNBQWxCLENBQVIsQ0FBUDtBQUNELEdBRkQsQ0FFRSxPQUFPRSxDQUFQLEVBQVU7QUFDVixXQUFPLElBQVA7QUFDRDtBQUNGLENBTkQ7O0FBUUEsTUFBTUMsa0NBQW1DQyxLQUFELElBQVc7QUFDakQsTUFBSSxDQUFDQSxNQUFNQyxJQUFQLElBQWUsQ0FBQ0QsTUFBTUMsSUFBTixDQUFXQyxNQUEvQixFQUF1QztBQUNyQyxXQUFPLEVBQVA7QUFDRDs7QUFFRCxTQUFPaEIsS0FBS1csSUFBTCxDQUFVRyxNQUFNRyxJQUFoQixFQUFzQkgsTUFBTUMsSUFBTixDQUFXQyxNQUFqQyxDQUFQO0FBQ0QsQ0FORDs7QUFRQSxNQUFNRSxxQkFBc0JSLE1BQUQsSUFBWTtBQUNyQyxRQUFNSSxRQUFRTCxZQUFZQyxNQUFaLENBQWQ7O0FBRUEsTUFBSSxDQUFDSSxLQUFMLEVBQVk7QUFDVixXQUFPLEVBQVA7QUFDRDs7QUFFRCxRQUFNSyxPQUFPakI7QUFDWGtCLFNBQU9DLElBQVAsQ0FBWVAsTUFBTVEsWUFBTixJQUFzQixFQUFsQyxDQURXO0FBRVhGLFNBQU9DLElBQVAsQ0FBWVAsTUFBTVMsZUFBTixJQUF5QixFQUFyQyxDQUZXLENBQWI7OztBQUtBLFNBQU9KLEtBQUtLLE1BQUw7QUFDTCxHQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNaLFFBQUlyQixhQUFhcUIsR0FBYixDQUFKLEVBQXVCO0FBQ3JCLGFBQU9ELElBQUlFLE1BQUosQ0FBV0QsR0FBWCxDQUFQO0FBQ0Q7QUFDRCxRQUFJbEIsb0JBQW9Ca0IsR0FBcEIsQ0FBSixFQUE4QjtBQUM1QixZQUFNRSxVQUFVbkIsWUFBWVQsS0FBS1csSUFBTCxDQUFVRCxNQUFWLEVBQWtCLGNBQWxCLEVBQWtDZ0IsR0FBbEMsQ0FBWixDQUFoQjtBQUNBLFVBQUksQ0FBQ0UsT0FBTCxFQUFjO0FBQ1osZUFBT0gsR0FBUDtBQUNEO0FBQ0QsYUFBT0EsSUFBSUUsTUFBSixDQUFXZCxnQ0FBZ0NlLE9BQWhDLENBQVgsQ0FBUDtBQUNEO0FBQ0QsV0FBT0gsR0FBUDtBQUNELEdBYkk7QUFjTCxJQWRLLENBQVA7O0FBZ0JELENBNUJEOztBQThCQTs7Ozs7QUFLQUksT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxXQUFULENBQXFCQyxPQUFyQixFQUE4QjtBQUM3QyxTQUFPN0IsS0FBS0MsUUFBUTRCLFFBQVFDLEdBQVIsQ0FBWWYsa0JBQVosQ0FBUixDQUFMLENBQVA7QUFDRCxDQUZEIiwiZmlsZSI6ImZpbmRQbHVnaW5zLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2NvcmUiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IHVuaW9uID0gcmVxdWlyZSgnbG9kYXNoJykudW5pb247XG5jb25zdCB1bmlxID0gcmVxdWlyZSgnbG9kYXNoJykudW5pcTtcbmNvbnN0IGZsYXR0ZW4gPSByZXF1aXJlKCdsb2Rhc2gnKS5mbGF0dGVuO1xuXG4vKipcbiAqIEZpbHRlciBkZXBlbmRlbmNpZXMgYnkgbmFtZSBwYXR0ZXJuXG4gKiBAcGFyYW0gIHtTdHJpbmd9IGRlcGVuZGVuY3kgTmFtZSBvZiB0aGUgZGVwZW5kZW5jeVxuICogQHJldHVybiB7Qm9vbGVhbn0gICAgICAgICAgIElmIGRlcGVuZGVuY3kgaXMgYSBybnBtIHBsdWdpblxuICovXG5jb25zdCBpc1JOUE1QbHVnaW4gPSAoZGVwZW5kZW5jeSkgPT4gZGVwZW5kZW5jeS5pbmRleE9mKCdybnBtLXBsdWdpbi0nKSA9PT0gMDtcbmNvbnN0IGlzUmVhY3ROYXRpdmVQbHVnaW4gPSAoZGVwZW5kZW5jeSkgPT4gZGVwZW5kZW5jeS5pbmRleE9mKCdyZWFjdC1uYXRpdmUtJykgPT09IDA7XG5cbmNvbnN0IHJlYWRQYWNrYWdlID0gKGZvbGRlcikgPT4ge1xuICB0cnkge1xuICAgIHJldHVybiByZXF1aXJlKHBhdGguam9pbihmb2xkZXIsICdwYWNrYWdlLmpzb24nKSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufTtcblxuY29uc3QgZmluZFBsdWdpbnNJblJlYWN0TmF0aXZlUGFja2FnZSA9IChwanNvbikgPT4ge1xuICBpZiAoIXBqc29uLnJucG0gfHwgIXBqc29uLnJucG0ucGx1Z2luKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgcmV0dXJuIHBhdGguam9pbihwanNvbi5uYW1lLCBwanNvbi5ybnBtLnBsdWdpbik7XG59O1xuXG5jb25zdCBmaW5kUGx1Z2luSW5Gb2xkZXIgPSAoZm9sZGVyKSA9PiB7XG4gIGNvbnN0IHBqc29uID0gcmVhZFBhY2thZ2UoZm9sZGVyKTtcblxuICBpZiAoIXBqc29uKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgY29uc3QgZGVwcyA9IHVuaW9uKFxuICAgIE9iamVjdC5rZXlzKHBqc29uLmRlcGVuZGVuY2llcyB8fCB7fSksXG4gICAgT2JqZWN0LmtleXMocGpzb24uZGV2RGVwZW5kZW5jaWVzIHx8IHt9KVxuICApO1xuXG4gIHJldHVybiBkZXBzLnJlZHVjZShcbiAgICAoYWNjLCBwa2cpID0+IHtcbiAgICAgIGlmIChpc1JOUE1QbHVnaW4ocGtnKSkge1xuICAgICAgICByZXR1cm4gYWNjLmNvbmNhdChwa2cpO1xuICAgICAgfVxuICAgICAgaWYgKGlzUmVhY3ROYXRpdmVQbHVnaW4ocGtnKSkge1xuICAgICAgICBjb25zdCBwa2dKc29uID0gcmVhZFBhY2thZ2UocGF0aC5qb2luKGZvbGRlciwgJ25vZGVfbW9kdWxlcycsIHBrZykpO1xuICAgICAgICBpZiAoIXBrZ0pzb24pIHtcbiAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY2MuY29uY2F0KGZpbmRQbHVnaW5zSW5SZWFjdE5hdGl2ZVBhY2thZ2UocGtnSnNvbikpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGFjYztcbiAgICB9LFxuICAgIFtdXG4gICk7XG59O1xuXG4vKipcbiAqIEZpbmQgcGx1Z2lucyBpbiBwYWNrYWdlLmpzb24gb2YgdGhlIGdpdmVuIGZvbGRlclxuICogQHBhcmFtIHtTdHJpbmd9IGZvbGRlciBQYXRoIHRvIHRoZSBmb2xkZXIgdG8gZ2V0IHRoZSBwYWNrYWdlLmpzb24gZnJvbVxuICogQHR5cGUgIHtBcnJheX0gICAgICAgICBBcnJheSBvZiBwbHVnaW5zIG9yIGFuIGVtcHR5IGFycmF5IGlmIG5vIHBhY2thZ2UuanNvbiBmb3VuZFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGZpbmRQbHVnaW5zKGZvbGRlcnMpIHtcbiAgcmV0dXJuIHVuaXEoZmxhdHRlbihmb2xkZXJzLm1hcChmaW5kUGx1Z2luSW5Gb2xkZXIpKSk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findPlugins.js"
      ],
      "names": [
        "path",
        "require",
        "union",
        "uniq",
        "flatten",
        "isRNPMPlugin",
        "dependency",
        "indexOf",
        "isReactNativePlugin",
        "readPackage",
        "folder",
        "join",
        "e",
        "findPluginsInReactNativePackage",
        "pjson",
        "rnpm",
        "plugin",
        "name",
        "findPluginInFolder",
        "deps",
        "Object",
        "keys",
        "dependencies",
        "devDependencies",
        "reduce",
        "acc",
        "pkg",
        "concat",
        "pkgJson",
        "module",
        "exports",
        "findPlugins",
        "folders",
        "map"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,MAAMC,QAAQD,QAAQ,QAAR,EAAkBC,KAAhC;AACA,MAAMC,OAAOF,QAAQ,QAAR,EAAkBE,IAA/B;AACA,MAAMC,UAAUH,QAAQ,QAAR,EAAkBG,OAAlC;;AAEA;;;;;AAKA,MAAMC,eAAgBC,UAAD,IAAgBA,WAAWC,OAAX,CAAmB,cAAnB,MAAuC,CAA5E;AACA,MAAMC,sBAAuBF,UAAD,IAAgBA,WAAWC,OAAX,CAAmB,eAAnB,MAAwC,CAApF;;AAEA,MAAME,cAAeC,MAAD,IAAY;AAC9B,MAAI;AACF,WAAOT,QAAQD,KAAKW,IAAL,CAAUD,MAAV,EAAkB,cAAlB,CAAR,CAAP;AACD,GAFD,CAEE,OAAOE,CAAP,EAAU;AACV,WAAO,IAAP;AACD;AACF,CAND;;AAQA,MAAMC,kCAAmCC,KAAD,IAAW;AACjD,MAAI,CAACA,MAAMC,IAAP,IAAe,CAACD,MAAMC,IAAN,CAAWC,MAA/B,EAAuC;AACrC,WAAO,EAAP;AACD;;AAED,SAAOhB,KAAKW,IAAL,CAAUG,MAAMG,IAAhB,EAAsBH,MAAMC,IAAN,CAAWC,MAAjC,CAAP;AACD,CAND;;AAQA,MAAME,qBAAsBR,MAAD,IAAY;AACrC,QAAMI,QAAQL,YAAYC,MAAZ,CAAd;;AAEA,MAAI,CAACI,KAAL,EAAY;AACV,WAAO,EAAP;AACD;;AAED,QAAMK,OAAOjB;AACXkB,SAAOC,IAAP,CAAYP,MAAMQ,YAAN,IAAsB,EAAlC,CADW;AAEXF,SAAOC,IAAP,CAAYP,MAAMS,eAAN,IAAyB,EAArC,CAFW,CAAb;;;AAKA,SAAOJ,KAAKK,MAAL;AACL,GAACC,GAAD,EAAMC,GAAN,KAAc;AACZ,QAAIrB,aAAaqB,GAAb,CAAJ,EAAuB;AACrB,aAAOD,IAAIE,MAAJ,CAAWD,GAAX,CAAP;AACD;AACD,QAAIlB,oBAAoBkB,GAApB,CAAJ,EAA8B;AAC5B,YAAME,UAAUnB,YAAYT,KAAKW,IAAL,CAAUD,MAAV,EAAkB,cAAlB,EAAkCgB,GAAlC,CAAZ,CAAhB;AACA,UAAI,CAACE,OAAL,EAAc;AACZ,eAAOH,GAAP;AACD;AACD,aAAOA,IAAIE,MAAJ,CAAWd,gCAAgCe,OAAhC,CAAX,CAAP;AACD;AACD,WAAOH,GAAP;AACD,GAbI;AAcL,IAdK,CAAP;;AAgBD,CA5BD;;AA8BA;;;;;AAKAI,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AAC7C,SAAO7B,KAAKC,QAAQ4B,QAAQC,GAAR,CAAYf,kBAAZ,CAAR,CAAL,CAAP;AACD,CAFD",
      "file": "findPlugins.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst path = require('path');\nconst union = require('lodash').union;\nconst uniq = require('lodash').uniq;\nconst flatten = require('lodash').flatten;\n\n/**\n * Filter dependencies by name pattern\n * @param  {String} dependency Name of the dependency\n * @return {Boolean}           If dependency is a rnpm plugin\n */\nconst isRNPMPlugin = (dependency) => dependency.indexOf('rnpm-plugin-') === 0;\nconst isReactNativePlugin = (dependency) => dependency.indexOf('react-native-') === 0;\n\nconst readPackage = (folder) => {\n  try {\n    return require(path.join(folder, 'package.json'));\n  } catch (e) {\n    return null;\n  }\n};\n\nconst findPluginsInReactNativePackage = (pjson) => {\n  if (!pjson.rnpm || !pjson.rnpm.plugin) {\n    return [];\n  }\n\n  return path.join(pjson.name, pjson.rnpm.plugin);\n};\n\nconst findPluginInFolder = (folder) => {\n  const pjson = readPackage(folder);\n\n  if (!pjson) {\n    return [];\n  }\n\n  const deps = union(\n    Object.keys(pjson.dependencies || {}),\n    Object.keys(pjson.devDependencies || {})\n  );\n\n  return deps.reduce(\n    (acc, pkg) => {\n      if (isRNPMPlugin(pkg)) {\n        return acc.concat(pkg);\n      }\n      if (isReactNativePlugin(pkg)) {\n        const pkgJson = readPackage(path.join(folder, 'node_modules', pkg));\n        if (!pkgJson) {\n          return acc;\n        }\n        return acc.concat(findPluginsInReactNativePackage(pkgJson));\n      }\n      return acc;\n    },\n    []\n  );\n};\n\n/**\n * Find plugins in package.json of the given folder\n * @param {String} folder Path to the folder to get the package.json from\n * @type  {Array}         Array of plugins or an empty array if no package.json found\n */\nmodule.exports = function findPlugins(folders) {\n  return uniq(flatten(folders.map(findPluginInFolder)));\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/findAssets.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/findAssets.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/findAssets.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findAssets.js",
      "sourceFileName": "findAssets.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findAssets"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst glob = require('glob');\nconst path = require('path');\n\nconst findAssetsInFolder = folder =>\nglob.sync(path.join(folder, '**'), { nodir: true });\n\n/**\n                                                      * Given an array of assets folders, e.g. ['Fonts', 'Images'],\n                                                      * it globs in them to find all files that can be copied.\n                                                      *\n                                                      * It returns an array of absolute paths to files found.\n                                                      */\nmodule.exports = function findAssets(folder, assets) {\n  return (assets || []).\n  map(assetsFolder => path.join(folder, assetsFolder)).\n  reduce((_assets, assetsFolder) =>\n  _assets.concat(findAssetsInFolder(assetsFolder)),\n  []);\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRBc3NldHMuanMiXSwibmFtZXMiOlsiZ2xvYiIsInJlcXVpcmUiLCJwYXRoIiwiZmluZEFzc2V0c0luRm9sZGVyIiwiZm9sZGVyIiwic3luYyIsImpvaW4iLCJub2RpciIsIm1vZHVsZSIsImV4cG9ydHMiLCJmaW5kQXNzZXRzIiwiYXNzZXRzIiwibWFwIiwiYXNzZXRzRm9sZGVyIiwicmVkdWNlIiwiX2Fzc2V0cyIsImNvbmNhdCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUEsTUFBTUEsT0FBT0MsUUFBUSxNQUFSLENBQWI7QUFDQSxNQUFNQyxPQUFPRCxRQUFRLE1BQVIsQ0FBYjs7QUFFQSxNQUFNRSxxQkFBc0JDLE1BQUQ7QUFDekJKLEtBQUtLLElBQUwsQ0FBVUgsS0FBS0ksSUFBTCxDQUFVRixNQUFWLEVBQWtCLElBQWxCLENBQVYsRUFBbUMsRUFBRUcsT0FBTyxJQUFULEVBQW5DLENBREY7O0FBR0E7Ozs7OztBQU1BQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLFVBQVQsQ0FBb0JOLE1BQXBCLEVBQTRCTyxNQUE1QixFQUFvQztBQUNuRCxTQUFPLENBQUNBLFVBQVUsRUFBWDtBQUNKQyxLQURJLENBQ0FDLGdCQUFnQlgsS0FBS0ksSUFBTCxDQUFVRixNQUFWLEVBQWtCUyxZQUFsQixDQURoQjtBQUVKQyxRQUZJLENBRUcsQ0FBQ0MsT0FBRCxFQUFVRixZQUFWO0FBQ05FLFVBQVFDLE1BQVIsQ0FBZWIsbUJBQW1CVSxZQUFuQixDQUFmLENBSEc7QUFJSCxJQUpHLENBQVA7O0FBTUQsQ0FQRCIsImZpbGUiOiJmaW5kQXNzZXRzLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2NvcmUiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgZ2xvYiA9IHJlcXVpcmUoJ2dsb2InKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5cbmNvbnN0IGZpbmRBc3NldHNJbkZvbGRlciA9IChmb2xkZXIpID0+XG4gIGdsb2Iuc3luYyhwYXRoLmpvaW4oZm9sZGVyLCAnKionKSwgeyBub2RpcjogdHJ1ZSB9KTtcblxuLyoqXG4gKiBHaXZlbiBhbiBhcnJheSBvZiBhc3NldHMgZm9sZGVycywgZS5nLiBbJ0ZvbnRzJywgJ0ltYWdlcyddLFxuICogaXQgZ2xvYnMgaW4gdGhlbSB0byBmaW5kIGFsbCBmaWxlcyB0aGF0IGNhbiBiZSBjb3BpZWQuXG4gKlxuICogSXQgcmV0dXJucyBhbiBhcnJheSBvZiBhYnNvbHV0ZSBwYXRocyB0byBmaWxlcyBmb3VuZC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBmaW5kQXNzZXRzKGZvbGRlciwgYXNzZXRzKSB7XG4gIHJldHVybiAoYXNzZXRzIHx8IFtdKVxuICAgIC5tYXAoYXNzZXRzRm9sZGVyID0+IHBhdGguam9pbihmb2xkZXIsIGFzc2V0c0ZvbGRlcikpXG4gICAgLnJlZHVjZSgoX2Fzc2V0cywgYXNzZXRzRm9sZGVyKSA9PlxuICAgICAgX2Fzc2V0cy5jb25jYXQoZmluZEFzc2V0c0luRm9sZGVyKGFzc2V0c0ZvbGRlcikpLFxuICAgICAgW11cbiAgICApO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findAssets.js"
      ],
      "names": [
        "glob",
        "require",
        "path",
        "findAssetsInFolder",
        "folder",
        "sync",
        "join",
        "nodir",
        "module",
        "exports",
        "findAssets",
        "assets",
        "map",
        "assetsFolder",
        "reduce",
        "_assets",
        "concat"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA,MAAME,qBAAsBC,MAAD;AACzBJ,KAAKK,IAAL,CAAUH,KAAKI,IAAL,CAAUF,MAAV,EAAkB,IAAlB,CAAV,EAAmC,EAAEG,OAAO,IAAT,EAAnC,CADF;;AAGA;;;;;;AAMAC,OAAOC,OAAP,GAAiB,SAASC,UAAT,CAAoBN,MAApB,EAA4BO,MAA5B,EAAoC;AACnD,SAAO,CAACA,UAAU,EAAX;AACJC,KADI,CACAC,gBAAgBX,KAAKI,IAAL,CAAUF,MAAV,EAAkBS,YAAlB,CADhB;AAEJC,QAFI,CAEG,CAACC,OAAD,EAAUF,YAAV;AACNE,UAAQC,MAAR,CAAeb,mBAAmBU,YAAnB,CAAf,CAHG;AAIH,IAJG,CAAP;;AAMD,CAPD",
      "file": "findAssets.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst glob = require('glob');\nconst path = require('path');\n\nconst findAssetsInFolder = (folder) =>\n  glob.sync(path.join(folder, '**'), { nodir: true });\n\n/**\n * Given an array of assets folders, e.g. ['Fonts', 'Images'],\n * it globs in them to find all files that can be copied.\n *\n * It returns an array of absolute paths to files found.\n */\nmodule.exports = function findAssets(folder, assets) {\n  return (assets || [])\n    .map(assetsFolder => path.join(folder, assetsFolder))\n    .reduce((_assets, assetsFolder) =>\n      _assets.concat(findAssetsInFolder(assetsFolder)),\n      []\n    );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios/index.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios/index.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios/index.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst findProject = require('./findProject');\nconst findPodfilePath = require('./findPodfilePath');\nconst findPodspecName = require('./findPodspecName');\nconst path = require('path');\n\n/**\n                               * For libraries specified without an extension, add '.tbd' for those that\n                               * start with 'lib' and '.framework' to the rest.\n                               */\nconst mapSharedLibaries = libraries => {\n  return libraries.map(name => {\n    if (path.extname(name)) {\n      return name;\n    }\n    return name + (name.indexOf('lib') === 0 ? '.tbd' : '.framework');\n  });\n};\n\n/**\n    * Returns project config by analyzing given folder and applying some user defaults\n    * when constructing final object\n    */\nexports.projectConfig = function projectConfigIOS(folder, userConfig) {\n  const project = userConfig.project || findProject(folder);\n\n  /**\n                                                              * No iOS config found here\n                                                              */\n  if (!project) {\n    return null;\n  }\n\n  const projectPath = path.join(folder, project);\n\n  return {\n    sourceDir: path.dirname(projectPath),\n    folder: folder,\n    pbxprojPath: path.join(projectPath, 'project.pbxproj'),\n    podfile: findPodfilePath(projectPath),\n    podspec: findPodspecName(folder),\n    projectPath: projectPath,\n    projectName: path.basename(projectPath),\n    libraryFolder: userConfig.libraryFolder || 'Libraries',\n    sharedLibraries: mapSharedLibaries(userConfig.sharedLibraries || []),\n    plist: userConfig.plist || [] };\n\n};\n\nexports.dependencyConfig = exports.projectConfig;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImZpbmRQcm9qZWN0IiwicmVxdWlyZSIsImZpbmRQb2RmaWxlUGF0aCIsImZpbmRQb2RzcGVjTmFtZSIsInBhdGgiLCJtYXBTaGFyZWRMaWJhcmllcyIsImxpYnJhcmllcyIsIm1hcCIsIm5hbWUiLCJleHRuYW1lIiwiaW5kZXhPZiIsImV4cG9ydHMiLCJwcm9qZWN0Q29uZmlnIiwicHJvamVjdENvbmZpZ0lPUyIsImZvbGRlciIsInVzZXJDb25maWciLCJwcm9qZWN0IiwicHJvamVjdFBhdGgiLCJqb2luIiwic291cmNlRGlyIiwiZGlybmFtZSIsInBieHByb2pQYXRoIiwicG9kZmlsZSIsInBvZHNwZWMiLCJwcm9qZWN0TmFtZSIsImJhc2VuYW1lIiwibGlicmFyeUZvbGRlciIsInNoYXJlZExpYnJhcmllcyIsInBsaXN0IiwiZGVwZW5kZW5jeUNvbmZpZyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUEsTUFBTUEsY0FBY0MsUUFBUSxlQUFSLENBQXBCO0FBQ0EsTUFBTUMsa0JBQWtCRCxRQUFRLG1CQUFSLENBQXhCO0FBQ0EsTUFBTUUsa0JBQWtCRixRQUFRLG1CQUFSLENBQXhCO0FBQ0EsTUFBTUcsT0FBT0gsUUFBUSxNQUFSLENBQWI7O0FBRUE7Ozs7QUFJQSxNQUFNSSxvQkFBcUJDLFNBQUQsSUFBZTtBQUN2QyxTQUFPQSxVQUFVQyxHQUFWLENBQWNDLFFBQVE7QUFDM0IsUUFBSUosS0FBS0ssT0FBTCxDQUFhRCxJQUFiLENBQUosRUFBd0I7QUFDdEIsYUFBT0EsSUFBUDtBQUNEO0FBQ0QsV0FBT0EsUUFBUUEsS0FBS0UsT0FBTCxDQUFhLEtBQWIsTUFBd0IsQ0FBeEIsR0FBNEIsTUFBNUIsR0FBcUMsWUFBN0MsQ0FBUDtBQUNELEdBTE0sQ0FBUDtBQU1ELENBUEQ7O0FBU0E7Ozs7QUFJQUMsUUFBUUMsYUFBUixHQUF3QixTQUFTQyxnQkFBVCxDQUEwQkMsTUFBMUIsRUFBa0NDLFVBQWxDLEVBQThDO0FBQ3BFLFFBQU1DLFVBQVVELFdBQVdDLE9BQVgsSUFBc0JoQixZQUFZYyxNQUFaLENBQXRDOztBQUVBOzs7QUFHQSxNQUFJLENBQUNFLE9BQUwsRUFBYztBQUNaLFdBQU8sSUFBUDtBQUNEOztBQUVELFFBQU1DLGNBQWNiLEtBQUtjLElBQUwsQ0FBVUosTUFBVixFQUFrQkUsT0FBbEIsQ0FBcEI7O0FBRUEsU0FBTztBQUNMRyxlQUFXZixLQUFLZ0IsT0FBTCxDQUFhSCxXQUFiLENBRE47QUFFTEgsWUFBUUEsTUFGSDtBQUdMTyxpQkFBYWpCLEtBQUtjLElBQUwsQ0FBVUQsV0FBVixFQUF1QixpQkFBdkIsQ0FIUjtBQUlMSyxhQUFTcEIsZ0JBQWdCZSxXQUFoQixDQUpKO0FBS0xNLGFBQVNwQixnQkFBZ0JXLE1BQWhCLENBTEo7QUFNTEcsaUJBQWFBLFdBTlI7QUFPTE8saUJBQWFwQixLQUFLcUIsUUFBTCxDQUFjUixXQUFkLENBUFI7QUFRTFMsbUJBQWVYLFdBQVdXLGFBQVgsSUFBNEIsV0FSdEM7QUFTTEMscUJBQWlCdEIsa0JBQWtCVSxXQUFXWSxlQUFYLElBQThCLEVBQWhELENBVFo7QUFVTEMsV0FBT2IsV0FBV2EsS0FBWCxJQUFvQixFQVZ0QixFQUFQOztBQVlELENBeEJEOztBQTBCQWpCLFFBQVFrQixnQkFBUixHQUEyQmxCLFFBQVFDLGFBQW5DIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2NvcmUvaW9zIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IGZpbmRQcm9qZWN0ID0gcmVxdWlyZSgnLi9maW5kUHJvamVjdCcpO1xuY29uc3QgZmluZFBvZGZpbGVQYXRoID0gcmVxdWlyZSgnLi9maW5kUG9kZmlsZVBhdGgnKTtcbmNvbnN0IGZpbmRQb2RzcGVjTmFtZSA9IHJlcXVpcmUoJy4vZmluZFBvZHNwZWNOYW1lJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG4vKipcbiAqIEZvciBsaWJyYXJpZXMgc3BlY2lmaWVkIHdpdGhvdXQgYW4gZXh0ZW5zaW9uLCBhZGQgJy50YmQnIGZvciB0aG9zZSB0aGF0XG4gKiBzdGFydCB3aXRoICdsaWInIGFuZCAnLmZyYW1ld29yaycgdG8gdGhlIHJlc3QuXG4gKi9cbmNvbnN0IG1hcFNoYXJlZExpYmFyaWVzID0gKGxpYnJhcmllcykgPT4ge1xuICByZXR1cm4gbGlicmFyaWVzLm1hcChuYW1lID0+IHtcbiAgICBpZiAocGF0aC5leHRuYW1lKG5hbWUpKSB7XG4gICAgICByZXR1cm4gbmFtZTtcbiAgICB9XG4gICAgcmV0dXJuIG5hbWUgKyAobmFtZS5pbmRleE9mKCdsaWInKSA9PT0gMCA/ICcudGJkJyA6ICcuZnJhbWV3b3JrJyk7XG4gIH0pO1xufTtcblxuLyoqXG4gKiBSZXR1cm5zIHByb2plY3QgY29uZmlnIGJ5IGFuYWx5emluZyBnaXZlbiBmb2xkZXIgYW5kIGFwcGx5aW5nIHNvbWUgdXNlciBkZWZhdWx0c1xuICogd2hlbiBjb25zdHJ1Y3RpbmcgZmluYWwgb2JqZWN0XG4gKi9cbmV4cG9ydHMucHJvamVjdENvbmZpZyA9IGZ1bmN0aW9uIHByb2plY3RDb25maWdJT1MoZm9sZGVyLCB1c2VyQ29uZmlnKSB7XG4gIGNvbnN0IHByb2plY3QgPSB1c2VyQ29uZmlnLnByb2plY3QgfHwgZmluZFByb2plY3QoZm9sZGVyKTtcblxuICAvKipcbiAgICogTm8gaU9TIGNvbmZpZyBmb3VuZCBoZXJlXG4gICAqL1xuICBpZiAoIXByb2plY3QpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGNvbnN0IHByb2plY3RQYXRoID0gcGF0aC5qb2luKGZvbGRlciwgcHJvamVjdCk7XG5cbiAgcmV0dXJuIHtcbiAgICBzb3VyY2VEaXI6IHBhdGguZGlybmFtZShwcm9qZWN0UGF0aCksXG4gICAgZm9sZGVyOiBmb2xkZXIsXG4gICAgcGJ4cHJvalBhdGg6IHBhdGguam9pbihwcm9qZWN0UGF0aCwgJ3Byb2plY3QucGJ4cHJvaicpLFxuICAgIHBvZGZpbGU6IGZpbmRQb2RmaWxlUGF0aChwcm9qZWN0UGF0aCksXG4gICAgcG9kc3BlYzogZmluZFBvZHNwZWNOYW1lKGZvbGRlciksXG4gICAgcHJvamVjdFBhdGg6IHByb2plY3RQYXRoLFxuICAgIHByb2plY3ROYW1lOiBwYXRoLmJhc2VuYW1lKHByb2plY3RQYXRoKSxcbiAgICBsaWJyYXJ5Rm9sZGVyOiB1c2VyQ29uZmlnLmxpYnJhcnlGb2xkZXIgfHwgJ0xpYnJhcmllcycsXG4gICAgc2hhcmVkTGlicmFyaWVzOiBtYXBTaGFyZWRMaWJhcmllcyh1c2VyQ29uZmlnLnNoYXJlZExpYnJhcmllcyB8fCBbXSksXG4gICAgcGxpc3Q6IHVzZXJDb25maWcucGxpc3QgfHwgW10sXG4gIH07XG59O1xuXG5leHBvcnRzLmRlcGVuZGVuY3lDb25maWcgPSBleHBvcnRzLnByb2plY3RDb25maWc7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "findProject",
        "require",
        "findPodfilePath",
        "findPodspecName",
        "path",
        "mapSharedLibaries",
        "libraries",
        "map",
        "name",
        "extname",
        "indexOf",
        "exports",
        "projectConfig",
        "projectConfigIOS",
        "folder",
        "userConfig",
        "project",
        "projectPath",
        "join",
        "sourceDir",
        "dirname",
        "pbxprojPath",
        "podfile",
        "podspec",
        "projectName",
        "basename",
        "libraryFolder",
        "sharedLibraries",
        "plist",
        "dependencyConfig"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,cAAcC,QAAQ,eAAR,CAApB;AACA,MAAMC,kBAAkBD,QAAQ,mBAAR,CAAxB;AACA,MAAME,kBAAkBF,QAAQ,mBAAR,CAAxB;AACA,MAAMG,OAAOH,QAAQ,MAAR,CAAb;;AAEA;;;;AAIA,MAAMI,oBAAqBC,SAAD,IAAe;AACvC,SAAOA,UAAUC,GAAV,CAAcC,QAAQ;AAC3B,QAAIJ,KAAKK,OAAL,CAAaD,IAAb,CAAJ,EAAwB;AACtB,aAAOA,IAAP;AACD;AACD,WAAOA,QAAQA,KAAKE,OAAL,CAAa,KAAb,MAAwB,CAAxB,GAA4B,MAA5B,GAAqC,YAA7C,CAAP;AACD,GALM,CAAP;AAMD,CAPD;;AASA;;;;AAIAC,QAAQC,aAAR,GAAwB,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,UAAlC,EAA8C;AACpE,QAAMC,UAAUD,WAAWC,OAAX,IAAsBhB,YAAYc,MAAZ,CAAtC;;AAEA;;;AAGA,MAAI,CAACE,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AAED,QAAMC,cAAcb,KAAKc,IAAL,CAAUJ,MAAV,EAAkBE,OAAlB,CAApB;;AAEA,SAAO;AACLG,eAAWf,KAAKgB,OAAL,CAAaH,WAAb,CADN;AAELH,YAAQA,MAFH;AAGLO,iBAAajB,KAAKc,IAAL,CAAUD,WAAV,EAAuB,iBAAvB,CAHR;AAILK,aAASpB,gBAAgBe,WAAhB,CAJJ;AAKLM,aAASpB,gBAAgBW,MAAhB,CALJ;AAMLG,iBAAaA,WANR;AAOLO,iBAAapB,KAAKqB,QAAL,CAAcR,WAAd,CAPR;AAQLS,mBAAeX,WAAWW,aAAX,IAA4B,WARtC;AASLC,qBAAiBtB,kBAAkBU,WAAWY,eAAX,IAA8B,EAAhD,CATZ;AAULC,WAAOb,WAAWa,KAAX,IAAoB,EAVtB,EAAP;;AAYD,CAxBD;;AA0BAjB,QAAQkB,gBAAR,GAA2BlB,QAAQC,aAAnC",
      "file": "index.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst findProject = require('./findProject');\nconst findPodfilePath = require('./findPodfilePath');\nconst findPodspecName = require('./findPodspecName');\nconst path = require('path');\n\n/**\n * For libraries specified without an extension, add '.tbd' for those that\n * start with 'lib' and '.framework' to the rest.\n */\nconst mapSharedLibaries = (libraries) => {\n  return libraries.map(name => {\n    if (path.extname(name)) {\n      return name;\n    }\n    return name + (name.indexOf('lib') === 0 ? '.tbd' : '.framework');\n  });\n};\n\n/**\n * Returns project config by analyzing given folder and applying some user defaults\n * when constructing final object\n */\nexports.projectConfig = function projectConfigIOS(folder, userConfig) {\n  const project = userConfig.project || findProject(folder);\n\n  /**\n   * No iOS config found here\n   */\n  if (!project) {\n    return null;\n  }\n\n  const projectPath = path.join(folder, project);\n\n  return {\n    sourceDir: path.dirname(projectPath),\n    folder: folder,\n    pbxprojPath: path.join(projectPath, 'project.pbxproj'),\n    podfile: findPodfilePath(projectPath),\n    podspec: findPodspecName(folder),\n    projectPath: projectPath,\n    projectName: path.basename(projectPath),\n    libraryFolder: userConfig.libraryFolder || 'Libraries',\n    sharedLibraries: mapSharedLibaries(userConfig.sharedLibraries || []),\n    plist: userConfig.plist || [],\n  };\n};\n\nexports.dependencyConfig = exports.projectConfig;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios/findProject.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios/findProject.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios/findProject.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findProject.js",
      "sourceFileName": "findProject.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findProject"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst glob = require('glob');\nconst path = require('path');\n\n/**\n                               * Glob pattern to look for xcodeproj\n                               */\nconst GLOB_PATTERN = '**/*.xcodeproj';\n\n/**\n                                        * Regexp matching all test projects\n                                        */\nconst TEST_PROJECTS = /test|example|sample/i;\n\n/**\n                                               * Base iOS folder\n                                               */\nconst IOS_BASE = 'ios';\n\n/**\n                         * These folders will be excluded from search to speed it up\n                         */\nconst GLOB_EXCLUDE_PATTERN = ['**/@(Pods|node_modules)/**'];\n\n/**\n                                                              * Finds iOS project by looking for all .xcodeproj files\n                                                              * in given folder.\n                                                              *\n                                                              * Returns first match if files are found or null\n                                                              *\n                                                              * Note: `./ios/*.xcodeproj` are returned regardless of the name\n                                                              */\nmodule.exports = function findProject(folder) {\n  const projects = glob.\n  sync(GLOB_PATTERN, {\n    cwd: folder,\n    ignore: GLOB_EXCLUDE_PATTERN }).\n\n  filter(project => {\n    return path.dirname(project) === IOS_BASE || !TEST_PROJECTS.test(project);\n  }).\n  sort((projectA, projectB) => {\n    return path.dirname(projectA) === IOS_BASE ? -1 : 1;\n  });\n\n  if (projects.length === 0) {\n    return null;\n  }\n\n  return projects[0];\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRQcm9qZWN0LmpzIl0sIm5hbWVzIjpbImdsb2IiLCJyZXF1aXJlIiwicGF0aCIsIkdMT0JfUEFUVEVSTiIsIlRFU1RfUFJPSkVDVFMiLCJJT1NfQkFTRSIsIkdMT0JfRVhDTFVERV9QQVRURVJOIiwibW9kdWxlIiwiZXhwb3J0cyIsImZpbmRQcm9qZWN0IiwiZm9sZGVyIiwicHJvamVjdHMiLCJzeW5jIiwiY3dkIiwiaWdub3JlIiwiZmlsdGVyIiwicHJvamVjdCIsImRpcm5hbWUiLCJ0ZXN0Iiwic29ydCIsInByb2plY3RBIiwicHJvamVjdEIiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLE1BQU1BLE9BQU9DLFFBQVEsTUFBUixDQUFiO0FBQ0EsTUFBTUMsT0FBT0QsUUFBUSxNQUFSLENBQWI7O0FBRUE7OztBQUdBLE1BQU1FLGVBQWUsZ0JBQXJCOztBQUVBOzs7QUFHQSxNQUFNQyxnQkFBZ0Isc0JBQXRCOztBQUVBOzs7QUFHQSxNQUFNQyxXQUFXLEtBQWpCOztBQUVBOzs7QUFHQSxNQUFNQyx1QkFBdUIsQ0FBQyw0QkFBRCxDQUE3Qjs7QUFFQTs7Ozs7Ozs7QUFRQUMsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxXQUFULENBQXFCQyxNQUFyQixFQUE2QjtBQUM1QyxRQUFNQyxXQUFXWDtBQUNkWSxNQURjLENBQ1RULFlBRFMsRUFDSztBQUNsQlUsU0FBS0gsTUFEYTtBQUVsQkksWUFBUVIsb0JBRlUsRUFETDs7QUFLZFMsUUFMYyxDQUtQQyxXQUFXO0FBQ2pCLFdBQU9kLEtBQUtlLE9BQUwsQ0FBYUQsT0FBYixNQUEwQlgsUUFBMUIsSUFBc0MsQ0FBQ0QsY0FBY2MsSUFBZCxDQUFtQkYsT0FBbkIsQ0FBOUM7QUFDRCxHQVBjO0FBUWRHLE1BUmMsQ0FRVCxDQUFDQyxRQUFELEVBQVdDLFFBQVgsS0FBd0I7QUFDNUIsV0FBT25CLEtBQUtlLE9BQUwsQ0FBYUcsUUFBYixNQUEyQmYsUUFBM0IsR0FBc0MsQ0FBQyxDQUF2QyxHQUEyQyxDQUFsRDtBQUNELEdBVmMsQ0FBakI7O0FBWUEsTUFBSU0sU0FBU1csTUFBVCxLQUFvQixDQUF4QixFQUEyQjtBQUN6QixXQUFPLElBQVA7QUFDRDs7QUFFRCxTQUFPWCxTQUFTLENBQVQsQ0FBUDtBQUNELENBbEJEIiwiZmlsZSI6ImZpbmRQcm9qZWN0LmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2NvcmUvaW9zIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IGdsb2IgPSByZXF1aXJlKCdnbG9iJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG4vKipcbiAqIEdsb2IgcGF0dGVybiB0byBsb29rIGZvciB4Y29kZXByb2pcbiAqL1xuY29uc3QgR0xPQl9QQVRURVJOID0gJyoqLyoueGNvZGVwcm9qJztcblxuLyoqXG4gKiBSZWdleHAgbWF0Y2hpbmcgYWxsIHRlc3QgcHJvamVjdHNcbiAqL1xuY29uc3QgVEVTVF9QUk9KRUNUUyA9IC90ZXN0fGV4YW1wbGV8c2FtcGxlL2k7XG5cbi8qKlxuICogQmFzZSBpT1MgZm9sZGVyXG4gKi9cbmNvbnN0IElPU19CQVNFID0gJ2lvcyc7XG5cbi8qKlxuICogVGhlc2UgZm9sZGVycyB3aWxsIGJlIGV4Y2x1ZGVkIGZyb20gc2VhcmNoIHRvIHNwZWVkIGl0IHVwXG4gKi9cbmNvbnN0IEdMT0JfRVhDTFVERV9QQVRURVJOID0gWycqKi9AKFBvZHN8bm9kZV9tb2R1bGVzKS8qKiddO1xuXG4vKipcbiAqIEZpbmRzIGlPUyBwcm9qZWN0IGJ5IGxvb2tpbmcgZm9yIGFsbCAueGNvZGVwcm9qIGZpbGVzXG4gKiBpbiBnaXZlbiBmb2xkZXIuXG4gKlxuICogUmV0dXJucyBmaXJzdCBtYXRjaCBpZiBmaWxlcyBhcmUgZm91bmQgb3IgbnVsbFxuICpcbiAqIE5vdGU6IGAuL2lvcy8qLnhjb2RlcHJvamAgYXJlIHJldHVybmVkIHJlZ2FyZGxlc3Mgb2YgdGhlIG5hbWVcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBmaW5kUHJvamVjdChmb2xkZXIpIHtcbiAgY29uc3QgcHJvamVjdHMgPSBnbG9iXG4gICAgLnN5bmMoR0xPQl9QQVRURVJOLCB7XG4gICAgICBjd2Q6IGZvbGRlcixcbiAgICAgIGlnbm9yZTogR0xPQl9FWENMVURFX1BBVFRFUk4sXG4gICAgfSlcbiAgICAuZmlsdGVyKHByb2plY3QgPT4ge1xuICAgICAgcmV0dXJuIHBhdGguZGlybmFtZShwcm9qZWN0KSA9PT0gSU9TX0JBU0UgfHwgIVRFU1RfUFJPSkVDVFMudGVzdChwcm9qZWN0KTtcbiAgICB9KVxuICAgIC5zb3J0KChwcm9qZWN0QSwgcHJvamVjdEIpID0+IHtcbiAgICAgIHJldHVybiBwYXRoLmRpcm5hbWUocHJvamVjdEEpID09PSBJT1NfQkFTRSA/IC0xIDogMTtcbiAgICB9KTtcblxuICBpZiAocHJvamVjdHMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gcHJvamVjdHNbMF07XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findProject.js"
      ],
      "names": [
        "glob",
        "require",
        "path",
        "GLOB_PATTERN",
        "TEST_PROJECTS",
        "IOS_BASE",
        "GLOB_EXCLUDE_PATTERN",
        "module",
        "exports",
        "findProject",
        "folder",
        "projects",
        "sync",
        "cwd",
        "ignore",
        "filter",
        "project",
        "dirname",
        "test",
        "sort",
        "projectA",
        "projectB",
        "length"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA;;;AAGA,MAAME,eAAe,gBAArB;;AAEA;;;AAGA,MAAMC,gBAAgB,sBAAtB;;AAEA;;;AAGA,MAAMC,WAAW,KAAjB;;AAEA;;;AAGA,MAAMC,uBAAuB,CAAC,4BAAD,CAA7B;;AAEA;;;;;;;;AAQAC,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC5C,QAAMC,WAAWX;AACdY,MADc,CACTT,YADS,EACK;AAClBU,SAAKH,MADa;AAElBI,YAAQR,oBAFU,EADL;;AAKdS,QALc,CAKPC,WAAW;AACjB,WAAOd,KAAKe,OAAL,CAAaD,OAAb,MAA0BX,QAA1B,IAAsC,CAACD,cAAcc,IAAd,CAAmBF,OAAnB,CAA9C;AACD,GAPc;AAQdG,MARc,CAQT,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC5B,WAAOnB,KAAKe,OAAL,CAAaG,QAAb,MAA2Bf,QAA3B,GAAsC,CAAC,CAAvC,GAA2C,CAAlD;AACD,GAVc,CAAjB;;AAYA,MAAIM,SAASW,MAAT,KAAoB,CAAxB,EAA2B;AACzB,WAAO,IAAP;AACD;;AAED,SAAOX,SAAS,CAAT,CAAP;AACD,CAlBD",
      "file": "findProject.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst glob = require('glob');\nconst path = require('path');\n\n/**\n * Glob pattern to look for xcodeproj\n */\nconst GLOB_PATTERN = '**/*.xcodeproj';\n\n/**\n * Regexp matching all test projects\n */\nconst TEST_PROJECTS = /test|example|sample/i;\n\n/**\n * Base iOS folder\n */\nconst IOS_BASE = 'ios';\n\n/**\n * These folders will be excluded from search to speed it up\n */\nconst GLOB_EXCLUDE_PATTERN = ['**/@(Pods|node_modules)/**'];\n\n/**\n * Finds iOS project by looking for all .xcodeproj files\n * in given folder.\n *\n * Returns first match if files are found or null\n *\n * Note: `./ios/*.xcodeproj` are returned regardless of the name\n */\nmodule.exports = function findProject(folder) {\n  const projects = glob\n    .sync(GLOB_PATTERN, {\n      cwd: folder,\n      ignore: GLOB_EXCLUDE_PATTERN,\n    })\n    .filter(project => {\n      return path.dirname(project) === IOS_BASE || !TEST_PROJECTS.test(project);\n    })\n    .sort((projectA, projectB) => {\n      return path.dirname(projectA) === IOS_BASE ? -1 : 1;\n    });\n\n  if (projects.length === 0) {\n    return null;\n  }\n\n  return projects[0];\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios/findPodfilePath.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios/findPodfilePath.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios/findPodfilePath.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findPodfilePath.js",
      "sourceFileName": "findPodfilePath.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findPodfilePath"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\nmodule.exports = function findPodfilePath(projectFolder) {\n  const podFilePath = path.join(projectFolder, '..', 'Podfile');\n  const podFileExists = fs.existsSync(podFilePath);\n\n  return podFileExists ? podFilePath : null;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRQb2RmaWxlUGF0aC5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJwYXRoIiwibW9kdWxlIiwiZXhwb3J0cyIsImZpbmRQb2RmaWxlUGF0aCIsInByb2plY3RGb2xkZXIiLCJwb2RGaWxlUGF0aCIsImpvaW4iLCJwb2RGaWxlRXhpc3RzIiwiZXhpc3RzU3luYyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsTUFBTUEsS0FBS0MsUUFBUSxJQUFSLENBQVg7QUFDQSxNQUFNQyxPQUFPRCxRQUFRLE1BQVIsQ0FBYjs7QUFFQUUsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxlQUFULENBQXlCQyxhQUF6QixFQUF3QztBQUN2RCxRQUFNQyxjQUFjTCxLQUFLTSxJQUFMLENBQVVGLGFBQVYsRUFBeUIsSUFBekIsRUFBK0IsU0FBL0IsQ0FBcEI7QUFDQSxRQUFNRyxnQkFBZ0JULEdBQUdVLFVBQUgsQ0FBY0gsV0FBZCxDQUF0Qjs7QUFFQSxTQUFPRSxnQkFBZ0JGLFdBQWhCLEdBQThCLElBQXJDO0FBQ0QsQ0FMRCIsImZpbGUiOiJmaW5kUG9kZmlsZVBhdGguanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvY29yZS9pb3MiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZmluZFBvZGZpbGVQYXRoKHByb2plY3RGb2xkZXIpIHtcbiAgY29uc3QgcG9kRmlsZVBhdGggPSBwYXRoLmpvaW4ocHJvamVjdEZvbGRlciwgJy4uJywgJ1BvZGZpbGUnKTtcbiAgY29uc3QgcG9kRmlsZUV4aXN0cyA9IGZzLmV4aXN0c1N5bmMocG9kRmlsZVBhdGgpO1xuXG4gIHJldHVybiBwb2RGaWxlRXhpc3RzID8gcG9kRmlsZVBhdGggOiBudWxsO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findPodfilePath.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "module",
        "exports",
        "findPodfilePath",
        "projectFolder",
        "podFilePath",
        "join",
        "podFileExists",
        "existsSync"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEAE,OAAOC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,aAAzB,EAAwC;AACvD,QAAMC,cAAcL,KAAKM,IAAL,CAAUF,aAAV,EAAyB,IAAzB,EAA+B,SAA/B,CAApB;AACA,QAAMG,gBAAgBT,GAAGU,UAAH,CAAcH,WAAd,CAAtB;;AAEA,SAAOE,gBAAgBF,WAAhB,GAA8B,IAArC;AACD,CALD",
      "file": "findPodfilePath.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios",
      "sourcesContent": [
        "'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\nmodule.exports = function findPodfilePath(projectFolder) {\n  const podFilePath = path.join(projectFolder, '..', 'Podfile');\n  const podFileExists = fs.existsSync(podFilePath);\n\n  return podFileExists ? podFilePath : null;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios/findPodspecName.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios/findPodspecName.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios/findPodspecName.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findPodspecName.js",
      "sourceFileName": "findPodspecName.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findPodspecName"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst glob = require('glob');\nconst path = require('path');\n\nmodule.exports = function findPodspecName(folder) {\n  const podspecs = glob.sync('*.podspec', { cwd: folder });\n  let podspecFile = null;\n  if (podspecs.length === 0) {\n    return null;\n  } else\n  if (podspecs.length === 1) {\n    podspecFile = podspecs[0];\n  } else\n  {\n    const folderParts = folder.split(path.sep);\n    const currentFolder = folderParts[folderParts.length - 1];\n    const toSelect = podspecs.indexOf(currentFolder + '.podspec');\n    if (toSelect === -1) {\n      podspecFile = podspecs[0];\n    } else\n    {\n      podspecFile = podspecs[toSelect];\n    }\n  }\n\n  return podspecFile.replace('.podspec', '');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRQb2RzcGVjTmFtZS5qcyJdLCJuYW1lcyI6WyJnbG9iIiwicmVxdWlyZSIsInBhdGgiLCJtb2R1bGUiLCJleHBvcnRzIiwiZmluZFBvZHNwZWNOYW1lIiwiZm9sZGVyIiwicG9kc3BlY3MiLCJzeW5jIiwiY3dkIiwicG9kc3BlY0ZpbGUiLCJsZW5ndGgiLCJmb2xkZXJQYXJ0cyIsInNwbGl0Iiwic2VwIiwiY3VycmVudEZvbGRlciIsInRvU2VsZWN0IiwiaW5kZXhPZiIsInJlcGxhY2UiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLE9BQU9DLFFBQVEsTUFBUixDQUFiO0FBQ0EsTUFBTUMsT0FBT0QsUUFBUSxNQUFSLENBQWI7O0FBRUFFLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsZUFBVCxDQUF5QkMsTUFBekIsRUFBaUM7QUFDaEQsUUFBTUMsV0FBV1AsS0FBS1EsSUFBTCxDQUFVLFdBQVYsRUFBdUIsRUFBRUMsS0FBS0gsTUFBUCxFQUF2QixDQUFqQjtBQUNBLE1BQUlJLGNBQWMsSUFBbEI7QUFDQSxNQUFJSCxTQUFTSSxNQUFULEtBQW9CLENBQXhCLEVBQTJCO0FBQ3pCLFdBQU8sSUFBUDtBQUNELEdBRkQ7QUFHSyxNQUFJSixTQUFTSSxNQUFULEtBQW9CLENBQXhCLEVBQTJCO0FBQzlCRCxrQkFBY0gsU0FBUyxDQUFULENBQWQ7QUFDRCxHQUZJO0FBR0E7QUFDSCxVQUFNSyxjQUFjTixPQUFPTyxLQUFQLENBQWFYLEtBQUtZLEdBQWxCLENBQXBCO0FBQ0EsVUFBTUMsZ0JBQWdCSCxZQUFZQSxZQUFZRCxNQUFaLEdBQXFCLENBQWpDLENBQXRCO0FBQ0EsVUFBTUssV0FBV1QsU0FBU1UsT0FBVCxDQUFpQkYsZ0JBQWdCLFVBQWpDLENBQWpCO0FBQ0EsUUFBSUMsYUFBYSxDQUFDLENBQWxCLEVBQXFCO0FBQ25CTixvQkFBY0gsU0FBUyxDQUFULENBQWQ7QUFDRCxLQUZEO0FBR0s7QUFDSEcsb0JBQWNILFNBQVNTLFFBQVQsQ0FBZDtBQUNEO0FBQ0Y7O0FBRUQsU0FBT04sWUFBWVEsT0FBWixDQUFvQixVQUFwQixFQUFnQyxFQUFoQyxDQUFQO0FBQ0QsQ0F0QkQiLCJmaWxlIjoiZmluZFBvZHNwZWNOYW1lLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2NvcmUvaW9zIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBnbG9iID0gcmVxdWlyZSgnZ2xvYicpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBmaW5kUG9kc3BlY05hbWUoZm9sZGVyKSB7XG4gIGNvbnN0IHBvZHNwZWNzID0gZ2xvYi5zeW5jKCcqLnBvZHNwZWMnLCB7IGN3ZDogZm9sZGVyIH0pO1xuICBsZXQgcG9kc3BlY0ZpbGUgPSBudWxsO1xuICBpZiAocG9kc3BlY3MubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgZWxzZSBpZiAocG9kc3BlY3MubGVuZ3RoID09PSAxKSB7XG4gICAgcG9kc3BlY0ZpbGUgPSBwb2RzcGVjc1swXTtcbiAgfVxuICBlbHNlIHtcbiAgICBjb25zdCBmb2xkZXJQYXJ0cyA9IGZvbGRlci5zcGxpdChwYXRoLnNlcCk7XG4gICAgY29uc3QgY3VycmVudEZvbGRlciA9IGZvbGRlclBhcnRzW2ZvbGRlclBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGNvbnN0IHRvU2VsZWN0ID0gcG9kc3BlY3MuaW5kZXhPZihjdXJyZW50Rm9sZGVyICsgJy5wb2RzcGVjJyk7XG4gICAgaWYgKHRvU2VsZWN0ID09PSAtMSkge1xuICAgICAgcG9kc3BlY0ZpbGUgPSBwb2RzcGVjc1swXTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBwb2RzcGVjRmlsZSA9IHBvZHNwZWNzW3RvU2VsZWN0XTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcG9kc3BlY0ZpbGUucmVwbGFjZSgnLnBvZHNwZWMnLCAnJyk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findPodspecName.js"
      ],
      "names": [
        "glob",
        "require",
        "path",
        "module",
        "exports",
        "findPodspecName",
        "folder",
        "podspecs",
        "sync",
        "cwd",
        "podspecFile",
        "length",
        "folderParts",
        "split",
        "sep",
        "currentFolder",
        "toSelect",
        "indexOf",
        "replace"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEAE,OAAOC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAChD,QAAMC,WAAWP,KAAKQ,IAAL,CAAU,WAAV,EAAuB,EAAEC,KAAKH,MAAP,EAAvB,CAAjB;AACA,MAAII,cAAc,IAAlB;AACA,MAAIH,SAASI,MAAT,KAAoB,CAAxB,EAA2B;AACzB,WAAO,IAAP;AACD,GAFD;AAGK,MAAIJ,SAASI,MAAT,KAAoB,CAAxB,EAA2B;AAC9BD,kBAAcH,SAAS,CAAT,CAAd;AACD,GAFI;AAGA;AACH,UAAMK,cAAcN,OAAOO,KAAP,CAAaX,KAAKY,GAAlB,CAApB;AACA,UAAMC,gBAAgBH,YAAYA,YAAYD,MAAZ,GAAqB,CAAjC,CAAtB;AACA,UAAMK,WAAWT,SAASU,OAAT,CAAiBF,gBAAgB,UAAjC,CAAjB;AACA,QAAIC,aAAa,CAAC,CAAlB,EAAqB;AACnBN,oBAAcH,SAAS,CAAT,CAAd;AACD,KAFD;AAGK;AACHG,oBAAcH,SAASS,QAAT,CAAd;AACD;AACF;;AAED,SAAON,YAAYQ,OAAZ,CAAoB,UAApB,EAAgC,EAAhC,CAAP;AACD,CAtBD",
      "file": "findPodspecName.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/ios",
      "sourcesContent": [
        "'use strict';\n\nconst glob = require('glob');\nconst path = require('path');\n\nmodule.exports = function findPodspecName(folder) {\n  const podspecs = glob.sync('*.podspec', { cwd: folder });\n  let podspecFile = null;\n  if (podspecs.length === 0) {\n    return null;\n  }\n  else if (podspecs.length === 1) {\n    podspecFile = podspecs[0];\n  }\n  else {\n    const folderParts = folder.split(path.sep);\n    const currentFolder = folderParts[folderParts.length - 1];\n    const toSelect = podspecs.indexOf(currentFolder + '.podspec');\n    if (toSelect === -1) {\n      podspecFile = podspecs[0];\n    }\n    else {\n      podspecFile = podspecs[toSelect];\n    }\n  }\n\n  return podspecFile.replace('.podspec', '');\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/index.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/index.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/index.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst findWindowsSolution = require('./findWindowsSolution');\nconst findNamespace = require('./findNamespace');\nconst findProject = require('./findProject');\nconst findPackageClassName = require('./findPackageClassName');\nconst path = require('path');\nconst generateGUID = require('./generateGUID');\n\nconst relativeProjectPath = fullProjPath => {\n  const windowsPath = fullProjPath.\n  substring(fullProjPath.lastIndexOf('node_modules') - 1, fullProjPath.length).\n  replace(/\\//g, '\\\\');\n\n  return '..' + windowsPath;\n};\n\nconst getProjectName = fullProjPath => {\n  return fullProjPath.split('/').slice(-1)[0].replace(/\\.csproj/i, '');\n};\n\n/**\n    * Gets windows project config by analyzing given folder and taking some\n    * defaults specified by user into consideration\n    */\nexports.projectConfig = function projectConfigWindows(folder, userConfig) {\n\n  const csSolution = userConfig.csSolution || findWindowsSolution(folder);\n\n  if (!csSolution) {\n    return null;\n  }\n\n  // expects solutions to be named the same as project folders\n  const solutionPath = path.join(folder, csSolution);\n  const windowsAppFolder = csSolution.substring(0, csSolution.lastIndexOf('.sln'));\n  const src = userConfig.sourceDir || windowsAppFolder;\n  const sourceDir = path.join(folder, src);\n  const mainPage = path.join(sourceDir, 'MainPage.cs');\n  const projectPath = userConfig.projectPath || findProject(folder);\n\n  return {\n    sourceDir,\n    solutionPath,\n    projectPath,\n    mainPage,\n    folder,\n    userConfig };\n\n};\n\n/**\n    * Same as projectConfigWindows except it returns\n    * different config that applies to packages only\n    */\nexports.dependencyConfig = function dependencyConfigWindows(folder, userConfig) {\n\n  const csSolution = userConfig.csSolution || findWindowsSolution(folder);\n\n  if (!csSolution) {\n    return null;\n  }\n\n  // expects solutions to be named the same as project folders\n  const windowsAppFolder = csSolution.substring(0, csSolution.lastIndexOf('.sln'));\n  const src = userConfig.sourceDir || windowsAppFolder;\n\n  if (!src) {\n    return null;\n  }\n\n  const sourceDir = path.join(folder, src);\n  const packageClassName = findPackageClassName(sourceDir);\n  const namespace = userConfig.namespace || findNamespace(sourceDir);\n  const csProj = userConfig.csProj || findProject(folder);\n\n  /**\n                                                            * This module has no package to export or no namespace\n                                                            */\n  if (!packageClassName || !namespace) {\n    return null;\n  }\n\n  const packageUsingPath = userConfig.packageUsingPath ||\n  `using ${namespace};`;\n\n  const packageInstance = userConfig.packageInstance ||\n  `new ${packageClassName}()`;\n\n  const projectGUID = generateGUID();\n  const pathGUID = generateGUID();\n  const projectName = getProjectName(csProj);\n  const relativeProjPath = relativeProjectPath(csProj);\n\n  return {\n    sourceDir,\n    packageUsingPath,\n    packageInstance,\n    projectName,\n    csProj,\n    folder,\n    projectGUID,\n    pathGUID,\n    relativeProjPath };\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "findWindowsSolution",
        "require",
        "findNamespace",
        "findProject",
        "findPackageClassName",
        "path",
        "generateGUID",
        "relativeProjectPath",
        "fullProjPath",
        "windowsPath",
        "substring",
        "lastIndexOf",
        "length",
        "replace",
        "getProjectName",
        "split",
        "slice",
        "exports",
        "projectConfig",
        "projectConfigWindows",
        "folder",
        "userConfig",
        "csSolution",
        "solutionPath",
        "join",
        "windowsAppFolder",
        "src",
        "sourceDir",
        "mainPage",
        "projectPath",
        "dependencyConfig",
        "dependencyConfigWindows",
        "packageClassName",
        "namespace",
        "csProj",
        "packageUsingPath",
        "packageInstance",
        "projectGUID",
        "pathGUID",
        "projectName",
        "relativeProjPath"
      ],
      "mappings": "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",
      "file": "index.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst findWindowsSolution = require('./findWindowsSolution');\nconst findNamespace = require('./findNamespace');\nconst findProject = require('./findProject');\nconst findPackageClassName = require('./findPackageClassName');\nconst path = require('path');\nconst generateGUID = require('./generateGUID');\n\nconst relativeProjectPath = (fullProjPath) => {\n  const windowsPath = fullProjPath\n                  .substring(fullProjPath.lastIndexOf('node_modules') - 1, fullProjPath.length)\n                  .replace(/\\//g, '\\\\');\n\n  return '..' + windowsPath;\n};\n\nconst getProjectName = (fullProjPath) => {\n  return fullProjPath.split('/').slice(-1)[0].replace(/\\.csproj/i, '');\n};\n\n/**\n * Gets windows project config by analyzing given folder and taking some\n * defaults specified by user into consideration\n */\nexports.projectConfig = function projectConfigWindows(folder, userConfig) {\n\n  const csSolution = userConfig.csSolution || findWindowsSolution(folder);\n\n  if (!csSolution) {\n    return null;\n  }\n\n  // expects solutions to be named the same as project folders\n  const solutionPath = path.join(folder, csSolution);\n  const windowsAppFolder = csSolution.substring(0, csSolution.lastIndexOf('.sln'));\n  const src = userConfig.sourceDir || windowsAppFolder;\n  const sourceDir = path.join(folder, src);\n  const mainPage = path.join(sourceDir, 'MainPage.cs');\n  const projectPath = userConfig.projectPath || findProject(folder);\n\n  return {\n    sourceDir,\n    solutionPath,\n    projectPath,\n    mainPage,\n    folder,\n    userConfig,\n  };\n};\n\n/**\n * Same as projectConfigWindows except it returns\n * different config that applies to packages only\n */\nexports.dependencyConfig = function dependencyConfigWindows(folder, userConfig) {\n\n  const csSolution = userConfig.csSolution || findWindowsSolution(folder);\n\n  if (!csSolution) {\n    return null;\n  }\n\n  // expects solutions to be named the same as project folders\n  const windowsAppFolder = csSolution.substring(0, csSolution.lastIndexOf('.sln'));\n  const src = userConfig.sourceDir || windowsAppFolder;\n\n  if (!src) {\n    return null;\n  }\n\n  const sourceDir = path.join(folder, src);\n  const packageClassName = findPackageClassName(sourceDir);\n  const namespace = userConfig.namespace || findNamespace(sourceDir);\n  const csProj = userConfig.csProj || findProject(folder);\n\n  /**\n   * This module has no package to export or no namespace\n   */\n  if (!packageClassName || !namespace) {\n    return null;\n  }\n\n  const packageUsingPath = userConfig.packageUsingPath ||\n    `using ${namespace};`;\n\n  const packageInstance = userConfig.packageInstance ||\n    `new ${packageClassName}()`;\n\n  const projectGUID = generateGUID();\n  const pathGUID = generateGUID();\n  const projectName = getProjectName(csProj);\n  const relativeProjPath = relativeProjectPath(csProj);\n\n  return {\n    sourceDir,\n    packageUsingPath,\n    packageInstance,\n    projectName,\n    csProj,\n    folder,\n    projectGUID,\n    pathGUID,\n    relativeProjPath,\n  };\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/findWindowsSolution.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/findWindowsSolution.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/findWindowsSolution.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findWindowsSolution.js",
      "sourceFileName": "findWindowsSolution.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findWindowsSolution"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst glob = require('glob');\nconst path = require('path');\n\n/**\n                               * Glob pattern to look for solution file\n                               */\nconst GLOB_PATTERN = '**/*.sln';\n\n/**\n                                  * Regexp matching all test projects\n                                  */\nconst TEST_PROJECTS = /test|example|sample/i;\n\n/**\n                                               * Base windows folder\n                                               */\nconst WINDOWS_BASE = 'windows';\n\n/**\n                                 * These folders will be excluded from search to speed it up\n                                 */\nconst GLOB_EXCLUDE_PATTERN = ['**/@(node_modules)/**'];\n\n/**\n                                                         * Finds windows project by looking for all .sln files\n                                                         * in given folder.\n                                                         *\n                                                         * Returns first match if files are found or null\n                                                         *\n                                                         * Note: `./windows/*.sln` are returned regardless of the name\n                                                         */\nmodule.exports = function findSolution(folder) {\n  const projects = glob.\n  sync(GLOB_PATTERN, {\n    cwd: folder,\n    ignore: GLOB_EXCLUDE_PATTERN }).\n\n  filter(project => {\n    return path.dirname(project) === WINDOWS_BASE || !TEST_PROJECTS.test(project);\n  }).\n  sort((projectA, projectB) => {\n    return path.dirname(projectA) === WINDOWS_BASE ? -1 : 1;\n  });\n\n  if (projects.length === 0) {\n    return null;\n  }\n\n  return projects[0];\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRXaW5kb3dzU29sdXRpb24uanMiXSwibmFtZXMiOlsiZ2xvYiIsInJlcXVpcmUiLCJwYXRoIiwiR0xPQl9QQVRURVJOIiwiVEVTVF9QUk9KRUNUUyIsIldJTkRPV1NfQkFTRSIsIkdMT0JfRVhDTFVERV9QQVRURVJOIiwibW9kdWxlIiwiZXhwb3J0cyIsImZpbmRTb2x1dGlvbiIsImZvbGRlciIsInByb2plY3RzIiwic3luYyIsImN3ZCIsImlnbm9yZSIsImZpbHRlciIsInByb2plY3QiLCJkaXJuYW1lIiwidGVzdCIsInNvcnQiLCJwcm9qZWN0QSIsInByb2plY3RCIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTs7QUFFQSxNQUFNQSxPQUFPQyxRQUFRLE1BQVIsQ0FBYjtBQUNBLE1BQU1DLE9BQU9ELFFBQVEsTUFBUixDQUFiOztBQUVBOzs7QUFHQSxNQUFNRSxlQUFlLFVBQXJCOztBQUVBOzs7QUFHQSxNQUFNQyxnQkFBZ0Isc0JBQXRCOztBQUVBOzs7QUFHQSxNQUFNQyxlQUFlLFNBQXJCOztBQUVBOzs7QUFHQSxNQUFNQyx1QkFBdUIsQ0FBQyx1QkFBRCxDQUE3Qjs7QUFFQTs7Ozs7Ozs7QUFRQUMsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxZQUFULENBQXNCQyxNQUF0QixFQUE4QjtBQUM3QyxRQUFNQyxXQUFXWDtBQUNkWSxNQURjLENBQ1RULFlBRFMsRUFDSztBQUNsQlUsU0FBS0gsTUFEYTtBQUVsQkksWUFBUVIsb0JBRlUsRUFETDs7QUFLZFMsUUFMYyxDQUtQQyxXQUFXO0FBQ2pCLFdBQU9kLEtBQUtlLE9BQUwsQ0FBYUQsT0FBYixNQUEwQlgsWUFBMUIsSUFBMEMsQ0FBQ0QsY0FBY2MsSUFBZCxDQUFtQkYsT0FBbkIsQ0FBbEQ7QUFDRCxHQVBjO0FBUWRHLE1BUmMsQ0FRVCxDQUFDQyxRQUFELEVBQVdDLFFBQVgsS0FBd0I7QUFDNUIsV0FBT25CLEtBQUtlLE9BQUwsQ0FBYUcsUUFBYixNQUEyQmYsWUFBM0IsR0FBMEMsQ0FBQyxDQUEzQyxHQUErQyxDQUF0RDtBQUNELEdBVmMsQ0FBakI7O0FBWUEsTUFBSU0sU0FBU1csTUFBVCxLQUFvQixDQUF4QixFQUEyQjtBQUN6QixXQUFPLElBQVA7QUFDRDs7QUFFRCxTQUFPWCxTQUFTLENBQVQsQ0FBUDtBQUNELENBbEJEIiwiZmlsZSI6ImZpbmRXaW5kb3dzU29sdXRpb24uanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvY29yZS93aW5kb3dzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IGdsb2IgPSByZXF1aXJlKCdnbG9iJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG4vKipcbiAqIEdsb2IgcGF0dGVybiB0byBsb29rIGZvciBzb2x1dGlvbiBmaWxlXG4gKi9cbmNvbnN0IEdMT0JfUEFUVEVSTiA9ICcqKi8qLnNsbic7XG5cbi8qKlxuICogUmVnZXhwIG1hdGNoaW5nIGFsbCB0ZXN0IHByb2plY3RzXG4gKi9cbmNvbnN0IFRFU1RfUFJPSkVDVFMgPSAvdGVzdHxleGFtcGxlfHNhbXBsZS9pO1xuXG4vKipcbiAqIEJhc2Ugd2luZG93cyBmb2xkZXJcbiAqL1xuY29uc3QgV0lORE9XU19CQVNFID0gJ3dpbmRvd3MnO1xuXG4vKipcbiAqIFRoZXNlIGZvbGRlcnMgd2lsbCBiZSBleGNsdWRlZCBmcm9tIHNlYXJjaCB0byBzcGVlZCBpdCB1cFxuICovXG5jb25zdCBHTE9CX0VYQ0xVREVfUEFUVEVSTiA9IFsnKiovQChub2RlX21vZHVsZXMpLyoqJ107XG5cbi8qKlxuICogRmluZHMgd2luZG93cyBwcm9qZWN0IGJ5IGxvb2tpbmcgZm9yIGFsbCAuc2xuIGZpbGVzXG4gKiBpbiBnaXZlbiBmb2xkZXIuXG4gKlxuICogUmV0dXJucyBmaXJzdCBtYXRjaCBpZiBmaWxlcyBhcmUgZm91bmQgb3IgbnVsbFxuICpcbiAqIE5vdGU6IGAuL3dpbmRvd3MvKi5zbG5gIGFyZSByZXR1cm5lZCByZWdhcmRsZXNzIG9mIHRoZSBuYW1lXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZmluZFNvbHV0aW9uKGZvbGRlcikge1xuICBjb25zdCBwcm9qZWN0cyA9IGdsb2JcbiAgICAuc3luYyhHTE9CX1BBVFRFUk4sIHtcbiAgICAgIGN3ZDogZm9sZGVyLFxuICAgICAgaWdub3JlOiBHTE9CX0VYQ0xVREVfUEFUVEVSTixcbiAgICB9KVxuICAgIC5maWx0ZXIocHJvamVjdCA9PiB7XG4gICAgICByZXR1cm4gcGF0aC5kaXJuYW1lKHByb2plY3QpID09PSBXSU5ET1dTX0JBU0UgfHwgIVRFU1RfUFJPSkVDVFMudGVzdChwcm9qZWN0KTtcbiAgICB9KVxuICAgIC5zb3J0KChwcm9qZWN0QSwgcHJvamVjdEIpID0+IHtcbiAgICAgIHJldHVybiBwYXRoLmRpcm5hbWUocHJvamVjdEEpID09PSBXSU5ET1dTX0JBU0UgPyAtMSA6IDE7XG4gICAgfSk7XG5cbiAgaWYgKHByb2plY3RzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHByb2plY3RzWzBdO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findWindowsSolution.js"
      ],
      "names": [
        "glob",
        "require",
        "path",
        "GLOB_PATTERN",
        "TEST_PROJECTS",
        "WINDOWS_BASE",
        "GLOB_EXCLUDE_PATTERN",
        "module",
        "exports",
        "findSolution",
        "folder",
        "projects",
        "sync",
        "cwd",
        "ignore",
        "filter",
        "project",
        "dirname",
        "test",
        "sort",
        "projectA",
        "projectB",
        "length"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA;;;AAGA,MAAME,eAAe,UAArB;;AAEA;;;AAGA,MAAMC,gBAAgB,sBAAtB;;AAEA;;;AAGA,MAAMC,eAAe,SAArB;;AAEA;;;AAGA,MAAMC,uBAAuB,CAAC,uBAAD,CAA7B;;AAEA;;;;;;;;AAQAC,OAAOC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC7C,QAAMC,WAAWX;AACdY,MADc,CACTT,YADS,EACK;AAClBU,SAAKH,MADa;AAElBI,YAAQR,oBAFU,EADL;;AAKdS,QALc,CAKPC,WAAW;AACjB,WAAOd,KAAKe,OAAL,CAAaD,OAAb,MAA0BX,YAA1B,IAA0C,CAACD,cAAcc,IAAd,CAAmBF,OAAnB,CAAlD;AACD,GAPc;AAQdG,MARc,CAQT,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC5B,WAAOnB,KAAKe,OAAL,CAAaG,QAAb,MAA2Bf,YAA3B,GAA0C,CAAC,CAA3C,GAA+C,CAAtD;AACD,GAVc,CAAjB;;AAYA,MAAIM,SAASW,MAAT,KAAoB,CAAxB,EAA2B;AACzB,WAAO,IAAP;AACD;;AAED,SAAOX,SAAS,CAAT,CAAP;AACD,CAlBD",
      "file": "findWindowsSolution.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst glob = require('glob');\nconst path = require('path');\n\n/**\n * Glob pattern to look for solution file\n */\nconst GLOB_PATTERN = '**/*.sln';\n\n/**\n * Regexp matching all test projects\n */\nconst TEST_PROJECTS = /test|example|sample/i;\n\n/**\n * Base windows folder\n */\nconst WINDOWS_BASE = 'windows';\n\n/**\n * These folders will be excluded from search to speed it up\n */\nconst GLOB_EXCLUDE_PATTERN = ['**/@(node_modules)/**'];\n\n/**\n * Finds windows project by looking for all .sln files\n * in given folder.\n *\n * Returns first match if files are found or null\n *\n * Note: `./windows/*.sln` are returned regardless of the name\n */\nmodule.exports = function findSolution(folder) {\n  const projects = glob\n    .sync(GLOB_PATTERN, {\n      cwd: folder,\n      ignore: GLOB_EXCLUDE_PATTERN,\n    })\n    .filter(project => {\n      return path.dirname(project) === WINDOWS_BASE || !TEST_PROJECTS.test(project);\n    })\n    .sort((projectA, projectB) => {\n      return path.dirname(projectA) === WINDOWS_BASE ? -1 : 1;\n    });\n\n  if (projects.length === 0) {\n    return null;\n  }\n\n  return projects[0];\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/findNamespace.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/findNamespace.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/findNamespace.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findNamespace.js",
      "sourceFileName": "findNamespace.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findNamespace"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst glob = require('glob');\nconst path = require('path');\n\n/**\n                               * Gets package's namespace\n                               * by searching for its declaration in all C# files present in the folder\n                               *\n                               * @param {String} folder Folder to find C# files\n                               */\nmodule.exports = function getNamespace(folder) {\n  const files = glob.sync('**/*.cs', { cwd: folder });\n\n  const packages = files.\n  map(filePath => fs.readFileSync(path.join(folder, filePath), 'utf8')).\n  map(file => file.match(/namespace (.*)[\\s\\S]+IReactPackage/)).\n  filter(match => match);\n\n  return packages.length ? packages[0][1] : null;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmROYW1lc3BhY2UuanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwiZ2xvYiIsInBhdGgiLCJtb2R1bGUiLCJleHBvcnRzIiwiZ2V0TmFtZXNwYWNlIiwiZm9sZGVyIiwiZmlsZXMiLCJzeW5jIiwiY3dkIiwicGFja2FnZXMiLCJtYXAiLCJmaWxlUGF0aCIsInJlYWRGaWxlU3luYyIsImpvaW4iLCJmaWxlIiwibWF0Y2giLCJmaWx0ZXIiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLE1BQU1BLEtBQUtDLFFBQVEsSUFBUixDQUFYO0FBQ0EsTUFBTUMsT0FBT0QsUUFBUSxNQUFSLENBQWI7QUFDQSxNQUFNRSxPQUFPRixRQUFRLE1BQVIsQ0FBYjs7QUFFQTs7Ozs7O0FBTUFHLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsWUFBVCxDQUFzQkMsTUFBdEIsRUFBOEI7QUFDN0MsUUFBTUMsUUFBUU4sS0FBS08sSUFBTCxDQUFVLFNBQVYsRUFBcUIsRUFBRUMsS0FBS0gsTUFBUCxFQUFyQixDQUFkOztBQUVBLFFBQU1JLFdBQVdIO0FBQ2RJLEtBRGMsQ0FDVkMsWUFBWWIsR0FBR2MsWUFBSCxDQUFnQlgsS0FBS1ksSUFBTCxDQUFVUixNQUFWLEVBQWtCTSxRQUFsQixDQUFoQixFQUE2QyxNQUE3QyxDQURGO0FBRWRELEtBRmMsQ0FFVkksUUFBUUEsS0FBS0MsS0FBTCxDQUFXLG9DQUFYLENBRkU7QUFHZEMsUUFIYyxDQUdQRCxTQUFTQSxLQUhGLENBQWpCOztBQUtBLFNBQU9OLFNBQVNRLE1BQVQsR0FBa0JSLFNBQVMsQ0FBVCxFQUFZLENBQVosQ0FBbEIsR0FBbUMsSUFBMUM7QUFDRCxDQVREIiwiZmlsZSI6ImZpbmROYW1lc3BhY2UuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvY29yZS93aW5kb3dzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IGdsb2IgPSByZXF1aXJlKCdnbG9iJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG4vKipcbiAqIEdldHMgcGFja2FnZSdzIG5hbWVzcGFjZVxuICogYnkgc2VhcmNoaW5nIGZvciBpdHMgZGVjbGFyYXRpb24gaW4gYWxsIEMjIGZpbGVzIHByZXNlbnQgaW4gdGhlIGZvbGRlclxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBmb2xkZXIgRm9sZGVyIHRvIGZpbmQgQyMgZmlsZXNcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXROYW1lc3BhY2UoZm9sZGVyKSB7XG4gIGNvbnN0IGZpbGVzID0gZ2xvYi5zeW5jKCcqKi8qLmNzJywgeyBjd2Q6IGZvbGRlciB9KTtcblxuICBjb25zdCBwYWNrYWdlcyA9IGZpbGVzXG4gICAgLm1hcChmaWxlUGF0aCA9PiBmcy5yZWFkRmlsZVN5bmMocGF0aC5qb2luKGZvbGRlciwgZmlsZVBhdGgpLCAndXRmOCcpKVxuICAgIC5tYXAoZmlsZSA9PiBmaWxlLm1hdGNoKC9uYW1lc3BhY2UgKC4qKVtcXHNcXFNdK0lSZWFjdFBhY2thZ2UvKSlcbiAgICAuZmlsdGVyKG1hdGNoID0+IG1hdGNoKTtcblxuICByZXR1cm4gcGFja2FnZXMubGVuZ3RoID8gcGFja2FnZXNbMF1bMV0gOiBudWxsO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findNamespace.js"
      ],
      "names": [
        "fs",
        "require",
        "glob",
        "path",
        "module",
        "exports",
        "getNamespace",
        "folder",
        "files",
        "sync",
        "cwd",
        "packages",
        "map",
        "filePath",
        "readFileSync",
        "join",
        "file",
        "match",
        "filter",
        "length"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,OAAOF,QAAQ,MAAR,CAAb;;AAEA;;;;;;AAMAG,OAAOC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC7C,QAAMC,QAAQN,KAAKO,IAAL,CAAU,SAAV,EAAqB,EAAEC,KAAKH,MAAP,EAArB,CAAd;;AAEA,QAAMI,WAAWH;AACdI,KADc,CACVC,YAAYb,GAAGc,YAAH,CAAgBX,KAAKY,IAAL,CAAUR,MAAV,EAAkBM,QAAlB,CAAhB,EAA6C,MAA7C,CADF;AAEdD,KAFc,CAEVI,QAAQA,KAAKC,KAAL,CAAW,oCAAX,CAFE;AAGdC,QAHc,CAGPD,SAASA,KAHF,CAAjB;;AAKA,SAAON,SAASQ,MAAT,GAAkBR,SAAS,CAAT,EAAY,CAAZ,CAAlB,GAAmC,IAA1C;AACD,CATD",
      "file": "findNamespace.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst glob = require('glob');\nconst path = require('path');\n\n/**\n * Gets package's namespace\n * by searching for its declaration in all C# files present in the folder\n *\n * @param {String} folder Folder to find C# files\n */\nmodule.exports = function getNamespace(folder) {\n  const files = glob.sync('**/*.cs', { cwd: folder });\n\n  const packages = files\n    .map(filePath => fs.readFileSync(path.join(folder, filePath), 'utf8'))\n    .map(file => file.match(/namespace (.*)[\\s\\S]+IReactPackage/))\n    .filter(match => match);\n\n  return packages.length ? packages[0][1] : null;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/findProject.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/findProject.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/findProject.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findProject.js",
      "sourceFileName": "findProject.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findProject"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst glob = require('glob');\nconst path = require('path');\n\n/**\n                               * Find an C# project file\n                               *\n                               * @param {String} folder Name of the folder where to seek\n                               * @return {String}\n                               */\nmodule.exports = function findManifest(folder) {\n  const csprojPath = glob.sync(path.join('**', '*.csproj'), {\n    cwd: folder,\n    ignore: ['node_modules/**', '**/build/**', 'Examples/**', 'examples/**'] })[\n  0];\n\n  return csprojPath ? path.join(folder, csprojPath) : null;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRQcm9qZWN0LmpzIl0sIm5hbWVzIjpbImdsb2IiLCJyZXF1aXJlIiwicGF0aCIsIm1vZHVsZSIsImV4cG9ydHMiLCJmaW5kTWFuaWZlc3QiLCJmb2xkZXIiLCJjc3Byb2pQYXRoIiwic3luYyIsImpvaW4iLCJjd2QiLCJpZ25vcmUiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLE1BQU1BLE9BQU9DLFFBQVEsTUFBUixDQUFiO0FBQ0EsTUFBTUMsT0FBT0QsUUFBUSxNQUFSLENBQWI7O0FBRUE7Ozs7OztBQU1BRSxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLFlBQVQsQ0FBc0JDLE1BQXRCLEVBQThCO0FBQzdDLFFBQU1DLGFBQWFQLEtBQUtRLElBQUwsQ0FBVU4sS0FBS08sSUFBTCxDQUFVLElBQVYsRUFBZ0IsVUFBaEIsQ0FBVixFQUF1QztBQUN4REMsU0FBS0osTUFEbUQ7QUFFeERLLFlBQVEsQ0FBQyxpQkFBRCxFQUFvQixhQUFwQixFQUFtQyxhQUFuQyxFQUFrRCxhQUFsRCxDQUZnRCxFQUF2QztBQUdoQixHQUhnQixDQUFuQjs7QUFLQSxTQUFPSixhQUFhTCxLQUFLTyxJQUFMLENBQVVILE1BQVYsRUFBa0JDLFVBQWxCLENBQWIsR0FBNkMsSUFBcEQ7QUFDRCxDQVBEIiwiZmlsZSI6ImZpbmRQcm9qZWN0LmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2NvcmUvd2luZG93cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBnbG9iID0gcmVxdWlyZSgnZ2xvYicpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxuLyoqXG4gKiBGaW5kIGFuIEMjIHByb2plY3QgZmlsZVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBmb2xkZXIgTmFtZSBvZiB0aGUgZm9sZGVyIHdoZXJlIHRvIHNlZWtcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBmaW5kTWFuaWZlc3QoZm9sZGVyKSB7XG4gIGNvbnN0IGNzcHJvalBhdGggPSBnbG9iLnN5bmMocGF0aC5qb2luKCcqKicsICcqLmNzcHJvaicpLCB7XG4gICAgY3dkOiBmb2xkZXIsXG4gICAgaWdub3JlOiBbJ25vZGVfbW9kdWxlcy8qKicsICcqKi9idWlsZC8qKicsICdFeGFtcGxlcy8qKicsICdleGFtcGxlcy8qKiddLFxuICB9KVswXTtcblxuICByZXR1cm4gY3Nwcm9qUGF0aCA/IHBhdGguam9pbihmb2xkZXIsIGNzcHJvalBhdGgpIDogbnVsbDtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findProject.js"
      ],
      "names": [
        "glob",
        "require",
        "path",
        "module",
        "exports",
        "findManifest",
        "folder",
        "csprojPath",
        "sync",
        "join",
        "cwd",
        "ignore"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA;;;;;;AAMAE,OAAOC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC7C,QAAMC,aAAaP,KAAKQ,IAAL,CAAUN,KAAKO,IAAL,CAAU,IAAV,EAAgB,UAAhB,CAAV,EAAuC;AACxDC,SAAKJ,MADmD;AAExDK,YAAQ,CAAC,iBAAD,EAAoB,aAApB,EAAmC,aAAnC,EAAkD,aAAlD,CAFgD,EAAvC;AAGhB,GAHgB,CAAnB;;AAKA,SAAOJ,aAAaL,KAAKO,IAAL,CAAUH,MAAV,EAAkBC,UAAlB,CAAb,GAA6C,IAApD;AACD,CAPD",
      "file": "findProject.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst glob = require('glob');\nconst path = require('path');\n\n/**\n * Find an C# project file\n *\n * @param {String} folder Name of the folder where to seek\n * @return {String}\n */\nmodule.exports = function findManifest(folder) {\n  const csprojPath = glob.sync(path.join('**', '*.csproj'), {\n    cwd: folder,\n    ignore: ['node_modules/**', '**/build/**', 'Examples/**', 'examples/**'],\n  })[0];\n\n  return csprojPath ? path.join(folder, csprojPath) : null;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/findPackageClassName.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/findPackageClassName.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/findPackageClassName.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findPackageClassName.js",
      "sourceFileName": "findPackageClassName.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findPackageClassName"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst glob = require('glob');\nconst path = require('path');\n\n/**\n                               * Gets package's class name (class that implements IReactPackage)\n                               * by searching for its declaration in all C# files present in the folder\n                               *\n                               * @param {String} folder Folder to find C# files\n                               */\nmodule.exports = function getPackageClassName(folder) {\n  const files = glob.sync('**/*.cs', { cwd: folder });\n\n  const packages = files.\n  map(filePath => fs.readFileSync(path.join(folder, filePath), 'utf8')).\n  map(file => file.match(/class (.*) : IReactPackage/)).\n  filter(match => match);\n\n  return packages.length ? packages[0][1] : null;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRQYWNrYWdlQ2xhc3NOYW1lLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsImdsb2IiLCJwYXRoIiwibW9kdWxlIiwiZXhwb3J0cyIsImdldFBhY2thZ2VDbGFzc05hbWUiLCJmb2xkZXIiLCJmaWxlcyIsInN5bmMiLCJjd2QiLCJwYWNrYWdlcyIsIm1hcCIsImZpbGVQYXRoIiwicmVhZEZpbGVTeW5jIiwiam9pbiIsImZpbGUiLCJtYXRjaCIsImZpbHRlciIsImxlbmd0aCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUEsTUFBTUEsS0FBS0MsUUFBUSxJQUFSLENBQVg7QUFDQSxNQUFNQyxPQUFPRCxRQUFRLE1BQVIsQ0FBYjtBQUNBLE1BQU1FLE9BQU9GLFFBQVEsTUFBUixDQUFiOztBQUVBOzs7Ozs7QUFNQUcsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxtQkFBVCxDQUE2QkMsTUFBN0IsRUFBcUM7QUFDcEQsUUFBTUMsUUFBUU4sS0FBS08sSUFBTCxDQUFVLFNBQVYsRUFBcUIsRUFBRUMsS0FBS0gsTUFBUCxFQUFyQixDQUFkOztBQUVBLFFBQU1JLFdBQVdIO0FBQ2RJLEtBRGMsQ0FDVkMsWUFBWWIsR0FBR2MsWUFBSCxDQUFnQlgsS0FBS1ksSUFBTCxDQUFVUixNQUFWLEVBQWtCTSxRQUFsQixDQUFoQixFQUE2QyxNQUE3QyxDQURGO0FBRWRELEtBRmMsQ0FFVkksUUFBUUEsS0FBS0MsS0FBTCxDQUFXLDRCQUFYLENBRkU7QUFHZEMsUUFIYyxDQUdQRCxTQUFTQSxLQUhGLENBQWpCOztBQUtBLFNBQU9OLFNBQVNRLE1BQVQsR0FBa0JSLFNBQVMsQ0FBVCxFQUFZLENBQVosQ0FBbEIsR0FBbUMsSUFBMUM7QUFDRCxDQVREIiwiZmlsZSI6ImZpbmRQYWNrYWdlQ2xhc3NOYW1lLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2NvcmUvd2luZG93cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBnbG9iID0gcmVxdWlyZSgnZ2xvYicpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxuLyoqXG4gKiBHZXRzIHBhY2thZ2UncyBjbGFzcyBuYW1lIChjbGFzcyB0aGF0IGltcGxlbWVudHMgSVJlYWN0UGFja2FnZSlcbiAqIGJ5IHNlYXJjaGluZyBmb3IgaXRzIGRlY2xhcmF0aW9uIGluIGFsbCBDIyBmaWxlcyBwcmVzZW50IGluIHRoZSBmb2xkZXJcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gZm9sZGVyIEZvbGRlciB0byBmaW5kIEMjIGZpbGVzXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2V0UGFja2FnZUNsYXNzTmFtZShmb2xkZXIpIHtcbiAgY29uc3QgZmlsZXMgPSBnbG9iLnN5bmMoJyoqLyouY3MnLCB7IGN3ZDogZm9sZGVyIH0pO1xuXG4gIGNvbnN0IHBhY2thZ2VzID0gZmlsZXNcbiAgICAubWFwKGZpbGVQYXRoID0+IGZzLnJlYWRGaWxlU3luYyhwYXRoLmpvaW4oZm9sZGVyLCBmaWxlUGF0aCksICd1dGY4JykpXG4gICAgLm1hcChmaWxlID0+IGZpbGUubWF0Y2goL2NsYXNzICguKikgOiBJUmVhY3RQYWNrYWdlLykpXG4gICAgLmZpbHRlcihtYXRjaCA9PiBtYXRjaCk7XG5cbiAgcmV0dXJuIHBhY2thZ2VzLmxlbmd0aCA/IHBhY2thZ2VzWzBdWzFdIDogbnVsbDtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findPackageClassName.js"
      ],
      "names": [
        "fs",
        "require",
        "glob",
        "path",
        "module",
        "exports",
        "getPackageClassName",
        "folder",
        "files",
        "sync",
        "cwd",
        "packages",
        "map",
        "filePath",
        "readFileSync",
        "join",
        "file",
        "match",
        "filter",
        "length"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,OAAOF,QAAQ,MAAR,CAAb;;AAEA;;;;;;AAMAG,OAAOC,OAAP,GAAiB,SAASC,mBAAT,CAA6BC,MAA7B,EAAqC;AACpD,QAAMC,QAAQN,KAAKO,IAAL,CAAU,SAAV,EAAqB,EAAEC,KAAKH,MAAP,EAArB,CAAd;;AAEA,QAAMI,WAAWH;AACdI,KADc,CACVC,YAAYb,GAAGc,YAAH,CAAgBX,KAAKY,IAAL,CAAUR,MAAV,EAAkBM,QAAlB,CAAhB,EAA6C,MAA7C,CADF;AAEdD,KAFc,CAEVI,QAAQA,KAAKC,KAAL,CAAW,4BAAX,CAFE;AAGdC,QAHc,CAGPD,SAASA,KAHF,CAAjB;;AAKA,SAAON,SAASQ,MAAT,GAAkBR,SAAS,CAAT,EAAY,CAAZ,CAAlB,GAAmC,IAA1C;AACD,CATD",
      "file": "findPackageClassName.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst glob = require('glob');\nconst path = require('path');\n\n/**\n * Gets package's class name (class that implements IReactPackage)\n * by searching for its declaration in all C# files present in the folder\n *\n * @param {String} folder Folder to find C# files\n */\nmodule.exports = function getPackageClassName(folder) {\n  const files = glob.sync('**/*.cs', { cwd: folder });\n\n  const packages = files\n    .map(filePath => fs.readFileSync(path.join(folder, filePath), 'utf8'))\n    .map(file => file.match(/class (.*) : IReactPackage/))\n    .filter(match => match);\n\n  return packages.length ? packages[0][1] : null;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/generateGUID.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/generateGUID.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows/generateGUID.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "generateGUID.js",
      "sourceFileName": "generateGUID.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "generateGUID"
    },
    "ignored": false,
    "code": "'use strict';const s4 = () => {\n  return Math.floor((1 + Math.random()) * 0x10000).\n  toString(16).\n  substring(1);\n};\n\nmodule.exports = function generateGUID() {\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n  s4() + '-' + s4() + s4() + s4();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYXRlR1VJRC5qcyJdLCJuYW1lcyI6WyJzNCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyaW5nIiwibW9kdWxlIiwiZXhwb3J0cyIsImdlbmVyYXRlR1VJRCJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsS0FBSyxNQUFNO0FBQ2YsU0FBT0MsS0FBS0MsS0FBTCxDQUFXLENBQUMsSUFBSUQsS0FBS0UsTUFBTCxFQUFMLElBQXNCLE9BQWpDO0FBQ0pDLFVBREksQ0FDSyxFQURMO0FBRUpDLFdBRkksQ0FFTSxDQUZOLENBQVA7QUFHRCxDQUpEOztBQU1BQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLFlBQVQsR0FBd0I7QUFDdkMsU0FBT1IsT0FBT0EsSUFBUCxHQUFjLEdBQWQsR0FBb0JBLElBQXBCLEdBQTJCLEdBQTNCLEdBQWlDQSxJQUFqQyxHQUF3QyxHQUF4QztBQUNMQSxNQURLLEdBQ0UsR0FERixHQUNRQSxJQURSLEdBQ2VBLElBRGYsR0FDc0JBLElBRDdCO0FBRUQsQ0FIRCIsImZpbGUiOiJnZW5lcmF0ZUdVSUQuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvY29yZS93aW5kb3dzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgczQgPSAoKSA9PiB7XG4gIHJldHVybiBNYXRoLmZsb29yKCgxICsgTWF0aC5yYW5kb20oKSkgKiAweDEwMDAwKVxuICAgIC50b1N0cmluZygxNilcbiAgICAuc3Vic3RyaW5nKDEpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZUdVSUQoKSB7XG4gIHJldHVybiBzNCgpICsgczQoKSArICctJyArIHM0KCkgKyAnLScgKyBzNCgpICsgJy0nICtcbiAgICBzNCgpICsgJy0nICsgczQoKSArIHM0KCkgKyBzNCgpO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "generateGUID.js"
      ],
      "names": [
        "s4",
        "Math",
        "floor",
        "random",
        "toString",
        "substring",
        "module",
        "exports",
        "generateGUID"
      ],
      "mappings": "aAAA,MAAMA,KAAK,MAAM;AACf,SAAOC,KAAKC,KAAL,CAAW,CAAC,IAAID,KAAKE,MAAL,EAAL,IAAsB,OAAjC;AACJC,UADI,CACK,EADL;AAEJC,WAFI,CAEM,CAFN,CAAP;AAGD,CAJD;;AAMAC,OAAOC,OAAP,GAAiB,SAASC,YAAT,GAAwB;AACvC,SAAOR,OAAOA,IAAP,GAAc,GAAd,GAAoBA,IAApB,GAA2B,GAA3B,GAAiCA,IAAjC,GAAwC,GAAxC;AACLA,MADK,GACE,GADF,GACQA,IADR,GACeA,IADf,GACsBA,IAD7B;AAED,CAHD",
      "file": "generateGUID.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/windows",
      "sourcesContent": [
        "const s4 = () => {\n  return Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1);\n};\n\nmodule.exports = function generateGUID() {\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n    s4() + '-' + s4() + s4() + s4();\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/wrapCommands.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/wrapCommands.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/wrapCommands.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "wrapCommands.js",
      "sourceFileName": "wrapCommands.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "wrapCommands"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst makeCommand = require('./makeCommand');\n\nmodule.exports = function wrapCommands(commands) {\n  const mappedCommands = {};\n  Object.keys(commands || []).forEach(k => {\n    mappedCommands[k] = makeCommand(commands[k]);\n  });\n  return mappedCommands;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndyYXBDb21tYW5kcy5qcyJdLCJuYW1lcyI6WyJtYWtlQ29tbWFuZCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwid3JhcENvbW1hbmRzIiwiY29tbWFuZHMiLCJtYXBwZWRDb21tYW5kcyIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwiayJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUEsTUFBTUEsY0FBY0MsUUFBUSxlQUFSLENBQXBCOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLFlBQVQsQ0FBc0JDLFFBQXRCLEVBQWdDO0FBQy9DLFFBQU1DLGlCQUFpQixFQUF2QjtBQUNBQyxTQUFPQyxJQUFQLENBQVlILFlBQVksRUFBeEIsRUFBNEJJLE9BQTVCLENBQXFDQyxDQUFELElBQU87QUFDekNKLG1CQUFlSSxDQUFmLElBQW9CVixZQUFZSyxTQUFTSyxDQUFULENBQVosQ0FBcEI7QUFDRCxHQUZEO0FBR0EsU0FBT0osY0FBUDtBQUNELENBTkQiLCJmaWxlIjoid3JhcENvbW1hbmRzLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2NvcmUiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgbWFrZUNvbW1hbmQgPSByZXF1aXJlKCcuL21ha2VDb21tYW5kJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gd3JhcENvbW1hbmRzKGNvbW1hbmRzKSB7XG4gIGNvbnN0IG1hcHBlZENvbW1hbmRzID0ge307XG4gIE9iamVjdC5rZXlzKGNvbW1hbmRzIHx8IFtdKS5mb3JFYWNoKChrKSA9PiB7XG4gICAgbWFwcGVkQ29tbWFuZHNba10gPSBtYWtlQ29tbWFuZChjb21tYW5kc1trXSk7XG4gIH0pO1xuICByZXR1cm4gbWFwcGVkQ29tbWFuZHM7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "wrapCommands.js"
      ],
      "names": [
        "makeCommand",
        "require",
        "module",
        "exports",
        "wrapCommands",
        "commands",
        "mappedCommands",
        "Object",
        "keys",
        "forEach",
        "k"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,cAAcC,QAAQ,eAAR,CAApB;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC/C,QAAMC,iBAAiB,EAAvB;AACAC,SAAOC,IAAP,CAAYH,YAAY,EAAxB,EAA4BI,OAA5B,CAAqCC,CAAD,IAAO;AACzCJ,mBAAeI,CAAf,IAAoBV,YAAYK,SAASK,CAAT,CAAZ,CAApB;AACD,GAFD;AAGA,SAAOJ,cAAP;AACD,CAND",
      "file": "wrapCommands.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst makeCommand = require('./makeCommand');\n\nmodule.exports = function wrapCommands(commands) {\n  const mappedCommands = {};\n  Object.keys(commands || []).forEach((k) => {\n    mappedCommands[k] = makeCommand(commands[k]);\n  });\n  return mappedCommands;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/makeCommand.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/makeCommand.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/makeCommand.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "makeCommand.js",
      "sourceFileName": "makeCommand.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "makeCommand"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst spawn = require('child_process').spawn;\n\nmodule.exports = function makeCommand(command) {\n  return cb => {\n    if (!cb) {\n      throw new Error(`You missed a callback function for the ${command} command`);\n    }\n\n    const args = command.split(' ');\n    const cmd = args.shift();\n\n    const commandProcess = spawn(cmd, args, {\n      stdio: 'inherit',\n      stdin: 'inherit' });\n\n\n    commandProcess.on('close', function prelink(code) {\n      if (code) {\n        throw new Error(`Error occured during executing \"${command}\" command`);\n      }\n\n      cb();\n    });\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ha2VDb21tYW5kLmpzIl0sIm5hbWVzIjpbInNwYXduIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJtYWtlQ29tbWFuZCIsImNvbW1hbmQiLCJjYiIsIkVycm9yIiwiYXJncyIsInNwbGl0IiwiY21kIiwic2hpZnQiLCJjb21tYW5kUHJvY2VzcyIsInN0ZGlvIiwic3RkaW4iLCJvbiIsInByZWxpbmsiLCJjb2RlIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTs7QUFFQSxNQUFNQSxRQUFRQyxRQUFRLGVBQVIsRUFBeUJELEtBQXZDOztBQUVBRSxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLFdBQVQsQ0FBcUJDLE9BQXJCLEVBQThCO0FBQzdDLFNBQVFDLEVBQUQsSUFBUTtBQUNiLFFBQUksQ0FBQ0EsRUFBTCxFQUFTO0FBQ1AsWUFBTSxJQUFJQyxLQUFKLENBQVcsMENBQXlDRixPQUFRLFVBQTVELENBQU47QUFDRDs7QUFFRCxVQUFNRyxPQUFPSCxRQUFRSSxLQUFSLENBQWMsR0FBZCxDQUFiO0FBQ0EsVUFBTUMsTUFBTUYsS0FBS0csS0FBTCxFQUFaOztBQUVBLFVBQU1DLGlCQUFpQlosTUFBTVUsR0FBTixFQUFXRixJQUFYLEVBQWlCO0FBQ3RDSyxhQUFPLFNBRCtCO0FBRXRDQyxhQUFPLFNBRitCLEVBQWpCLENBQXZCOzs7QUFLQUYsbUJBQWVHLEVBQWYsQ0FBa0IsT0FBbEIsRUFBMkIsU0FBU0MsT0FBVCxDQUFpQkMsSUFBakIsRUFBdUI7QUFDaEQsVUFBSUEsSUFBSixFQUFVO0FBQ1IsY0FBTSxJQUFJVixLQUFKLENBQVcsbUNBQWtDRixPQUFRLFdBQXJELENBQU47QUFDRDs7QUFFREM7QUFDRCxLQU5EO0FBT0QsR0FwQkQ7QUFxQkQsQ0F0QkQiLCJmaWxlIjoibWFrZUNvbW1hbmQuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvY29yZSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBzcGF3biA9IHJlcXVpcmUoJ2NoaWxkX3Byb2Nlc3MnKS5zcGF3bjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtYWtlQ29tbWFuZChjb21tYW5kKSB7XG4gIHJldHVybiAoY2IpID0+IHtcbiAgICBpZiAoIWNiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFlvdSBtaXNzZWQgYSBjYWxsYmFjayBmdW5jdGlvbiBmb3IgdGhlICR7Y29tbWFuZH0gY29tbWFuZGApO1xuICAgIH1cblxuICAgIGNvbnN0IGFyZ3MgPSBjb21tYW5kLnNwbGl0KCcgJyk7XG4gICAgY29uc3QgY21kID0gYXJncy5zaGlmdCgpO1xuXG4gICAgY29uc3QgY29tbWFuZFByb2Nlc3MgPSBzcGF3bihjbWQsIGFyZ3MsIHtcbiAgICAgIHN0ZGlvOiAnaW5oZXJpdCcsXG4gICAgICBzdGRpbjogJ2luaGVyaXQnLFxuICAgIH0pO1xuXG4gICAgY29tbWFuZFByb2Nlc3Mub24oJ2Nsb3NlJywgZnVuY3Rpb24gcHJlbGluayhjb2RlKSB7XG4gICAgICBpZiAoY29kZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEVycm9yIG9jY3VyZWQgZHVyaW5nIGV4ZWN1dGluZyBcIiR7Y29tbWFuZH1cIiBjb21tYW5kYCk7XG4gICAgICB9XG5cbiAgICAgIGNiKCk7XG4gICAgfSk7XG4gIH07XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "makeCommand.js"
      ],
      "names": [
        "spawn",
        "require",
        "module",
        "exports",
        "makeCommand",
        "command",
        "cb",
        "Error",
        "args",
        "split",
        "cmd",
        "shift",
        "commandProcess",
        "stdio",
        "stdin",
        "on",
        "prelink",
        "code"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,QAAQC,QAAQ,eAAR,EAAyBD,KAAvC;;AAEAE,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AAC7C,SAAQC,EAAD,IAAQ;AACb,QAAI,CAACA,EAAL,EAAS;AACP,YAAM,IAAIC,KAAJ,CAAW,0CAAyCF,OAAQ,UAA5D,CAAN;AACD;;AAED,UAAMG,OAAOH,QAAQI,KAAR,CAAc,GAAd,CAAb;AACA,UAAMC,MAAMF,KAAKG,KAAL,EAAZ;;AAEA,UAAMC,iBAAiBZ,MAAMU,GAAN,EAAWF,IAAX,EAAiB;AACtCK,aAAO,SAD+B;AAEtCC,aAAO,SAF+B,EAAjB,CAAvB;;;AAKAF,mBAAeG,EAAf,CAAkB,OAAlB,EAA2B,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAChD,UAAIA,IAAJ,EAAU;AACR,cAAM,IAAIV,KAAJ,CAAW,mCAAkCF,OAAQ,WAArD,CAAN;AACD;;AAEDC;AACD,KAND;AAOD,GApBD;AAqBD,CAtBD",
      "file": "makeCommand.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst spawn = require('child_process').spawn;\n\nmodule.exports = function makeCommand(command) {\n  return (cb) => {\n    if (!cb) {\n      throw new Error(`You missed a callback function for the ${command} command`);\n    }\n\n    const args = command.split(' ');\n    const cmd = args.shift();\n\n    const commandProcess = spawn(cmd, args, {\n      stdio: 'inherit',\n      stdin: 'inherit',\n    });\n\n    commandProcess.on('close', function prelink(code) {\n      if (code) {\n        throw new Error(`Error occured during executing \"${command}\" command`);\n      }\n\n      cb();\n    });\n  };\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/assertRequiredOptions.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/assertRequiredOptions.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/assertRequiredOptions.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "assertRequiredOptions.js",
      "sourceFileName": "assertRequiredOptions.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "assertRequiredOptions"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst { Option } = require('commander');\nconst { camelCase } = require('lodash');\n\n// Commander.js has a 2 years old open issue to support <...> syntax\n// for options. Until that gets merged, we run the checks manually\n// https://github.com/tj/commander.js/issues/230\nmodule.exports = function assertRequiredOptions(options, passedOptions) {\n  options.forEach(opt => {\n    const option = new Option(opt.command);\n\n    if (!option.required) {\n      return;\n    }\n\n    const name = camelCase(option.long);\n\n    if (!passedOptions[name]) {\n      // Provide commander.js like error message\n      throw new Error(`error: option '${option.long}' missing`);\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2VydFJlcXVpcmVkT3B0aW9ucy5qcyJdLCJuYW1lcyI6WyJPcHRpb24iLCJyZXF1aXJlIiwiY2FtZWxDYXNlIiwibW9kdWxlIiwiZXhwb3J0cyIsImFzc2VydFJlcXVpcmVkT3B0aW9ucyIsIm9wdGlvbnMiLCJwYXNzZWRPcHRpb25zIiwiZm9yRWFjaCIsIm9wdCIsIm9wdGlvbiIsImNvbW1hbmQiLCJyZXF1aXJlZCIsIm5hbWUiLCJsb25nIiwiRXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLE1BQU0sRUFBRUEsTUFBRixLQUFhQyxRQUFRLFdBQVIsQ0FBbkI7QUFDQSxNQUFNLEVBQUVDLFNBQUYsS0FBZ0JELFFBQVEsUUFBUixDQUF0Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQUUsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxxQkFBVCxDQUErQkMsT0FBL0IsRUFBd0NDLGFBQXhDLEVBQXVEO0FBQ3RFRCxVQUFRRSxPQUFSLENBQWdCQyxPQUFPO0FBQ3JCLFVBQU1DLFNBQVMsSUFBSVYsTUFBSixDQUFXUyxJQUFJRSxPQUFmLENBQWY7O0FBRUEsUUFBSSxDQUFDRCxPQUFPRSxRQUFaLEVBQXNCO0FBQ3BCO0FBQ0Q7O0FBRUQsVUFBTUMsT0FBT1gsVUFBVVEsT0FBT0ksSUFBakIsQ0FBYjs7QUFFQSxRQUFJLENBQUNQLGNBQWNNLElBQWQsQ0FBTCxFQUEwQjtBQUN4QjtBQUNBLFlBQU0sSUFBSUUsS0FBSixDQUFXLGtCQUFpQkwsT0FBT0ksSUFBSyxXQUF4QyxDQUFOO0FBQ0Q7QUFDRixHQWJEO0FBY0QsQ0FmRCIsImZpbGUiOiJhc3NlcnRSZXF1aXJlZE9wdGlvbnMuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB7IE9wdGlvbiB9ID0gcmVxdWlyZSgnY29tbWFuZGVyJyk7XG5jb25zdCB7IGNhbWVsQ2FzZSB9ID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5cbi8vIENvbW1hbmRlci5qcyBoYXMgYSAyIHllYXJzIG9sZCBvcGVuIGlzc3VlIHRvIHN1cHBvcnQgPC4uLj4gc3ludGF4XG4vLyBmb3Igb3B0aW9ucy4gVW50aWwgdGhhdCBnZXRzIG1lcmdlZCwgd2UgcnVuIHRoZSBjaGVja3MgbWFudWFsbHlcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90ai9jb21tYW5kZXIuanMvaXNzdWVzLzIzMFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBhc3NlcnRSZXF1aXJlZE9wdGlvbnMob3B0aW9ucywgcGFzc2VkT3B0aW9ucykge1xuICBvcHRpb25zLmZvckVhY2gob3B0ID0+IHtcbiAgICBjb25zdCBvcHRpb24gPSBuZXcgT3B0aW9uKG9wdC5jb21tYW5kKTtcblxuICAgIGlmICghb3B0aW9uLnJlcXVpcmVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgbmFtZSA9IGNhbWVsQ2FzZShvcHRpb24ubG9uZyk7XG5cbiAgICBpZiAoIXBhc3NlZE9wdGlvbnNbbmFtZV0pIHtcbiAgICAgIC8vIFByb3ZpZGUgY29tbWFuZGVyLmpzIGxpa2UgZXJyb3IgbWVzc2FnZVxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBlcnJvcjogb3B0aW9uICcke29wdGlvbi5sb25nfScgbWlzc2luZ2ApO1xuICAgIH1cbiAgfSk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "assertRequiredOptions.js"
      ],
      "names": [
        "Option",
        "require",
        "camelCase",
        "module",
        "exports",
        "assertRequiredOptions",
        "options",
        "passedOptions",
        "forEach",
        "opt",
        "option",
        "command",
        "required",
        "name",
        "long",
        "Error"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAM,EAAEA,MAAF,KAAaC,QAAQ,WAAR,CAAnB;AACA,MAAM,EAAEC,SAAF,KAAgBD,QAAQ,QAAR,CAAtB;;AAEA;AACA;AACA;AACAE,OAAOC,OAAP,GAAiB,SAASC,qBAAT,CAA+BC,OAA/B,EAAwCC,aAAxC,EAAuD;AACtED,UAAQE,OAAR,CAAgBC,OAAO;AACrB,UAAMC,SAAS,IAAIV,MAAJ,CAAWS,IAAIE,OAAf,CAAf;;AAEA,QAAI,CAACD,OAAOE,QAAZ,EAAsB;AACpB;AACD;;AAED,UAAMC,OAAOX,UAAUQ,OAAOI,IAAjB,CAAb;;AAEA,QAAI,CAACP,cAAcM,IAAd,CAAL,EAA0B;AACxB;AACA,YAAM,IAAIE,KAAJ,CAAW,kBAAiBL,OAAOI,IAAK,WAAxC,CAAN;AACD;AACF,GAbD;AAcD,CAfD",
      "file": "assertRequiredOptions.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst { Option } = require('commander');\nconst { camelCase } = require('lodash');\n\n// Commander.js has a 2 years old open issue to support <...> syntax\n// for options. Until that gets merged, we run the checks manually\n// https://github.com/tj/commander.js/issues/230\nmodule.exports = function assertRequiredOptions(options, passedOptions) {\n  options.forEach(opt => {\n    const option = new Option(opt.command);\n\n    if (!option.required) {\n      return;\n    }\n\n    const name = camelCase(option.long);\n\n    if (!passedOptions[name]) {\n      // Provide commander.js like error message\n      throw new Error(`error: option '${option.long}' missing`);\n    }\n  });\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/commands.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./core",
            "imported": [
              "RNConfig"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "RNConfig",
                "local": "RNConfig"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "CommandT"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "CommandT",
              "exported": "CommandT"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/commands.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/commands.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "commands.js",
      "sourceFileName": "commands.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "commands"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n'use strict';\n\nconst { getProjectCommands } = require('./core');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst documentedCommands = [\nrequire('./server/server'),\nrequire('./runIOS/runIOS'),\nrequire('./runAndroid/runAndroid'),\nrequire('./library/library'),\nrequire('./bundle/bundle'),\nrequire('./bundle/unbundle'),\nrequire('./eject/eject'),\nrequire('./link/link'),\nrequire('./link/unlink'),\nrequire('./install/install'),\nrequire('./install/uninstall'),\nrequire('./upgrade/upgrade'),\nrequire('./logAndroid/logAndroid'),\nrequire('./logIOS/logIOS'),\nrequire('./dependencies/dependencies'),\nrequire('./info/info')];\n\n\n// The user should never get here because projects are inited by\n// using `react-native-cli` from outside a project directory.\nconst undocumentedCommands = [\n{\n  name: 'init',\n  func: () => {\n    console.log([\n    'Looks like React Native project already exists in the current',\n    'folder. Run this command from a different folder or remove node_modules/react-native'].\n    join('\\n'));\n  } }];\n\n\n\nconst commands = [\n...documentedCommands,\n...undocumentedCommands,\n...getProjectCommands()];\n\n\nmodule.exports = commands;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1hbmRzLmpzIl0sIm5hbWVzIjpbImdldFByb2plY3RDb21tYW5kcyIsInJlcXVpcmUiLCJkb2N1bWVudGVkQ29tbWFuZHMiLCJ1bmRvY3VtZW50ZWRDb21tYW5kcyIsIm5hbWUiLCJmdW5jIiwiY29uc29sZSIsImxvZyIsImpvaW4iLCJjb21tYW5kcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7O0FBVUE7O0FBRUEsTUFBTSxFQUFFQSxrQkFBRixLQUF5QkMsUUFBUSxRQUFSLENBQS9COzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBeUJBLE1BQU1DLHFCQUFxQjtBQUN6QkQsUUFBUSxpQkFBUixDQUR5QjtBQUV6QkEsUUFBUSxpQkFBUixDQUZ5QjtBQUd6QkEsUUFBUSx5QkFBUixDQUh5QjtBQUl6QkEsUUFBUSxtQkFBUixDQUp5QjtBQUt6QkEsUUFBUSxpQkFBUixDQUx5QjtBQU16QkEsUUFBUSxtQkFBUixDQU55QjtBQU96QkEsUUFBUSxlQUFSLENBUHlCO0FBUXpCQSxRQUFRLGFBQVIsQ0FSeUI7QUFTekJBLFFBQVEsZUFBUixDQVR5QjtBQVV6QkEsUUFBUSxtQkFBUixDQVZ5QjtBQVd6QkEsUUFBUSxxQkFBUixDQVh5QjtBQVl6QkEsUUFBUSxtQkFBUixDQVp5QjtBQWF6QkEsUUFBUSx5QkFBUixDQWJ5QjtBQWN6QkEsUUFBUSxpQkFBUixDQWR5QjtBQWV6QkEsUUFBUSw2QkFBUixDQWZ5QjtBQWdCekJBLFFBQVEsYUFBUixDQWhCeUIsQ0FBM0I7OztBQW1CQTtBQUNBO0FBQ0EsTUFBTUUsdUJBQXVCO0FBQzNCO0FBQ0VDLFFBQU0sTUFEUjtBQUVFQyxRQUFNLE1BQU07QUFDVkMsWUFBUUMsR0FBUixDQUFZO0FBQ1YsbUVBRFU7QUFFViwwRkFGVTtBQUdWQyxRQUhVLENBR0wsSUFISyxDQUFaO0FBSUQsR0FQSCxFQUQyQixDQUE3Qjs7OztBQVlBLE1BQU1DLFdBQTRCO0FBQ2hDLEdBQUdQLGtCQUQ2QjtBQUVoQyxHQUFHQyxvQkFGNkI7QUFHaEMsR0FBR0gsb0JBSDZCLENBQWxDOzs7QUFNQVUsT0FBT0MsT0FBUCxHQUFpQkYsUUFBakIiLCJmaWxlIjoiY29tbWFuZHMuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQGZsb3dcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB7IGdldFByb2plY3RDb21tYW5kcyB9ID0gcmVxdWlyZSgnLi9jb3JlJyk7XG5cbmltcG9ydCB0eXBlIHsgUk5Db25maWcgfSBmcm9tICcuL2NvcmUnO1xuXG5leHBvcnQgdHlwZSBDb21tYW5kVCA9IHtcbiAgbmFtZTogc3RyaW5nLFxuICBkZXNjcmlwdGlvbj86IHN0cmluZyxcbiAgdXNhZ2U/OiBzdHJpbmcsXG4gIGZ1bmM6IChhcmd2OiBBcnJheTxzdHJpbmc+LCBjb25maWc6IFJOQ29uZmlnLCBhcmdzOiBPYmplY3QpID0+ID9Qcm9taXNlPHZvaWQ+LFxuICBvcHRpb25zPzogQXJyYXk8e1xuICAgIGNvbW1hbmQ6IHN0cmluZyxcbiAgICBkZXNjcmlwdGlvbj86IHN0cmluZyxcbiAgICBwYXJzZT86ICh2YWw6IHN0cmluZykgPT4gYW55LFxuICAgIGRlZmF1bHQ/OiAoKGNvbmZpZzogUk5Db25maWcpID0+IG1peGVkKSB8IG1peGVkLFxuICB9PixcbiAgZXhhbXBsZXM/OiBBcnJheTx7XG4gICAgZGVzYzogc3RyaW5nLFxuICAgIGNtZDogc3RyaW5nLFxuICB9PixcbiAgcGtnPzoge1xuICAgIHZlcnNpb246IHN0cmluZyxcbiAgICBuYW1lOiBzdHJpbmcsXG4gIH0sXG59O1xuXG5jb25zdCBkb2N1bWVudGVkQ29tbWFuZHMgPSBbXG4gIHJlcXVpcmUoJy4vc2VydmVyL3NlcnZlcicpLFxuICByZXF1aXJlKCcuL3J1bklPUy9ydW5JT1MnKSxcbiAgcmVxdWlyZSgnLi9ydW5BbmRyb2lkL3J1bkFuZHJvaWQnKSxcbiAgcmVxdWlyZSgnLi9saWJyYXJ5L2xpYnJhcnknKSxcbiAgcmVxdWlyZSgnLi9idW5kbGUvYnVuZGxlJyksXG4gIHJlcXVpcmUoJy4vYnVuZGxlL3VuYnVuZGxlJyksXG4gIHJlcXVpcmUoJy4vZWplY3QvZWplY3QnKSxcbiAgcmVxdWlyZSgnLi9saW5rL2xpbmsnKSxcbiAgcmVxdWlyZSgnLi9saW5rL3VubGluaycpLFxuICByZXF1aXJlKCcuL2luc3RhbGwvaW5zdGFsbCcpLFxuICByZXF1aXJlKCcuL2luc3RhbGwvdW5pbnN0YWxsJyksXG4gIHJlcXVpcmUoJy4vdXBncmFkZS91cGdyYWRlJyksXG4gIHJlcXVpcmUoJy4vbG9nQW5kcm9pZC9sb2dBbmRyb2lkJyksXG4gIHJlcXVpcmUoJy4vbG9nSU9TL2xvZ0lPUycpLFxuICByZXF1aXJlKCcuL2RlcGVuZGVuY2llcy9kZXBlbmRlbmNpZXMnKSxcbiAgcmVxdWlyZSgnLi9pbmZvL2luZm8nKSxcbl07XG5cbi8vIFRoZSB1c2VyIHNob3VsZCBuZXZlciBnZXQgaGVyZSBiZWNhdXNlIHByb2plY3RzIGFyZSBpbml0ZWQgYnlcbi8vIHVzaW5nIGByZWFjdC1uYXRpdmUtY2xpYCBmcm9tIG91dHNpZGUgYSBwcm9qZWN0IGRpcmVjdG9yeS5cbmNvbnN0IHVuZG9jdW1lbnRlZENvbW1hbmRzID0gW1xuICB7XG4gICAgbmFtZTogJ2luaXQnLFxuICAgIGZ1bmM6ICgpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKFtcbiAgICAgICAgJ0xvb2tzIGxpa2UgUmVhY3QgTmF0aXZlIHByb2plY3QgYWxyZWFkeSBleGlzdHMgaW4gdGhlIGN1cnJlbnQnLFxuICAgICAgICAnZm9sZGVyLiBSdW4gdGhpcyBjb21tYW5kIGZyb20gYSBkaWZmZXJlbnQgZm9sZGVyIG9yIHJlbW92ZSBub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlJyxcbiAgICAgIF0uam9pbignXFxuJykpO1xuICAgIH0sXG4gIH0sXG5dO1xuXG5jb25zdCBjb21tYW5kczogQXJyYXk8Q29tbWFuZFQ+ID0gW1xuICAuLi5kb2N1bWVudGVkQ29tbWFuZHMsXG4gIC4uLnVuZG9jdW1lbnRlZENvbW1hbmRzLFxuICAuLi5nZXRQcm9qZWN0Q29tbWFuZHMoKSxcbl07XG5cbm1vZHVsZS5leHBvcnRzID0gY29tbWFuZHM7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "commands.js"
      ],
      "names": [
        "getProjectCommands",
        "require",
        "documentedCommands",
        "undocumentedCommands",
        "name",
        "func",
        "console",
        "log",
        "join",
        "commands",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;AAUA;;AAEA,MAAM,EAAEA,kBAAF,KAAyBC,QAAQ,QAAR,CAA/B;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,MAAMC,qBAAqB;AACzBD,QAAQ,iBAAR,CADyB;AAEzBA,QAAQ,iBAAR,CAFyB;AAGzBA,QAAQ,yBAAR,CAHyB;AAIzBA,QAAQ,mBAAR,CAJyB;AAKzBA,QAAQ,iBAAR,CALyB;AAMzBA,QAAQ,mBAAR,CANyB;AAOzBA,QAAQ,eAAR,CAPyB;AAQzBA,QAAQ,aAAR,CARyB;AASzBA,QAAQ,eAAR,CATyB;AAUzBA,QAAQ,mBAAR,CAVyB;AAWzBA,QAAQ,qBAAR,CAXyB;AAYzBA,QAAQ,mBAAR,CAZyB;AAazBA,QAAQ,yBAAR,CAbyB;AAczBA,QAAQ,iBAAR,CAdyB;AAezBA,QAAQ,6BAAR,CAfyB;AAgBzBA,QAAQ,aAAR,CAhByB,CAA3B;;;AAmBA;AACA;AACA,MAAME,uBAAuB;AAC3B;AACEC,QAAM,MADR;AAEEC,QAAM,MAAM;AACVC,YAAQC,GAAR,CAAY;AACV,mEADU;AAEV,0FAFU;AAGVC,QAHU,CAGL,IAHK,CAAZ;AAID,GAPH,EAD2B,CAA7B;;;;AAYA,MAAMC,WAA4B;AAChC,GAAGP,kBAD6B;AAEhC,GAAGC,oBAF6B;AAGhC,GAAGH,oBAH6B,CAAlC;;;AAMAU,OAAOC,OAAP,GAAiBF,QAAjB",
      "file": "commands.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\nconst { getProjectCommands } = require('./core');\n\nimport type { RNConfig } from './core';\n\nexport type CommandT = {\n  name: string,\n  description?: string,\n  usage?: string,\n  func: (argv: Array<string>, config: RNConfig, args: Object) => ?Promise<void>,\n  options?: Array<{\n    command: string,\n    description?: string,\n    parse?: (val: string) => any,\n    default?: ((config: RNConfig) => mixed) | mixed,\n  }>,\n  examples?: Array<{\n    desc: string,\n    cmd: string,\n  }>,\n  pkg?: {\n    version: string,\n    name: string,\n  },\n};\n\nconst documentedCommands = [\n  require('./server/server'),\n  require('./runIOS/runIOS'),\n  require('./runAndroid/runAndroid'),\n  require('./library/library'),\n  require('./bundle/bundle'),\n  require('./bundle/unbundle'),\n  require('./eject/eject'),\n  require('./link/link'),\n  require('./link/unlink'),\n  require('./install/install'),\n  require('./install/uninstall'),\n  require('./upgrade/upgrade'),\n  require('./logAndroid/logAndroid'),\n  require('./logIOS/logIOS'),\n  require('./dependencies/dependencies'),\n  require('./info/info'),\n];\n\n// The user should never get here because projects are inited by\n// using `react-native-cli` from outside a project directory.\nconst undocumentedCommands = [\n  {\n    name: 'init',\n    func: () => {\n      console.log([\n        'Looks like React Native project already exists in the current',\n        'folder. Run this command from a different folder or remove node_modules/react-native',\n      ].join('\\n'));\n    },\n  },\n];\n\nconst commands: Array<CommandT> = [\n  ...documentedCommands,\n  ...undocumentedCommands,\n  ...getProjectCommands(),\n];\n\nmodule.exports = commands;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/server.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "objectWithoutProperties"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../core",
            "imported": [
              "RNConfig"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "RNConfig",
                "local": "RNConfig"
              }
            ]
          },
          {
            "source": "metro",
            "imported": [
              "ConfigT"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "ConfigT",
                "local": "ConfigT"
              }
            ]
          },
          {
            "source": "./runServer",
            "imported": [
              "Args"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Args",
                "local": "RunServerArgs"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/server.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/server.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "server.js",
      "sourceFileName": "server.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "server"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';function _objectWithoutProperties(obj, keys) {var target = {};for (var i in obj) {if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];}return target;}\n\nconst path = require('path');\nconst runServer = require('./runServer');\n\n\n\n\n\n/**\n                                           * Starts the React Native Packager Server.\n                                           */\nfunction server(argv, config, allArgs) {\n  const { root } = allArgs,args = _objectWithoutProperties(allArgs, ['root']);\n  args.projectRoots = args.projectRoots.concat(root);\n\n  const startedCallback = logReporter => {\n    logReporter.update({\n      type: 'initialize_started',\n      port: args.port,\n      projectRoots: args.projectRoots });\n\n\n    process.on('uncaughtException', error => {\n      logReporter.update({\n        type: 'initialize_failed',\n        port: args.port,\n        error });\n\n\n      process.exit(11);\n    });\n  };\n\n  const readyCallback = logReporter => {\n    logReporter.update({\n      type: 'initialize_done' });\n\n  };\n  const runServerArgs = args;\n  /* $FlowFixMe: ConfigT shouldn't be extendable. */\n  const configT = config;\n  runServer(runServerArgs, configT, startedCallback, readyCallback);\n}\n\nmodule.exports = {\n  name: 'start',\n  func: server,\n  description: 'starts the webserver',\n  options: [{\n    command: '--port [number]',\n    default: 8081,\n    parse: val => Number(val) },\n  {\n    command: '--host [string]',\n    default: '' },\n  {\n    command: '--root [list]',\n    description: 'add another root(s) to be used by the packager in this project',\n    parse: val => val.split(',').map(root => path.resolve(root)),\n    default: [] },\n  {\n    command: '--projectRoots [list]',\n    description: 'override the root(s) to be used by the packager',\n    parse: val => val.split(','),\n    default: config => config.getProjectRoots() },\n  {\n    command: '--assetExts [list]',\n    description: 'Specify any additional asset extensions to be used by the packager',\n    parse: val => val.split(','),\n    default: config => config.getAssetExts() },\n  {\n    command: '--sourceExts [list]',\n    description: 'Specify any additional source extensions to be used by the packager',\n    parse: val => val.split(','),\n    default: config => config.getSourceExts() },\n  {\n    command: '--platforms [list]',\n    description: 'Specify any additional platforms to be used by the packager',\n    parse: val => val.split(','),\n    default: config => config.getPlatforms() },\n  {\n    command: '--providesModuleNodeModules [list]',\n    description: 'Specify any npm packages that import dependencies with providesModule',\n    parse: val => val.split(','),\n    default: config => {\n      if (typeof config.getProvidesModuleNodeModules === 'function') {\n        return config.getProvidesModuleNodeModules();\n      }\n      return null;\n    } },\n  {\n    command: '--max-workers [number]',\n    description: 'Specifies the maximum number of workers the worker-pool ' +\n    'will spawn for transforming files. This defaults to the number of the ' +\n    'cores available on your machine.',\n    parse: workers => Number(workers) },\n  {\n    command: '--skipflow',\n    description: 'Disable flow checks' },\n  {\n    command: '--nonPersistent',\n    description: 'Disable file watcher' },\n  {\n    command: '--transformer [string]',\n    description: 'Specify a custom transformer to be used' },\n  {\n    command: '--reset-cache, --resetCache',\n    description: 'Removes cached files' },\n  {\n    command: '--custom-log-reporter-path, --customLogReporterPath [string]',\n    description: 'Path to a JavaScript file that exports a log reporter as a replacement for TerminalReporter' },\n  {\n    command: '--verbose',\n    description: 'Enables logging' },\n  {\n    command: '--https',\n    description: 'Enables https connections to the server' },\n  {\n    command: '--key [path]',\n    description: 'Path to custom SSL key' },\n  {\n    command: '--cert [path]',\n    description: 'Path to custom SSL cert' }] };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "path",
        "require",
        "runServer",
        "server",
        "argv",
        "config",
        "allArgs",
        "root",
        "args",
        "projectRoots",
        "concat",
        "startedCallback",
        "logReporter",
        "update",
        "type",
        "port",
        "process",
        "on",
        "error",
        "exit",
        "readyCallback",
        "runServerArgs",
        "configT",
        "module",
        "exports",
        "name",
        "func",
        "description",
        "options",
        "command",
        "default",
        "parse",
        "val",
        "Number",
        "split",
        "map",
        "resolve",
        "getProjectRoots",
        "getAssetExts",
        "getSourceExts",
        "getPlatforms",
        "getProvidesModuleNodeModules",
        "workers"
      ],
      "mappings": "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",
      "file": "server.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n'use strict';\n\nconst path = require('path');\nconst runServer = require('./runServer');\n\nimport type {RNConfig} from '../core';\nimport type {ConfigT} from 'metro';\nimport type {Args as RunServerArgs} from './runServer';\n\n/**\n * Starts the React Native Packager Server.\n */\nfunction server(argv: mixed, config: RNConfig, allArgs: Object) {\n  const {root, ...args} = allArgs;\n  args.projectRoots = args.projectRoots.concat(root);\n\n  const startedCallback = logReporter => {\n    logReporter.update({\n      type: 'initialize_started',\n      port: args.port,\n      projectRoots: args.projectRoots,\n    });\n\n    process.on('uncaughtException', error => {\n      logReporter.update({\n        type: 'initialize_failed',\n        port: args.port,\n        error,\n      });\n\n      process.exit(11);\n    });\n  };\n\n  const readyCallback = logReporter => {\n    logReporter.update({\n      type: 'initialize_done',\n    });\n  };\n  const runServerArgs: RunServerArgs = args;\n  /* $FlowFixMe: ConfigT shouldn't be extendable. */\n  const configT: ConfigT = config;\n  runServer(runServerArgs, configT, startedCallback, readyCallback);\n}\n\nmodule.exports = {\n  name: 'start',\n  func: server,\n  description: 'starts the webserver',\n  options: [{\n    command: '--port [number]',\n    default: 8081,\n    parse: (val: string) => Number(val),\n  }, {\n    command: '--host [string]',\n    default: '',\n  }, {\n    command: '--root [list]',\n    description: 'add another root(s) to be used by the packager in this project',\n    parse: (val: string) => val.split(',').map(root => path.resolve(root)),\n    default: [],\n  }, {\n    command: '--projectRoots [list]',\n    description: 'override the root(s) to be used by the packager',\n    parse: (val: string) => val.split(','),\n    default: (config: ConfigT) => config.getProjectRoots(),\n  }, {\n    command: '--assetExts [list]',\n    description: 'Specify any additional asset extensions to be used by the packager',\n    parse: (val: string) => val.split(','),\n    default: (config: ConfigT) => config.getAssetExts(),\n  }, {\n    command: '--sourceExts [list]',\n    description: 'Specify any additional source extensions to be used by the packager',\n    parse: (val: string) => val.split(','),\n    default: (config: ConfigT) => config.getSourceExts(),\n  }, {\n    command: '--platforms [list]',\n    description: 'Specify any additional platforms to be used by the packager',\n    parse: (val: string) => val.split(','),\n    default: (config: ConfigT) => config.getPlatforms(),\n  }, {\n    command: '--providesModuleNodeModules [list]',\n    description: 'Specify any npm packages that import dependencies with providesModule',\n    parse: (val: string) => val.split(','),\n    default: (config: RNConfig) => {\n      if (typeof config.getProvidesModuleNodeModules === 'function') {\n        return config.getProvidesModuleNodeModules();\n      }\n      return null;\n    },\n  }, {\n    command: '--max-workers [number]',\n    description: 'Specifies the maximum number of workers the worker-pool ' +\n      'will spawn for transforming files. This defaults to the number of the ' +\n      'cores available on your machine.',\n    parse: (workers: string) => Number(workers),\n  }, {\n    command: '--skipflow',\n    description: 'Disable flow checks'\n  }, {\n    command: '--nonPersistent',\n    description: 'Disable file watcher'\n  }, {\n    command: '--transformer [string]',\n    description: 'Specify a custom transformer to be used'\n  }, {\n    command: '--reset-cache, --resetCache',\n    description: 'Removes cached files',\n  }, {\n    command: '--custom-log-reporter-path, --customLogReporterPath [string]',\n    description: 'Path to a JavaScript file that exports a log reporter as a replacement for TerminalReporter',\n  }, {\n    command: '--verbose',\n    description: 'Enables logging',\n  }, {\n    command: '--https',\n    description: 'Enables https connections to the server',\n  }, {\n    command: '--key [path]',\n    description: 'Path to custom SSL key',\n  }, {\n    command: '--cert [path]',\n    description: 'Path to custom SSL cert',\n  }],\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/runServer.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "metro",
            "imported": [
              "ConfigT"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "ConfigT",
                "local": "ConfigT"
              }
            ]
          },
          {
            "source": "metro/src/lib/reporting",
            "imported": [
              "Reporter"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Reporter",
                "local": "Reporter"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "Args"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "Args",
              "exported": "Args"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/runServer.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/runServer.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "runServer.js",
      "sourceFileName": "runServer.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "runServer"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n * @format\n */\n\n'use strict';\n\nrequire('../../setupBabel')();\n\nconst Metro = require('metro');\n\nconst HmrServer = require('metro/src/HmrServer');\n\nconst { Terminal } = require('metro-core');\n\nconst attachWebsocketServer = require('./util/attachWebsocketServer');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n                                                                        * found when Flow v0.54 was deployed. To see the error delete this comment and\n                                                                        * run Flow. */\nconst connect = require('connect');\nconst copyToClipBoardMiddleware = require('./middleware/copyToClipBoardMiddleware');\nconst defaultAssetExts = Metro.defaults.assetExts;\nconst defaultSourceExts = Metro.defaults.sourceExts;\nconst defaultPlatforms = Metro.defaults.platforms;\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n                                                    * found when Flow v0.54 was deployed. To see the error delete this comment and\n                                                    * run Flow. */\nconst defaultProvidesModuleNodeModules =\nMetro.defaults.providesModuleNodeModules;\nconst fs = require('fs');\nconst getDevToolsMiddleware = require('./middleware/getDevToolsMiddleware');\nconst http = require('http');\nconst https = require('https');\nconst indexPageMiddleware = require('./middleware/indexPage');\nconst loadRawBodyMiddleware = require('./middleware/loadRawBodyMiddleware');\nconst messageSocket = require('./util/messageSocket.js');\nconst openStackFrameInEditorMiddleware = require('./middleware/openStackFrameInEditorMiddleware');\nconst path = require('path');\nconst statusPageMiddleware = require('./middleware/statusPageMiddleware.js');\nconst systraceProfileMiddleware = require('./middleware/systraceProfileMiddleware.js');\nconst webSocketProxy = require('./util/webSocketProxy.js');\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n                                                             * found when Flow v0.54 was deployed. To see the error delete this comment and\n                                                             * run Flow. */\nconst TransformCaching = require('metro/src/lib/TransformCaching');\n\nconst { ASSET_REGISTRY_PATH } = require('../core/Constants');\n\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n                                                               * found when Flow v0.54 was deployed. To see the error delete this comment and\n                                                               * run Flow. */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction runServer(\nargs,\nconfig,\n// FIXME: this is weird design. The top-level should pass down a custom\n\nstartedCallback,\nreadyCallback)\n{\n  var wsProxy = null;\n  var ms = null;\n\n  const terminal = new Terminal(process.stdout);\n  const ReporterImpl = getReporterImpl(args.customLogReporterPath || null);\n  const reporter = new ReporterImpl(terminal);\n  const packagerServer = getPackagerServer(args, config, reporter);\n  startedCallback(reporter);\n\n  const app = connect().\n  use(loadRawBodyMiddleware).\n  use(connect.compress()).\n  use(\n  '/debugger-ui',\n  connect.static(path.join(__dirname, 'util', 'debugger-ui'))).\n\n  use(\n  getDevToolsMiddleware(args, () => wsProxy && wsProxy.isChromeConnected())).\n\n  use(getDevToolsMiddleware(args, () => ms && ms.isChromeConnected())).\n  use(openStackFrameInEditorMiddleware(args)).\n  use(copyToClipBoardMiddleware).\n  use(statusPageMiddleware).\n  use(systraceProfileMiddleware).\n  use(indexPageMiddleware).\n  use(packagerServer.processRequest.bind(packagerServer));\n\n  args.projectRoots.forEach(root => app.use(connect.static(root)));\n\n  app.use(connect.logger()).use(connect.errorHandler());\n\n  if (args.https && (!args.key || !args.cert)) {\n    throw new Error('Cannot use https without specifying key and cert options');\n  }\n\n  const serverInstance = args.https ?\n  https.createServer(\n  {\n    key: fs.readFileSync(args.key),\n    cert: fs.readFileSync(args.cert) },\n\n  app) :\n\n  http.createServer(app);\n\n  serverInstance.listen(args.port, args.host, 511, function () {\n    attachWebsocketServer({\n      httpServer: serverInstance,\n      path: '/hot',\n      websocketServer: new HmrServer(packagerServer, reporter) });\n\n\n    wsProxy = webSocketProxy.attachToServer(serverInstance, '/debugger-proxy');\n    ms = messageSocket.attachToServer(serverInstance, '/message');\n    readyCallback(reporter);\n  });\n  // Disable any kind of automatic timeout behavior for incoming\n  // requests in case it takes the packager more than the default\n  // timeout of 120 seconds to respond to a request.\n  serverInstance.timeout = 0;\n}\n\nfunction getReporterImpl(customLogReporterPath) {\n  if (customLogReporterPath == null) {\n    return require('metro/src/lib/TerminalReporter');\n  }\n  try {\n    // First we let require resolve it, so we can require packages in node_modules\n    // as expected. eg: require('my-package/reporter');\n    /* $FlowFixMe: can't type dynamic require */\n    return require(customLogReporterPath);\n  } catch (e) {\n    if (e.code !== 'MODULE_NOT_FOUND') {\n      throw e;\n    }\n    // If that doesn't work, then we next try relative to the cwd, eg:\n    // require('./reporter');\n    /* $FlowFixMe: can't type dynamic require */\n    return require(path.resolve(customLogReporterPath));\n  }\n}\n\nfunction getPackagerServer(args, config, reporter) {\n  const transformModulePath = args.transformer ?\n  path.resolve(args.transformer) :\n  config.getTransformModulePath();\n\n  const providesModuleNodeModules =\n  args.providesModuleNodeModules || defaultProvidesModuleNodeModules;\n\n  return Metro.createServer({\n    assetExts: defaultAssetExts.concat(args.assetExts),\n    assetRegistryPath: ASSET_REGISTRY_PATH,\n    blacklistRE: config.getBlacklistRE(),\n    cacheVersion: '3',\n    enableBabelRCLookup: config.getEnableBabelRCLookup(),\n    extraNodeModules: config.extraNodeModules,\n    getModulesRunBeforeMainModule: config.getModulesRunBeforeMainModule,\n    getPolyfills: config.getPolyfills,\n    getTransformOptions: config.getTransformOptions,\n    globalTransformCache: null,\n    hasteImpl: config.hasteImpl,\n    maxWorkers: args.maxWorkers,\n    platforms: defaultPlatforms.concat(args.platforms),\n    polyfillModuleNames: config.getPolyfillModuleNames(),\n    postMinifyProcess: config.postMinifyProcess,\n    postProcessBundleSourcemap: config.postProcessBundleSourcemap,\n    postProcessModules: config.postProcessModules,\n    projectRoots: args.projectRoots,\n    providesModuleNodeModules: providesModuleNodeModules,\n    reporter,\n    resetCache: args.resetCache,\n    sourceExts: defaultSourceExts.concat(args.sourceExts),\n    transformModulePath: transformModulePath,\n    transformCache: TransformCaching.useTempDir(),\n    verbose: args.verbose,\n    watch: !args.nonPersistent,\n    workerPath: config.getWorkerPath() });\n\n}\n\nmodule.exports = runServer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "runServer.js"
      ],
      "names": [
        "require",
        "Metro",
        "HmrServer",
        "Terminal",
        "attachWebsocketServer",
        "connect",
        "copyToClipBoardMiddleware",
        "defaultAssetExts",
        "defaults",
        "assetExts",
        "defaultSourceExts",
        "sourceExts",
        "defaultPlatforms",
        "platforms",
        "defaultProvidesModuleNodeModules",
        "providesModuleNodeModules",
        "fs",
        "getDevToolsMiddleware",
        "http",
        "https",
        "indexPageMiddleware",
        "loadRawBodyMiddleware",
        "messageSocket",
        "openStackFrameInEditorMiddleware",
        "path",
        "statusPageMiddleware",
        "systraceProfileMiddleware",
        "webSocketProxy",
        "TransformCaching",
        "ASSET_REGISTRY_PATH",
        "runServer",
        "args",
        "config",
        "startedCallback",
        "readyCallback",
        "wsProxy",
        "ms",
        "terminal",
        "process",
        "stdout",
        "ReporterImpl",
        "getReporterImpl",
        "customLogReporterPath",
        "reporter",
        "packagerServer",
        "getPackagerServer",
        "app",
        "use",
        "compress",
        "static",
        "join",
        "__dirname",
        "isChromeConnected",
        "processRequest",
        "bind",
        "projectRoots",
        "forEach",
        "root",
        "logger",
        "errorHandler",
        "key",
        "cert",
        "Error",
        "serverInstance",
        "createServer",
        "readFileSync",
        "listen",
        "port",
        "host",
        "httpServer",
        "websocketServer",
        "attachToServer",
        "timeout",
        "e",
        "code",
        "resolve",
        "transformModulePath",
        "transformer",
        "getTransformModulePath",
        "concat",
        "assetRegistryPath",
        "blacklistRE",
        "getBlacklistRE",
        "cacheVersion",
        "enableBabelRCLookup",
        "getEnableBabelRCLookup",
        "extraNodeModules",
        "getModulesRunBeforeMainModule",
        "getPolyfills",
        "getTransformOptions",
        "globalTransformCache",
        "hasteImpl",
        "maxWorkers",
        "polyfillModuleNames",
        "getPolyfillModuleNames",
        "postMinifyProcess",
        "postProcessBundleSourcemap",
        "postProcessModules",
        "resetCache",
        "transformCache",
        "useTempDir",
        "verbose",
        "watch",
        "nonPersistent",
        "workerPath",
        "getWorkerPath",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "runServer.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nrequire('../../setupBabel')();\n\nconst Metro = require('metro');\n\nconst HmrServer = require('metro/src/HmrServer');\n\nconst {Terminal} = require('metro-core');\n\nconst attachWebsocketServer = require('./util/attachWebsocketServer');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst connect = require('connect');\nconst copyToClipBoardMiddleware = require('./middleware/copyToClipBoardMiddleware');\nconst defaultAssetExts = Metro.defaults.assetExts;\nconst defaultSourceExts = Metro.defaults.sourceExts;\nconst defaultPlatforms = Metro.defaults.platforms;\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst defaultProvidesModuleNodeModules =\n  Metro.defaults.providesModuleNodeModules;\nconst fs = require('fs');\nconst getDevToolsMiddleware = require('./middleware/getDevToolsMiddleware');\nconst http = require('http');\nconst https = require('https');\nconst indexPageMiddleware = require('./middleware/indexPage');\nconst loadRawBodyMiddleware = require('./middleware/loadRawBodyMiddleware');\nconst messageSocket = require('./util/messageSocket.js');\nconst openStackFrameInEditorMiddleware = require('./middleware/openStackFrameInEditorMiddleware');\nconst path = require('path');\nconst statusPageMiddleware = require('./middleware/statusPageMiddleware.js');\nconst systraceProfileMiddleware = require('./middleware/systraceProfileMiddleware.js');\nconst webSocketProxy = require('./util/webSocketProxy.js');\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst TransformCaching = require('metro/src/lib/TransformCaching');\n\nconst {ASSET_REGISTRY_PATH} = require('../core/Constants');\n\nimport type {ConfigT} from 'metro';\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nimport type {Reporter} from 'metro/src/lib/reporting';\n\nexport type Args = {|\n  +assetExts: $ReadOnlyArray<string>,\n  +host: string,\n  +maxWorkers: number,\n  +nonPersistent: boolean,\n  +platforms: $ReadOnlyArray<string>,\n  +port: number,\n  +projectRoots: $ReadOnlyArray<string>,\n  +resetCache: boolean,\n  +sourceExts: $ReadOnlyArray<string>,\n  +verbose: boolean,\n|};\n\nfunction runServer(\n  args: Args,\n  config: ConfigT,\n  // FIXME: this is weird design. The top-level should pass down a custom\n  // reporter rather than passing it up as argument to an event.\n  startedCallback: (reporter: Reporter) => mixed,\n  readyCallback: (reporter: Reporter) => mixed,\n) {\n  var wsProxy = null;\n  var ms = null;\n\n  const terminal = new Terminal(process.stdout);\n  const ReporterImpl = getReporterImpl(args.customLogReporterPath || null);\n  const reporter = new ReporterImpl(terminal);\n  const packagerServer = getPackagerServer(args, config, reporter);\n  startedCallback(reporter);\n\n  const app = connect()\n    .use(loadRawBodyMiddleware)\n    .use(connect.compress())\n    .use(\n      '/debugger-ui',\n      connect.static(path.join(__dirname, 'util', 'debugger-ui')),\n    )\n    .use(\n      getDevToolsMiddleware(args, () => wsProxy && wsProxy.isChromeConnected()),\n    )\n    .use(getDevToolsMiddleware(args, () => ms && ms.isChromeConnected()))\n    .use(openStackFrameInEditorMiddleware(args))\n    .use(copyToClipBoardMiddleware)\n    .use(statusPageMiddleware)\n    .use(systraceProfileMiddleware)\n    .use(indexPageMiddleware)\n    .use(packagerServer.processRequest.bind(packagerServer));\n\n  args.projectRoots.forEach(root => app.use(connect.static(root)));\n\n  app.use(connect.logger()).use(connect.errorHandler());\n\n  if (args.https && (!args.key || !args.cert)) {\n    throw new Error('Cannot use https without specifying key and cert options');\n  }\n\n  const serverInstance = args.https\n    ? https.createServer(\n        {\n          key: fs.readFileSync(args.key),\n          cert: fs.readFileSync(args.cert),\n        },\n        app,\n      )\n    : http.createServer(app);\n\n  serverInstance.listen(args.port, args.host, 511, function() {\n    attachWebsocketServer({\n      httpServer: serverInstance,\n      path: '/hot',\n      websocketServer: new HmrServer(packagerServer, reporter),\n    });\n\n    wsProxy = webSocketProxy.attachToServer(serverInstance, '/debugger-proxy');\n    ms = messageSocket.attachToServer(serverInstance, '/message');\n    readyCallback(reporter);\n  });\n  // Disable any kind of automatic timeout behavior for incoming\n  // requests in case it takes the packager more than the default\n  // timeout of 120 seconds to respond to a request.\n  serverInstance.timeout = 0;\n}\n\nfunction getReporterImpl(customLogReporterPath: ?string) {\n  if (customLogReporterPath == null) {\n    return require('metro/src/lib/TerminalReporter');\n  }\n  try {\n    // First we let require resolve it, so we can require packages in node_modules\n    // as expected. eg: require('my-package/reporter');\n    /* $FlowFixMe: can't type dynamic require */\n    return require(customLogReporterPath);\n  } catch (e) {\n    if (e.code !== 'MODULE_NOT_FOUND') {\n      throw e;\n    }\n    // If that doesn't work, then we next try relative to the cwd, eg:\n    // require('./reporter');\n    /* $FlowFixMe: can't type dynamic require */\n    return require(path.resolve(customLogReporterPath));\n  }\n}\n\nfunction getPackagerServer(args, config, reporter) {\n  const transformModulePath = args.transformer\n    ? path.resolve(args.transformer)\n    : config.getTransformModulePath();\n\n  const providesModuleNodeModules =\n    args.providesModuleNodeModules || defaultProvidesModuleNodeModules;\n\n  return Metro.createServer({\n    assetExts: defaultAssetExts.concat(args.assetExts),\n    assetRegistryPath: ASSET_REGISTRY_PATH,\n    blacklistRE: config.getBlacklistRE(),\n    cacheVersion: '3',\n    enableBabelRCLookup: config.getEnableBabelRCLookup(),\n    extraNodeModules: config.extraNodeModules,\n    getModulesRunBeforeMainModule: config.getModulesRunBeforeMainModule,\n    getPolyfills: config.getPolyfills,\n    getTransformOptions: config.getTransformOptions,\n    globalTransformCache: null,\n    hasteImpl: config.hasteImpl,\n    maxWorkers: args.maxWorkers,\n    platforms: defaultPlatforms.concat(args.platforms),\n    polyfillModuleNames: config.getPolyfillModuleNames(),\n    postMinifyProcess: config.postMinifyProcess,\n    postProcessBundleSourcemap: config.postProcessBundleSourcemap,\n    postProcessModules: config.postProcessModules,\n    projectRoots: args.projectRoots,\n    providesModuleNodeModules: providesModuleNodeModules,\n    reporter,\n    resetCache: args.resetCache,\n    sourceExts: defaultSourceExts.concat(args.sourceExts),\n    transformModulePath: transformModulePath,\n    transformCache: TransformCaching.useTempDir(),\n    verbose: args.verbose,\n    watch: !args.nonPersistent,\n    workerPath: config.getWorkerPath(),\n  });\n}\n\nmodule.exports = runServer;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/attachWebsocketServer.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "http",
            "imported": [
              "Server"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Server",
                "local": "HTTPServer"
              }
            ]
          },
          {
            "source": "https",
            "imported": [
              "Server"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "Server",
                "local": "HTTPSServer"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/attachWebsocketServer.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/attachWebsocketServer.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "attachWebsocketServer.js",
      "sourceFileName": "attachWebsocketServer.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "attachWebsocketServer"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @format\n * \n */\n\n'use strict';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n               * Attaches a WebSocket based connection to the Packager to expose\n               * Hot Module Replacement updates to the simulator.\n               */\nfunction attachWebsocketServer({\n  httpServer,\n  websocketServer,\n  path })\n{\n  const WebSocketServer = require('ws').Server;\n  const wss = new WebSocketServer({\n    server: httpServer,\n    path: path });\n\n\n  wss.on('connection', async ws => {\n    let connected = true;\n    const url = ws.upgradeReq.url;\n\n    const sendFn = (...args) => {\n      if (connected) {\n        ws.send(...args);\n      }\n    };\n\n    const client = await websocketServer.onClientConnect(url, sendFn);\n\n    ws.on('error', e => {\n      websocketServer.onClientError && websocketServer.onClientError(client, e);\n    });\n\n    ws.on('close', () => {\n      websocketServer.onClientDisconnect &&\n      websocketServer.onClientDisconnect(client);\n      connected = false;\n    });\n\n    ws.on('message', message => {\n      websocketServer.onClientMessage &&\n      websocketServer.onClientMessage(client, message);\n    });\n  });\n}\n\nmodule.exports = attachWebsocketServer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0dGFjaFdlYnNvY2tldFNlcnZlci5qcyJdLCJuYW1lcyI6WyJhdHRhY2hXZWJzb2NrZXRTZXJ2ZXIiLCJodHRwU2VydmVyIiwid2Vic29ja2V0U2VydmVyIiwicGF0aCIsIldlYlNvY2tldFNlcnZlciIsInJlcXVpcmUiLCJTZXJ2ZXIiLCJ3c3MiLCJzZXJ2ZXIiLCJvbiIsIndzIiwiY29ubmVjdGVkIiwidXJsIiwidXBncmFkZVJlcSIsInNlbmRGbiIsImFyZ3MiLCJzZW5kIiwiY2xpZW50Iiwib25DbGllbnRDb25uZWN0IiwiZSIsIm9uQ2xpZW50RXJyb3IiLCJvbkNsaWVudERpc2Nvbm5lY3QiLCJtZXNzYWdlIiwib25DbGllbnRNZXNzYWdlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7OztBQVlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxQkE7Ozs7QUFJQSxTQUFTQSxxQkFBVCxDQUFnRDtBQUM5Q0MsWUFEOEM7QUFFOUNDLGlCQUY4QztBQUc5Q0MsTUFIOEMsRUFBaEQ7QUFJd0I7QUFDdEIsUUFBTUMsa0JBQWtCQyxRQUFRLElBQVIsRUFBY0MsTUFBdEM7QUFDQSxRQUFNQyxNQUFNLElBQUlILGVBQUosQ0FBb0I7QUFDOUJJLFlBQVFQLFVBRHNCO0FBRTlCRSxVQUFNQSxJQUZ3QixFQUFwQixDQUFaOzs7QUFLQUksTUFBSUUsRUFBSixDQUFPLFlBQVAsRUFBcUIsTUFBTUMsRUFBTixJQUFZO0FBQy9CLFFBQUlDLFlBQVksSUFBaEI7QUFDQSxVQUFNQyxNQUFNRixHQUFHRyxVQUFILENBQWNELEdBQTFCOztBQUVBLFVBQU1FLFNBQVMsQ0FBQyxHQUFHQyxJQUFKLEtBQWE7QUFDMUIsVUFBSUosU0FBSixFQUFlO0FBQ2JELFdBQUdNLElBQUgsQ0FBUSxHQUFHRCxJQUFYO0FBQ0Q7QUFDRixLQUpEOztBQU1BLFVBQU1FLFNBQVMsTUFBTWYsZ0JBQWdCZ0IsZUFBaEIsQ0FBZ0NOLEdBQWhDLEVBQXFDRSxNQUFyQyxDQUFyQjs7QUFFQUosT0FBR0QsRUFBSCxDQUFNLE9BQU4sRUFBZVUsS0FBSztBQUNsQmpCLHNCQUFnQmtCLGFBQWhCLElBQWlDbEIsZ0JBQWdCa0IsYUFBaEIsQ0FBOEJILE1BQTlCLEVBQXNDRSxDQUF0QyxDQUFqQztBQUNELEtBRkQ7O0FBSUFULE9BQUdELEVBQUgsQ0FBTSxPQUFOLEVBQWUsTUFBTTtBQUNuQlAsc0JBQWdCbUIsa0JBQWhCO0FBQ0VuQixzQkFBZ0JtQixrQkFBaEIsQ0FBbUNKLE1BQW5DLENBREY7QUFFQU4sa0JBQVksS0FBWjtBQUNELEtBSkQ7O0FBTUFELE9BQUdELEVBQUgsQ0FBTSxTQUFOLEVBQWlCYSxXQUFXO0FBQzFCcEIsc0JBQWdCcUIsZUFBaEI7QUFDRXJCLHNCQUFnQnFCLGVBQWhCLENBQWdDTixNQUFoQyxFQUF3Q0ssT0FBeEMsQ0FERjtBQUVELEtBSEQ7QUFJRCxHQTFCRDtBQTJCRDs7QUFFREUsT0FBT0MsT0FBUCxHQUFpQnpCLHFCQUFqQiIsImZpbGUiOiJhdHRhY2hXZWJzb2NrZXRTZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvc2VydmVyL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQGZvcm1hdFxuICogQGZsb3dcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmltcG9ydCB0eXBlIHtTZXJ2ZXIgYXMgSFRUUFNlcnZlcn0gZnJvbSAnaHR0cCc7XG5pbXBvcnQgdHlwZSB7U2VydmVyIGFzIEhUVFBTU2VydmVyfSBmcm9tICdodHRwcyc7XG5cbnR5cGUgV2Vic29ja2V0U2VydmljZUludGVyZmFjZTxUPiA9IHtcbiAgK29uQ2xpZW50Q29ubmVjdDogKFxuICAgIHVybDogc3RyaW5nLFxuICAgIHNlbmRGbjogKGRhdGE6IHN0cmluZykgPT4gbWl4ZWQsXG4gICkgPT4gUHJvbWlzZTxUPixcbiAgK29uQ2xpZW50RGlzY29ubmVjdD86IChjbGllbnQ6IFQpID0+IG1peGVkLFxuICArb25DbGllbnRFcnJvcj86IChjbGllbnQ6IFQsIGU6IEVycm9yKSA9PiBtaXhlZCxcbiAgK29uQ2xpZW50TWVzc2FnZT86IChjbGllbnQ6IFQsIG1lc3NhZ2U6IHN0cmluZykgPT4gbWl4ZWQsXG59O1xuXG50eXBlIEhNUk9wdGlvbnM8VENsaWVudD4gPSB7XG4gIGh0dHBTZXJ2ZXI6IEhUVFBTZXJ2ZXIgfCBIVFRQU1NlcnZlcixcbiAgd2Vic29ja2V0U2VydmVyOiBXZWJzb2NrZXRTZXJ2aWNlSW50ZXJmYWNlPFRDbGllbnQ+LFxuICBwYXRoOiBzdHJpbmcsXG59O1xuXG4vKipcbiAqIEF0dGFjaGVzIGEgV2ViU29ja2V0IGJhc2VkIGNvbm5lY3Rpb24gdG8gdGhlIFBhY2thZ2VyIHRvIGV4cG9zZVxuICogSG90IE1vZHVsZSBSZXBsYWNlbWVudCB1cGRhdGVzIHRvIHRoZSBzaW11bGF0b3IuXG4gKi9cbmZ1bmN0aW9uIGF0dGFjaFdlYnNvY2tldFNlcnZlcjxUQ2xpZW50OiBPYmplY3Q+KHtcbiAgaHR0cFNlcnZlcixcbiAgd2Vic29ja2V0U2VydmVyLFxuICBwYXRoLFxufTogSE1ST3B0aW9uczxUQ2xpZW50Pikge1xuICBjb25zdCBXZWJTb2NrZXRTZXJ2ZXIgPSByZXF1aXJlKCd3cycpLlNlcnZlcjtcbiAgY29uc3Qgd3NzID0gbmV3IFdlYlNvY2tldFNlcnZlcih7XG4gICAgc2VydmVyOiBodHRwU2VydmVyLFxuICAgIHBhdGg6IHBhdGgsXG4gIH0pO1xuXG4gIHdzcy5vbignY29ubmVjdGlvbicsIGFzeW5jIHdzID0+IHtcbiAgICBsZXQgY29ubmVjdGVkID0gdHJ1ZTtcbiAgICBjb25zdCB1cmwgPSB3cy51cGdyYWRlUmVxLnVybDtcblxuICAgIGNvbnN0IHNlbmRGbiA9ICguLi5hcmdzKSA9PiB7XG4gICAgICBpZiAoY29ubmVjdGVkKSB7XG4gICAgICAgIHdzLnNlbmQoLi4uYXJncyk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IGNsaWVudCA9IGF3YWl0IHdlYnNvY2tldFNlcnZlci5vbkNsaWVudENvbm5lY3QodXJsLCBzZW5kRm4pO1xuXG4gICAgd3Mub24oJ2Vycm9yJywgZSA9PiB7XG4gICAgICB3ZWJzb2NrZXRTZXJ2ZXIub25DbGllbnRFcnJvciAmJiB3ZWJzb2NrZXRTZXJ2ZXIub25DbGllbnRFcnJvcihjbGllbnQsIGUpO1xuICAgIH0pO1xuXG4gICAgd3Mub24oJ2Nsb3NlJywgKCkgPT4ge1xuICAgICAgd2Vic29ja2V0U2VydmVyLm9uQ2xpZW50RGlzY29ubmVjdCAmJlxuICAgICAgICB3ZWJzb2NrZXRTZXJ2ZXIub25DbGllbnREaXNjb25uZWN0KGNsaWVudCk7XG4gICAgICBjb25uZWN0ZWQgPSBmYWxzZTtcbiAgICB9KTtcblxuICAgIHdzLm9uKCdtZXNzYWdlJywgbWVzc2FnZSA9PiB7XG4gICAgICB3ZWJzb2NrZXRTZXJ2ZXIub25DbGllbnRNZXNzYWdlICYmXG4gICAgICAgIHdlYnNvY2tldFNlcnZlci5vbkNsaWVudE1lc3NhZ2UoY2xpZW50LCBtZXNzYWdlKTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXR0YWNoV2Vic29ja2V0U2VydmVyO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "attachWebsocketServer.js"
      ],
      "names": [
        "attachWebsocketServer",
        "httpServer",
        "websocketServer",
        "path",
        "WebSocketServer",
        "require",
        "Server",
        "wss",
        "server",
        "on",
        "ws",
        "connected",
        "url",
        "upgradeReq",
        "sendFn",
        "args",
        "send",
        "client",
        "onClientConnect",
        "e",
        "onClientError",
        "onClientDisconnect",
        "message",
        "onClientMessage",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;AAIA,SAASA,qBAAT,CAAgD;AAC9CC,YAD8C;AAE9CC,iBAF8C;AAG9CC,MAH8C,EAAhD;AAIwB;AACtB,QAAMC,kBAAkBC,QAAQ,IAAR,EAAcC,MAAtC;AACA,QAAMC,MAAM,IAAIH,eAAJ,CAAoB;AAC9BI,YAAQP,UADsB;AAE9BE,UAAMA,IAFwB,EAApB,CAAZ;;;AAKAI,MAAIE,EAAJ,CAAO,YAAP,EAAqB,MAAMC,EAAN,IAAY;AAC/B,QAAIC,YAAY,IAAhB;AACA,UAAMC,MAAMF,GAAGG,UAAH,CAAcD,GAA1B;;AAEA,UAAME,SAAS,CAAC,GAAGC,IAAJ,KAAa;AAC1B,UAAIJ,SAAJ,EAAe;AACbD,WAAGM,IAAH,CAAQ,GAAGD,IAAX;AACD;AACF,KAJD;;AAMA,UAAME,SAAS,MAAMf,gBAAgBgB,eAAhB,CAAgCN,GAAhC,EAAqCE,MAArC,CAArB;;AAEAJ,OAAGD,EAAH,CAAM,OAAN,EAAeU,KAAK;AAClBjB,sBAAgBkB,aAAhB,IAAiClB,gBAAgBkB,aAAhB,CAA8BH,MAA9B,EAAsCE,CAAtC,CAAjC;AACD,KAFD;;AAIAT,OAAGD,EAAH,CAAM,OAAN,EAAe,MAAM;AACnBP,sBAAgBmB,kBAAhB;AACEnB,sBAAgBmB,kBAAhB,CAAmCJ,MAAnC,CADF;AAEAN,kBAAY,KAAZ;AACD,KAJD;;AAMAD,OAAGD,EAAH,CAAM,SAAN,EAAiBa,WAAW;AAC1BpB,sBAAgBqB,eAAhB;AACErB,sBAAgBqB,eAAhB,CAAgCN,MAAhC,EAAwCK,OAAxC,CADF;AAED,KAHD;AAID,GA1BD;AA2BD;;AAEDE,OAAOC,OAAP,GAAiBzB,qBAAjB",
      "file": "attachWebsocketServer.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type {Server as HTTPServer} from 'http';\nimport type {Server as HTTPSServer} from 'https';\n\ntype WebsocketServiceInterface<T> = {\n  +onClientConnect: (\n    url: string,\n    sendFn: (data: string) => mixed,\n  ) => Promise<T>,\n  +onClientDisconnect?: (client: T) => mixed,\n  +onClientError?: (client: T, e: Error) => mixed,\n  +onClientMessage?: (client: T, message: string) => mixed,\n};\n\ntype HMROptions<TClient> = {\n  httpServer: HTTPServer | HTTPSServer,\n  websocketServer: WebsocketServiceInterface<TClient>,\n  path: string,\n};\n\n/**\n * Attaches a WebSocket based connection to the Packager to expose\n * Hot Module Replacement updates to the simulator.\n */\nfunction attachWebsocketServer<TClient: Object>({\n  httpServer,\n  websocketServer,\n  path,\n}: HMROptions<TClient>) {\n  const WebSocketServer = require('ws').Server;\n  const wss = new WebSocketServer({\n    server: httpServer,\n    path: path,\n  });\n\n  wss.on('connection', async ws => {\n    let connected = true;\n    const url = ws.upgradeReq.url;\n\n    const sendFn = (...args) => {\n      if (connected) {\n        ws.send(...args);\n      }\n    };\n\n    const client = await websocketServer.onClientConnect(url, sendFn);\n\n    ws.on('error', e => {\n      websocketServer.onClientError && websocketServer.onClientError(client, e);\n    });\n\n    ws.on('close', () => {\n      websocketServer.onClientDisconnect &&\n        websocketServer.onClientDisconnect(client);\n      connected = false;\n    });\n\n    ws.on('message', message => {\n      websocketServer.onClientMessage &&\n        websocketServer.onClientMessage(client, message);\n    });\n  });\n}\n\nmodule.exports = attachWebsocketServer;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/copyToClipBoardMiddleware.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/copyToClipBoardMiddleware.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/copyToClipBoardMiddleware.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "copyToClipBoardMiddleware.js",
      "sourceFileName": "copyToClipBoardMiddleware.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "copyToClipBoardMiddleware"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst copyToClipBoard = require('../util/copyToClipBoard');\nvar chalk = require('chalk');\n\n/**\n                               * Handle the request from JS to copy contents onto host system clipboard.\n                               * This is only supported on Mac for now.\n                               */\nmodule.exports = function (req, res, next) {\n  if (req.url === '/copy-to-clipboard') {\n    var ret = copyToClipBoard(req.rawBody);\n    if (!ret) {\n      console.warn(chalk.red('Copy button is not supported on this platform!'));\n    }\n    res.end('OK');\n  } else {\n    next();\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcHlUb0NsaXBCb2FyZE1pZGRsZXdhcmUuanMiXSwibmFtZXMiOlsiY29weVRvQ2xpcEJvYXJkIiwicmVxdWlyZSIsImNoYWxrIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcSIsInJlcyIsIm5leHQiLCJ1cmwiLCJyZXQiLCJyYXdCb2R5IiwiY29uc29sZSIsIndhcm4iLCJyZWQiLCJlbmQiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLE1BQU1BLGtCQUFrQkMsUUFBUSx5QkFBUixDQUF4QjtBQUNBLElBQUlDLFFBQVFELFFBQVEsT0FBUixDQUFaOztBQUVBOzs7O0FBSUFFLE9BQU9DLE9BQVAsR0FBaUIsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUN4QyxNQUFJRixJQUFJRyxHQUFKLEtBQVksb0JBQWhCLEVBQXNDO0FBQ3BDLFFBQUlDLE1BQU1ULGdCQUFnQkssSUFBSUssT0FBcEIsQ0FBVjtBQUNBLFFBQUksQ0FBQ0QsR0FBTCxFQUFVO0FBQ1JFLGNBQVFDLElBQVIsQ0FBYVYsTUFBTVcsR0FBTixDQUFVLGdEQUFWLENBQWI7QUFDRDtBQUNEUCxRQUFJUSxHQUFKLENBQVEsSUFBUjtBQUNELEdBTkQsTUFNTztBQUNMUDtBQUNEO0FBQ0YsQ0FWRCIsImZpbGUiOiJjb3B5VG9DbGlwQm9hcmRNaWRkbGV3YXJlLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL3NlcnZlci9taWRkbGV3YXJlIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IGNvcHlUb0NsaXBCb2FyZCA9IHJlcXVpcmUoJy4uL3V0aWwvY29weVRvQ2xpcEJvYXJkJyk7XG52YXIgY2hhbGsgPSByZXF1aXJlKCdjaGFsaycpO1xuXG4vKipcbiAqIEhhbmRsZSB0aGUgcmVxdWVzdCBmcm9tIEpTIHRvIGNvcHkgY29udGVudHMgb250byBob3N0IHN5c3RlbSBjbGlwYm9hcmQuXG4gKiBUaGlzIGlzIG9ubHkgc3VwcG9ydGVkIG9uIE1hYyBmb3Igbm93LlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIGlmIChyZXEudXJsID09PSAnL2NvcHktdG8tY2xpcGJvYXJkJykge1xuICAgIHZhciByZXQgPSBjb3B5VG9DbGlwQm9hcmQocmVxLnJhd0JvZHkpO1xuICAgIGlmICghcmV0KSB7XG4gICAgICBjb25zb2xlLndhcm4oY2hhbGsucmVkKCdDb3B5IGJ1dHRvbiBpcyBub3Qgc3VwcG9ydGVkIG9uIHRoaXMgcGxhdGZvcm0hJykpO1xuICAgIH1cbiAgICByZXMuZW5kKCdPSycpO1xuICB9IGVsc2Uge1xuICAgIG5leHQoKTtcbiAgfVxufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "copyToClipBoardMiddleware.js"
      ],
      "names": [
        "copyToClipBoard",
        "require",
        "chalk",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "url",
        "ret",
        "rawBody",
        "console",
        "warn",
        "red",
        "end"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,kBAAkBC,QAAQ,yBAAR,CAAxB;AACA,IAAIC,QAAQD,QAAQ,OAAR,CAAZ;;AAEA;;;;AAIAE,OAAOC,OAAP,GAAiB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACxC,MAAIF,IAAIG,GAAJ,KAAY,oBAAhB,EAAsC;AACpC,QAAIC,MAAMT,gBAAgBK,IAAIK,OAApB,CAAV;AACA,QAAI,CAACD,GAAL,EAAU;AACRE,cAAQC,IAAR,CAAaV,MAAMW,GAAN,CAAU,gDAAV,CAAb;AACD;AACDP,QAAIQ,GAAJ,CAAQ,IAAR;AACD,GAND,MAMO;AACLP;AACD;AACF,CAVD",
      "file": "copyToClipBoardMiddleware.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst copyToClipBoard = require('../util/copyToClipBoard');\nvar chalk = require('chalk');\n\n/**\n * Handle the request from JS to copy contents onto host system clipboard.\n * This is only supported on Mac for now.\n */\nmodule.exports = function(req, res, next) {\n  if (req.url === '/copy-to-clipboard') {\n    var ret = copyToClipBoard(req.rawBody);\n    if (!ret) {\n      console.warn(chalk.red('Copy button is not supported on this platform!'));\n    }\n    res.end('OK');\n  } else {\n    next();\n  }\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/copyToClipBoard.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/copyToClipBoard.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/copyToClipBoard.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "copyToClipBoard.js",
      "sourceFileName": "copyToClipBoard.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "copyToClipBoard"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nvar child_process = require('child_process');\nvar spawn = child_process.spawn;\nvar path = require('path');\nvar fs = require('fs');\n\nconst xsel = path.join(__dirname, 'external/xsel');\nfs.chmodSync(xsel, '0755');\n/**\n                             * Copy the content to host system clipboard.\n                             */\nfunction copyToClipBoard(content) {\n  switch (process.platform) {\n    case 'darwin':\n      var child = spawn('pbcopy', []);\n      child.stdin.end(new Buffer(content, 'utf8'));\n      return true;\n    case 'win32':\n      var child = spawn('clip', []);\n      child.stdin.end(new Buffer(content, 'utf8'));\n      return true;\n    case 'linux':\n      var child = spawn(xsel, ['--clipboard', '--input']);\n      child.stdin.end(new Buffer(content, 'utf8'));\n      return true;\n    default:\n      return false;}\n\n}\n\nmodule.exports = copyToClipBoard;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcHlUb0NsaXBCb2FyZC5qcyJdLCJuYW1lcyI6WyJjaGlsZF9wcm9jZXNzIiwicmVxdWlyZSIsInNwYXduIiwicGF0aCIsImZzIiwieHNlbCIsImpvaW4iLCJfX2Rpcm5hbWUiLCJjaG1vZFN5bmMiLCJjb3B5VG9DbGlwQm9hcmQiLCJjb250ZW50IiwicHJvY2VzcyIsInBsYXRmb3JtIiwiY2hpbGQiLCJzdGRpbiIsImVuZCIsIkJ1ZmZlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLElBQUlBLGdCQUFnQkMsUUFBUSxlQUFSLENBQXBCO0FBQ0EsSUFBSUMsUUFBUUYsY0FBY0UsS0FBMUI7QUFDQSxJQUFJQyxPQUFPRixRQUFRLE1BQVIsQ0FBWDtBQUNBLElBQUlHLEtBQU1ILFFBQVEsSUFBUixDQUFWOztBQUVBLE1BQU1JLE9BQU9GLEtBQUtHLElBQUwsQ0FBVUMsU0FBVixFQUFxQixlQUFyQixDQUFiO0FBQ0FILEdBQUdJLFNBQUgsQ0FBYUgsSUFBYixFQUFtQixNQUFuQjtBQUNBOzs7QUFHQSxTQUFTSSxlQUFULENBQXlCQyxPQUF6QixFQUFrQztBQUNoQyxVQUFRQyxRQUFRQyxRQUFoQjtBQUNBLFNBQUssUUFBTDtBQUNFLFVBQUlDLFFBQVFYLE1BQU0sUUFBTixFQUFnQixFQUFoQixDQUFaO0FBQ0FXLFlBQU1DLEtBQU4sQ0FBWUMsR0FBWixDQUFnQixJQUFJQyxNQUFKLENBQVdOLE9BQVgsRUFBb0IsTUFBcEIsQ0FBaEI7QUFDQSxhQUFPLElBQVA7QUFDRixTQUFLLE9BQUw7QUFDRSxVQUFJRyxRQUFRWCxNQUFNLE1BQU4sRUFBYyxFQUFkLENBQVo7QUFDQVcsWUFBTUMsS0FBTixDQUFZQyxHQUFaLENBQWdCLElBQUlDLE1BQUosQ0FBV04sT0FBWCxFQUFvQixNQUFwQixDQUFoQjtBQUNBLGFBQU8sSUFBUDtBQUNGLFNBQUssT0FBTDtBQUNFLFVBQUlHLFFBQVFYLE1BQU1HLElBQU4sRUFBWSxDQUFDLGFBQUQsRUFBZ0IsU0FBaEIsQ0FBWixDQUFaO0FBQ0FRLFlBQU1DLEtBQU4sQ0FBWUMsR0FBWixDQUFnQixJQUFJQyxNQUFKLENBQVdOLE9BQVgsRUFBb0IsTUFBcEIsQ0FBaEI7QUFDQSxhQUFPLElBQVA7QUFDRjtBQUNFLGFBQU8sS0FBUCxDQWRGOztBQWdCRDs7QUFFRE8sT0FBT0MsT0FBUCxHQUFpQlQsZUFBakIiLCJmaWxlIjoiY29weVRvQ2xpcEJvYXJkLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL3NlcnZlci91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG4ndXNlIHN0cmljdCc7XG5cbnZhciBjaGlsZF9wcm9jZXNzID0gcmVxdWlyZSgnY2hpbGRfcHJvY2VzcycpO1xudmFyIHNwYXduID0gY2hpbGRfcHJvY2Vzcy5zcGF3bjtcbnZhciBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xudmFyIGZzICA9IHJlcXVpcmUoJ2ZzJyk7XG5cbmNvbnN0IHhzZWwgPSBwYXRoLmpvaW4oX19kaXJuYW1lLCAnZXh0ZXJuYWwveHNlbCcpO1xuZnMuY2htb2RTeW5jKHhzZWwsICcwNzU1Jyk7XG4vKipcbiAqIENvcHkgdGhlIGNvbnRlbnQgdG8gaG9zdCBzeXN0ZW0gY2xpcGJvYXJkLlxuICovXG5mdW5jdGlvbiBjb3B5VG9DbGlwQm9hcmQoY29udGVudCkge1xuICBzd2l0Y2ggKHByb2Nlc3MucGxhdGZvcm0pIHtcbiAgY2FzZSAnZGFyd2luJzpcbiAgICB2YXIgY2hpbGQgPSBzcGF3bigncGJjb3B5JywgW10pO1xuICAgIGNoaWxkLnN0ZGluLmVuZChuZXcgQnVmZmVyKGNvbnRlbnQsICd1dGY4JykpO1xuICAgIHJldHVybiB0cnVlO1xuICBjYXNlICd3aW4zMic6XG4gICAgdmFyIGNoaWxkID0gc3Bhd24oJ2NsaXAnLCBbXSk7XG4gICAgY2hpbGQuc3RkaW4uZW5kKG5ldyBCdWZmZXIoY29udGVudCwgJ3V0ZjgnKSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIGNhc2UgJ2xpbnV4JzpcbiAgICB2YXIgY2hpbGQgPSBzcGF3bih4c2VsLCBbJy0tY2xpcGJvYXJkJywgJy0taW5wdXQnXSk7XG4gICAgY2hpbGQuc3RkaW4uZW5kKG5ldyBCdWZmZXIoY29udGVudCwgJ3V0ZjgnKSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIGRlZmF1bHQ6XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29weVRvQ2xpcEJvYXJkO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "copyToClipBoard.js"
      ],
      "names": [
        "child_process",
        "require",
        "spawn",
        "path",
        "fs",
        "xsel",
        "join",
        "__dirname",
        "chmodSync",
        "copyToClipBoard",
        "content",
        "process",
        "platform",
        "child",
        "stdin",
        "end",
        "Buffer",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,IAAIA,gBAAgBC,QAAQ,eAAR,CAApB;AACA,IAAIC,QAAQF,cAAcE,KAA1B;AACA,IAAIC,OAAOF,QAAQ,MAAR,CAAX;AACA,IAAIG,KAAMH,QAAQ,IAAR,CAAV;;AAEA,MAAMI,OAAOF,KAAKG,IAAL,CAAUC,SAAV,EAAqB,eAArB,CAAb;AACAH,GAAGI,SAAH,CAAaH,IAAb,EAAmB,MAAnB;AACA;;;AAGA,SAASI,eAAT,CAAyBC,OAAzB,EAAkC;AAChC,UAAQC,QAAQC,QAAhB;AACA,SAAK,QAAL;AACE,UAAIC,QAAQX,MAAM,QAAN,EAAgB,EAAhB,CAAZ;AACAW,YAAMC,KAAN,CAAYC,GAAZ,CAAgB,IAAIC,MAAJ,CAAWN,OAAX,EAAoB,MAApB,CAAhB;AACA,aAAO,IAAP;AACF,SAAK,OAAL;AACE,UAAIG,QAAQX,MAAM,MAAN,EAAc,EAAd,CAAZ;AACAW,YAAMC,KAAN,CAAYC,GAAZ,CAAgB,IAAIC,MAAJ,CAAWN,OAAX,EAAoB,MAApB,CAAhB;AACA,aAAO,IAAP;AACF,SAAK,OAAL;AACE,UAAIG,QAAQX,MAAMG,IAAN,EAAY,CAAC,aAAD,EAAgB,SAAhB,CAAZ,CAAZ;AACAQ,YAAMC,KAAN,CAAYC,GAAZ,CAAgB,IAAIC,MAAJ,CAAWN,OAAX,EAAoB,MAApB,CAAhB;AACA,aAAO,IAAP;AACF;AACE,aAAO,KAAP,CAdF;;AAgBD;;AAEDO,OAAOC,OAAP,GAAiBT,eAAjB",
      "file": "copyToClipBoard.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nvar child_process = require('child_process');\nvar spawn = child_process.spawn;\nvar path = require('path');\nvar fs  = require('fs');\n\nconst xsel = path.join(__dirname, 'external/xsel');\nfs.chmodSync(xsel, '0755');\n/**\n * Copy the content to host system clipboard.\n */\nfunction copyToClipBoard(content) {\n  switch (process.platform) {\n  case 'darwin':\n    var child = spawn('pbcopy', []);\n    child.stdin.end(new Buffer(content, 'utf8'));\n    return true;\n  case 'win32':\n    var child = spawn('clip', []);\n    child.stdin.end(new Buffer(content, 'utf8'));\n    return true;\n  case 'linux':\n    var child = spawn(xsel, ['--clipboard', '--input']);\n    child.stdin.end(new Buffer(content, 'utf8'));\n    return true;\n  default:\n    return false;\n  }\n}\n\nmodule.exports = copyToClipBoard;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/getDevToolsMiddleware.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/getDevToolsMiddleware.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/getDevToolsMiddleware.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "getDevToolsMiddleware.js",
      "sourceFileName": "getDevToolsMiddleware.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "getDevToolsMiddleware"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @format\n */\n'use strict';\n\nconst launchChrome = require('../util/launchChrome');\n\nconst { exec } = require('child_process');\n\nfunction launchChromeDevTools(port, args = '') {\n  var debuggerURL = 'http://localhost:' + port + '/debugger-ui' + args;\n  console.log('Launching Dev Tools...');\n  launchChrome(debuggerURL);\n}\n\nfunction escapePath(pathname) {\n  // \" Can escape paths with spaces in OS X, Windows, and *nix\n  return '\"' + pathname + '\"';\n}\n\nfunction launchDevTools({ port, projectRoots }, isChromeConnected) {\n  // Explicit config always wins\n  var customDebugger = process.env.REACT_DEBUGGER;\n  if (customDebugger) {\n    var projects = projectRoots.map(escapePath).join(' ');\n    var command = customDebugger + ' ' + projects;\n    console.log('Starting custom debugger by executing: ' + command);\n    exec(command, function (error, stdout, stderr) {\n      if (error !== null) {\n        console.log('Error while starting custom debugger: ' + error);\n      }\n    });\n  } else if (!isChromeConnected()) {\n    // Dev tools are not yet open; we need to open a session\n    launchChromeDevTools(port);\n  }\n}\n\nmodule.exports = function (options, isChromeConnected) {\n  return function (req, res, next) {\n    if (req.url === '/launch-safari-devtools') {\n      // TODO: remove `console.log` and dev tools binary\n      console.log(\n      'We removed support for Safari dev-tools. ' +\n      'If you still need this, please let us know.');\n\n    } else if (req.url === '/launch-chrome-devtools') {\n      // TODO: Remove this case in the future\n      console.log(\n      'The method /launch-chrome-devtools is deprecated. You are ' +\n      ' probably using an application created with an older CLI with the ' +\n      ' packager of a newer CLI. Please upgrade your application: ' +\n      'https://facebook.github.io/react-native/docs/upgrading.html');\n\n      launchDevTools(options, isChromeConnected);\n      res.end('OK');\n    } else if (req.url === '/launch-js-devtools') {\n      launchDevTools(options, isChromeConnected);\n      res.end('OK');\n    } else {\n      next();\n    }\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldERldlRvb2xzTWlkZGxld2FyZS5qcyJdLCJuYW1lcyI6WyJsYXVuY2hDaHJvbWUiLCJyZXF1aXJlIiwiZXhlYyIsImxhdW5jaENocm9tZURldlRvb2xzIiwicG9ydCIsImFyZ3MiLCJkZWJ1Z2dlclVSTCIsImNvbnNvbGUiLCJsb2ciLCJlc2NhcGVQYXRoIiwicGF0aG5hbWUiLCJsYXVuY2hEZXZUb29scyIsInByb2plY3RSb290cyIsImlzQ2hyb21lQ29ubmVjdGVkIiwiY3VzdG9tRGVidWdnZXIiLCJwcm9jZXNzIiwiZW52IiwiUkVBQ1RfREVCVUdHRVIiLCJwcm9qZWN0cyIsIm1hcCIsImpvaW4iLCJjb21tYW5kIiwiZXJyb3IiLCJzdGRvdXQiLCJzdGRlcnIiLCJtb2R1bGUiLCJleHBvcnRzIiwib3B0aW9ucyIsInJlcSIsInJlcyIsIm5leHQiLCJ1cmwiLCJlbmQiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7O0FBVUE7O0FBRUEsTUFBTUEsZUFBZUMsUUFBUSxzQkFBUixDQUFyQjs7QUFFQSxNQUFNLEVBQUNDLElBQUQsS0FBU0QsUUFBUSxlQUFSLENBQWY7O0FBRUEsU0FBU0Usb0JBQVQsQ0FBOEJDLElBQTlCLEVBQW9DQyxPQUFPLEVBQTNDLEVBQStDO0FBQzdDLE1BQUlDLGNBQWMsc0JBQXNCRixJQUF0QixHQUE2QixjQUE3QixHQUE4Q0MsSUFBaEU7QUFDQUUsVUFBUUMsR0FBUixDQUFZLHdCQUFaO0FBQ0FSLGVBQWFNLFdBQWI7QUFDRDs7QUFFRCxTQUFTRyxVQUFULENBQW9CQyxRQUFwQixFQUE4QjtBQUM1QjtBQUNBLFNBQU8sTUFBTUEsUUFBTixHQUFpQixHQUF4QjtBQUNEOztBQUVELFNBQVNDLGNBQVQsQ0FBd0IsRUFBQ1AsSUFBRCxFQUFPUSxZQUFQLEVBQXhCLEVBQThDQyxpQkFBOUMsRUFBaUU7QUFDL0Q7QUFDQSxNQUFJQyxpQkFBaUJDLFFBQVFDLEdBQVIsQ0FBWUMsY0FBakM7QUFDQSxNQUFJSCxjQUFKLEVBQW9CO0FBQ2xCLFFBQUlJLFdBQVdOLGFBQWFPLEdBQWIsQ0FBaUJWLFVBQWpCLEVBQTZCVyxJQUE3QixDQUFrQyxHQUFsQyxDQUFmO0FBQ0EsUUFBSUMsVUFBVVAsaUJBQWlCLEdBQWpCLEdBQXVCSSxRQUFyQztBQUNBWCxZQUFRQyxHQUFSLENBQVksNENBQTRDYSxPQUF4RDtBQUNBbkIsU0FBS21CLE9BQUwsRUFBYyxVQUFTQyxLQUFULEVBQWdCQyxNQUFoQixFQUF3QkMsTUFBeEIsRUFBZ0M7QUFDNUMsVUFBSUYsVUFBVSxJQUFkLEVBQW9CO0FBQ2xCZixnQkFBUUMsR0FBUixDQUFZLDJDQUEyQ2MsS0FBdkQ7QUFDRDtBQUNGLEtBSkQ7QUFLRCxHQVRELE1BU08sSUFBSSxDQUFDVCxtQkFBTCxFQUEwQjtBQUMvQjtBQUNBVix5QkFBcUJDLElBQXJCO0FBQ0Q7QUFDRjs7QUFFRHFCLE9BQU9DLE9BQVAsR0FBaUIsVUFBU0MsT0FBVCxFQUFrQmQsaUJBQWxCLEVBQXFDO0FBQ3BELFNBQU8sVUFBU2UsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUM5QixRQUFJRixJQUFJRyxHQUFKLEtBQVkseUJBQWhCLEVBQTJDO0FBQ3pDO0FBQ0F4QixjQUFRQyxHQUFSO0FBQ0U7QUFDRSxtREFGSjs7QUFJRCxLQU5ELE1BTU8sSUFBSW9CLElBQUlHLEdBQUosS0FBWSx5QkFBaEIsRUFBMkM7QUFDaEQ7QUFDQXhCLGNBQVFDLEdBQVI7QUFDRTtBQUNFLDBFQURGO0FBRUUsbUVBRkY7QUFHRSxtRUFKSjs7QUFNQUcscUJBQWVnQixPQUFmLEVBQXdCZCxpQkFBeEI7QUFDQWdCLFVBQUlHLEdBQUosQ0FBUSxJQUFSO0FBQ0QsS0FWTSxNQVVBLElBQUlKLElBQUlHLEdBQUosS0FBWSxxQkFBaEIsRUFBdUM7QUFDNUNwQixxQkFBZWdCLE9BQWYsRUFBd0JkLGlCQUF4QjtBQUNBZ0IsVUFBSUcsR0FBSixDQUFRLElBQVI7QUFDRCxLQUhNLE1BR0E7QUFDTEY7QUFDRDtBQUNGLEdBdkJEO0FBd0JELENBekJEIiwiZmlsZSI6ImdldERldlRvb2xzTWlkZGxld2FyZS5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9zZXJ2ZXIvbWlkZGxld2FyZSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAZm9ybWF0XG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgbGF1bmNoQ2hyb21lID0gcmVxdWlyZSgnLi4vdXRpbC9sYXVuY2hDaHJvbWUnKTtcblxuY29uc3Qge2V4ZWN9ID0gcmVxdWlyZSgnY2hpbGRfcHJvY2VzcycpO1xuXG5mdW5jdGlvbiBsYXVuY2hDaHJvbWVEZXZUb29scyhwb3J0LCBhcmdzID0gJycpIHtcbiAgdmFyIGRlYnVnZ2VyVVJMID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6JyArIHBvcnQgKyAnL2RlYnVnZ2VyLXVpJyArIGFyZ3M7XG4gIGNvbnNvbGUubG9nKCdMYXVuY2hpbmcgRGV2IFRvb2xzLi4uJyk7XG4gIGxhdW5jaENocm9tZShkZWJ1Z2dlclVSTCk7XG59XG5cbmZ1bmN0aW9uIGVzY2FwZVBhdGgocGF0aG5hbWUpIHtcbiAgLy8gXCIgQ2FuIGVzY2FwZSBwYXRocyB3aXRoIHNwYWNlcyBpbiBPUyBYLCBXaW5kb3dzLCBhbmQgKm5peFxuICByZXR1cm4gJ1wiJyArIHBhdGhuYW1lICsgJ1wiJztcbn1cblxuZnVuY3Rpb24gbGF1bmNoRGV2VG9vbHMoe3BvcnQsIHByb2plY3RSb290c30sIGlzQ2hyb21lQ29ubmVjdGVkKSB7XG4gIC8vIEV4cGxpY2l0IGNvbmZpZyBhbHdheXMgd2luc1xuICB2YXIgY3VzdG9tRGVidWdnZXIgPSBwcm9jZXNzLmVudi5SRUFDVF9ERUJVR0dFUjtcbiAgaWYgKGN1c3RvbURlYnVnZ2VyKSB7XG4gICAgdmFyIHByb2plY3RzID0gcHJvamVjdFJvb3RzLm1hcChlc2NhcGVQYXRoKS5qb2luKCcgJyk7XG4gICAgdmFyIGNvbW1hbmQgPSBjdXN0b21EZWJ1Z2dlciArICcgJyArIHByb2plY3RzO1xuICAgIGNvbnNvbGUubG9nKCdTdGFydGluZyBjdXN0b20gZGVidWdnZXIgYnkgZXhlY3V0aW5nOiAnICsgY29tbWFuZCk7XG4gICAgZXhlYyhjb21tYW5kLCBmdW5jdGlvbihlcnJvciwgc3Rkb3V0LCBzdGRlcnIpIHtcbiAgICAgIGlmIChlcnJvciAhPT0gbnVsbCkge1xuICAgICAgICBjb25zb2xlLmxvZygnRXJyb3Igd2hpbGUgc3RhcnRpbmcgY3VzdG9tIGRlYnVnZ2VyOiAnICsgZXJyb3IpO1xuICAgICAgfVxuICAgIH0pO1xuICB9IGVsc2UgaWYgKCFpc0Nocm9tZUNvbm5lY3RlZCgpKSB7XG4gICAgLy8gRGV2IHRvb2xzIGFyZSBub3QgeWV0IG9wZW47IHdlIG5lZWQgdG8gb3BlbiBhIHNlc3Npb25cbiAgICBsYXVuY2hDaHJvbWVEZXZUb29scyhwb3J0KTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9wdGlvbnMsIGlzQ2hyb21lQ29ubmVjdGVkKSB7XG4gIHJldHVybiBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICAgIGlmIChyZXEudXJsID09PSAnL2xhdW5jaC1zYWZhcmktZGV2dG9vbHMnKSB7XG4gICAgICAvLyBUT0RPOiByZW1vdmUgYGNvbnNvbGUubG9nYCBhbmQgZGV2IHRvb2xzIGJpbmFyeVxuICAgICAgY29uc29sZS5sb2coXG4gICAgICAgICdXZSByZW1vdmVkIHN1cHBvcnQgZm9yIFNhZmFyaSBkZXYtdG9vbHMuICcgK1xuICAgICAgICAgICdJZiB5b3Ugc3RpbGwgbmVlZCB0aGlzLCBwbGVhc2UgbGV0IHVzIGtub3cuJyxcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmIChyZXEudXJsID09PSAnL2xhdW5jaC1jaHJvbWUtZGV2dG9vbHMnKSB7XG4gICAgICAvLyBUT0RPOiBSZW1vdmUgdGhpcyBjYXNlIGluIHRoZSBmdXR1cmVcbiAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAnVGhlIG1ldGhvZCAvbGF1bmNoLWNocm9tZS1kZXZ0b29scyBpcyBkZXByZWNhdGVkLiBZb3UgYXJlICcgK1xuICAgICAgICAgICcgcHJvYmFibHkgdXNpbmcgYW4gYXBwbGljYXRpb24gY3JlYXRlZCB3aXRoIGFuIG9sZGVyIENMSSB3aXRoIHRoZSAnICtcbiAgICAgICAgICAnIHBhY2thZ2VyIG9mIGEgbmV3ZXIgQ0xJLiBQbGVhc2UgdXBncmFkZSB5b3VyIGFwcGxpY2F0aW9uOiAnICtcbiAgICAgICAgICAnaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvdXBncmFkaW5nLmh0bWwnLFxuICAgICAgKTtcbiAgICAgIGxhdW5jaERldlRvb2xzKG9wdGlvbnMsIGlzQ2hyb21lQ29ubmVjdGVkKTtcbiAgICAgIHJlcy5lbmQoJ09LJyk7XG4gICAgfSBlbHNlIGlmIChyZXEudXJsID09PSAnL2xhdW5jaC1qcy1kZXZ0b29scycpIHtcbiAgICAgIGxhdW5jaERldlRvb2xzKG9wdGlvbnMsIGlzQ2hyb21lQ29ubmVjdGVkKTtcbiAgICAgIHJlcy5lbmQoJ09LJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG5leHQoKTtcbiAgICB9XG4gIH07XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "getDevToolsMiddleware.js"
      ],
      "names": [
        "launchChrome",
        "require",
        "exec",
        "launchChromeDevTools",
        "port",
        "args",
        "debuggerURL",
        "console",
        "log",
        "escapePath",
        "pathname",
        "launchDevTools",
        "projectRoots",
        "isChromeConnected",
        "customDebugger",
        "process",
        "env",
        "REACT_DEBUGGER",
        "projects",
        "map",
        "join",
        "command",
        "error",
        "stdout",
        "stderr",
        "module",
        "exports",
        "options",
        "req",
        "res",
        "next",
        "url",
        "end"
      ],
      "mappings": "AAAA;;;;;;;;;;AAUA;;AAEA,MAAMA,eAAeC,QAAQ,sBAAR,CAArB;;AAEA,MAAM,EAACC,IAAD,KAASD,QAAQ,eAAR,CAAf;;AAEA,SAASE,oBAAT,CAA8BC,IAA9B,EAAoCC,OAAO,EAA3C,EAA+C;AAC7C,MAAIC,cAAc,sBAAsBF,IAAtB,GAA6B,cAA7B,GAA8CC,IAAhE;AACAE,UAAQC,GAAR,CAAY,wBAAZ;AACAR,eAAaM,WAAb;AACD;;AAED,SAASG,UAAT,CAAoBC,QAApB,EAA8B;AAC5B;AACA,SAAO,MAAMA,QAAN,GAAiB,GAAxB;AACD;;AAED,SAASC,cAAT,CAAwB,EAACP,IAAD,EAAOQ,YAAP,EAAxB,EAA8CC,iBAA9C,EAAiE;AAC/D;AACA,MAAIC,iBAAiBC,QAAQC,GAAR,CAAYC,cAAjC;AACA,MAAIH,cAAJ,EAAoB;AAClB,QAAII,WAAWN,aAAaO,GAAb,CAAiBV,UAAjB,EAA6BW,IAA7B,CAAkC,GAAlC,CAAf;AACA,QAAIC,UAAUP,iBAAiB,GAAjB,GAAuBI,QAArC;AACAX,YAAQC,GAAR,CAAY,4CAA4Ca,OAAxD;AACAnB,SAAKmB,OAAL,EAAc,UAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgC;AAC5C,UAAIF,UAAU,IAAd,EAAoB;AAClBf,gBAAQC,GAAR,CAAY,2CAA2Cc,KAAvD;AACD;AACF,KAJD;AAKD,GATD,MASO,IAAI,CAACT,mBAAL,EAA0B;AAC/B;AACAV,yBAAqBC,IAArB;AACD;AACF;;AAEDqB,OAAOC,OAAP,GAAiB,UAASC,OAAT,EAAkBd,iBAAlB,EAAqC;AACpD,SAAO,UAASe,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC9B,QAAIF,IAAIG,GAAJ,KAAY,yBAAhB,EAA2C;AACzC;AACAxB,cAAQC,GAAR;AACE;AACE,mDAFJ;;AAID,KAND,MAMO,IAAIoB,IAAIG,GAAJ,KAAY,yBAAhB,EAA2C;AAChD;AACAxB,cAAQC,GAAR;AACE;AACE,0EADF;AAEE,mEAFF;AAGE,mEAJJ;;AAMAG,qBAAegB,OAAf,EAAwBd,iBAAxB;AACAgB,UAAIG,GAAJ,CAAQ,IAAR;AACD,KAVM,MAUA,IAAIJ,IAAIG,GAAJ,KAAY,qBAAhB,EAAuC;AAC5CpB,qBAAegB,OAAf,EAAwBd,iBAAxB;AACAgB,UAAIG,GAAJ,CAAQ,IAAR;AACD,KAHM,MAGA;AACLF;AACD;AACF,GAvBD;AAwBD,CAzBD",
      "file": "getDevToolsMiddleware.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @format\n */\n'use strict';\n\nconst launchChrome = require('../util/launchChrome');\n\nconst {exec} = require('child_process');\n\nfunction launchChromeDevTools(port, args = '') {\n  var debuggerURL = 'http://localhost:' + port + '/debugger-ui' + args;\n  console.log('Launching Dev Tools...');\n  launchChrome(debuggerURL);\n}\n\nfunction escapePath(pathname) {\n  // \" Can escape paths with spaces in OS X, Windows, and *nix\n  return '\"' + pathname + '\"';\n}\n\nfunction launchDevTools({port, projectRoots}, isChromeConnected) {\n  // Explicit config always wins\n  var customDebugger = process.env.REACT_DEBUGGER;\n  if (customDebugger) {\n    var projects = projectRoots.map(escapePath).join(' ');\n    var command = customDebugger + ' ' + projects;\n    console.log('Starting custom debugger by executing: ' + command);\n    exec(command, function(error, stdout, stderr) {\n      if (error !== null) {\n        console.log('Error while starting custom debugger: ' + error);\n      }\n    });\n  } else if (!isChromeConnected()) {\n    // Dev tools are not yet open; we need to open a session\n    launchChromeDevTools(port);\n  }\n}\n\nmodule.exports = function(options, isChromeConnected) {\n  return function(req, res, next) {\n    if (req.url === '/launch-safari-devtools') {\n      // TODO: remove `console.log` and dev tools binary\n      console.log(\n        'We removed support for Safari dev-tools. ' +\n          'If you still need this, please let us know.',\n      );\n    } else if (req.url === '/launch-chrome-devtools') {\n      // TODO: Remove this case in the future\n      console.log(\n        'The method /launch-chrome-devtools is deprecated. You are ' +\n          ' probably using an application created with an older CLI with the ' +\n          ' packager of a newer CLI. Please upgrade your application: ' +\n          'https://facebook.github.io/react-native/docs/upgrading.html',\n      );\n      launchDevTools(options, isChromeConnected);\n      res.end('OK');\n    } else if (req.url === '/launch-js-devtools') {\n      launchDevTools(options, isChromeConnected);\n      res.end('OK');\n    } else {\n      next();\n    }\n  };\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/launchChrome.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/launchChrome.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/launchChrome.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "launchChrome.js",
      "sourceFileName": "launchChrome.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "launchChrome"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n'use strict';\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n               * found when Flow v0.54 was deployed. To see the error delete this comment and\n               * run Flow. */\nconst opn = require('opn');\nconst execSync = require('child_process').execSync;\n\nfunction commandExistsUnixSync(commandName, callback) {\n  try {\n    var stdout = execSync('command -v ' + commandName +\n    ' 2>/dev/null' +\n    ' && { echo >&1 \\'' + commandName + ' found\\'; exit 0; }');\n    return !!stdout;\n  } catch (error) {\n    return false;\n  }\n}\n\nfunction getChromeAppName() {\n  switch (process.platform) {\n    case 'darwin':\n      return 'google chrome';\n    case 'win32':\n      return 'chrome';\n    case 'linux':\n      if (commandExistsUnixSync('google-chrome')) {\n        return 'google-chrome';\n      } else if (commandExistsUnixSync('chromium-browser')) {\n        return 'chromium-browser';\n      } else {\n        return 'chromium';\n      }\n    default:\n      return 'google-chrome';}\n\n}\n\nfunction launchChrome(url) {\n  opn(url, { app: [getChromeAppName()] }, function (err) {\n    if (err) {\n      console.error('Google Chrome exited with error:', err);\n    }\n  });\n}\n\nmodule.exports = launchChrome;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxhdW5jaENocm9tZS5qcyJdLCJuYW1lcyI6WyJvcG4iLCJyZXF1aXJlIiwiZXhlY1N5bmMiLCJjb21tYW5kRXhpc3RzVW5peFN5bmMiLCJjb21tYW5kTmFtZSIsImNhbGxiYWNrIiwic3Rkb3V0IiwiZXJyb3IiLCJnZXRDaHJvbWVBcHBOYW1lIiwicHJvY2VzcyIsInBsYXRmb3JtIiwibGF1bmNoQ2hyb21lIiwidXJsIiwiYXBwIiwiZXJyIiwiY29uc29sZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7O0FBVUE7O0FBRUE7OztBQUdBLE1BQU1BLE1BQU1DLFFBQVEsS0FBUixDQUFaO0FBQ0EsTUFBTUMsV0FBV0QsUUFBUSxlQUFSLEVBQXlCQyxRQUExQzs7QUFFQSxTQUFTQyxxQkFBVCxDQUFnQ0MsV0FBaEMsRUFBNkNDLFFBQTdDLEVBQXVEO0FBQ3JELE1BQUk7QUFDRixRQUFJQyxTQUFTSixTQUFTLGdCQUFnQkUsV0FBaEI7QUFDaEIsa0JBRGdCO0FBRWhCLHVCQUZnQixHQUVNQSxXQUZOLEdBRW9CLHFCQUY3QixDQUFiO0FBR0EsV0FBTyxDQUFDLENBQUNFLE1BQVQ7QUFDRCxHQUxELENBS0UsT0FBT0MsS0FBUCxFQUFjO0FBQ2QsV0FBTyxLQUFQO0FBQ0Q7QUFDRjs7QUFFRCxTQUFTQyxnQkFBVCxHQUFvQztBQUNsQyxVQUFRQyxRQUFRQyxRQUFoQjtBQUNBLFNBQUssUUFBTDtBQUNFLGFBQU8sZUFBUDtBQUNGLFNBQUssT0FBTDtBQUNFLGFBQU8sUUFBUDtBQUNGLFNBQUssT0FBTDtBQUNFLFVBQUlQLHNCQUFzQixlQUF0QixDQUFKLEVBQTRDO0FBQzFDLGVBQU8sZUFBUDtBQUNELE9BRkQsTUFFTyxJQUFJQSxzQkFBc0Isa0JBQXRCLENBQUosRUFBK0M7QUFDcEQsZUFBTyxrQkFBUDtBQUNELE9BRk0sTUFFQTtBQUNMLGVBQU8sVUFBUDtBQUNEO0FBQ0g7QUFDRSxhQUFPLGVBQVAsQ0FkRjs7QUFnQkQ7O0FBRUQsU0FBU1EsWUFBVCxDQUFzQkMsR0FBdEIsRUFBbUM7QUFDakNaLE1BQUlZLEdBQUosRUFBUyxFQUFDQyxLQUFLLENBQUNMLGtCQUFELENBQU4sRUFBVCxFQUFzQyxVQUFTTSxHQUFULEVBQWM7QUFDbEQsUUFBSUEsR0FBSixFQUFTO0FBQ1BDLGNBQVFSLEtBQVIsQ0FBYyxrQ0FBZCxFQUFrRE8sR0FBbEQ7QUFDRDtBQUNGLEdBSkQ7QUFLRDs7QUFFREUsT0FBT0MsT0FBUCxHQUFpQk4sWUFBakIiLCJmaWxlIjoibGF1bmNoQ2hyb21lLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL3NlcnZlci91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBmbG93XG4gKi9cbid1c2Ugc3RyaWN0JztcblxuLyogJEZsb3dGaXhNZSg+PTAuNTQuMCBzaXRlPXJlYWN0X25hdGl2ZV9vc3MpIFRoaXMgY29tbWVudCBzdXBwcmVzc2VzIGFuIGVycm9yXG4gKiBmb3VuZCB3aGVuIEZsb3cgdjAuNTQgd2FzIGRlcGxveWVkLiBUbyBzZWUgdGhlIGVycm9yIGRlbGV0ZSB0aGlzIGNvbW1lbnQgYW5kXG4gKiBydW4gRmxvdy4gKi9cbmNvbnN0IG9wbiA9IHJlcXVpcmUoJ29wbicpO1xuY29uc3QgZXhlY1N5bmMgPSByZXF1aXJlKCdjaGlsZF9wcm9jZXNzJykuZXhlY1N5bmM7XG5cbmZ1bmN0aW9uIGNvbW1hbmRFeGlzdHNVbml4U3luYyAoY29tbWFuZE5hbWUsIGNhbGxiYWNrKSB7XG4gIHRyeSB7XG4gICAgdmFyIHN0ZG91dCA9IGV4ZWNTeW5jKCdjb21tYW5kIC12ICcgKyBjb21tYW5kTmFtZSArXG4gICAgICAgICAgJyAyPi9kZXYvbnVsbCcgK1xuICAgICAgICAgICcgJiYgeyBlY2hvID4mMSBcXCcnICsgY29tbWFuZE5hbWUgKyAnIGZvdW5kXFwnOyBleGl0IDA7IH0nKTtcbiAgICByZXR1cm4gISFzdGRvdXQ7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdldENocm9tZUFwcE5hbWUoKTogc3RyaW5nIHtcbiAgc3dpdGNoIChwcm9jZXNzLnBsYXRmb3JtKSB7XG4gIGNhc2UgJ2Rhcndpbic6XG4gICAgcmV0dXJuICdnb29nbGUgY2hyb21lJztcbiAgY2FzZSAnd2luMzInOlxuICAgIHJldHVybiAnY2hyb21lJztcbiAgY2FzZSAnbGludXgnOlxuICAgIGlmIChjb21tYW5kRXhpc3RzVW5peFN5bmMoJ2dvb2dsZS1jaHJvbWUnKSkge1xuICAgICAgcmV0dXJuICdnb29nbGUtY2hyb21lJztcbiAgICB9IGVsc2UgaWYgKGNvbW1hbmRFeGlzdHNVbml4U3luYygnY2hyb21pdW0tYnJvd3NlcicpKSB7XG4gICAgICByZXR1cm4gJ2Nocm9taXVtLWJyb3dzZXInO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gJ2Nocm9taXVtJztcbiAgICB9XG4gIGRlZmF1bHQ6XG4gICAgcmV0dXJuICdnb29nbGUtY2hyb21lJztcbiAgfVxufVxuXG5mdW5jdGlvbiBsYXVuY2hDaHJvbWUodXJsOiBzdHJpbmcpIHtcbiAgb3BuKHVybCwge2FwcDogW2dldENocm9tZUFwcE5hbWUoKV19LCBmdW5jdGlvbihlcnIpIHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdHb29nbGUgQ2hyb21lIGV4aXRlZCB3aXRoIGVycm9yOicsIGVycik7XG4gICAgfVxuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsYXVuY2hDaHJvbWU7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "launchChrome.js"
      ],
      "names": [
        "opn",
        "require",
        "execSync",
        "commandExistsUnixSync",
        "commandName",
        "callback",
        "stdout",
        "error",
        "getChromeAppName",
        "process",
        "platform",
        "launchChrome",
        "url",
        "app",
        "err",
        "console",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;AAUA;;AAEA;;;AAGA,MAAMA,MAAMC,QAAQ,KAAR,CAAZ;AACA,MAAMC,WAAWD,QAAQ,eAAR,EAAyBC,QAA1C;;AAEA,SAASC,qBAAT,CAAgCC,WAAhC,EAA6CC,QAA7C,EAAuD;AACrD,MAAI;AACF,QAAIC,SAASJ,SAAS,gBAAgBE,WAAhB;AAChB,kBADgB;AAEhB,uBAFgB,GAEMA,WAFN,GAEoB,qBAF7B,CAAb;AAGA,WAAO,CAAC,CAACE,MAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,WAAO,KAAP;AACD;AACF;;AAED,SAASC,gBAAT,GAAoC;AAClC,UAAQC,QAAQC,QAAhB;AACA,SAAK,QAAL;AACE,aAAO,eAAP;AACF,SAAK,OAAL;AACE,aAAO,QAAP;AACF,SAAK,OAAL;AACE,UAAIP,sBAAsB,eAAtB,CAAJ,EAA4C;AAC1C,eAAO,eAAP;AACD,OAFD,MAEO,IAAIA,sBAAsB,kBAAtB,CAAJ,EAA+C;AACpD,eAAO,kBAAP;AACD,OAFM,MAEA;AACL,eAAO,UAAP;AACD;AACH;AACE,aAAO,eAAP,CAdF;;AAgBD;;AAED,SAASQ,YAAT,CAAsBC,GAAtB,EAAmC;AACjCZ,MAAIY,GAAJ,EAAS,EAACC,KAAK,CAACL,kBAAD,CAAN,EAAT,EAAsC,UAASM,GAAT,EAAc;AAClD,QAAIA,GAAJ,EAAS;AACPC,cAAQR,KAAR,CAAc,kCAAd,EAAkDO,GAAlD;AACD;AACF,GAJD;AAKD;;AAEDE,OAAOC,OAAP,GAAiBN,YAAjB",
      "file": "launchChrome.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst opn = require('opn');\nconst execSync = require('child_process').execSync;\n\nfunction commandExistsUnixSync (commandName, callback) {\n  try {\n    var stdout = execSync('command -v ' + commandName +\n          ' 2>/dev/null' +\n          ' && { echo >&1 \\'' + commandName + ' found\\'; exit 0; }');\n    return !!stdout;\n  } catch (error) {\n    return false;\n  }\n}\n\nfunction getChromeAppName(): string {\n  switch (process.platform) {\n  case 'darwin':\n    return 'google chrome';\n  case 'win32':\n    return 'chrome';\n  case 'linux':\n    if (commandExistsUnixSync('google-chrome')) {\n      return 'google-chrome';\n    } else if (commandExistsUnixSync('chromium-browser')) {\n      return 'chromium-browser';\n    } else {\n      return 'chromium';\n    }\n  default:\n    return 'google-chrome';\n  }\n}\n\nfunction launchChrome(url: string) {\n  opn(url, {app: [getChromeAppName()]}, function(err) {\n    if (err) {\n      console.error('Google Chrome exited with error:', err);\n    }\n  });\n}\n\nmodule.exports = launchChrome;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/indexPage.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/indexPage.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/indexPage.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "indexPage.js",
      "sourceFileName": "indexPage.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "indexPage"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\nmodule.exports = function (req, res, next) {\n  if (req.url === '/') {\n    res.end(fs.readFileSync(path.join(__dirname, 'index.html')));\n  } else {\n    next();\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4UGFnZS5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJwYXRoIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcSIsInJlcyIsIm5leHQiLCJ1cmwiLCJlbmQiLCJyZWFkRmlsZVN5bmMiLCJqb2luIiwiX19kaXJuYW1lIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTs7QUFFQSxNQUFNQSxLQUFLQyxRQUFRLElBQVIsQ0FBWDtBQUNBLE1BQU1DLE9BQU9ELFFBQVEsTUFBUixDQUFiOztBQUVBRSxPQUFPQyxPQUFQLEdBQWlCLFVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDeEMsTUFBSUYsSUFBSUcsR0FBSixLQUFZLEdBQWhCLEVBQXFCO0FBQ25CRixRQUFJRyxHQUFKLENBQVFULEdBQUdVLFlBQUgsQ0FBZ0JSLEtBQUtTLElBQUwsQ0FBVUMsU0FBVixFQUFxQixZQUFyQixDQUFoQixDQUFSO0FBQ0QsR0FGRCxNQUVPO0FBQ0xMO0FBQ0Q7QUFDRixDQU5EIiwiZmlsZSI6ImluZGV4UGFnZS5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9zZXJ2ZXIvbWlkZGxld2FyZSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIGlmIChyZXEudXJsID09PSAnLycpIHtcbiAgICByZXMuZW5kKGZzLnJlYWRGaWxlU3luYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAnaW5kZXguaHRtbCcpKSk7XG4gIH0gZWxzZSB7XG4gICAgbmV4dCgpO1xuICB9XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "indexPage.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "url",
        "end",
        "readFileSync",
        "join",
        "__dirname"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEAE,OAAOC,OAAP,GAAiB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACxC,MAAIF,IAAIG,GAAJ,KAAY,GAAhB,EAAqB;AACnBF,QAAIG,GAAJ,CAAQT,GAAGU,YAAH,CAAgBR,KAAKS,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAhB,CAAR;AACD,GAFD,MAEO;AACLL;AACD;AACF,CAND",
      "file": "indexPage.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\nmodule.exports = function(req, res, next) {\n  if (req.url === '/') {\n    res.end(fs.readFileSync(path.join(__dirname, 'index.html')));\n  } else {\n    next();\n  }\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/loadRawBodyMiddleware.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/loadRawBodyMiddleware.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/loadRawBodyMiddleware.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "loadRawBodyMiddleware.js",
      "sourceFileName": "loadRawBodyMiddleware.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "loadRawBodyMiddleware"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nmodule.exports = function (req, res, next) {\n  req.rawBody = '';\n  req.setEncoding('utf8');\n\n  req.on('data', function (chunk) {\n    req.rawBody += chunk;\n  });\n\n  req.on('end', function () {\n    next();\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvYWRSYXdCb2R5TWlkZGxld2FyZS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxIiwicmVzIiwibmV4dCIsInJhd0JvZHkiLCJzZXRFbmNvZGluZyIsIm9uIiwiY2h1bmsiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBQSxPQUFPQyxPQUFQLEdBQWlCLFVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDeENGLE1BQUlHLE9BQUosR0FBYyxFQUFkO0FBQ0FILE1BQUlJLFdBQUosQ0FBZ0IsTUFBaEI7O0FBRUFKLE1BQUlLLEVBQUosQ0FBTyxNQUFQLEVBQWUsVUFBU0MsS0FBVCxFQUFnQjtBQUM3Qk4sUUFBSUcsT0FBSixJQUFlRyxLQUFmO0FBQ0QsR0FGRDs7QUFJQU4sTUFBSUssRUFBSixDQUFPLEtBQVAsRUFBYyxZQUFXO0FBQ3ZCSDtBQUNELEdBRkQ7QUFHRCxDQVhEIiwiZmlsZSI6ImxvYWRSYXdCb2R5TWlkZGxld2FyZS5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9zZXJ2ZXIvbWlkZGxld2FyZSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIHJlcS5yYXdCb2R5ID0gJyc7XG4gIHJlcS5zZXRFbmNvZGluZygndXRmOCcpO1xuXG4gIHJlcS5vbignZGF0YScsIGZ1bmN0aW9uKGNodW5rKSB7XG4gICAgcmVxLnJhd0JvZHkgKz0gY2h1bms7XG4gIH0pO1xuXG4gIHJlcS5vbignZW5kJywgZnVuY3Rpb24oKSB7XG4gICAgbmV4dCgpO1xuICB9KTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "loadRawBodyMiddleware.js"
      ],
      "names": [
        "module",
        "exports",
        "req",
        "res",
        "next",
        "rawBody",
        "setEncoding",
        "on",
        "chunk"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEAA,OAAOC,OAAP,GAAiB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACxCF,MAAIG,OAAJ,GAAc,EAAd;AACAH,MAAII,WAAJ,CAAgB,MAAhB;;AAEAJ,MAAIK,EAAJ,CAAO,MAAP,EAAe,UAASC,KAAT,EAAgB;AAC7BN,QAAIG,OAAJ,IAAeG,KAAf;AACD,GAFD;;AAIAN,MAAIK,EAAJ,CAAO,KAAP,EAAc,YAAW;AACvBH;AACD,GAFD;AAGD,CAXD",
      "file": "loadRawBodyMiddleware.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nmodule.exports = function(req, res, next) {\n  req.rawBody = '';\n  req.setEncoding('utf8');\n\n  req.on('data', function(chunk) {\n    req.rawBody += chunk;\n  });\n\n  req.on('end', function() {\n    next();\n  });\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/messageSocket.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/messageSocket.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/messageSocket.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "messageSocket.js",
      "sourceFileName": "messageSocket.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "messageSocket"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst url = require('url');\nconst WebSocketServer = require('ws').Server;\nconst PROTOCOL_VERSION = 2;\nconst notifier = require('node-notifier');\n\nfunction parseMessage(data, binary) {\n  if (binary) {\n    console.error('Expected text message, got binary!');\n    return undefined;\n  }\n  try {\n    const message = JSON.parse(data);\n    if (message.version === PROTOCOL_VERSION) {\n      return message;\n    }\n    console.error('Received message had wrong protocol version: ' +\n    message.version);\n  } catch (e) {\n    console.error('Failed to parse the message as JSON:\\n' + data);\n  }\n  return undefined;\n}\n\nfunction isBroadcast(message) {\n  return (\n    typeof message.method === 'string' &&\n    message.id === undefined &&\n    message.target === undefined);\n\n}\n\nfunction isRequest(message) {\n  return (\n    typeof message.method === 'string' &&\n    typeof message.target === 'string');\n}\n\nfunction isResponse(message) {\n  return (\n    typeof message.id === 'object' &&\n    typeof message.id.requestId !== undefined &&\n    typeof message.id.clientId === 'string' && (\n    message.result !== undefined ||\n    message.error !== undefined));\n\n}\n\nfunction attachToServer(server, path) {\n  const wss = new WebSocketServer({\n    server: server,\n    path: path });\n\n  const clients = new Map();\n  let nextClientId = 0;\n\n  function getClientWs(clientId) {\n    const clientWs = clients.get(clientId);\n    if (clientWs === undefined) {\n      throw `could not find id \"${clientId}\" while forwarding request`;\n    }\n    return clientWs;\n  }\n\n  function handleSendBroadcast(broadcasterId, message) {\n    const forwarded = {\n      version: PROTOCOL_VERSION,\n      method: message.method,\n      params: message.params };\n\n    if (clients.size === 0) {\n      notifier.notify({\n        'title': 'React Native: No apps connected',\n        'message': `Sending '${message.method}' to all React Native apps ` +\n        'failed. Make sure your app is running in the simulator ' +\n        'or on a phone connected via USB.' });\n\n    }\n    for (const [otherId, otherWs] of clients) {\n      if (otherId !== broadcasterId) {\n        try {\n          otherWs.send(JSON.stringify(forwarded));\n        } catch (e) {\n          console.error(`Failed to send broadcast to client: '${otherId}' ` +\n          `due to:\\n ${e.toString()}`);\n        }\n      }\n    }\n  }\n\n  wss.on('connection', function (clientWs) {\n    const clientId = `client#${nextClientId++}`;\n\n    function handleCaughtError(message, error) {\n      const errorMessage = {\n        id: message.id,\n        method: message.method,\n        target: message.target,\n        error: message.error === undefined ? 'undefined' : 'defined',\n        params: message.params === undefined ? 'undefined' : 'defined',\n        result: message.result === undefined ? 'undefined' : 'defined' };\n\n\n      if (message.id === undefined) {\n        console.error(\n        `Handling message from ${clientId} failed with:\\n${error}\\n` +\n        `message:\\n${JSON.stringify(errorMessage)}`);\n      } else {\n        try {\n          clientWs.send(JSON.stringify({\n            version: PROTOCOL_VERSION,\n            error: error,\n            id: message.id }));\n\n        } catch (e) {\n          console.error(`Failed to reply to ${clientId} with error:\\n${error}` +\n          `\\nmessage:\\n${JSON.stringify(errorMessage)}` +\n          `\\ndue to error: ${e.toString()}`);\n        }\n      }\n    }\n\n    function handleServerRequest(message) {\n      let result = null;\n      switch (message.method) {\n        case 'getid':\n          result = clientId;\n          break;\n        case 'getpeers':\n          result = {};\n          clients.forEach((otherWs, otherId) => {\n            if (clientId !== otherId) {\n              result[otherId] = url.parse(otherWs.upgradeReq.url, true).query;\n            }\n          });\n          break;\n        default:\n          throw `unkown method: ${message.method}`;}\n\n\n      clientWs.send(JSON.stringify({\n        version: PROTOCOL_VERSION,\n        result: result,\n        id: message.id }));\n\n    }\n\n    function forwardRequest(message) {\n      getClientWs(message.target).send(JSON.stringify({\n        version: PROTOCOL_VERSION,\n        method: message.method,\n        params: message.params,\n        id: message.id === undefined ?\n        undefined :\n        { requestId: message.id, clientId: clientId } }));\n\n    }\n\n    function forwardResponse(message) {\n      getClientWs(message.id.clientId).send(JSON.stringify({\n        version: PROTOCOL_VERSION,\n        result: message.result,\n        error: message.error,\n        id: message.id.requestId }));\n\n    }\n\n    clients.set(clientId, clientWs);\n    clientWs.onclose =\n    clientWs.onerror = () => {\n      clientWs.onmessage = null;\n      clients.delete(clientId);\n    };\n    clientWs.onmessage = event => {\n      const message = parseMessage(event.data, event.binary);\n      if (message === undefined) {\n        console.error('Received message not matching protocol');\n        return;\n      }\n\n      try {\n        if (isBroadcast(message)) {\n          handleSendBroadcast(clientId, message);\n        } else if (isRequest(message)) {\n          if (message.target === 'server') {\n            handleServerRequest(message);\n          } else {\n            forwardRequest(message);\n          }\n        } else if (isResponse(message)) {\n          forwardResponse(message);\n        } else {\n          throw 'Invalid message, did not match the protocol';\n        }\n      } catch (e) {\n        handleCaughtError(message, e.toString());\n      }\n    };\n  });\n\n  return {\n    broadcast: (method, params) => {\n      handleSendBroadcast(null, { method: method, params: params });\n    } };\n\n}\n\nmodule.exports = {\n  attachToServer: attachToServer,\n  parseMessage: parseMessage };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "messageSocket.js"
      ],
      "names": [
        "url",
        "require",
        "WebSocketServer",
        "Server",
        "PROTOCOL_VERSION",
        "notifier",
        "parseMessage",
        "data",
        "binary",
        "console",
        "error",
        "undefined",
        "message",
        "JSON",
        "parse",
        "version",
        "e",
        "isBroadcast",
        "method",
        "id",
        "target",
        "isRequest",
        "isResponse",
        "requestId",
        "clientId",
        "result",
        "attachToServer",
        "server",
        "path",
        "wss",
        "clients",
        "Map",
        "nextClientId",
        "getClientWs",
        "clientWs",
        "get",
        "handleSendBroadcast",
        "broadcasterId",
        "forwarded",
        "params",
        "size",
        "notify",
        "otherId",
        "otherWs",
        "send",
        "stringify",
        "toString",
        "on",
        "handleCaughtError",
        "errorMessage",
        "handleServerRequest",
        "forEach",
        "upgradeReq",
        "query",
        "forwardRequest",
        "forwardResponse",
        "set",
        "onclose",
        "onerror",
        "onmessage",
        "delete",
        "event",
        "broadcast",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "messageSocket.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst url = require('url');\nconst WebSocketServer = require('ws').Server;\nconst PROTOCOL_VERSION = 2;\nconst notifier = require('node-notifier');\n\nfunction parseMessage(data, binary) {\n  if (binary) {\n    console.error('Expected text message, got binary!');\n    return undefined;\n  }\n  try {\n    const message = JSON.parse(data);\n    if (message.version === PROTOCOL_VERSION) {\n      return message;\n    }\n    console.error('Received message had wrong protocol version: '\n                  + message.version);\n  } catch (e) {\n    console.error('Failed to parse the message as JSON:\\n' + data);\n  }\n  return undefined;\n}\n\nfunction isBroadcast(message) {\n  return (\n    typeof message.method === 'string' &&\n    message.id === undefined &&\n    message.target === undefined\n  );\n}\n\nfunction isRequest(message) {\n  return (\n    typeof message.method === 'string' &&\n    typeof message.target === 'string');\n}\n\nfunction isResponse(message) {\n  return (\n    typeof message.id === 'object' &&\n    typeof message.id.requestId !== undefined &&\n    typeof message.id.clientId === 'string' && (\n      message.result !== undefined ||\n      message.error !== undefined\n  ));\n}\n\nfunction attachToServer(server, path) {\n  const wss = new WebSocketServer({\n    server: server,\n    path: path\n  });\n  const clients = new Map();\n  let nextClientId = 0;\n\n  function getClientWs(clientId) {\n    const clientWs = clients.get(clientId);\n    if (clientWs === undefined) {\n      throw `could not find id \"${clientId}\" while forwarding request`;\n    }\n    return clientWs;\n  }\n\n  function handleSendBroadcast(broadcasterId, message) {\n    const forwarded = {\n      version: PROTOCOL_VERSION,\n      method: message.method,\n      params: message.params,\n    };\n    if (clients.size === 0) {\n      notifier.notify({\n        'title': 'React Native: No apps connected',\n        'message': `Sending '${message.method}' to all React Native apps ` +\n                  'failed. Make sure your app is running in the simulator ' +\n                  'or on a phone connected via USB.'\n      });\n    }\n    for (const [otherId, otherWs] of clients) {\n      if (otherId !== broadcasterId) {\n        try {\n          otherWs.send(JSON.stringify(forwarded));\n        } catch (e) {\n          console.error(`Failed to send broadcast to client: '${otherId}' ` +\n                        `due to:\\n ${e.toString()}`);\n        }\n      }\n    }\n  }\n\n  wss.on('connection', function(clientWs) {\n    const clientId = `client#${nextClientId++}`;\n\n    function handleCaughtError(message, error) {\n      const errorMessage = {\n        id: message.id,\n        method: message.method,\n        target: message.target,\n        error: message.error === undefined ? 'undefined' : 'defined',\n        params: message.params === undefined ? 'undefined' : 'defined',\n        result: message.result === undefined ? 'undefined' : 'defined',\n      };\n\n      if (message.id === undefined) {\n        console.error(\n          `Handling message from ${clientId} failed with:\\n${error}\\n` +\n          `message:\\n${JSON.stringify(errorMessage)}`);\n      } else {\n        try {\n          clientWs.send(JSON.stringify({\n            version: PROTOCOL_VERSION,\n            error: error,\n            id: message.id,\n          }));\n        } catch (e) {\n          console.error(`Failed to reply to ${clientId} with error:\\n${error}` +\n                        `\\nmessage:\\n${JSON.stringify(errorMessage)}` +\n                        `\\ndue to error: ${e.toString()}`);\n        }\n      }\n    }\n\n    function handleServerRequest(message) {\n      let result = null;\n      switch (message.method) {\n        case 'getid':\n          result = clientId;\n          break;\n        case 'getpeers':\n          result = {};\n          clients.forEach((otherWs, otherId) => {\n            if (clientId !== otherId) {\n              result[otherId] = url.parse(otherWs.upgradeReq.url, true).query;\n            }\n          });\n          break;\n        default:\n          throw `unkown method: ${message.method}`;\n      }\n\n      clientWs.send(JSON.stringify({\n        version: PROTOCOL_VERSION,\n        result: result,\n        id: message.id\n      }));\n    }\n\n    function forwardRequest(message) {\n      getClientWs(message.target).send(JSON.stringify({\n        version: PROTOCOL_VERSION,\n        method: message.method,\n        params: message.params,\n        id: (message.id === undefined\n          ? undefined\n          : {requestId: message.id, clientId: clientId}),\n      }));\n    }\n\n    function forwardResponse(message) {\n      getClientWs(message.id.clientId).send(JSON.stringify({\n        version: PROTOCOL_VERSION,\n        result: message.result,\n        error: message.error,\n        id: message.id.requestId,\n      }));\n    }\n\n    clients.set(clientId, clientWs);\n    clientWs.onclose =\n    clientWs.onerror = () => {\n      clientWs.onmessage = null;\n      clients.delete(clientId);\n    };\n    clientWs.onmessage = (event) => {\n      const message = parseMessage(event.data, event.binary);\n      if (message === undefined) {\n        console.error('Received message not matching protocol');\n        return;\n      }\n\n      try {\n        if (isBroadcast(message)) {\n          handleSendBroadcast(clientId, message);\n        } else if (isRequest(message)) {\n          if (message.target === 'server') {\n            handleServerRequest(message);\n          } else {\n            forwardRequest(message);\n          }\n        } else if (isResponse(message)) {\n          forwardResponse(message);\n        } else {\n          throw 'Invalid message, did not match the protocol';\n        }\n      } catch (e) {\n        handleCaughtError(message, e.toString());\n      }\n    };\n  });\n\n  return {\n    broadcast: (method, params) => {\n      handleSendBroadcast(null, {method: method, params: params});\n    }\n  };\n}\n\nmodule.exports = {\n  attachToServer: attachToServer,\n  parseMessage: parseMessage,\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/openStackFrameInEditorMiddleware.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/openStackFrameInEditorMiddleware.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/openStackFrameInEditorMiddleware.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "openStackFrameInEditorMiddleware.js",
      "sourceFileName": "openStackFrameInEditorMiddleware.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "openStackFrameInEditorMiddleware"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst launchEditor = require('../util/launchEditor');\n\nmodule.exports = function ({ projectRoots }) {\n  return function (req, res, next) {\n    if (req.url === '/open-stack-frame') {\n      const frame = JSON.parse(req.rawBody);\n      launchEditor(frame.file, frame.lineNumber, projectRoots);\n      res.end('OK');\n    } else {\n      next();\n    }\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9wZW5TdGFja0ZyYW1lSW5FZGl0b3JNaWRkbGV3YXJlLmpzIl0sIm5hbWVzIjpbImxhdW5jaEVkaXRvciIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwicHJvamVjdFJvb3RzIiwicmVxIiwicmVzIiwibmV4dCIsInVybCIsImZyYW1lIiwiSlNPTiIsInBhcnNlIiwicmF3Qm9keSIsImZpbGUiLCJsaW5lTnVtYmVyIiwiZW5kIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTs7QUFFQSxNQUFNQSxlQUFlQyxRQUFRLHNCQUFSLENBQXJCOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFVBQVMsRUFBQ0MsWUFBRCxFQUFULEVBQXlCO0FBQ3hDLFNBQU8sVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUM5QixRQUFJRixJQUFJRyxHQUFKLEtBQVksbUJBQWhCLEVBQXFDO0FBQ25DLFlBQU1DLFFBQVFDLEtBQUtDLEtBQUwsQ0FBV04sSUFBSU8sT0FBZixDQUFkO0FBQ0FaLG1CQUFhUyxNQUFNSSxJQUFuQixFQUF5QkosTUFBTUssVUFBL0IsRUFBMkNWLFlBQTNDO0FBQ0FFLFVBQUlTLEdBQUosQ0FBUSxJQUFSO0FBQ0QsS0FKRCxNQUlPO0FBQ0xSO0FBQ0Q7QUFDRixHQVJEO0FBU0QsQ0FWRCIsImZpbGUiOiJvcGVuU3RhY2tGcmFtZUluRWRpdG9yTWlkZGxld2FyZS5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9zZXJ2ZXIvbWlkZGxld2FyZSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBsYXVuY2hFZGl0b3IgPSByZXF1aXJlKCcuLi91dGlsL2xhdW5jaEVkaXRvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHtwcm9qZWN0Um9vdHN9KSB7XG4gIHJldHVybiBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICAgIGlmIChyZXEudXJsID09PSAnL29wZW4tc3RhY2stZnJhbWUnKSB7XG4gICAgICBjb25zdCBmcmFtZSA9IEpTT04ucGFyc2UocmVxLnJhd0JvZHkpO1xuICAgICAgbGF1bmNoRWRpdG9yKGZyYW1lLmZpbGUsIGZyYW1lLmxpbmVOdW1iZXIsIHByb2plY3RSb290cyk7XG4gICAgICByZXMuZW5kKCdPSycpO1xuICAgIH0gZWxzZSB7XG4gICAgICBuZXh0KCk7XG4gICAgfVxuICB9O1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "openStackFrameInEditorMiddleware.js"
      ],
      "names": [
        "launchEditor",
        "require",
        "module",
        "exports",
        "projectRoots",
        "req",
        "res",
        "next",
        "url",
        "frame",
        "JSON",
        "parse",
        "rawBody",
        "file",
        "lineNumber",
        "end"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,eAAeC,QAAQ,sBAAR,CAArB;;AAEAC,OAAOC,OAAP,GAAiB,UAAS,EAACC,YAAD,EAAT,EAAyB;AACxC,SAAO,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC9B,QAAIF,IAAIG,GAAJ,KAAY,mBAAhB,EAAqC;AACnC,YAAMC,QAAQC,KAAKC,KAAL,CAAWN,IAAIO,OAAf,CAAd;AACAZ,mBAAaS,MAAMI,IAAnB,EAAyBJ,MAAMK,UAA/B,EAA2CV,YAA3C;AACAE,UAAIS,GAAJ,CAAQ,IAAR;AACD,KAJD,MAIO;AACLR;AACD;AACF,GARD;AASD,CAVD",
      "file": "openStackFrameInEditorMiddleware.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst launchEditor = require('../util/launchEditor');\n\nmodule.exports = function({projectRoots}) {\n  return function(req, res, next) {\n    if (req.url === '/open-stack-frame') {\n      const frame = JSON.parse(req.rawBody);\n      launchEditor(frame.file, frame.lineNumber, projectRoots);\n      res.end('OK');\n    } else {\n      next();\n    }\n  };\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/launchEditor.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/launchEditor.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/launchEditor.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "launchEditor.js",
      "sourceFileName": "launchEditor.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "launchEditor"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nvar chalk = require('chalk');\nvar fs = require('fs');\nvar path = require('path');\nvar child_process = require('child_process');\nconst isAbsolutePath = require('absolute-path');\nconst shellQuote = require('shell-quote');\n\nfunction isTerminalEditor(editor) {\n  switch (editor) {\n    case 'vim':\n    case 'emacs':\n    case 'nano':\n      return true;}\n\n  return false;\n}\n\n// Map from full process name to binary that starts the process\n// We can't just re-use full process name, because it will spawn a new instance\n// of the app every time\nvar COMMON_EDITORS = {\n  '/Applications/Atom.app/Contents/MacOS/Atom': 'atom',\n  '/Applications/Atom Beta.app/Contents/MacOS/Atom Beta':\n  '/Applications/Atom Beta.app/Contents/MacOS/Atom Beta',\n  '/Applications/IntelliJ IDEA.app/Contents/MacOS/idea': 'idea',\n  '/Applications/Sublime Text.app/Contents/MacOS/Sublime Text':\n  '/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl',\n  '/Applications/Sublime Text 2.app/Contents/MacOS/Sublime Text 2':\n  '/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl',\n  '/Applications/Visual Studio Code.app/Contents/MacOS/Electron': 'code',\n  '/Applications/WebStorm.app/Contents/MacOS/webstorm': 'webstorm' };\n\n\nfunction addWorkspaceToArgumentsIfExists(args, workspace) {\n  if (workspace) {\n    args.unshift(workspace);\n  }\n  return args;\n}\n\nfunction getArgumentsForLineNumber(editor, fileName, lineNumber, workspace) {\n  switch (path.basename(editor)) {\n    case 'vim':\n    case 'mvim':\n      return [fileName, '+' + lineNumber];\n    case 'atom':\n    case 'Atom':\n    case 'Atom Beta':\n    case 'subl':\n    case 'sublime':\n    case 'webstorm':\n    case 'wstorm':\n    case 'appcode':\n    case 'charm':\n    case 'idea':\n      return [fileName + ':' + lineNumber];\n    case 'joe':\n    case 'emacs':\n    case 'emacsclient':\n      return ['+' + lineNumber, fileName];\n    case 'rmate':\n    case 'mate':\n    case 'mine':\n      return ['--line', lineNumber, fileName];\n    case 'code':\n      return addWorkspaceToArgumentsIfExists(['-g', fileName + ':' + lineNumber], workspace);}\n\n\n  // For all others, drop the lineNumber until we have\n  // a mapping above, since providing the lineNumber incorrectly\n  // can result in errors or confusing behavior.\n  return [fileName];\n}\n\nfunction guessEditor() {\n  // Explicit config always wins\n  if (process.env.REACT_EDITOR) {\n    return shellQuote.parse(process.env.REACT_EDITOR);\n  }\n\n  // Using `ps x` on OSX we can find out which editor is currently running.\n  // Potentially we could use similar technique for Windows and Linux\n  if (process.platform === 'darwin') {\n    try {\n      var output = child_process.execSync('ps x').toString();\n      var processNames = Object.keys(COMMON_EDITORS);\n      for (var i = 0; i < processNames.length; i++) {\n        var processName = processNames[i];\n        if (output.indexOf(processName) !== -1) {\n          return [COMMON_EDITORS[processName]];\n        }\n      }\n    } catch (error) {\n      // Ignore...\n    }\n  }\n\n  // Last resort, use old skool env vars\n  if (process.env.VISUAL) {\n    return [process.env.VISUAL];\n  } else if (process.env.EDITOR) {\n    return [process.env.EDITOR];\n  }\n\n  return [null];\n}\n\nfunction printInstructions(title) {\n  console.log([\n  '',\n  chalk.bgBlue.white.bold(' ' + title + ' '),\n  '  When you see Red Box with stack trace, you can click any ',\n  '  stack frame to jump to the source file. The packager will launch your ',\n  '  editor of choice. It will first look at REACT_EDITOR environment ',\n  '  variable, then at EDITOR. To set it up, you can add something like ',\n  '  export REACT_EDITOR=atom to your ~/.bashrc or ~/.zshrc depending on ',\n  '  which shell you use.',\n  ''].\n  join('\\n'));\n}\n\nfunction transformToAbsolutePathIfNeeded(pathName) {\n  if (!isAbsolutePath(pathName)) {\n    pathName = path.resolve(process.cwd(), pathName);\n  }\n  return pathName;\n}\n\nfunction findRootForFile(projectRoots, fileName) {\n  fileName = transformToAbsolutePathIfNeeded(fileName);\n  return projectRoots.find(root => {\n    root = transformToAbsolutePathIfNeeded(root);\n    return fileName.startsWith(root + path.sep);\n  });\n}\n\nvar _childProcess = null;\nfunction launchEditor(fileName, lineNumber, projectRoots) {\n  if (!fs.existsSync(fileName)) {\n    return;\n  }\n\n  // Sanitize lineNumber to prevent malicious use on win32\n  // via: https://github.com/nodejs/node/blob/c3bb4b1aa5e907d489619fb43d233c3336bfc03d/lib/child_process.js#L333\n  if (lineNumber && isNaN(lineNumber)) {\n    return;\n  }\n\n  let [editor, ...args] = guessEditor();\n  if (!editor) {\n    printInstructions('PRO TIP');\n    return;\n  }\n\n  var workspace = findRootForFile(projectRoots, fileName);\n  if (lineNumber) {\n    args = args.concat(getArgumentsForLineNumber(editor, fileName, lineNumber, workspace));\n  } else {\n    args.push(fileName);\n  }\n  console.log('Opening ' + chalk.underline(fileName) + ' with ' + chalk.bold(editor));\n\n  if (_childProcess && isTerminalEditor(editor)) {\n    // There's an existing editor process already and it's attached\n    // to the terminal, so go kill it. Otherwise two separate editor\n    // instances attach to the stdin/stdout which gets confusing.\n    _childProcess.kill('SIGKILL');\n  }\n\n  if (process.platform === 'win32') {\n    // On Windows, launch the editor in a shell because spawn can only\n    // launch .exe files.\n    _childProcess = child_process.spawn('cmd.exe', ['/C', editor].concat(args), { stdio: 'inherit' });\n  } else {\n    _childProcess = child_process.spawn(editor, args, { stdio: 'inherit' });\n  }\n  _childProcess.on('exit', function (errorCode) {\n    _childProcess = null;\n\n    if (errorCode) {\n      console.log(chalk.red('Your editor exited with an error!'));\n      printInstructions('Keep these instructions in mind:');\n    }\n  });\n\n  _childProcess.on('error', function (error) {\n    console.log(chalk.red(error.message));\n    printInstructions('How to fix:');\n  });\n}\n\nmodule.exports = launchEditor;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "launchEditor.js"
      ],
      "names": [
        "chalk",
        "require",
        "fs",
        "path",
        "child_process",
        "isAbsolutePath",
        "shellQuote",
        "isTerminalEditor",
        "editor",
        "COMMON_EDITORS",
        "addWorkspaceToArgumentsIfExists",
        "args",
        "workspace",
        "unshift",
        "getArgumentsForLineNumber",
        "fileName",
        "lineNumber",
        "basename",
        "guessEditor",
        "process",
        "env",
        "REACT_EDITOR",
        "parse",
        "platform",
        "output",
        "execSync",
        "toString",
        "processNames",
        "Object",
        "keys",
        "i",
        "length",
        "processName",
        "indexOf",
        "error",
        "VISUAL",
        "EDITOR",
        "printInstructions",
        "title",
        "console",
        "log",
        "bgBlue",
        "white",
        "bold",
        "join",
        "transformToAbsolutePathIfNeeded",
        "pathName",
        "resolve",
        "cwd",
        "findRootForFile",
        "projectRoots",
        "find",
        "root",
        "startsWith",
        "sep",
        "_childProcess",
        "launchEditor",
        "existsSync",
        "isNaN",
        "concat",
        "push",
        "underline",
        "kill",
        "spawn",
        "stdio",
        "on",
        "errorCode",
        "red",
        "message",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "launchEditor.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nvar chalk = require('chalk');\nvar fs = require('fs');\nvar path = require('path');\nvar child_process = require('child_process');\nconst isAbsolutePath = require('absolute-path');\nconst shellQuote = require('shell-quote');\n\nfunction isTerminalEditor(editor) {\n  switch (editor) {\n    case 'vim':\n    case 'emacs':\n    case 'nano':\n      return true;\n  }\n  return false;\n}\n\n// Map from full process name to binary that starts the process\n// We can't just re-use full process name, because it will spawn a new instance\n// of the app every time\nvar COMMON_EDITORS = {\n  '/Applications/Atom.app/Contents/MacOS/Atom': 'atom',\n  '/Applications/Atom Beta.app/Contents/MacOS/Atom Beta':\n    '/Applications/Atom Beta.app/Contents/MacOS/Atom Beta',\n  '/Applications/IntelliJ IDEA.app/Contents/MacOS/idea': 'idea',\n  '/Applications/Sublime Text.app/Contents/MacOS/Sublime Text':\n    '/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl',\n  '/Applications/Sublime Text 2.app/Contents/MacOS/Sublime Text 2':\n    '/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl',\n  '/Applications/Visual Studio Code.app/Contents/MacOS/Electron': 'code',\n  '/Applications/WebStorm.app/Contents/MacOS/webstorm': 'webstorm',\n};\n\nfunction addWorkspaceToArgumentsIfExists(args, workspace) {\n  if (workspace) {\n    args.unshift(workspace);\n  }\n  return args;\n}\n\nfunction getArgumentsForLineNumber(editor, fileName, lineNumber, workspace) {\n  switch (path.basename(editor)) {\n    case 'vim':\n    case 'mvim':\n      return [fileName, '+' + lineNumber];\n    case 'atom':\n    case 'Atom':\n    case 'Atom Beta':\n    case 'subl':\n    case 'sublime':\n    case 'webstorm':\n    case 'wstorm':\n    case 'appcode':\n    case 'charm':\n    case 'idea':\n      return [fileName + ':' + lineNumber];\n    case 'joe':\n    case 'emacs':\n    case 'emacsclient':\n      return ['+' + lineNumber, fileName];\n    case 'rmate':\n    case 'mate':\n    case 'mine':\n      return ['--line', lineNumber, fileName];\n    case 'code':\n      return addWorkspaceToArgumentsIfExists(['-g', fileName + ':' + lineNumber], workspace);\n  }\n\n  // For all others, drop the lineNumber until we have\n  // a mapping above, since providing the lineNumber incorrectly\n  // can result in errors or confusing behavior.\n  return [fileName];\n}\n\nfunction guessEditor() {\n  // Explicit config always wins\n  if (process.env.REACT_EDITOR) {\n    return shellQuote.parse(process.env.REACT_EDITOR);\n  }\n\n  // Using `ps x` on OSX we can find out which editor is currently running.\n  // Potentially we could use similar technique for Windows and Linux\n  if (process.platform === 'darwin') {\n    try {\n      var output = child_process.execSync('ps x').toString();\n      var processNames = Object.keys(COMMON_EDITORS);\n      for (var i = 0; i < processNames.length; i++) {\n        var processName = processNames[i];\n        if (output.indexOf(processName) !== -1) {\n          return [COMMON_EDITORS[processName]];\n        }\n      }\n    } catch (error) {\n      // Ignore...\n    }\n  }\n\n  // Last resort, use old skool env vars\n  if (process.env.VISUAL) {\n    return [process.env.VISUAL];\n  } else if (process.env.EDITOR) {\n    return [process.env.EDITOR];\n  }\n\n  return [null];\n}\n\nfunction printInstructions(title) {\n  console.log([\n    '',\n    chalk.bgBlue.white.bold(' ' + title + ' '),\n    '  When you see Red Box with stack trace, you can click any ',\n    '  stack frame to jump to the source file. The packager will launch your ',\n    '  editor of choice. It will first look at REACT_EDITOR environment ',\n    '  variable, then at EDITOR. To set it up, you can add something like ',\n    '  export REACT_EDITOR=atom to your ~/.bashrc or ~/.zshrc depending on ',\n    '  which shell you use.',\n    ''\n  ].join('\\n'));\n}\n\nfunction transformToAbsolutePathIfNeeded(pathName) {\n  if (!isAbsolutePath(pathName)) {\n    pathName = path.resolve(process.cwd(), pathName);\n  }\n  return pathName;\n}\n\nfunction findRootForFile(projectRoots, fileName) {\n  fileName = transformToAbsolutePathIfNeeded(fileName);\n  return projectRoots.find((root) => {\n    root = transformToAbsolutePathIfNeeded(root);\n    return fileName.startsWith(root + path.sep);\n  });\n}\n\nvar _childProcess = null;\nfunction launchEditor(fileName, lineNumber, projectRoots) {\n  if (!fs.existsSync(fileName)) {\n    return;\n  }\n\n  // Sanitize lineNumber to prevent malicious use on win32\n  // via: https://github.com/nodejs/node/blob/c3bb4b1aa5e907d489619fb43d233c3336bfc03d/lib/child_process.js#L333\n  if (lineNumber && isNaN(lineNumber)) {\n    return;\n  }\n\n  let [editor, ...args] = guessEditor();\n  if (!editor) {\n    printInstructions('PRO TIP');\n    return;\n  }\n\n  var workspace = findRootForFile(projectRoots, fileName);\n  if (lineNumber) {\n    args = args.concat(getArgumentsForLineNumber(editor, fileName, lineNumber, workspace));\n  } else {\n    args.push(fileName);\n  }\n  console.log('Opening ' + chalk.underline(fileName) + ' with ' + chalk.bold(editor));\n\n  if (_childProcess && isTerminalEditor(editor)) {\n    // There's an existing editor process already and it's attached\n    // to the terminal, so go kill it. Otherwise two separate editor\n    // instances attach to the stdin/stdout which gets confusing.\n    _childProcess.kill('SIGKILL');\n  }\n\n  if (process.platform === 'win32') {\n    // On Windows, launch the editor in a shell because spawn can only\n    // launch .exe files.\n    _childProcess = child_process.spawn('cmd.exe', ['/C', editor].concat(args), {stdio: 'inherit'});\n  } else {\n    _childProcess = child_process.spawn(editor, args, {stdio: 'inherit'});\n  }\n  _childProcess.on('exit', function(errorCode) {\n    _childProcess = null;\n\n    if (errorCode) {\n      console.log(chalk.red('Your editor exited with an error!'));\n      printInstructions('Keep these instructions in mind:');\n    }\n  });\n\n  _childProcess.on('error', function(error) {\n    console.log(chalk.red(error.message));\n    printInstructions('How to fix:');\n  });\n}\n\nmodule.exports = launchEditor;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/statusPageMiddleware.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/statusPageMiddleware.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/statusPageMiddleware.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "statusPageMiddleware.js",
      "sourceFileName": "statusPageMiddleware.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "statusPageMiddleware"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\n/**\n               * Status page so that anyone who needs to can verify that the packager is\n               * running on 8081 and not another program / service.\n               */\nmodule.exports = function (req, res, next) {\n  if (req.url === '/status') {\n    res.end('packager-status:running');\n  } else {\n    next();\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXR1c1BhZ2VNaWRkbGV3YXJlLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyZXEiLCJyZXMiLCJuZXh0IiwidXJsIiwiZW5kIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTs7QUFFQTs7OztBQUlBQSxPQUFPQyxPQUFQLEdBQWlCLFVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDeEMsTUFBSUYsSUFBSUcsR0FBSixLQUFZLFNBQWhCLEVBQTJCO0FBQ3pCRixRQUFJRyxHQUFKLENBQVEseUJBQVI7QUFDRCxHQUZELE1BRU87QUFDTEY7QUFDRDtBQUNGLENBTkQiLCJmaWxlIjoic3RhdHVzUGFnZU1pZGRsZXdhcmUuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvc2VydmVyL21pZGRsZXdhcmUiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTdGF0dXMgcGFnZSBzbyB0aGF0IGFueW9uZSB3aG8gbmVlZHMgdG8gY2FuIHZlcmlmeSB0aGF0IHRoZSBwYWNrYWdlciBpc1xuICogcnVubmluZyBvbiA4MDgxIGFuZCBub3QgYW5vdGhlciBwcm9ncmFtIC8gc2VydmljZS5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICBpZiAocmVxLnVybCA9PT0gJy9zdGF0dXMnKSB7XG4gICAgcmVzLmVuZCgncGFja2FnZXItc3RhdHVzOnJ1bm5pbmcnKTtcbiAgfSBlbHNlIHtcbiAgICBuZXh0KCk7XG4gIH1cbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "statusPageMiddleware.js"
      ],
      "names": [
        "module",
        "exports",
        "req",
        "res",
        "next",
        "url",
        "end"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA;;;;AAIAA,OAAOC,OAAP,GAAiB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACxC,MAAIF,IAAIG,GAAJ,KAAY,SAAhB,EAA2B;AACzBF,QAAIG,GAAJ,CAAQ,yBAAR;AACD,GAFD,MAEO;AACLF;AACD;AACF,CAND",
      "file": "statusPageMiddleware.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\n/**\n * Status page so that anyone who needs to can verify that the packager is\n * running on 8081 and not another program / service.\n */\nmodule.exports = function(req, res, next) {\n  if (req.url === '/status') {\n    res.end('packager-status:running');\n  } else {\n    next();\n  }\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/systraceProfileMiddleware.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/systraceProfileMiddleware.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware/systraceProfileMiddleware.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "systraceProfileMiddleware.js",
      "sourceFileName": "systraceProfileMiddleware.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "systraceProfileMiddleware"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\n\nmodule.exports = function (req, res, next) {\n  if (req.url !== '/systrace') {\n    next();\n    return;\n  }\n\n  console.log('Dumping profile information...');\n  var dumpName = '/tmp/dump_' + Date.now() + '.json';\n  fs.writeFileSync(dumpName, req.rawBody);\n  var response =\n  'Your profile was saved at:\\n' + dumpName + '\\n\\n' +\n  'On Google Chrome navigate to chrome://tracing and then click on \"load\" ' +\n  'to load and visualise your profile.\\n\\n' +\n  'This message is also printed to your console by the packager so you can copy it :)';\n  console.log(response);\n  res.end(response);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN5c3RyYWNlUHJvZmlsZU1pZGRsZXdhcmUuanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcSIsInJlcyIsIm5leHQiLCJ1cmwiLCJjb25zb2xlIiwibG9nIiwiZHVtcE5hbWUiLCJEYXRlIiwibm93Iiwid3JpdGVGaWxlU3luYyIsInJhd0JvZHkiLCJyZXNwb25zZSIsImVuZCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUEsTUFBTUEsS0FBS0MsUUFBUSxJQUFSLENBQVg7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUIsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUN4QyxNQUFJRixJQUFJRyxHQUFKLEtBQVksV0FBaEIsRUFBNkI7QUFDM0JEO0FBQ0E7QUFDRDs7QUFFREUsVUFBUUMsR0FBUixDQUFZLGdDQUFaO0FBQ0EsTUFBSUMsV0FBVyxlQUFlQyxLQUFLQyxHQUFMLEVBQWYsR0FBNEIsT0FBM0M7QUFDQVosS0FBR2EsYUFBSCxDQUFpQkgsUUFBakIsRUFBMkJOLElBQUlVLE9BQS9CO0FBQ0EsTUFBSUM7QUFDRixtQ0FBaUNMLFFBQWpDLEdBQTRDLE1BQTVDO0FBQ0EsMkVBREE7QUFFQSwyQ0FGQTtBQUdBLHNGQUpGO0FBS0FGLFVBQVFDLEdBQVIsQ0FBWU0sUUFBWjtBQUNBVixNQUFJVyxHQUFKLENBQVFELFFBQVI7QUFDRCxDQWhCRCIsImZpbGUiOiJzeXN0cmFjZVByb2ZpbGVNaWRkbGV3YXJlLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL3NlcnZlci9taWRkbGV3YXJlIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICBpZiAocmVxLnVybCAhPT0gJy9zeXN0cmFjZScpIHtcbiAgICBuZXh0KCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc29sZS5sb2coJ0R1bXBpbmcgcHJvZmlsZSBpbmZvcm1hdGlvbi4uLicpO1xuICB2YXIgZHVtcE5hbWUgPSAnL3RtcC9kdW1wXycgKyBEYXRlLm5vdygpICsgJy5qc29uJztcbiAgZnMud3JpdGVGaWxlU3luYyhkdW1wTmFtZSwgcmVxLnJhd0JvZHkpO1xuICB2YXIgcmVzcG9uc2UgPVxuICAgICdZb3VyIHByb2ZpbGUgd2FzIHNhdmVkIGF0OlxcbicgKyBkdW1wTmFtZSArICdcXG5cXG4nICtcbiAgICAnT24gR29vZ2xlIENocm9tZSBuYXZpZ2F0ZSB0byBjaHJvbWU6Ly90cmFjaW5nIGFuZCB0aGVuIGNsaWNrIG9uIFwibG9hZFwiICcgK1xuICAgICd0byBsb2FkIGFuZCB2aXN1YWxpc2UgeW91ciBwcm9maWxlLlxcblxcbicgK1xuICAgICdUaGlzIG1lc3NhZ2UgaXMgYWxzbyBwcmludGVkIHRvIHlvdXIgY29uc29sZSBieSB0aGUgcGFja2FnZXIgc28geW91IGNhbiBjb3B5IGl0IDopJztcbiAgY29uc29sZS5sb2cocmVzcG9uc2UpO1xuICByZXMuZW5kKHJlc3BvbnNlKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "systraceProfileMiddleware.js"
      ],
      "names": [
        "fs",
        "require",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "url",
        "console",
        "log",
        "dumpName",
        "Date",
        "now",
        "writeFileSync",
        "rawBody",
        "response",
        "end"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;;AAEAC,OAAOC,OAAP,GAAiB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACxC,MAAIF,IAAIG,GAAJ,KAAY,WAAhB,EAA6B;AAC3BD;AACA;AACD;;AAEDE,UAAQC,GAAR,CAAY,gCAAZ;AACA,MAAIC,WAAW,eAAeC,KAAKC,GAAL,EAAf,GAA4B,OAA3C;AACAZ,KAAGa,aAAH,CAAiBH,QAAjB,EAA2BN,IAAIU,OAA/B;AACA,MAAIC;AACF,mCAAiCL,QAAjC,GAA4C,MAA5C;AACA,2EADA;AAEA,2CAFA;AAGA,sFAJF;AAKAF,UAAQC,GAAR,CAAYM,QAAZ;AACAV,MAAIW,GAAJ,CAAQD,QAAR;AACD,CAhBD",
      "file": "systraceProfileMiddleware.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/middleware",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\n\nmodule.exports = function(req, res, next) {\n  if (req.url !== '/systrace') {\n    next();\n    return;\n  }\n\n  console.log('Dumping profile information...');\n  var dumpName = '/tmp/dump_' + Date.now() + '.json';\n  fs.writeFileSync(dumpName, req.rawBody);\n  var response =\n    'Your profile was saved at:\\n' + dumpName + '\\n\\n' +\n    'On Google Chrome navigate to chrome://tracing and then click on \"load\" ' +\n    'to load and visualise your profile.\\n\\n' +\n    'This message is also printed to your console by the packager so you can copy it :)';\n  console.log(response);\n  res.end(response);\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/webSocketProxy.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/webSocketProxy.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util/webSocketProxy.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "webSocketProxy.js",
      "sourceFileName": "webSocketProxy.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "webSocketProxy"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\n\nfunction attachToServer(server, path) {\n  var WebSocketServer = require('ws').Server;\n  var wss = new WebSocketServer({\n    server: server,\n    path: path });\n\n  var debuggerSocket, clientSocket;\n\n  function send(dest, message) {\n    if (!dest) {\n      return;\n    }\n\n    try {\n      dest.send(message);\n    } catch (e) {\n      console.warn(e);\n      // Sometimes this call throws 'not opened'\n    }\n  }\n\n  wss.on('connection', function (ws) {\n    const { url } = ws.upgradeReq;\n\n    if (url.indexOf('role=debugger') > -1) {\n      if (debuggerSocket) {\n        ws.close(1011, 'Another debugger is already connected');\n        return;\n      }\n      debuggerSocket = ws;\n      debuggerSocket.onerror =\n      debuggerSocket.onclose = () => {\n        debuggerSocket = null;\n        if (clientSocket) {\n          clientSocket.close(1011, 'Debugger was disconnected');\n        }\n      };\n      debuggerSocket.onmessage = ({ data }) => send(clientSocket, data);\n    } else if (url.indexOf('role=client') > -1) {\n      if (clientSocket) {\n        clientSocket.onerror = clientSocket.onclose = clientSocket.onmessage = null;\n        clientSocket.close(1011, 'Another client connected');\n      }\n      clientSocket = ws;\n      clientSocket.onerror =\n      clientSocket.onclose = () => {\n        clientSocket = null;\n        send(debuggerSocket, JSON.stringify({ method: '$disconnected' }));\n      };\n      clientSocket.onmessage = ({ data }) => send(debuggerSocket, data);\n    } else {\n      ws.close(1011, 'Missing role param');\n    }\n  });\n\n  return {\n    server: wss,\n    isChromeConnected: function () {\n      return !!debuggerSocket;\n    } };\n\n}\n\nmodule.exports = {\n  attachToServer: attachToServer };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYlNvY2tldFByb3h5LmpzIl0sIm5hbWVzIjpbImF0dGFjaFRvU2VydmVyIiwic2VydmVyIiwicGF0aCIsIldlYlNvY2tldFNlcnZlciIsInJlcXVpcmUiLCJTZXJ2ZXIiLCJ3c3MiLCJkZWJ1Z2dlclNvY2tldCIsImNsaWVudFNvY2tldCIsInNlbmQiLCJkZXN0IiwibWVzc2FnZSIsImUiLCJjb25zb2xlIiwid2FybiIsIm9uIiwid3MiLCJ1cmwiLCJ1cGdyYWRlUmVxIiwiaW5kZXhPZiIsImNsb3NlIiwib25lcnJvciIsIm9uY2xvc2UiLCJvbm1lc3NhZ2UiLCJkYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsIm1ldGhvZCIsImlzQ2hyb21lQ29ubmVjdGVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7OztBQUdBLFNBQVNBLGNBQVQsQ0FBd0JDLE1BQXhCLEVBQWdDQyxJQUFoQyxFQUFzQztBQUNwQyxNQUFJQyxrQkFBa0JDLFFBQVEsSUFBUixFQUFjQyxNQUFwQztBQUNBLE1BQUlDLE1BQU0sSUFBSUgsZUFBSixDQUFvQjtBQUM1QkYsWUFBUUEsTUFEb0I7QUFFNUJDLFVBQU1BLElBRnNCLEVBQXBCLENBQVY7O0FBSUEsTUFBSUssY0FBSixFQUFvQkMsWUFBcEI7O0FBRUEsV0FBU0MsSUFBVCxDQUFjQyxJQUFkLEVBQW9CQyxPQUFwQixFQUE2QjtBQUMzQixRQUFJLENBQUNELElBQUwsRUFBVztBQUNUO0FBQ0Q7O0FBRUQsUUFBSTtBQUNGQSxXQUFLRCxJQUFMLENBQVVFLE9BQVY7QUFDRCxLQUZELENBRUUsT0FBT0MsQ0FBUCxFQUFVO0FBQ1ZDLGNBQVFDLElBQVIsQ0FBYUYsQ0FBYjtBQUNBO0FBQ0Q7QUFDRjs7QUFFRE4sTUFBSVMsRUFBSixDQUFPLFlBQVAsRUFBcUIsVUFBU0MsRUFBVCxFQUFhO0FBQ2hDLFVBQU0sRUFBQ0MsR0FBRCxLQUFRRCxHQUFHRSxVQUFqQjs7QUFFQSxRQUFJRCxJQUFJRSxPQUFKLENBQVksZUFBWixJQUErQixDQUFDLENBQXBDLEVBQXVDO0FBQ3JDLFVBQUlaLGNBQUosRUFBb0I7QUFDbEJTLFdBQUdJLEtBQUgsQ0FBUyxJQUFULEVBQWUsdUNBQWY7QUFDQTtBQUNEO0FBQ0RiLHVCQUFpQlMsRUFBakI7QUFDQVQscUJBQWVjLE9BQWY7QUFDQWQscUJBQWVlLE9BQWYsR0FBeUIsTUFBTTtBQUM3QmYseUJBQWlCLElBQWpCO0FBQ0EsWUFBSUMsWUFBSixFQUFrQjtBQUNoQkEsdUJBQWFZLEtBQWIsQ0FBbUIsSUFBbkIsRUFBeUIsMkJBQXpCO0FBQ0Q7QUFDRixPQU5EO0FBT0FiLHFCQUFlZ0IsU0FBZixHQUEyQixDQUFDLEVBQUNDLElBQUQsRUFBRCxLQUFZZixLQUFLRCxZQUFMLEVBQW1CZ0IsSUFBbkIsQ0FBdkM7QUFDRCxLQWRELE1BY08sSUFBSVAsSUFBSUUsT0FBSixDQUFZLGFBQVosSUFBNkIsQ0FBQyxDQUFsQyxFQUFxQztBQUMxQyxVQUFJWCxZQUFKLEVBQWtCO0FBQ2hCQSxxQkFBYWEsT0FBYixHQUF1QmIsYUFBYWMsT0FBYixHQUF1QmQsYUFBYWUsU0FBYixHQUF5QixJQUF2RTtBQUNBZixxQkFBYVksS0FBYixDQUFtQixJQUFuQixFQUF5QiwwQkFBekI7QUFDRDtBQUNEWixxQkFBZVEsRUFBZjtBQUNBUixtQkFBYWEsT0FBYjtBQUNBYixtQkFBYWMsT0FBYixHQUF1QixNQUFNO0FBQzNCZCx1QkFBZSxJQUFmO0FBQ0FDLGFBQUtGLGNBQUwsRUFBcUJrQixLQUFLQyxTQUFMLENBQWUsRUFBQ0MsUUFBUSxlQUFULEVBQWYsQ0FBckI7QUFDRCxPQUpEO0FBS0FuQixtQkFBYWUsU0FBYixHQUF5QixDQUFDLEVBQUNDLElBQUQsRUFBRCxLQUFZZixLQUFLRixjQUFMLEVBQXFCaUIsSUFBckIsQ0FBckM7QUFDRCxLQVpNLE1BWUE7QUFDTFIsU0FBR0ksS0FBSCxDQUFTLElBQVQsRUFBZSxvQkFBZjtBQUNEO0FBQ0YsR0FoQ0Q7O0FBa0NBLFNBQU87QUFDTG5CLFlBQVFLLEdBREg7QUFFTHNCLHVCQUFtQixZQUFXO0FBQzVCLGFBQU8sQ0FBQyxDQUFDckIsY0FBVDtBQUNELEtBSkksRUFBUDs7QUFNRDs7QUFFRHNCLE9BQU9DLE9BQVAsR0FBaUI7QUFDZjlCLGtCQUFnQkEsY0FERCxFQUFqQiIsImZpbGUiOiJ3ZWJTb2NrZXRQcm94eS5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9zZXJ2ZXIvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5cbmZ1bmN0aW9uIGF0dGFjaFRvU2VydmVyKHNlcnZlciwgcGF0aCkge1xuICB2YXIgV2ViU29ja2V0U2VydmVyID0gcmVxdWlyZSgnd3MnKS5TZXJ2ZXI7XG4gIHZhciB3c3MgPSBuZXcgV2ViU29ja2V0U2VydmVyKHtcbiAgICBzZXJ2ZXI6IHNlcnZlcixcbiAgICBwYXRoOiBwYXRoXG4gIH0pO1xuICB2YXIgZGVidWdnZXJTb2NrZXQsIGNsaWVudFNvY2tldDtcblxuICBmdW5jdGlvbiBzZW5kKGRlc3QsIG1lc3NhZ2UpIHtcbiAgICBpZiAoIWRlc3QpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgZGVzdC5zZW5kKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUud2FybihlKTtcbiAgICAgIC8vIFNvbWV0aW1lcyB0aGlzIGNhbGwgdGhyb3dzICdub3Qgb3BlbmVkJ1xuICAgIH1cbiAgfVxuXG4gIHdzcy5vbignY29ubmVjdGlvbicsIGZ1bmN0aW9uKHdzKSB7XG4gICAgY29uc3Qge3VybH0gPSB3cy51cGdyYWRlUmVxO1xuXG4gICAgaWYgKHVybC5pbmRleE9mKCdyb2xlPWRlYnVnZ2VyJykgPiAtMSkge1xuICAgICAgaWYgKGRlYnVnZ2VyU29ja2V0KSB7XG4gICAgICAgIHdzLmNsb3NlKDEwMTEsICdBbm90aGVyIGRlYnVnZ2VyIGlzIGFscmVhZHkgY29ubmVjdGVkJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGRlYnVnZ2VyU29ja2V0ID0gd3M7XG4gICAgICBkZWJ1Z2dlclNvY2tldC5vbmVycm9yID1cbiAgICAgIGRlYnVnZ2VyU29ja2V0Lm9uY2xvc2UgPSAoKSA9PiB7XG4gICAgICAgIGRlYnVnZ2VyU29ja2V0ID0gbnVsbDtcbiAgICAgICAgaWYgKGNsaWVudFNvY2tldCkge1xuICAgICAgICAgIGNsaWVudFNvY2tldC5jbG9zZSgxMDExLCAnRGVidWdnZXIgd2FzIGRpc2Nvbm5lY3RlZCcpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgZGVidWdnZXJTb2NrZXQub25tZXNzYWdlID0gKHtkYXRhfSkgPT4gc2VuZChjbGllbnRTb2NrZXQsIGRhdGEpO1xuICAgIH0gZWxzZSBpZiAodXJsLmluZGV4T2YoJ3JvbGU9Y2xpZW50JykgPiAtMSkge1xuICAgICAgaWYgKGNsaWVudFNvY2tldCkge1xuICAgICAgICBjbGllbnRTb2NrZXQub25lcnJvciA9IGNsaWVudFNvY2tldC5vbmNsb3NlID0gY2xpZW50U29ja2V0Lm9ubWVzc2FnZSA9IG51bGw7XG4gICAgICAgIGNsaWVudFNvY2tldC5jbG9zZSgxMDExLCAnQW5vdGhlciBjbGllbnQgY29ubmVjdGVkJyk7XG4gICAgICB9XG4gICAgICBjbGllbnRTb2NrZXQgPSB3cztcbiAgICAgIGNsaWVudFNvY2tldC5vbmVycm9yID1cbiAgICAgIGNsaWVudFNvY2tldC5vbmNsb3NlID0gKCkgPT4ge1xuICAgICAgICBjbGllbnRTb2NrZXQgPSBudWxsO1xuICAgICAgICBzZW5kKGRlYnVnZ2VyU29ja2V0LCBKU09OLnN0cmluZ2lmeSh7bWV0aG9kOiAnJGRpc2Nvbm5lY3RlZCd9KSk7XG4gICAgICB9O1xuICAgICAgY2xpZW50U29ja2V0Lm9ubWVzc2FnZSA9ICh7ZGF0YX0pID0+IHNlbmQoZGVidWdnZXJTb2NrZXQsIGRhdGEpO1xuICAgIH0gZWxzZSB7XG4gICAgICB3cy5jbG9zZSgxMDExLCAnTWlzc2luZyByb2xlIHBhcmFtJyk7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4ge1xuICAgIHNlcnZlcjogd3NzLFxuICAgIGlzQ2hyb21lQ29ubmVjdGVkOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAhIWRlYnVnZ2VyU29ja2V0O1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGF0dGFjaFRvU2VydmVyOiBhdHRhY2hUb1NlcnZlclxufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "webSocketProxy.js"
      ],
      "names": [
        "attachToServer",
        "server",
        "path",
        "WebSocketServer",
        "require",
        "Server",
        "wss",
        "debuggerSocket",
        "clientSocket",
        "send",
        "dest",
        "message",
        "e",
        "console",
        "warn",
        "on",
        "ws",
        "url",
        "upgradeReq",
        "indexOf",
        "close",
        "onerror",
        "onclose",
        "onmessage",
        "data",
        "JSON",
        "stringify",
        "method",
        "isChromeConnected",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;;AAGA,SAASA,cAAT,CAAwBC,MAAxB,EAAgCC,IAAhC,EAAsC;AACpC,MAAIC,kBAAkBC,QAAQ,IAAR,EAAcC,MAApC;AACA,MAAIC,MAAM,IAAIH,eAAJ,CAAoB;AAC5BF,YAAQA,MADoB;AAE5BC,UAAMA,IAFsB,EAApB,CAAV;;AAIA,MAAIK,cAAJ,EAAoBC,YAApB;;AAEA,WAASC,IAAT,CAAcC,IAAd,EAAoBC,OAApB,EAA6B;AAC3B,QAAI,CAACD,IAAL,EAAW;AACT;AACD;;AAED,QAAI;AACFA,WAAKD,IAAL,CAAUE,OAAV;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,cAAQC,IAAR,CAAaF,CAAb;AACA;AACD;AACF;;AAEDN,MAAIS,EAAJ,CAAO,YAAP,EAAqB,UAASC,EAAT,EAAa;AAChC,UAAM,EAACC,GAAD,KAAQD,GAAGE,UAAjB;;AAEA,QAAID,IAAIE,OAAJ,CAAY,eAAZ,IAA+B,CAAC,CAApC,EAAuC;AACrC,UAAIZ,cAAJ,EAAoB;AAClBS,WAAGI,KAAH,CAAS,IAAT,EAAe,uCAAf;AACA;AACD;AACDb,uBAAiBS,EAAjB;AACAT,qBAAec,OAAf;AACAd,qBAAee,OAAf,GAAyB,MAAM;AAC7Bf,yBAAiB,IAAjB;AACA,YAAIC,YAAJ,EAAkB;AAChBA,uBAAaY,KAAb,CAAmB,IAAnB,EAAyB,2BAAzB;AACD;AACF,OAND;AAOAb,qBAAegB,SAAf,GAA2B,CAAC,EAACC,IAAD,EAAD,KAAYf,KAAKD,YAAL,EAAmBgB,IAAnB,CAAvC;AACD,KAdD,MAcO,IAAIP,IAAIE,OAAJ,CAAY,aAAZ,IAA6B,CAAC,CAAlC,EAAqC;AAC1C,UAAIX,YAAJ,EAAkB;AAChBA,qBAAaa,OAAb,GAAuBb,aAAac,OAAb,GAAuBd,aAAae,SAAb,GAAyB,IAAvE;AACAf,qBAAaY,KAAb,CAAmB,IAAnB,EAAyB,0BAAzB;AACD;AACDZ,qBAAeQ,EAAf;AACAR,mBAAaa,OAAb;AACAb,mBAAac,OAAb,GAAuB,MAAM;AAC3Bd,uBAAe,IAAf;AACAC,aAAKF,cAAL,EAAqBkB,KAAKC,SAAL,CAAe,EAACC,QAAQ,eAAT,EAAf,CAArB;AACD,OAJD;AAKAnB,mBAAae,SAAb,GAAyB,CAAC,EAACC,IAAD,EAAD,KAAYf,KAAKF,cAAL,EAAqBiB,IAArB,CAArC;AACD,KAZM,MAYA;AACLR,SAAGI,KAAH,CAAS,IAAT,EAAe,oBAAf;AACD;AACF,GAhCD;;AAkCA,SAAO;AACLnB,YAAQK,GADH;AAELsB,uBAAmB,YAAW;AAC5B,aAAO,CAAC,CAACrB,cAAT;AACD,KAJI,EAAP;;AAMD;;AAEDsB,OAAOC,OAAP,GAAiB;AACf9B,kBAAgBA,cADD,EAAjB",
      "file": "webSocketProxy.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/server/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\n\nfunction attachToServer(server, path) {\n  var WebSocketServer = require('ws').Server;\n  var wss = new WebSocketServer({\n    server: server,\n    path: path\n  });\n  var debuggerSocket, clientSocket;\n\n  function send(dest, message) {\n    if (!dest) {\n      return;\n    }\n\n    try {\n      dest.send(message);\n    } catch (e) {\n      console.warn(e);\n      // Sometimes this call throws 'not opened'\n    }\n  }\n\n  wss.on('connection', function(ws) {\n    const {url} = ws.upgradeReq;\n\n    if (url.indexOf('role=debugger') > -1) {\n      if (debuggerSocket) {\n        ws.close(1011, 'Another debugger is already connected');\n        return;\n      }\n      debuggerSocket = ws;\n      debuggerSocket.onerror =\n      debuggerSocket.onclose = () => {\n        debuggerSocket = null;\n        if (clientSocket) {\n          clientSocket.close(1011, 'Debugger was disconnected');\n        }\n      };\n      debuggerSocket.onmessage = ({data}) => send(clientSocket, data);\n    } else if (url.indexOf('role=client') > -1) {\n      if (clientSocket) {\n        clientSocket.onerror = clientSocket.onclose = clientSocket.onmessage = null;\n        clientSocket.close(1011, 'Another client connected');\n      }\n      clientSocket = ws;\n      clientSocket.onerror =\n      clientSocket.onclose = () => {\n        clientSocket = null;\n        send(debuggerSocket, JSON.stringify({method: '$disconnected'}));\n      };\n      clientSocket.onmessage = ({data}) => send(debuggerSocket, data);\n    } else {\n      ws.close(1011, 'Missing role param');\n    }\n  });\n\n  return {\n    server: wss,\n    isChromeConnected: function() {\n      return !!debuggerSocket;\n    }\n  };\n}\n\nmodule.exports = {\n  attachToServer: attachToServer\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/Constants.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/Constants.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core/Constants.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "Constants.js",
      "sourceFileName": "Constants.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "Constants"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n * @format\n */\n\n'use strict';\n\nconst ASSET_REGISTRY_PATH = 'react-native/Libraries/Image/AssetRegistry';\nconst ASSET_SOURCE_RESOLVER_PATH =\n'react-native/Libraries/Image/AssetSourceResolver';\n\nmodule.exports = {\n  ASSET_REGISTRY_PATH,\n  ASSET_SOURCE_RESOLVER_PATH };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbnN0YW50cy5qcyJdLCJuYW1lcyI6WyJBU1NFVF9SRUdJU1RSWV9QQVRIIiwiQVNTRVRfU09VUkNFX1JFU09MVkVSX1BBVEgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7O0FBWUE7O0FBRUEsTUFBTUEsc0JBQXNCLDRDQUE1QjtBQUNBLE1BQU1DO0FBQ0osa0RBREY7O0FBR0FDLE9BQU9DLE9BQVAsR0FBaUI7QUFDZkgscUJBRGU7QUFFZkMsNEJBRmUsRUFBakIiLCJmaWxlIjoiQ29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2NvcmUiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNi1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQGZsb3dcbiAqIEBmb3JtYXRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IEFTU0VUX1JFR0lTVFJZX1BBVEggPSAncmVhY3QtbmF0aXZlL0xpYnJhcmllcy9JbWFnZS9Bc3NldFJlZ2lzdHJ5JztcbmNvbnN0IEFTU0VUX1NPVVJDRV9SRVNPTFZFUl9QQVRIID1cbiAgJ3JlYWN0LW5hdGl2ZS9MaWJyYXJpZXMvSW1hZ2UvQXNzZXRTb3VyY2VSZXNvbHZlcic7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBBU1NFVF9SRUdJU1RSWV9QQVRILFxuICBBU1NFVF9TT1VSQ0VfUkVTT0xWRVJfUEFUSCxcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "Constants.js"
      ],
      "names": [
        "ASSET_REGISTRY_PATH",
        "ASSET_SOURCE_RESOLVER_PATH",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;AAYA;;AAEA,MAAMA,sBAAsB,4CAA5B;AACA,MAAMC;AACJ,kDADF;;AAGAC,OAAOC,OAAP,GAAiB;AACfH,qBADe;AAEfC,4BAFe,EAAjB",
      "file": "Constants.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/core",
      "sourcesContent": [
        "/**\n * Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst ASSET_REGISTRY_PATH = 'react-native/Libraries/Image/AssetRegistry';\nconst ASSET_SOURCE_RESOLVER_PATH =\n  'react-native/Libraries/Image/AssetSourceResolver';\n\nmodule.exports = {\n  ASSET_REGISTRY_PATH,\n  ASSET_SOURCE_RESOLVER_PATH,\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS/runIOS.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS/runIOS.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS/runIOS.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "runIOS.js",
      "sourceFileName": "runIOS.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "runIOS"
    },
    "ignored": false,
    "code": "/**\n* Copyright (c) 2015-present, Facebook, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the BSD-style license found in the\n* LICENSE file in the root directory of this source tree. An additional grant\n* of patent rights can be found in the PATENTS file in the same directory.\n*/\n'use strict';\n\nconst child_process = require('child_process');\nconst fs = require('fs');\nconst path = require('path');\nconst findXcodeProject = require('./findXcodeProject');\nconst findReactNativeScripts = require('../util/findReactNativeScripts');\nconst parseIOSDevicesList = require('./parseIOSDevicesList');\nconst findMatchingSimulator = require('./findMatchingSimulator');\nconst getBuildPath = function (configuration = 'Debug', appName, isDevice) {\n  return `build/Build/Products/${configuration}-${isDevice ? 'iphoneos' : 'iphonesimulator'}/${appName}.app`;\n};\nconst xcprettyAvailable = function () {\n  try {\n    child_process.execSync('xcpretty --version', {\n      stdio: [0, 'pipe', 'ignore'] });\n\n  } catch (error) {\n    return false;\n  }\n  return true;\n};\n\nfunction runIOS(argv, config, args) {\n  if (!fs.existsSync(args.projectPath)) {\n    const reactNativeScriptsPath = findReactNativeScripts();\n    if (reactNativeScriptsPath) {\n      child_process.spawnSync(\n      reactNativeScriptsPath,\n      ['ios'].concat(process.argv.slice(1)),\n      { stdio: 'inherit' });\n\n      return;\n    } else {\n      throw new Error('iOS project folder not found. Are you sure this is a React Native project?');\n    }\n  }\n  process.chdir(args.projectPath);\n  const xcodeProject = findXcodeProject(fs.readdirSync('.'));\n  if (!xcodeProject) {\n    throw new Error('Could not find Xcode project files in ios folder');\n  }\n\n  const inferredSchemeName = path.basename(xcodeProject.name, path.extname(xcodeProject.name));\n  const scheme = args.scheme || inferredSchemeName;\n  console.log(`Found Xcode ${xcodeProject.isWorkspace ? 'workspace' : 'project'} ${xcodeProject.name}`);\n  const devices = parseIOSDevicesList(\n  child_process.execFileSync('xcrun', ['instruments', '-s'], { encoding: 'utf8' }));\n\n  if (args.device) {\n    const selectedDevice = matchingDevice(devices, args.device);\n    if (selectedDevice) {\n      return runOnDevice(selectedDevice, scheme, xcodeProject, args.configuration, args.packager, args.verbose);\n    } else {\n      if (devices && devices.length > 0) {\n        console.log('Could not find device with the name: \"' + args.device + '\".');\n        console.log('Choose one of the following:');\n        printFoundDevices(devices);\n      } else {\n        console.log('No iOS devices connected.');\n      }\n    }\n  } else if (args.udid) {\n    return runOnDeviceByUdid(args, scheme, xcodeProject, devices);\n  } else {\n    return runOnSimulator(xcodeProject, args, scheme);\n  }\n}\n\nfunction runOnDeviceByUdid(args, scheme, xcodeProject, devices) {\n  const selectedDevice = matchingDeviceByUdid(devices, args.udid);\n  if (selectedDevice) {\n    return runOnDevice(selectedDevice, scheme, xcodeProject, args.configuration, args.packager, args.verbose);\n  } else {\n    if (devices && devices.length > 0) {\n      console.log('Could not find device with the udid: \"' + args.udid + '\".');\n      console.log('Choose one of the following:');\n      printFoundDevices(devices);\n    } else {\n      console.log('No iOS devices connected.');\n    }\n  }\n}\n\nfunction runOnSimulator(xcodeProject, args, scheme) {\n  return new Promise(resolve => {\n    try {\n      var simulators = JSON.parse(\n      child_process.execFileSync('xcrun', ['simctl', 'list', '--json', 'devices'], { encoding: 'utf8' }));\n\n    } catch (e) {\n      throw new Error('Could not parse the simulator list output');\n    }\n\n    const selectedSimulator = findMatchingSimulator(simulators, args.simulator);\n    if (!selectedSimulator) {\n      throw new Error(`Could not find ${args.simulator} simulator`);\n    }\n\n    const simulatorFullName = formattedDeviceName(selectedSimulator);\n    console.log(`Launching ${simulatorFullName}...`);\n    try {\n      child_process.spawnSync('xcrun', ['instruments', '-w', selectedSimulator.udid]);\n    } catch (e) {\n      // instruments always fail with 255 because it expects more arguments,\n      // but we want it to only launch the simulator\n    }\n    resolve(selectedSimulator.udid);\n  }).\n  then(udid => buildProject(xcodeProject, udid, scheme, args.configuration, args.packager, args.verbose)).\n  then(appName => {\n    if (!appName) {\n      appName = scheme;\n    }\n    let appPath = getBuildPath(args.configuration, appName);\n    console.log(`Installing ${appPath}`);\n    child_process.spawnSync('xcrun', ['simctl', 'install', 'booted', appPath], { stdio: 'inherit' });\n\n    const bundleID = child_process.execFileSync(\n    '/usr/libexec/PlistBuddy',\n    ['-c', 'Print:CFBundleIdentifier', path.join(appPath, 'Info.plist')],\n    { encoding: 'utf8' }).\n    trim();\n\n    console.log(`Launching ${bundleID}`);\n    child_process.spawnSync('xcrun', ['simctl', 'launch', 'booted', bundleID], { stdio: 'inherit' });\n  });\n}\n\nfunction runOnDevice(selectedDevice, scheme, xcodeProject, configuration, launchPackager, verbose) {\n  return buildProject(xcodeProject, selectedDevice.udid, scheme, configuration, launchPackager, verbose).\n  then(appName => {\n    if (!appName) {\n      appName = scheme;\n    }\n    const iosDeployInstallArgs = [\n    '--bundle', getBuildPath(configuration, appName, true),\n    '--id', selectedDevice.udid,\n    '--justlaunch'];\n\n    console.log(`installing and launching your app on ${selectedDevice.name}...`);\n    const iosDeployOutput = child_process.spawnSync('ios-deploy', iosDeployInstallArgs, { encoding: 'utf8' });\n    if (iosDeployOutput.error) {\n      console.log('');\n      console.log('** INSTALLATION FAILED **');\n      console.log('Make sure you have ios-deploy installed globally.');\n      console.log('(e.g \"npm install -g ios-deploy\")');\n    } else {\n      console.log('** INSTALLATION SUCCEEDED **');\n    }\n  });\n}\n\nfunction buildProject(xcodeProject, udid, scheme, configuration = 'Debug', launchPackager = false, verbose) {\n  return new Promise((resolve, reject) =>\n  {\n    var xcodebuildArgs = [\n    xcodeProject.isWorkspace ? '-workspace' : '-project', xcodeProject.name,\n    '-configuration', configuration,\n    '-scheme', scheme,\n    '-destination', `id=${udid}`,\n    '-derivedDataPath', 'build'];\n\n    console.log(`Building using \"xcodebuild ${xcodebuildArgs.join(' ')}\"`);\n    let xcpretty;\n    if (!verbose) {\n      xcpretty = xcprettyAvailable() && child_process.spawn('xcpretty', [], { stdio: ['pipe', process.stdout, process.stderr] });\n    }\n    const buildProcess = child_process.spawn('xcodebuild', xcodebuildArgs, getProcessOptions(launchPackager));\n    let buildOutput = '';\n    buildProcess.stdout.on('data', function (data) {\n      buildOutput += data.toString();\n      if (xcpretty) {\n        xcpretty.stdin.write(data);\n      } else {\n        console.log(data.toString());\n      }\n    });\n    buildProcess.stderr.on('data', function (data) {\n      console.error(data.toString());\n    });\n    buildProcess.on('close', function (code) {\n      if (xcpretty) {\n        xcpretty.stdin.end();\n      }\n      //FULL_PRODUCT_NAME is the actual file name of the app, which actually comes from the Product Name in the build config, which does not necessary match a scheme name,  example output line: export FULL_PRODUCT_NAME=\"Super App Dev.app\"\n      let productNameMatch = /export FULL_PRODUCT_NAME=\"?(.+).app\"?$/m.exec(buildOutput);\n      if (productNameMatch && productNameMatch.length && productNameMatch.length > 1) {\n        return resolve(productNameMatch[1]); //0 is the full match, 1 is the app name\n      }\n      return buildProcess.error ? reject(buildProcess.error) : resolve();\n    });\n  });\n}\n\nfunction matchingDevice(devices, deviceName) {\n  if (deviceName === true && devices.length === 1)\n  {\n    console.log(`Using first available device ${devices[0].name} due to lack of name supplied.`);\n    return devices[0];\n  }\n  for (let i = devices.length - 1; i >= 0; i--) {\n    if (devices[i].name === deviceName || formattedDeviceName(devices[i]) === deviceName) {\n      return devices[i];\n    }\n  }\n}\n\nfunction matchingDeviceByUdid(devices, udid) {\n  for (let i = devices.length - 1; i >= 0; i--) {\n    if (devices[i].udid === udid) {\n      return devices[i];\n    }\n  }\n}\n\nfunction formattedDeviceName(simulator) {\n  return `${simulator.name} (${simulator.version})`;\n}\n\nfunction printFoundDevices(devices) {\n  for (let i = devices.length - 1; i >= 0; i--) {\n    console.log(devices[i].name + ' Udid: ' + devices[i].udid);\n  }\n}\n\nfunction getProcessOptions(launchPackager) {\n  if (launchPackager) {\n    return {};\n  }\n\n  return {\n    env: Object.assign({}, process.env, { RCT_NO_LAUNCH_PACKAGER: true }) };\n\n}\n\nmodule.exports = {\n  name: 'run-ios',\n  description: 'builds your app and starts it on iOS simulator',\n  func: runIOS,\n  examples: [\n  {\n    desc: 'Run on a different simulator, e.g. iPhone 5',\n    cmd: 'react-native run-ios --simulator \"iPhone 5\"' },\n\n  {\n    desc: 'Pass a non-standard location of iOS directory',\n    cmd: 'react-native run-ios --project-path \"./app/ios\"' },\n\n  {\n    desc: \"Run on a connected device, e.g. Max's iPhone\",\n    cmd: 'react-native run-ios --device \"Max\\'s iPhone\"' }],\n\n\n  options: [{\n    command: '--simulator [string]',\n    description: 'Explicitly set simulator to use',\n    default: 'iPhone 6' },\n  {\n    command: '--configuration [string]',\n    description: 'Explicitly set the scheme configuration to use' },\n  {\n    command: '--scheme [string]',\n    description: 'Explicitly set Xcode scheme to use' },\n  {\n    command: '--project-path [string]',\n    description: 'Path relative to project root where the Xcode project ' +\n    '(.xcodeproj) lives. The default is \\'ios\\'.',\n    default: 'ios' },\n  {\n    command: '--device [string]',\n    description: 'Explicitly set device to use by name.  The value is not required if you have a single device connected.' },\n  {\n    command: '--udid [string]',\n    description: 'Explicitly set device to use by udid' },\n  {\n    command: '--no-packager',\n    description: 'Do not launch packager while building' },\n  {\n    command: '--verbose',\n    description: 'Do not use xcpretty even if installed' }] };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "runIOS.js"
      ],
      "names": [
        "child_process",
        "require",
        "fs",
        "path",
        "findXcodeProject",
        "findReactNativeScripts",
        "parseIOSDevicesList",
        "findMatchingSimulator",
        "getBuildPath",
        "configuration",
        "appName",
        "isDevice",
        "xcprettyAvailable",
        "execSync",
        "stdio",
        "error",
        "runIOS",
        "argv",
        "config",
        "args",
        "existsSync",
        "projectPath",
        "reactNativeScriptsPath",
        "spawnSync",
        "concat",
        "process",
        "slice",
        "Error",
        "chdir",
        "xcodeProject",
        "readdirSync",
        "inferredSchemeName",
        "basename",
        "name",
        "extname",
        "scheme",
        "console",
        "log",
        "isWorkspace",
        "devices",
        "execFileSync",
        "encoding",
        "device",
        "selectedDevice",
        "matchingDevice",
        "runOnDevice",
        "packager",
        "verbose",
        "length",
        "printFoundDevices",
        "udid",
        "runOnDeviceByUdid",
        "runOnSimulator",
        "matchingDeviceByUdid",
        "Promise",
        "resolve",
        "simulators",
        "JSON",
        "parse",
        "e",
        "selectedSimulator",
        "simulator",
        "simulatorFullName",
        "formattedDeviceName",
        "then",
        "buildProject",
        "appPath",
        "bundleID",
        "join",
        "trim",
        "launchPackager",
        "iosDeployInstallArgs",
        "iosDeployOutput",
        "reject",
        "xcodebuildArgs",
        "xcpretty",
        "spawn",
        "stdout",
        "stderr",
        "buildProcess",
        "getProcessOptions",
        "buildOutput",
        "on",
        "data",
        "toString",
        "stdin",
        "write",
        "code",
        "end",
        "productNameMatch",
        "exec",
        "deviceName",
        "i",
        "version",
        "env",
        "Object",
        "assign",
        "RCT_NO_LAUNCH_PACKAGER",
        "module",
        "exports",
        "description",
        "func",
        "examples",
        "desc",
        "cmd",
        "options",
        "command",
        "default"
      ],
      "mappings": "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",
      "file": "runIOS.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS",
      "sourcesContent": [
        "/**\n* Copyright (c) 2015-present, Facebook, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the BSD-style license found in the\n* LICENSE file in the root directory of this source tree. An additional grant\n* of patent rights can be found in the PATENTS file in the same directory.\n*/\n'use strict';\n\nconst child_process = require('child_process');\nconst fs = require('fs');\nconst path = require('path');\nconst findXcodeProject = require('./findXcodeProject');\nconst findReactNativeScripts = require('../util/findReactNativeScripts');\nconst parseIOSDevicesList = require('./parseIOSDevicesList');\nconst findMatchingSimulator = require('./findMatchingSimulator');\nconst getBuildPath = function(configuration = 'Debug', appName, isDevice) {\n  return `build/Build/Products/${configuration}-${isDevice ? 'iphoneos' : 'iphonesimulator'}/${appName}.app`;\n};\nconst xcprettyAvailable = function() {\n  try {\n    child_process.execSync('xcpretty --version', {\n      stdio: [ 0, 'pipe', 'ignore', ]\n    });\n  } catch (error) {\n    return false;\n  }\n  return true;\n};\n\nfunction runIOS(argv, config, args) {\n  if (!fs.existsSync(args.projectPath)) {\n    const reactNativeScriptsPath = findReactNativeScripts();\n    if (reactNativeScriptsPath) {\n      child_process.spawnSync(\n        reactNativeScriptsPath,\n        ['ios'].concat(process.argv.slice(1)),\n        {stdio: 'inherit'}\n      );\n      return;\n    } else {\n      throw new Error('iOS project folder not found. Are you sure this is a React Native project?');\n    }\n  }\n  process.chdir(args.projectPath);\n  const xcodeProject = findXcodeProject(fs.readdirSync('.'));\n  if (!xcodeProject) {\n    throw new Error('Could not find Xcode project files in ios folder');\n  }\n\n  const inferredSchemeName = path.basename(xcodeProject.name, path.extname(xcodeProject.name));\n  const scheme = args.scheme || inferredSchemeName;\n  console.log(`Found Xcode ${xcodeProject.isWorkspace ? 'workspace' : 'project'} ${xcodeProject.name}`);\n  const devices = parseIOSDevicesList(\n    child_process.execFileSync('xcrun', ['instruments', '-s'], {encoding: 'utf8'})\n  );\n  if (args.device) {\n    const selectedDevice = matchingDevice(devices, args.device);\n    if (selectedDevice) {\n      return runOnDevice(selectedDevice, scheme, xcodeProject, args.configuration, args.packager, args.verbose);\n    } else {\n      if (devices && devices.length > 0) {\n        console.log('Could not find device with the name: \"' + args.device + '\".');\n        console.log('Choose one of the following:');\n        printFoundDevices(devices);\n      } else {\n        console.log('No iOS devices connected.');\n      }\n    }\n  } else if (args.udid) {\n    return runOnDeviceByUdid(args, scheme, xcodeProject, devices);\n  } else {\n    return runOnSimulator(xcodeProject, args, scheme);\n  }\n}\n\nfunction runOnDeviceByUdid(args, scheme, xcodeProject, devices) {\n  const selectedDevice = matchingDeviceByUdid(devices, args.udid);\n  if (selectedDevice) {\n    return runOnDevice(selectedDevice, scheme, xcodeProject, args.configuration, args.packager, args.verbose);\n  } else {\n    if (devices && devices.length > 0) {\n      console.log('Could not find device with the udid: \"' + args.udid + '\".');\n      console.log('Choose one of the following:');\n      printFoundDevices(devices);\n    } else {\n      console.log('No iOS devices connected.');\n    }\n  }\n}\n\nfunction runOnSimulator(xcodeProject, args, scheme) {\n  return new Promise((resolve) => {\n    try {\n      var simulators = JSON.parse(\n      child_process.execFileSync('xcrun', ['simctl', 'list', '--json', 'devices'], {encoding: 'utf8'})\n      );\n    } catch (e) {\n      throw new Error('Could not parse the simulator list output');\n    }\n\n    const selectedSimulator = findMatchingSimulator(simulators, args.simulator);\n    if (!selectedSimulator) {\n      throw new Error(`Could not find ${args.simulator} simulator`);\n    }\n\n    const simulatorFullName = formattedDeviceName(selectedSimulator);\n    console.log(`Launching ${simulatorFullName}...`);\n    try {\n      child_process.spawnSync('xcrun', ['instruments', '-w', selectedSimulator.udid]);\n    } catch (e) {\n      // instruments always fail with 255 because it expects more arguments,\n      // but we want it to only launch the simulator\n    }\n    resolve(selectedSimulator.udid);\n  })\n  .then((udid) => buildProject(xcodeProject, udid, scheme, args.configuration, args.packager, args.verbose))\n  .then((appName) => {\n    if (!appName) {\n      appName = scheme;\n    }\n    let appPath = getBuildPath(args.configuration, appName);\n    console.log(`Installing ${appPath}`);\n    child_process.spawnSync('xcrun', ['simctl', 'install', 'booted', appPath], {stdio: 'inherit'});\n\n    const bundleID = child_process.execFileSync(\n      '/usr/libexec/PlistBuddy',\n      ['-c', 'Print:CFBundleIdentifier', path.join(appPath, 'Info.plist')],\n      {encoding: 'utf8'}\n    ).trim();\n\n    console.log(`Launching ${bundleID}`);\n    child_process.spawnSync('xcrun', ['simctl', 'launch', 'booted', bundleID], {stdio: 'inherit'});\n  });\n}\n\nfunction runOnDevice(selectedDevice, scheme, xcodeProject, configuration, launchPackager, verbose) {\n  return buildProject(xcodeProject, selectedDevice.udid, scheme, configuration, launchPackager, verbose)\n  .then((appName) => {\n    if (!appName) {\n      appName = scheme;\n    }\n    const iosDeployInstallArgs = [\n      '--bundle', getBuildPath(configuration, appName, true),\n      '--id' , selectedDevice.udid,\n      '--justlaunch'\n    ];\n    console.log(`installing and launching your app on ${selectedDevice.name}...`);\n    const iosDeployOutput = child_process.spawnSync('ios-deploy', iosDeployInstallArgs, {encoding: 'utf8'});\n    if (iosDeployOutput.error) {\n      console.log('');\n      console.log('** INSTALLATION FAILED **');\n      console.log('Make sure you have ios-deploy installed globally.');\n      console.log('(e.g \"npm install -g ios-deploy\")');\n    } else {\n      console.log('** INSTALLATION SUCCEEDED **');\n    }\n  });\n}\n\nfunction buildProject(xcodeProject, udid, scheme, configuration = 'Debug', launchPackager = false, verbose) {\n  return new Promise((resolve,reject) =>\n  {\n     var xcodebuildArgs = [\n      xcodeProject.isWorkspace ? '-workspace' : '-project', xcodeProject.name,\n      '-configuration', configuration,\n      '-scheme', scheme,\n      '-destination', `id=${udid}`,\n      '-derivedDataPath', 'build',\n    ];\n    console.log(`Building using \"xcodebuild ${xcodebuildArgs.join(' ')}\"`);\n    let xcpretty;\n    if (!verbose) {\n      xcpretty = xcprettyAvailable() && child_process.spawn('xcpretty', [], { stdio: ['pipe', process.stdout, process.stderr] });\n    }\n    const buildProcess = child_process.spawn('xcodebuild', xcodebuildArgs, getProcessOptions(launchPackager));\n    let buildOutput = '';\n    buildProcess.stdout.on('data', function(data) {\n      buildOutput += data.toString();\n      if (xcpretty) {\n        xcpretty.stdin.write(data);\n      } else {\n        console.log(data.toString());\n      }\n    });\n    buildProcess.stderr.on('data', function(data) {\n      console.error(data.toString());\n    });\n    buildProcess.on('close', function(code) {\n      if (xcpretty) {\n        xcpretty.stdin.end();\n      }\n      //FULL_PRODUCT_NAME is the actual file name of the app, which actually comes from the Product Name in the build config, which does not necessary match a scheme name,  example output line: export FULL_PRODUCT_NAME=\"Super App Dev.app\"\n      let productNameMatch = /export FULL_PRODUCT_NAME=\"?(.+).app\"?$/m.exec(buildOutput);\n      if (productNameMatch && productNameMatch.length && productNameMatch.length > 1) {\n        return resolve(productNameMatch[1]);//0 is the full match, 1 is the app name\n      }\n      return buildProcess.error ? reject(buildProcess.error) : resolve();\n    });\n  });\n}\n\nfunction matchingDevice(devices, deviceName) {\n  if (deviceName === true && devices.length === 1)\n  {\n    console.log(`Using first available device ${devices[0].name} due to lack of name supplied.`);\n    return devices[0];\n  }\n  for (let i = devices.length - 1; i >= 0; i--) {\n    if (devices[i].name === deviceName || formattedDeviceName(devices[i]) === deviceName) {\n      return devices[i];\n    }\n  }\n}\n\nfunction matchingDeviceByUdid(devices, udid) {\n  for (let i = devices.length - 1; i >= 0; i--) {\n    if (devices[i].udid === udid) {\n      return devices[i];\n    }\n  }\n}\n\nfunction formattedDeviceName(simulator) {\n  return `${simulator.name} (${simulator.version})`;\n}\n\nfunction printFoundDevices(devices) {\n  for (let i = devices.length - 1; i >= 0; i--) {\n    console.log(devices[i].name + ' Udid: ' + devices[i].udid);\n  }\n}\n\nfunction getProcessOptions(launchPackager) {\n  if (launchPackager) {\n    return {};\n  }\n\n  return {\n    env: Object.assign({}, process.env, { RCT_NO_LAUNCH_PACKAGER: true }),\n  };\n}\n\nmodule.exports = {\n  name: 'run-ios',\n  description: 'builds your app and starts it on iOS simulator',\n  func: runIOS,\n  examples: [\n  {\n    desc: 'Run on a different simulator, e.g. iPhone 5',\n    cmd: 'react-native run-ios --simulator \"iPhone 5\"',\n  },\n  {\n    desc: 'Pass a non-standard location of iOS directory',\n    cmd: 'react-native run-ios --project-path \"./app/ios\"',\n  },\n  {\n    desc: \"Run on a connected device, e.g. Max's iPhone\",\n    cmd: 'react-native run-ios --device \"Max\\'s iPhone\"',\n  },\n  ],\n  options: [{\n    command: '--simulator [string]',\n    description: 'Explicitly set simulator to use',\n    default: 'iPhone 6',\n  } , {\n    command: '--configuration [string]',\n    description: 'Explicitly set the scheme configuration to use',\n  } , {\n    command: '--scheme [string]',\n    description: 'Explicitly set Xcode scheme to use',\n  }, {\n    command: '--project-path [string]',\n    description: 'Path relative to project root where the Xcode project '\n      + '(.xcodeproj) lives. The default is \\'ios\\'.',\n    default: 'ios',\n  }, {\n    command: '--device [string]',\n    description: 'Explicitly set device to use by name.  The value is not required if you have a single device connected.',\n  }, {\n    command: '--udid [string]',\n    description: 'Explicitly set device to use by udid',\n  }, {\n    command: '--no-packager',\n    description: 'Do not launch packager while building',\n  }, {\n    command: '--verbose',\n    description: 'Do not use xcpretty even if installed',\n  }],\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS/findXcodeProject.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS/findXcodeProject.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS/findXcodeProject.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findXcodeProject.js",
      "sourceFileName": "findXcodeProject.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findXcodeProject"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n'use strict';\n\nconst path = require('path');\n\n\n\n\n\n\nfunction findXcodeProject(files) {\n  const sortedFiles = files.sort();\n  for (let i = sortedFiles.length - 1; i >= 0; i--) {\n    const fileName = files[i];\n    const ext = path.extname(fileName);\n\n    if (ext === '.xcworkspace') {\n      return {\n        name: fileName,\n        isWorkspace: true };\n\n    }\n    if (ext === '.xcodeproj') {\n      return {\n        name: fileName,\n        isWorkspace: false };\n\n    }\n  }\n\n  return null;\n}\n\nmodule.exports = findXcodeProject;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRYY29kZVByb2plY3QuanMiXSwibmFtZXMiOlsicGF0aCIsInJlcXVpcmUiLCJmaW5kWGNvZGVQcm9qZWN0IiwiZmlsZXMiLCJzb3J0ZWRGaWxlcyIsInNvcnQiLCJpIiwibGVuZ3RoIiwiZmlsZU5hbWUiLCJleHQiLCJleHRuYW1lIiwibmFtZSIsImlzV29ya3NwYWNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7QUFVQTs7QUFFQSxNQUFNQSxPQUFPQyxRQUFRLE1BQVIsQ0FBYjs7Ozs7OztBQU9BLFNBQVNDLGdCQUFULENBQTBCQyxLQUExQixFQUE4RDtBQUM1RCxRQUFNQyxjQUFjRCxNQUFNRSxJQUFOLEVBQXBCO0FBQ0EsT0FBSyxJQUFJQyxJQUFJRixZQUFZRyxNQUFaLEdBQXFCLENBQWxDLEVBQXFDRCxLQUFLLENBQTFDLEVBQTZDQSxHQUE3QyxFQUFrRDtBQUNoRCxVQUFNRSxXQUFXTCxNQUFNRyxDQUFOLENBQWpCO0FBQ0EsVUFBTUcsTUFBTVQsS0FBS1UsT0FBTCxDQUFhRixRQUFiLENBQVo7O0FBRUEsUUFBSUMsUUFBUSxjQUFaLEVBQTRCO0FBQzFCLGFBQU87QUFDTEUsY0FBTUgsUUFERDtBQUVMSSxxQkFBYSxJQUZSLEVBQVA7O0FBSUQ7QUFDRCxRQUFJSCxRQUFRLFlBQVosRUFBMEI7QUFDeEIsYUFBTztBQUNMRSxjQUFNSCxRQUREO0FBRUxJLHFCQUFhLEtBRlIsRUFBUDs7QUFJRDtBQUNGOztBQUVELFNBQU8sSUFBUDtBQUNEOztBQUVEQyxPQUFPQyxPQUFQLEdBQWlCWixnQkFBakIiLCJmaWxlIjoiZmluZFhjb2RlUHJvamVjdC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9ydW5JT1MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQGZsb3dcbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG50eXBlIFByb2plY3RJbmZvID0ge1xuICBuYW1lOiBzdHJpbmc7XG4gIGlzV29ya3NwYWNlOiBib29sZWFuO1xufVxuXG5mdW5jdGlvbiBmaW5kWGNvZGVQcm9qZWN0KGZpbGVzOiBBcnJheTxzdHJpbmc+KTogP1Byb2plY3RJbmZvIHtcbiAgY29uc3Qgc29ydGVkRmlsZXMgPSBmaWxlcy5zb3J0KCk7XG4gIGZvciAobGV0IGkgPSBzb3J0ZWRGaWxlcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIGNvbnN0IGZpbGVOYW1lID0gZmlsZXNbaV07XG4gICAgY29uc3QgZXh0ID0gcGF0aC5leHRuYW1lKGZpbGVOYW1lKTtcblxuICAgIGlmIChleHQgPT09ICcueGN3b3Jrc3BhY2UnKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBmaWxlTmFtZSxcbiAgICAgICAgaXNXb3Jrc3BhY2U6IHRydWUsXG4gICAgICB9O1xuICAgIH1cbiAgICBpZiAoZXh0ID09PSAnLnhjb2RlcHJvaicpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGZpbGVOYW1lLFxuICAgICAgICBpc1dvcmtzcGFjZTogZmFsc2UsXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBudWxsO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZpbmRYY29kZVByb2plY3Q7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findXcodeProject.js"
      ],
      "names": [
        "path",
        "require",
        "findXcodeProject",
        "files",
        "sortedFiles",
        "sort",
        "i",
        "length",
        "fileName",
        "ext",
        "extname",
        "name",
        "isWorkspace",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;AAUA;;AAEA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;;;;;;;AAOA,SAASC,gBAAT,CAA0BC,KAA1B,EAA8D;AAC5D,QAAMC,cAAcD,MAAME,IAAN,EAApB;AACA,OAAK,IAAIC,IAAIF,YAAYG,MAAZ,GAAqB,CAAlC,EAAqCD,KAAK,CAA1C,EAA6CA,GAA7C,EAAkD;AAChD,UAAME,WAAWL,MAAMG,CAAN,CAAjB;AACA,UAAMG,MAAMT,KAAKU,OAAL,CAAaF,QAAb,CAAZ;;AAEA,QAAIC,QAAQ,cAAZ,EAA4B;AAC1B,aAAO;AACLE,cAAMH,QADD;AAELI,qBAAa,IAFR,EAAP;;AAID;AACD,QAAIH,QAAQ,YAAZ,EAA0B;AACxB,aAAO;AACLE,cAAMH,QADD;AAELI,qBAAa,KAFR,EAAP;;AAID;AACF;;AAED,SAAO,IAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBZ,gBAAjB",
      "file": "findXcodeProject.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\nconst path = require('path');\n\ntype ProjectInfo = {\n  name: string;\n  isWorkspace: boolean;\n}\n\nfunction findXcodeProject(files: Array<string>): ?ProjectInfo {\n  const sortedFiles = files.sort();\n  for (let i = sortedFiles.length - 1; i >= 0; i--) {\n    const fileName = files[i];\n    const ext = path.extname(fileName);\n\n    if (ext === '.xcworkspace') {\n      return {\n        name: fileName,\n        isWorkspace: true,\n      };\n    }\n    if (ext === '.xcodeproj') {\n      return {\n        name: fileName,\n        isWorkspace: false,\n      };\n    }\n  }\n\n  return null;\n}\n\nmodule.exports = findXcodeProject;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/findReactNativeScripts.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/findReactNativeScripts.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/findReactNativeScripts.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findReactNativeScripts.js",
      "sourceFileName": "findReactNativeScripts.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findReactNativeScripts"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n'use strict';\n\nconst path = require('path');\nconst fs = require('fs');\n\nfunction findReactNativeScripts() {\n  const executablePath = path.resolve(\n  'node_modules',\n  '.bin',\n  'react-native-scripts');\n\n  if (fs.existsSync(executablePath)) {\n    return executablePath;\n  }\n  return null;\n}\n\nmodule.exports = findReactNativeScripts;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRSZWFjdE5hdGl2ZVNjcmlwdHMuanMiXSwibmFtZXMiOlsicGF0aCIsInJlcXVpcmUiLCJmcyIsImZpbmRSZWFjdE5hdGl2ZVNjcmlwdHMiLCJleGVjdXRhYmxlUGF0aCIsInJlc29sdmUiLCJleGlzdHNTeW5jIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7QUFVQTs7QUFFQSxNQUFNQSxPQUFPQyxRQUFRLE1BQVIsQ0FBYjtBQUNBLE1BQU1DLEtBQUtELFFBQVEsSUFBUixDQUFYOztBQUVBLFNBQVNFLHNCQUFULEdBQTJDO0FBQ3pDLFFBQU1DLGlCQUFpQkosS0FBS0ssT0FBTDtBQUNyQixnQkFEcUI7QUFFckIsUUFGcUI7QUFHckIsd0JBSHFCLENBQXZCOztBQUtBLE1BQUlILEdBQUdJLFVBQUgsQ0FBY0YsY0FBZCxDQUFKLEVBQW1DO0FBQ2pDLFdBQU9BLGNBQVA7QUFDRDtBQUNELFNBQU8sSUFBUDtBQUNEOztBQUVERyxPQUFPQyxPQUFQLEdBQWlCTCxzQkFBakIiLCJmaWxlIjoiZmluZFJlYWN0TmF0aXZlU2NyaXB0cy5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBmbG93XG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcblxuZnVuY3Rpb24gZmluZFJlYWN0TmF0aXZlU2NyaXB0cygpOiA/c3RyaW5nIHtcbiAgY29uc3QgZXhlY3V0YWJsZVBhdGggPSBwYXRoLnJlc29sdmUoXG4gICAgJ25vZGVfbW9kdWxlcycsXG4gICAgJy5iaW4nLFxuICAgICdyZWFjdC1uYXRpdmUtc2NyaXB0cydcbiAgKTtcbiAgaWYgKGZzLmV4aXN0c1N5bmMoZXhlY3V0YWJsZVBhdGgpKSB7XG4gICAgcmV0dXJuIGV4ZWN1dGFibGVQYXRoO1xuICB9XG4gIHJldHVybiBudWxsO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZpbmRSZWFjdE5hdGl2ZVNjcmlwdHM7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findReactNativeScripts.js"
      ],
      "names": [
        "path",
        "require",
        "fs",
        "findReactNativeScripts",
        "executablePath",
        "resolve",
        "existsSync",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;AAUA;;AAEA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,MAAMC,KAAKD,QAAQ,IAAR,CAAX;;AAEA,SAASE,sBAAT,GAA2C;AACzC,QAAMC,iBAAiBJ,KAAKK,OAAL;AACrB,gBADqB;AAErB,QAFqB;AAGrB,wBAHqB,CAAvB;;AAKA,MAAIH,GAAGI,UAAH,CAAcF,cAAd,CAAJ,EAAmC;AACjC,WAAOA,cAAP;AACD;AACD,SAAO,IAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiBL,sBAAjB",
      "file": "findReactNativeScripts.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\nconst path = require('path');\nconst fs = require('fs');\n\nfunction findReactNativeScripts(): ?string {\n  const executablePath = path.resolve(\n    'node_modules',\n    '.bin',\n    'react-native-scripts'\n  );\n  if (fs.existsSync(executablePath)) {\n    return executablePath;\n  }\n  return null;\n}\n\nmodule.exports = findReactNativeScripts;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS/parseIOSDevicesList.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS/parseIOSDevicesList.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS/parseIOSDevicesList.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "parseIOSDevicesList.js",
      "sourceFileName": "parseIOSDevicesList.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "parseIOSDevicesList"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n'use strict';\n\n\n\n\n\n\n\n/**\n               * Parses the output of `xcrun simctl list devices` command\n               */\nfunction parseIOSDevicesList(text) {\n  const devices = [];\n  text.split('\\n').forEach(line => {\n    const device = line.match(/(.*?) \\((.*?)\\) \\[(.*?)\\]/);\n    const noSimulator = line.match(/(.*?) \\((.*?)\\) \\[(.*?)\\] \\((.*?)\\)/);\n    if (device != null && noSimulator == null) {\n      var name = device[1];\n      var version = device[2];\n      var udid = device[3];\n      devices.push({ udid, name, version });\n    }\n  });\n\n  return devices;\n}\n\nmodule.exports = parseIOSDevicesList;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlSU9TRGV2aWNlc0xpc3QuanMiXSwibmFtZXMiOlsicGFyc2VJT1NEZXZpY2VzTGlzdCIsInRleHQiLCJkZXZpY2VzIiwic3BsaXQiLCJmb3JFYWNoIiwibGluZSIsImRldmljZSIsIm1hdGNoIiwibm9TaW11bGF0b3IiLCJuYW1lIiwidmVyc2lvbiIsInVkaWQiLCJwdXNoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7QUFVQTs7Ozs7Ozs7QUFRQTs7O0FBR0EsU0FBU0EsbUJBQVQsQ0FBNkJDLElBQTdCLEVBQWlFO0FBQy9ELFFBQU1DLFVBQVUsRUFBaEI7QUFDQUQsT0FBS0UsS0FBTCxDQUFXLElBQVgsRUFBaUJDLE9BQWpCLENBQTBCQyxJQUFELElBQVU7QUFDakMsVUFBTUMsU0FBU0QsS0FBS0UsS0FBTCxDQUFXLDJCQUFYLENBQWY7QUFDQSxVQUFNQyxjQUFjSCxLQUFLRSxLQUFMLENBQVcscUNBQVgsQ0FBcEI7QUFDQSxRQUFJRCxVQUFVLElBQVYsSUFBa0JFLGVBQWUsSUFBckMsRUFBMEM7QUFDeEMsVUFBSUMsT0FBT0gsT0FBTyxDQUFQLENBQVg7QUFDQSxVQUFJSSxVQUFVSixPQUFPLENBQVAsQ0FBZDtBQUNBLFVBQUlLLE9BQU9MLE9BQU8sQ0FBUCxDQUFYO0FBQ0FKLGNBQVFVLElBQVIsQ0FBYSxFQUFDRCxJQUFELEVBQU9GLElBQVAsRUFBYUMsT0FBYixFQUFiO0FBQ0Q7QUFDRixHQVREOztBQVdBLFNBQU9SLE9BQVA7QUFDRDs7QUFFRFcsT0FBT0MsT0FBUCxHQUFpQmQsbUJBQWpCIiwiZmlsZSI6InBhcnNlSU9TRGV2aWNlc0xpc3QuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvcnVuSU9TIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBmbG93XG4gKi9cbid1c2Ugc3RyaWN0JztcblxudHlwZSBJT1NEZXZpY2VJbmZvID0ge1xuICBuYW1lOiBzdHJpbmc7XG4gIHVkaWQ6IHN0cmluZztcbiAgdmVyc2lvbjogc3RyaW5nO1xufVxuXG4vKipcbiAqIFBhcnNlcyB0aGUgb3V0cHV0IG9mIGB4Y3J1biBzaW1jdGwgbGlzdCBkZXZpY2VzYCBjb21tYW5kXG4gKi9cbmZ1bmN0aW9uIHBhcnNlSU9TRGV2aWNlc0xpc3QodGV4dDogc3RyaW5nKTogQXJyYXk8SU9TRGV2aWNlSW5mbz4ge1xuICBjb25zdCBkZXZpY2VzID0gW107XG4gIHRleHQuc3BsaXQoJ1xcbicpLmZvckVhY2goKGxpbmUpID0+IHtcbiAgICBjb25zdCBkZXZpY2UgPSBsaW5lLm1hdGNoKC8oLio/KSBcXCgoLio/KVxcKSBcXFsoLio/KVxcXS8pO1xuICAgIGNvbnN0IG5vU2ltdWxhdG9yID0gbGluZS5tYXRjaCgvKC4qPykgXFwoKC4qPylcXCkgXFxbKC4qPylcXF0gXFwoKC4qPylcXCkvKTtcbiAgICBpZiAoZGV2aWNlICE9IG51bGwgJiYgbm9TaW11bGF0b3IgPT0gbnVsbCl7XG4gICAgICB2YXIgbmFtZSA9IGRldmljZVsxXTtcbiAgICAgIHZhciB2ZXJzaW9uID0gZGV2aWNlWzJdO1xuICAgICAgdmFyIHVkaWQgPSBkZXZpY2VbM107XG4gICAgICBkZXZpY2VzLnB1c2goe3VkaWQsIG5hbWUsIHZlcnNpb259KTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBkZXZpY2VzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHBhcnNlSU9TRGV2aWNlc0xpc3Q7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "parseIOSDevicesList.js"
      ],
      "names": [
        "parseIOSDevicesList",
        "text",
        "devices",
        "split",
        "forEach",
        "line",
        "device",
        "match",
        "noSimulator",
        "name",
        "version",
        "udid",
        "push",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;AAUA;;;;;;;;AAQA;;;AAGA,SAASA,mBAAT,CAA6BC,IAA7B,EAAiE;AAC/D,QAAMC,UAAU,EAAhB;AACAD,OAAKE,KAAL,CAAW,IAAX,EAAiBC,OAAjB,CAA0BC,IAAD,IAAU;AACjC,UAAMC,SAASD,KAAKE,KAAL,CAAW,2BAAX,CAAf;AACA,UAAMC,cAAcH,KAAKE,KAAL,CAAW,qCAAX,CAApB;AACA,QAAID,UAAU,IAAV,IAAkBE,eAAe,IAArC,EAA0C;AACxC,UAAIC,OAAOH,OAAO,CAAP,CAAX;AACA,UAAII,UAAUJ,OAAO,CAAP,CAAd;AACA,UAAIK,OAAOL,OAAO,CAAP,CAAX;AACAJ,cAAQU,IAAR,CAAa,EAACD,IAAD,EAAOF,IAAP,EAAaC,OAAb,EAAb;AACD;AACF,GATD;;AAWA,SAAOR,OAAP;AACD;;AAEDW,OAAOC,OAAP,GAAiBd,mBAAjB",
      "file": "parseIOSDevicesList.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n'use strict';\n\ntype IOSDeviceInfo = {\n  name: string;\n  udid: string;\n  version: string;\n}\n\n/**\n * Parses the output of `xcrun simctl list devices` command\n */\nfunction parseIOSDevicesList(text: string): Array<IOSDeviceInfo> {\n  const devices = [];\n  text.split('\\n').forEach((line) => {\n    const device = line.match(/(.*?) \\((.*?)\\) \\[(.*?)\\]/);\n    const noSimulator = line.match(/(.*?) \\((.*?)\\) \\[(.*?)\\] \\((.*?)\\)/);\n    if (device != null && noSimulator == null){\n      var name = device[1];\n      var version = device[2];\n      var udid = device[3];\n      devices.push({udid, name, version});\n    }\n  });\n\n  return devices;\n}\n\nmodule.exports = parseIOSDevicesList;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS/findMatchingSimulator.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS/findMatchingSimulator.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS/findMatchingSimulator.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findMatchingSimulator.js",
      "sourceFileName": "findMatchingSimulator.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findMatchingSimulator"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.*\n */\n'use strict';\n\n/**\n               * Takes in a parsed simulator list and a desired name, and returns an object with the matching simulator.\n               *\n               * If the simulatorName argument is null, we'll go into default mode and return the currently booted simulator, or if\n               * none is booted, it will be the first in the list.\n               *\n               * @param Object simulators a parsed list from `xcrun simctl list --json devices` command\n               * @param String|null simulatorName the string with the name of desired simulator. If null, it will use the currently\n               *        booted simulator, or if none are booted, the first in the list.\n               * @returns {Object} {udid, name, version}\n               */\nfunction findMatchingSimulator(simulators, simulatorName) {\n  if (!simulators.devices) {\n    return null;\n  }\n  const devices = simulators.devices;\n  var match;\n  for (let version in devices) {\n    // Making sure the version of the simulator is an iOS (Removes Apple Watch, etc)\n    if (version.indexOf('iOS') !== 0) {\n      continue;\n    }\n    for (let i in devices[version]) {\n      let simulator = devices[version][i];\n      // Skipping non-available simulator\n      if (simulator.availability !== '(available)') {\n        continue;\n      }\n      // If there is a booted simulator, we'll use that as instruments will not boot a second simulator\n      if (simulator.state === 'Booted') {\n        if (simulatorName !== null) {\n          console.warn(\"We couldn't boot your defined simulator due to an already booted simulator. We are limited to one simulator launched at a time.\");\n        }\n        return {\n          udid: simulator.udid,\n          name: simulator.name,\n          version };\n\n      }\n      if (simulator.name === simulatorName && !match) {\n        match = {\n          udid: simulator.udid,\n          name: simulator.name,\n          version };\n\n      }\n      // Keeps track of the first available simulator for use if we can't find one above.\n      if (simulatorName === null && !match) {\n        match = {\n          udid: simulator.udid,\n          name: simulator.name,\n          version };\n\n      }\n    }\n  }\n  if (match) {\n    return match;\n  }\n  return null;\n}\n\nmodule.exports = findMatchingSimulator;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRNYXRjaGluZ1NpbXVsYXRvci5qcyJdLCJuYW1lcyI6WyJmaW5kTWF0Y2hpbmdTaW11bGF0b3IiLCJzaW11bGF0b3JzIiwic2ltdWxhdG9yTmFtZSIsImRldmljZXMiLCJtYXRjaCIsInZlcnNpb24iLCJpbmRleE9mIiwiaSIsInNpbXVsYXRvciIsImF2YWlsYWJpbGl0eSIsInN0YXRlIiwiY29uc29sZSIsIndhcm4iLCJ1ZGlkIiwibmFtZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBOzs7Ozs7Ozs7OztBQVdBLFNBQVNBLHFCQUFULENBQStCQyxVQUEvQixFQUEyQ0MsYUFBM0MsRUFBMEQ7QUFDeEQsTUFBSSxDQUFDRCxXQUFXRSxPQUFoQixFQUF5QjtBQUN2QixXQUFPLElBQVA7QUFDRDtBQUNELFFBQU1BLFVBQVVGLFdBQVdFLE9BQTNCO0FBQ0EsTUFBSUMsS0FBSjtBQUNBLE9BQUssSUFBSUMsT0FBVCxJQUFvQkYsT0FBcEIsRUFBNkI7QUFDM0I7QUFDQSxRQUFJRSxRQUFRQyxPQUFSLENBQWdCLEtBQWhCLE1BQTJCLENBQS9CLEVBQWtDO0FBQ2hDO0FBQ0Q7QUFDRCxTQUFLLElBQUlDLENBQVQsSUFBY0osUUFBUUUsT0FBUixDQUFkLEVBQWdDO0FBQzlCLFVBQUlHLFlBQVlMLFFBQVFFLE9BQVIsRUFBaUJFLENBQWpCLENBQWhCO0FBQ0E7QUFDQSxVQUFJQyxVQUFVQyxZQUFWLEtBQTJCLGFBQS9CLEVBQThDO0FBQzVDO0FBQ0Q7QUFDRDtBQUNBLFVBQUlELFVBQVVFLEtBQVYsS0FBb0IsUUFBeEIsRUFBa0M7QUFDaEMsWUFBSVIsa0JBQWtCLElBQXRCLEVBQTRCO0FBQzFCUyxrQkFBUUMsSUFBUixDQUFhLGlJQUFiO0FBQ0Q7QUFDRCxlQUFPO0FBQ0xDLGdCQUFNTCxVQUFVSyxJQURYO0FBRUxDLGdCQUFNTixVQUFVTSxJQUZYO0FBR0xULGlCQUhLLEVBQVA7O0FBS0Q7QUFDRCxVQUFJRyxVQUFVTSxJQUFWLEtBQW1CWixhQUFuQixJQUFvQyxDQUFDRSxLQUF6QyxFQUFnRDtBQUM5Q0EsZ0JBQVE7QUFDTlMsZ0JBQU1MLFVBQVVLLElBRFY7QUFFTkMsZ0JBQU1OLFVBQVVNLElBRlY7QUFHTlQsaUJBSE0sRUFBUjs7QUFLRDtBQUNEO0FBQ0EsVUFBSUgsa0JBQWtCLElBQWxCLElBQTBCLENBQUNFLEtBQS9CLEVBQXNDO0FBQ3BDQSxnQkFBUTtBQUNOUyxnQkFBTUwsVUFBVUssSUFEVjtBQUVOQyxnQkFBTU4sVUFBVU0sSUFGVjtBQUdOVCxpQkFITSxFQUFSOztBQUtEO0FBQ0Y7QUFDRjtBQUNELE1BQUlELEtBQUosRUFBVztBQUNULFdBQU9BLEtBQVA7QUFDRDtBQUNELFNBQU8sSUFBUDtBQUNEOztBQUVEVyxPQUFPQyxPQUFQLEdBQWlCaEIscUJBQWpCIiwiZmlsZSI6ImZpbmRNYXRjaGluZ1NpbXVsYXRvci5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9ydW5JT1MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuKlxuICovXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVGFrZXMgaW4gYSBwYXJzZWQgc2ltdWxhdG9yIGxpc3QgYW5kIGEgZGVzaXJlZCBuYW1lLCBhbmQgcmV0dXJucyBhbiBvYmplY3Qgd2l0aCB0aGUgbWF0Y2hpbmcgc2ltdWxhdG9yLlxuICpcbiAqIElmIHRoZSBzaW11bGF0b3JOYW1lIGFyZ3VtZW50IGlzIG51bGwsIHdlJ2xsIGdvIGludG8gZGVmYXVsdCBtb2RlIGFuZCByZXR1cm4gdGhlIGN1cnJlbnRseSBib290ZWQgc2ltdWxhdG9yLCBvciBpZlxuICogbm9uZSBpcyBib290ZWQsIGl0IHdpbGwgYmUgdGhlIGZpcnN0IGluIHRoZSBsaXN0LlxuICpcbiAqIEBwYXJhbSBPYmplY3Qgc2ltdWxhdG9ycyBhIHBhcnNlZCBsaXN0IGZyb20gYHhjcnVuIHNpbWN0bCBsaXN0IC0tanNvbiBkZXZpY2VzYCBjb21tYW5kXG4gKiBAcGFyYW0gU3RyaW5nfG51bGwgc2ltdWxhdG9yTmFtZSB0aGUgc3RyaW5nIHdpdGggdGhlIG5hbWUgb2YgZGVzaXJlZCBzaW11bGF0b3IuIElmIG51bGwsIGl0IHdpbGwgdXNlIHRoZSBjdXJyZW50bHlcbiAqICAgICAgICBib290ZWQgc2ltdWxhdG9yLCBvciBpZiBub25lIGFyZSBib290ZWQsIHRoZSBmaXJzdCBpbiB0aGUgbGlzdC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IHt1ZGlkLCBuYW1lLCB2ZXJzaW9ufVxuICovXG5mdW5jdGlvbiBmaW5kTWF0Y2hpbmdTaW11bGF0b3Ioc2ltdWxhdG9ycywgc2ltdWxhdG9yTmFtZSkge1xuICBpZiAoIXNpbXVsYXRvcnMuZGV2aWNlcykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IGRldmljZXMgPSBzaW11bGF0b3JzLmRldmljZXM7XG4gIHZhciBtYXRjaDtcbiAgZm9yIChsZXQgdmVyc2lvbiBpbiBkZXZpY2VzKSB7XG4gICAgLy8gTWFraW5nIHN1cmUgdGhlIHZlcnNpb24gb2YgdGhlIHNpbXVsYXRvciBpcyBhbiBpT1MgKFJlbW92ZXMgQXBwbGUgV2F0Y2gsIGV0YylcbiAgICBpZiAodmVyc2lvbi5pbmRleE9mKCdpT1MnKSAhPT0gMCkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGZvciAobGV0IGkgaW4gZGV2aWNlc1t2ZXJzaW9uXSkge1xuICAgICAgbGV0IHNpbXVsYXRvciA9IGRldmljZXNbdmVyc2lvbl1baV07XG4gICAgICAvLyBTa2lwcGluZyBub24tYXZhaWxhYmxlIHNpbXVsYXRvclxuICAgICAgaWYgKHNpbXVsYXRvci5hdmFpbGFiaWxpdHkgIT09ICcoYXZhaWxhYmxlKScpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICAvLyBJZiB0aGVyZSBpcyBhIGJvb3RlZCBzaW11bGF0b3IsIHdlJ2xsIHVzZSB0aGF0IGFzIGluc3RydW1lbnRzIHdpbGwgbm90IGJvb3QgYSBzZWNvbmQgc2ltdWxhdG9yXG4gICAgICBpZiAoc2ltdWxhdG9yLnN0YXRlID09PSAnQm9vdGVkJykge1xuICAgICAgICBpZiAoc2ltdWxhdG9yTmFtZSAhPT0gbnVsbCkge1xuICAgICAgICAgIGNvbnNvbGUud2FybihcIldlIGNvdWxkbid0IGJvb3QgeW91ciBkZWZpbmVkIHNpbXVsYXRvciBkdWUgdG8gYW4gYWxyZWFkeSBib290ZWQgc2ltdWxhdG9yLiBXZSBhcmUgbGltaXRlZCB0byBvbmUgc2ltdWxhdG9yIGxhdW5jaGVkIGF0IGEgdGltZS5cIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB1ZGlkOiBzaW11bGF0b3IudWRpZCxcbiAgICAgICAgICBuYW1lOiBzaW11bGF0b3IubmFtZSxcbiAgICAgICAgICB2ZXJzaW9uXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICBpZiAoc2ltdWxhdG9yLm5hbWUgPT09IHNpbXVsYXRvck5hbWUgJiYgIW1hdGNoKSB7XG4gICAgICAgIG1hdGNoID0ge1xuICAgICAgICAgIHVkaWQ6IHNpbXVsYXRvci51ZGlkLFxuICAgICAgICAgIG5hbWU6IHNpbXVsYXRvci5uYW1lLFxuICAgICAgICAgIHZlcnNpb25cbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIC8vIEtlZXBzIHRyYWNrIG9mIHRoZSBmaXJzdCBhdmFpbGFibGUgc2ltdWxhdG9yIGZvciB1c2UgaWYgd2UgY2FuJ3QgZmluZCBvbmUgYWJvdmUuXG4gICAgICBpZiAoc2ltdWxhdG9yTmFtZSA9PT0gbnVsbCAmJiAhbWF0Y2gpIHtcbiAgICAgICAgbWF0Y2ggPSB7XG4gICAgICAgICAgdWRpZDogc2ltdWxhdG9yLnVkaWQsXG4gICAgICAgICAgbmFtZTogc2ltdWxhdG9yLm5hbWUsXG4gICAgICAgICAgdmVyc2lvblxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBpZiAobWF0Y2gpIHtcbiAgICByZXR1cm4gbWF0Y2g7XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZmluZE1hdGNoaW5nU2ltdWxhdG9yO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findMatchingSimulator.js"
      ],
      "names": [
        "findMatchingSimulator",
        "simulators",
        "simulatorName",
        "devices",
        "match",
        "version",
        "indexOf",
        "i",
        "simulator",
        "availability",
        "state",
        "console",
        "warn",
        "udid",
        "name",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA;;;;;;;;;;;AAWA,SAASA,qBAAT,CAA+BC,UAA/B,EAA2CC,aAA3C,EAA0D;AACxD,MAAI,CAACD,WAAWE,OAAhB,EAAyB;AACvB,WAAO,IAAP;AACD;AACD,QAAMA,UAAUF,WAAWE,OAA3B;AACA,MAAIC,KAAJ;AACA,OAAK,IAAIC,OAAT,IAAoBF,OAApB,EAA6B;AAC3B;AACA,QAAIE,QAAQC,OAAR,CAAgB,KAAhB,MAA2B,CAA/B,EAAkC;AAChC;AACD;AACD,SAAK,IAAIC,CAAT,IAAcJ,QAAQE,OAAR,CAAd,EAAgC;AAC9B,UAAIG,YAAYL,QAAQE,OAAR,EAAiBE,CAAjB,CAAhB;AACA;AACA,UAAIC,UAAUC,YAAV,KAA2B,aAA/B,EAA8C;AAC5C;AACD;AACD;AACA,UAAID,UAAUE,KAAV,KAAoB,QAAxB,EAAkC;AAChC,YAAIR,kBAAkB,IAAtB,EAA4B;AAC1BS,kBAAQC,IAAR,CAAa,iIAAb;AACD;AACD,eAAO;AACLC,gBAAML,UAAUK,IADX;AAELC,gBAAMN,UAAUM,IAFX;AAGLT,iBAHK,EAAP;;AAKD;AACD,UAAIG,UAAUM,IAAV,KAAmBZ,aAAnB,IAAoC,CAACE,KAAzC,EAAgD;AAC9CA,gBAAQ;AACNS,gBAAML,UAAUK,IADV;AAENC,gBAAMN,UAAUM,IAFV;AAGNT,iBAHM,EAAR;;AAKD;AACD;AACA,UAAIH,kBAAkB,IAAlB,IAA0B,CAACE,KAA/B,EAAsC;AACpCA,gBAAQ;AACNS,gBAAML,UAAUK,IADV;AAENC,gBAAMN,UAAUM,IAFV;AAGNT,iBAHM,EAAR;;AAKD;AACF;AACF;AACD,MAAID,KAAJ,EAAW;AACT,WAAOA,KAAP;AACD;AACD,SAAO,IAAP;AACD;;AAEDW,OAAOC,OAAP,GAAiBhB,qBAAjB",
      "file": "findMatchingSimulator.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runIOS",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.*\n */\n'use strict';\n\n/**\n * Takes in a parsed simulator list and a desired name, and returns an object with the matching simulator.\n *\n * If the simulatorName argument is null, we'll go into default mode and return the currently booted simulator, or if\n * none is booted, it will be the first in the list.\n *\n * @param Object simulators a parsed list from `xcrun simctl list --json devices` command\n * @param String|null simulatorName the string with the name of desired simulator. If null, it will use the currently\n *        booted simulator, or if none are booted, the first in the list.\n * @returns {Object} {udid, name, version}\n */\nfunction findMatchingSimulator(simulators, simulatorName) {\n  if (!simulators.devices) {\n    return null;\n  }\n  const devices = simulators.devices;\n  var match;\n  for (let version in devices) {\n    // Making sure the version of the simulator is an iOS (Removes Apple Watch, etc)\n    if (version.indexOf('iOS') !== 0) {\n      continue;\n    }\n    for (let i in devices[version]) {\n      let simulator = devices[version][i];\n      // Skipping non-available simulator\n      if (simulator.availability !== '(available)') {\n        continue;\n      }\n      // If there is a booted simulator, we'll use that as instruments will not boot a second simulator\n      if (simulator.state === 'Booted') {\n        if (simulatorName !== null) {\n          console.warn(\"We couldn't boot your defined simulator due to an already booted simulator. We are limited to one simulator launched at a time.\");\n        }\n        return {\n          udid: simulator.udid,\n          name: simulator.name,\n          version\n        };\n      }\n      if (simulator.name === simulatorName && !match) {\n        match = {\n          udid: simulator.udid,\n          name: simulator.name,\n          version\n        };\n      }\n      // Keeps track of the first available simulator for use if we can't find one above.\n      if (simulatorName === null && !match) {\n        match = {\n          udid: simulator.udid,\n          name: simulator.name,\n          version\n        };\n      }\n    }\n  }\n  if (match) {\n    return match;\n  }\n  return null;\n}\n\nmodule.exports = findMatchingSimulator;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runAndroid/runAndroid.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runAndroid\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runAndroid/runAndroid.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runAndroid/runAndroid.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "runAndroid.js",
      "sourceFileName": "runAndroid.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runAndroid",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runAndroid",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "runAndroid"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst adb = require('./adb');\nconst chalk = require('chalk');\nconst child_process = require('child_process');\nconst fs = require('fs');\nconst isPackagerRunning = require('../util/isPackagerRunning');\nconst findReactNativeScripts = require('../util/findReactNativeScripts');\nconst isString = require('lodash/isString');\nconst path = require('path');\nconst Promise = require('promise');\n\n// Verifies this is an Android project\nfunction checkAndroid(root) {\n  return fs.existsSync(path.join(root, 'android/gradlew'));\n}\n\n/**\n   * Starts the app on a connected Android emulator or device.\n   */\nfunction runAndroid(argv, config, args) {\n  if (!checkAndroid(args.root)) {\n    const reactNativeScriptsPath = findReactNativeScripts();\n    if (reactNativeScriptsPath) {\n      child_process.spawnSync(\n      reactNativeScriptsPath,\n      ['android'].concat(process.argv.slice(1)),\n      { stdio: 'inherit' });\n\n    } else {\n      console.log(chalk.red('Android project not found. Maybe run react-native android first?'));\n    }\n    return;\n  }\n\n  if (!args.packager) {\n    return buildAndRun(args);\n  }\n\n  return isPackagerRunning().then(result => {\n    if (result === 'running') {\n      console.log(chalk.bold('JS server already running.'));\n    } else if (result === 'unrecognized') {\n      console.warn(chalk.yellow('JS server not recognized, continuing with build...'));\n    } else {\n      // result == 'not_running'\n      console.log(chalk.bold('Starting JS server...'));\n      startServerInNewWindow();\n    }\n    return buildAndRun(args);\n  });\n}\n\nfunction getAdbPath() {\n  return process.env.ANDROID_HOME ?\n  process.env.ANDROID_HOME + '/platform-tools/adb' :\n  'adb';\n}\n\n// Runs ADB reverse tcp:8081 tcp:8081 to allow loading the jsbundle from the packager\nfunction tryRunAdbReverse(packagerPort, device) {\n  try {\n    const adbPath = getAdbPath();\n    const adbArgs = ['reverse', `tcp:${packagerPort}`, `tcp:${packagerPort}`];\n\n    // If a device is specified then tell adb to use it\n    if (device) {\n      adbArgs.unshift('-s', device);\n    }\n\n    console.log(chalk.bold(\n    `Running ${adbPath} ${adbArgs.join(' ')}`));\n\n\n    child_process.execFileSync(adbPath, adbArgs, {\n      stdio: [process.stdin, process.stdout, process.stderr] });\n\n  } catch (e) {\n    console.log(chalk.yellow(`Could not run adb reverse: ${e.message}`));\n  }\n}\n\nfunction getPackageNameWithSuffix(appId, appIdSuffix, packageName) {\n  if (appId) {\n    return appId;\n  } else if (appIdSuffix) {\n    return packageName + '.' + appIdSuffix;\n  }\n\n  return packageName;\n}\n\n// Builds the app and runs it on a connected emulator / device.\nfunction buildAndRun(args) {\n  process.chdir(path.join(args.root, 'android'));\n  const cmd = process.platform.startsWith('win') ?\n  'gradlew.bat' :\n  './gradlew';\n\n  const packageName = fs.readFileSync(\n  `${args.appFolder}/src/main/AndroidManifest.xml`,\n  'utf8').\n  match(/package=\"(.+?)\"/)[1];\n\n  const packageNameWithSuffix = getPackageNameWithSuffix(args.appId, args.appIdSuffix, packageName);\n\n  const adbPath = getAdbPath();\n  if (args.deviceId) {\n    if (isString(args.deviceId)) {\n      runOnSpecificDevice(args, cmd, packageNameWithSuffix, packageName, adbPath);\n    } else {\n      console.log(chalk.red('Argument missing for parameter --deviceId'));\n    }\n  } else {\n    runOnAllDevices(args, cmd, packageNameWithSuffix, packageName, adbPath);\n  }\n}\n\nfunction runOnSpecificDevice(args, gradlew, packageNameWithSuffix, packageName, adbPath) {\n  let devices = adb.getDevices();\n  if (devices && devices.length > 0) {\n    if (devices.indexOf(args.deviceId) !== -1) {\n      buildApk(gradlew);\n      installAndLaunchOnDevice(args, args.deviceId, packageNameWithSuffix, packageName, adbPath);\n    } else {\n      console.log('Could not find device with the id: \"' + args.deviceId + '\".');\n      console.log('Choose one of the following:');\n      console.log(devices);\n    }\n  } else {\n    console.log('No Android devices connected.');\n  }\n}\n\nfunction buildApk(gradlew) {\n  try {\n    console.log(chalk.bold('Building the app...'));\n\n    // using '-x lint' in order to ignore linting errors while building the apk\n    child_process.execFileSync(gradlew, ['build', '-x', 'lint'], {\n      stdio: [process.stdin, process.stdout, process.stderr] });\n\n  } catch (e) {\n    console.log(chalk.red('Could not build the app, read the error above for details.\\n'));\n  }\n}\n\nfunction tryInstallAppOnDevice(args, device) {\n  try {\n    const pathToApk = `${args.appFolder}/build/outputs/apk/${args.appFolder}-debug.apk`;\n    const adbPath = getAdbPath();\n    const adbArgs = ['-s', device, 'install', pathToApk];\n    console.log(chalk.bold(\n    `Installing the app on the device (cd android && adb -s ${device} install ${pathToApk}`));\n\n    child_process.execFileSync(adbPath, adbArgs, {\n      stdio: [process.stdin, process.stdout, process.stderr] });\n\n  } catch (e) {\n    console.log(e.message);\n    console.log(chalk.red(\n    'Could not install the app on the device, read the error above for details.\\n'));\n\n  }\n}\n\nfunction tryLaunchAppOnDevice(device, packageNameWithSuffix, packageName, adbPath, mainActivity) {\n  try {\n    const adbArgs = ['-s', device, 'shell', 'am', 'start', '-n', packageNameWithSuffix + '/' + packageName + '.' + mainActivity];\n    console.log(chalk.bold(\n    `Starting the app on ${device} (${adbPath} ${adbArgs.join(' ')})...`));\n\n    child_process.spawnSync(adbPath, adbArgs, { stdio: 'inherit' });\n  } catch (e) {\n    console.log(chalk.red(\n    'adb invocation failed. Do you have adb in your PATH?'));\n\n  }\n}\n\nfunction installAndLaunchOnDevice(args, selectedDevice, packageNameWithSuffix, packageName, adbPath) {\n  tryRunAdbReverse(args.port, selectedDevice);\n  tryInstallAppOnDevice(args, selectedDevice);\n  tryLaunchAppOnDevice(selectedDevice, packageNameWithSuffix, packageName, adbPath, args.mainActivity);\n}\n\nfunction runOnAllDevices(args, cmd, packageNameWithSuffix, packageName, adbPath) {\n  try {\n    const gradleArgs = [];\n    if (args.variant) {\n      gradleArgs.push('install' +\n      args.variant[0].toUpperCase() + args.variant.slice(1));\n\n    } else if (args.flavor) {\n      console.warn(chalk.yellow(\n      '--flavor has been deprecated. Use --variant instead'));\n\n      gradleArgs.push('install' +\n      args.flavor[0].toUpperCase() + args.flavor.slice(1));\n\n    } else {\n      gradleArgs.push('installDebug');\n    }\n\n    if (args.installDebug) {\n      gradleArgs.push(args.installDebug);\n    }\n\n    console.log(chalk.bold(\n    `Building and installing the app on the device (cd android && ${cmd} ${gradleArgs.join(' ')})...`));\n\n\n    child_process.execFileSync(cmd, gradleArgs, {\n      stdio: [process.stdin, process.stdout, process.stderr] });\n\n  } catch (e) {\n    console.log(chalk.red(\n    'Could not install the app on the device, read the error above for details.\\n' +\n    'Make sure you have an Android emulator running or a device connected and have\\n' +\n    'set up your Android development environment:\\n' +\n    'https://facebook.github.io/react-native/docs/android-setup.html'));\n\n    // stderr is automatically piped from the gradle process, so the user\n    // should see the error already, there is no need to do\n    // `console.log(e.stderr)`\n    return Promise.reject();\n  }\n  const devices = adb.getDevices();\n  if (devices && devices.length > 0) {\n    devices.forEach(device => {\n      tryRunAdbReverse(args.port, device);\n      tryLaunchAppOnDevice(device, packageNameWithSuffix, packageName, adbPath, args.mainActivity);\n    });\n  } else {\n    try {\n      // If we cannot execute based on adb devices output, fall back to\n      // shell am start\n      const fallbackAdbArgs = [\n      'shell', 'am', 'start', '-n', packageNameWithSuffix + '/' + packageName + '.MainActivity'];\n\n      console.log(chalk.bold(\n      `Starting the app (${adbPath} ${fallbackAdbArgs.join(' ')}...`));\n\n      child_process.spawnSync(adbPath, fallbackAdbArgs, { stdio: 'inherit' });\n    } catch (e) {\n      console.log(chalk.red(\n      'adb invocation failed. Do you have adb in your PATH?'));\n\n      // stderr is automatically piped from the gradle process, so the user\n      // should see the error already, there is no need to do\n      // `console.log(e.stderr)`\n      return Promise.reject();\n    }\n  }\n}\n\nfunction startServerInNewWindow() {\n  const scriptFile = /^win/.test(process.platform) ?\n  'launchPackager.bat' :\n  'launchPackager.command';\n  const scriptsDir = path.resolve(__dirname, '..', '..', 'scripts');\n  const launchPackagerScript = path.resolve(scriptsDir, scriptFile);\n  const procConfig = { cwd: scriptsDir };\n  const terminal = process.env.REACT_TERMINAL;\n\n  if (process.platform === 'darwin') {\n    if (terminal) {\n      return child_process.spawnSync('open', ['-a', terminal, launchPackagerScript], procConfig);\n    }\n    return child_process.spawnSync('open', [launchPackagerScript], procConfig);\n\n  } else if (process.platform === 'linux') {\n    procConfig.detached = true;\n    if (terminal) {\n      return child_process.spawn(terminal, ['-e', 'sh ' + launchPackagerScript], procConfig);\n    }\n    return child_process.spawn('sh', [launchPackagerScript], procConfig);\n\n  } else if (/^win/.test(process.platform)) {\n    procConfig.detached = true;\n    procConfig.stdio = 'ignore';\n    return child_process.spawn('cmd.exe', ['/C', launchPackagerScript], procConfig);\n  } else {\n    console.log(chalk.red(`Cannot start the packager. Unknown platform ${process.platform}`));\n  }\n}\n\nmodule.exports = {\n  name: 'run-android',\n  description: 'builds your app and starts it on a connected Android emulator or device',\n  func: runAndroid,\n  options: [{\n    command: '--install-debug' },\n  {\n    command: '--root [string]',\n    description: 'Override the root directory for the android build (which contains the android directory)',\n    default: '' },\n  {\n    command: '--flavor [string]',\n    description: '--flavor has been deprecated. Use --variant instead' },\n  {\n    command: '--variant [string]' },\n  {\n    command: '--appFolder [string]',\n    description: 'Specify a different application folder name for the android source.',\n    default: 'app' },\n  {\n    command: '--appId [string]',\n    description: 'Specify an applicationId to launch after build.',\n    default: '' },\n  {\n    command: '--appIdSuffix [string]',\n    description: 'Specify an applicationIdSuffix to launch after build.',\n    default: '' },\n  {\n    command: '--main-activity [string]',\n    description: 'Name of the activity to start',\n    default: 'MainActivity' },\n  {\n    command: '--deviceId [string]',\n    description: 'builds your app and starts it on a specific device/simulator with the ' +\n    'given device id (listed by running \"adb devices\" on the command line).' },\n  {\n    command: '--no-packager',\n    description: 'Do not launch packager while building' },\n  {\n    command: '--port [number]',\n    default: 8081,\n    parse: val => Number(val) }] };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "runAndroid.js"
      ],
      "names": [
        "adb",
        "require",
        "chalk",
        "child_process",
        "fs",
        "isPackagerRunning",
        "findReactNativeScripts",
        "isString",
        "path",
        "Promise",
        "checkAndroid",
        "root",
        "existsSync",
        "join",
        "runAndroid",
        "argv",
        "config",
        "args",
        "reactNativeScriptsPath",
        "spawnSync",
        "concat",
        "process",
        "slice",
        "stdio",
        "console",
        "log",
        "red",
        "packager",
        "buildAndRun",
        "then",
        "result",
        "bold",
        "warn",
        "yellow",
        "startServerInNewWindow",
        "getAdbPath",
        "env",
        "ANDROID_HOME",
        "tryRunAdbReverse",
        "packagerPort",
        "device",
        "adbPath",
        "adbArgs",
        "unshift",
        "execFileSync",
        "stdin",
        "stdout",
        "stderr",
        "e",
        "message",
        "getPackageNameWithSuffix",
        "appId",
        "appIdSuffix",
        "packageName",
        "chdir",
        "cmd",
        "platform",
        "startsWith",
        "readFileSync",
        "appFolder",
        "match",
        "packageNameWithSuffix",
        "deviceId",
        "runOnSpecificDevice",
        "runOnAllDevices",
        "gradlew",
        "devices",
        "getDevices",
        "length",
        "indexOf",
        "buildApk",
        "installAndLaunchOnDevice",
        "tryInstallAppOnDevice",
        "pathToApk",
        "tryLaunchAppOnDevice",
        "mainActivity",
        "selectedDevice",
        "port",
        "gradleArgs",
        "variant",
        "push",
        "toUpperCase",
        "flavor",
        "installDebug",
        "reject",
        "forEach",
        "fallbackAdbArgs",
        "scriptFile",
        "test",
        "scriptsDir",
        "resolve",
        "__dirname",
        "launchPackagerScript",
        "procConfig",
        "cwd",
        "terminal",
        "REACT_TERMINAL",
        "detached",
        "spawn",
        "module",
        "exports",
        "name",
        "description",
        "func",
        "options",
        "command",
        "default",
        "parse",
        "val",
        "Number"
      ],
      "mappings": "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",
      "file": "runAndroid.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runAndroid",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst adb = require('./adb');\nconst chalk = require('chalk');\nconst child_process = require('child_process');\nconst fs = require('fs');\nconst isPackagerRunning = require('../util/isPackagerRunning');\nconst findReactNativeScripts = require('../util/findReactNativeScripts');\nconst isString = require('lodash/isString');\nconst path = require('path');\nconst Promise = require('promise');\n\n// Verifies this is an Android project\nfunction checkAndroid(root) {\n  return fs.existsSync(path.join(root, 'android/gradlew'));\n}\n\n/**\n * Starts the app on a connected Android emulator or device.\n */\nfunction runAndroid(argv, config, args) {\n  if (!checkAndroid(args.root)) {\n    const reactNativeScriptsPath = findReactNativeScripts();\n    if (reactNativeScriptsPath) {\n      child_process.spawnSync(\n        reactNativeScriptsPath,\n        ['android'].concat(process.argv.slice(1)),\n        {stdio: 'inherit'}\n      );\n    } else {\n      console.log(chalk.red('Android project not found. Maybe run react-native android first?'));\n    }\n    return;\n  }\n\n  if (!args.packager) {\n    return buildAndRun(args);\n  }\n\n  return isPackagerRunning().then(result => {\n    if (result === 'running') {\n      console.log(chalk.bold('JS server already running.'));\n    } else if (result === 'unrecognized') {\n      console.warn(chalk.yellow('JS server not recognized, continuing with build...'));\n    } else {\n      // result == 'not_running'\n      console.log(chalk.bold('Starting JS server...'));\n      startServerInNewWindow();\n    }\n    return buildAndRun(args);\n  });\n}\n\nfunction getAdbPath() {\n  return process.env.ANDROID_HOME\n    ? process.env.ANDROID_HOME + '/platform-tools/adb'\n    : 'adb';\n}\n\n// Runs ADB reverse tcp:8081 tcp:8081 to allow loading the jsbundle from the packager\nfunction tryRunAdbReverse(packagerPort, device) {\n  try {\n    const adbPath = getAdbPath();\n    const adbArgs = ['reverse', `tcp:${packagerPort}`, `tcp:${packagerPort}`];\n\n    // If a device is specified then tell adb to use it\n    if (device) {\n      adbArgs.unshift('-s', device);\n    }\n\n    console.log(chalk.bold(\n      `Running ${adbPath} ${adbArgs.join(' ')}`\n    ));\n\n    child_process.execFileSync(adbPath, adbArgs, {\n      stdio: [process.stdin, process.stdout, process.stderr],\n    });\n  } catch (e) {\n    console.log(chalk.yellow(`Could not run adb reverse: ${e.message}`));\n  }\n}\n\nfunction getPackageNameWithSuffix(appId, appIdSuffix, packageName) {\n  if (appId) {\n    return appId;\n  } else if (appIdSuffix) {\n    return packageName + '.' + appIdSuffix;\n  }\n\n  return packageName;\n}\n\n// Builds the app and runs it on a connected emulator / device.\nfunction buildAndRun(args) {\n  process.chdir(path.join(args.root, 'android'));\n  const cmd = process.platform.startsWith('win')\n    ? 'gradlew.bat'\n    : './gradlew';\n\n  const packageName = fs.readFileSync(\n      `${args.appFolder}/src/main/AndroidManifest.xml`,\n      'utf8'\n    ).match(/package=\"(.+?)\"/)[1];\n\n  const packageNameWithSuffix = getPackageNameWithSuffix(args.appId, args.appIdSuffix, packageName);\n\n  const adbPath = getAdbPath();\n  if (args.deviceId) {\n    if (isString(args.deviceId)) {\n        runOnSpecificDevice(args, cmd, packageNameWithSuffix, packageName, adbPath);\n    } else {\n      console.log(chalk.red('Argument missing for parameter --deviceId'));\n    }\n  } else {\n    runOnAllDevices(args, cmd, packageNameWithSuffix, packageName, adbPath);\n  }\n}\n\nfunction runOnSpecificDevice(args, gradlew, packageNameWithSuffix, packageName, adbPath) {\n  let devices = adb.getDevices();\n  if (devices && devices.length > 0) {\n    if (devices.indexOf(args.deviceId) !== -1) {\n      buildApk(gradlew);\n      installAndLaunchOnDevice(args, args.deviceId, packageNameWithSuffix, packageName, adbPath);\n    } else {\n      console.log('Could not find device with the id: \"' + args.deviceId + '\".');\n      console.log('Choose one of the following:');\n      console.log(devices);\n    }\n  } else {\n    console.log('No Android devices connected.');\n  }\n}\n\nfunction buildApk(gradlew) {\n  try {\n    console.log(chalk.bold('Building the app...'));\n\n    // using '-x lint' in order to ignore linting errors while building the apk\n    child_process.execFileSync(gradlew, ['build', '-x', 'lint'], {\n      stdio: [process.stdin, process.stdout, process.stderr],\n    });\n  } catch (e) {\n    console.log(chalk.red('Could not build the app, read the error above for details.\\n'));\n  }\n}\n\nfunction tryInstallAppOnDevice(args, device) {\n  try {\n    const pathToApk = `${args.appFolder}/build/outputs/apk/${args.appFolder}-debug.apk`;\n    const adbPath = getAdbPath();\n    const adbArgs = ['-s', device, 'install', pathToApk];\n    console.log(chalk.bold(\n      `Installing the app on the device (cd android && adb -s ${device} install ${pathToApk}`\n    ));\n    child_process.execFileSync(adbPath, adbArgs, {\n      stdio: [process.stdin, process.stdout, process.stderr],\n    });\n  } catch (e) {\n    console.log(e.message);\n    console.log(chalk.red(\n      'Could not install the app on the device, read the error above for details.\\n'\n    ));\n  }\n}\n\nfunction tryLaunchAppOnDevice(device, packageNameWithSuffix, packageName, adbPath, mainActivity) {\n  try {\n    const adbArgs = ['-s', device, 'shell', 'am', 'start', '-n', packageNameWithSuffix + '/' + packageName + '.' + mainActivity];\n    console.log(chalk.bold(\n      `Starting the app on ${device} (${adbPath} ${adbArgs.join(' ')})...`\n    ));\n    child_process.spawnSync(adbPath, adbArgs, {stdio: 'inherit'});\n  } catch (e) {\n    console.log(chalk.red(\n      'adb invocation failed. Do you have adb in your PATH?'\n    ));\n  }\n}\n\nfunction installAndLaunchOnDevice(args, selectedDevice, packageNameWithSuffix, packageName, adbPath) {\n  tryRunAdbReverse(args.port, selectedDevice);\n  tryInstallAppOnDevice(args, selectedDevice);\n  tryLaunchAppOnDevice(selectedDevice, packageNameWithSuffix, packageName, adbPath, args.mainActivity);\n}\n\nfunction runOnAllDevices(args, cmd, packageNameWithSuffix, packageName, adbPath){\n  try {\n    const gradleArgs = [];\n    if (args.variant) {\n      gradleArgs.push('install' +\n        args.variant[0].toUpperCase() + args.variant.slice(1)\n      );\n    } else if (args.flavor) {\n      console.warn(chalk.yellow(\n        '--flavor has been deprecated. Use --variant instead'\n      ));\n      gradleArgs.push('install' +\n        args.flavor[0].toUpperCase() + args.flavor.slice(1)\n      );\n    } else {\n      gradleArgs.push('installDebug');\n    }\n\n    if (args.installDebug) {\n      gradleArgs.push(args.installDebug);\n    }\n\n    console.log(chalk.bold(\n      `Building and installing the app on the device (cd android && ${cmd} ${gradleArgs.join(' ')})...`\n    ));\n\n    child_process.execFileSync(cmd, gradleArgs, {\n      stdio: [process.stdin, process.stdout, process.stderr],\n    });\n  } catch (e) {\n    console.log(chalk.red(\n      'Could not install the app on the device, read the error above for details.\\n' +\n      'Make sure you have an Android emulator running or a device connected and have\\n' +\n      'set up your Android development environment:\\n' +\n      'https://facebook.github.io/react-native/docs/android-setup.html'\n    ));\n    // stderr is automatically piped from the gradle process, so the user\n    // should see the error already, there is no need to do\n    // `console.log(e.stderr)`\n    return Promise.reject();\n  }\n    const devices = adb.getDevices();\n    if (devices && devices.length > 0) {\n      devices.forEach((device) => {\n        tryRunAdbReverse(args.port, device);\n        tryLaunchAppOnDevice(device, packageNameWithSuffix, packageName, adbPath, args.mainActivity);\n      });\n    } else {\n      try {\n        // If we cannot execute based on adb devices output, fall back to\n        // shell am start\n        const fallbackAdbArgs = [\n          'shell', 'am', 'start', '-n', packageNameWithSuffix + '/' + packageName + '.MainActivity'\n        ];\n        console.log(chalk.bold(\n          `Starting the app (${adbPath} ${fallbackAdbArgs.join(' ')}...`\n        ));\n        child_process.spawnSync(adbPath, fallbackAdbArgs, {stdio: 'inherit'});\n      } catch (e) {\n        console.log(chalk.red(\n          'adb invocation failed. Do you have adb in your PATH?'\n        ));\n        // stderr is automatically piped from the gradle process, so the user\n        // should see the error already, there is no need to do\n        // `console.log(e.stderr)`\n        return Promise.reject();\n      }\n    }\n}\n\nfunction startServerInNewWindow() {\n  const scriptFile = /^win/.test(process.platform) ?\n    'launchPackager.bat' :\n    'launchPackager.command';\n  const scriptsDir = path.resolve(__dirname, '..', '..', 'scripts');\n  const launchPackagerScript = path.resolve(scriptsDir, scriptFile);\n  const procConfig = {cwd: scriptsDir};\n  const terminal = process.env.REACT_TERMINAL;\n\n  if (process.platform === 'darwin') {\n    if (terminal) {\n      return child_process.spawnSync('open', ['-a', terminal, launchPackagerScript], procConfig);\n    }\n    return child_process.spawnSync('open', [launchPackagerScript], procConfig);\n\n  } else if (process.platform === 'linux') {\n    procConfig.detached = true;\n    if (terminal){\n      return child_process.spawn(terminal, ['-e', 'sh ' + launchPackagerScript], procConfig);\n    }\n    return child_process.spawn('sh', [launchPackagerScript], procConfig);\n\n  } else if (/^win/.test(process.platform)) {\n    procConfig.detached = true;\n    procConfig.stdio = 'ignore';\n    return child_process.spawn('cmd.exe', ['/C', launchPackagerScript], procConfig);\n  } else {\n    console.log(chalk.red(`Cannot start the packager. Unknown platform ${process.platform}`));\n  }\n}\n\nmodule.exports = {\n  name: 'run-android',\n  description: 'builds your app and starts it on a connected Android emulator or device',\n  func: runAndroid,\n  options: [{\n    command: '--install-debug',\n  }, {\n    command: '--root [string]',\n    description: 'Override the root directory for the android build (which contains the android directory)',\n    default: '',\n  }, {\n    command: '--flavor [string]',\n    description: '--flavor has been deprecated. Use --variant instead',\n  }, {\n    command: '--variant [string]',\n  }, {\n    command: '--appFolder [string]',\n    description: 'Specify a different application folder name for the android source.',\n    default: 'app',\n  }, {\n    command: '--appId [string]',\n    description: 'Specify an applicationId to launch after build.',\n    default: '',\n  }, {\n    command: '--appIdSuffix [string]',\n    description: 'Specify an applicationIdSuffix to launch after build.',\n    default: '',\n  }, {\n    command: '--main-activity [string]',\n    description: 'Name of the activity to start',\n    default: 'MainActivity',\n  }, {\n    command: '--deviceId [string]',\n    description: 'builds your app and starts it on a specific device/simulator with the ' +\n      'given device id (listed by running \"adb devices\" on the command line).',\n  }, {\n    command: '--no-packager',\n    description: 'Do not launch packager while building',\n  }, {\n    command: '--port [number]',\n    default: 8081,\n    parse: (val: string) => Number(val),\n  }],\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runAndroid/adb.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runAndroid\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runAndroid/adb.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runAndroid/adb.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "adb.js",
      "sourceFileName": "adb.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runAndroid",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runAndroid",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "adb"
    },
    "ignored": false,
    "code": "'use strict'; /**\n               * Copyright (c) 2015-present, Facebook, Inc.\n               * All rights reserved.\n               *\n               * This source code is licensed under the BSD-style license found in the\n               * LICENSE file in the root directory of this source tree. An additional grant\n               * of patent rights can be found in the PATENTS file in the same directory.\n               *\n               * \n               */\n\nconst child_process = require('child_process');\n\n/**\n                                                 * Parses the output of the 'adb devices' command\n                                                 */\nfunction parseDevicesResult(result) {\n  if (!result) {\n    return [];\n  }\n\n  const devices = [];\n  const lines = result.trim().split(/\\r?\\n/);\n\n  for (let i = 0; i < lines.length; i++) {\n    let words = lines[i].split(/[ ,\\t]+/).filter(w => w !== '');\n\n    if (words[1] === 'device') {\n      devices.push(words[0]);\n    }\n  }\n  return devices;\n}\n\n/**\n   * Executes the commands needed to get a list of devices from ADB\n   */\nfunction getDevices() {\n  try {\n    const devicesResult = child_process.execSync('adb devices');\n    return parseDevicesResult(devicesResult.toString());\n  } catch (e) {\n    return [];\n  }\n\n\n}\n\nmodule.exports = {\n  parseDevicesResult: parseDevicesResult,\n  getDevices: getDevices };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkYi5qcyJdLCJuYW1lcyI6WyJjaGlsZF9wcm9jZXNzIiwicmVxdWlyZSIsInBhcnNlRGV2aWNlc1Jlc3VsdCIsInJlc3VsdCIsImRldmljZXMiLCJsaW5lcyIsInRyaW0iLCJzcGxpdCIsImkiLCJsZW5ndGgiLCJ3b3JkcyIsImZpbHRlciIsInciLCJwdXNoIiwiZ2V0RGV2aWNlcyIsImRldmljZXNSZXN1bHQiLCJleGVjU3luYyIsInRvU3RyaW5nIiwiZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJjQUFBOzs7Ozs7Ozs7OztBQVdBLE1BQU1BLGdCQUFnQkMsUUFBUSxlQUFSLENBQXRCOztBQUVBOzs7QUFHQSxTQUFTQyxrQkFBVCxDQUE0QkMsTUFBNUIsRUFBMkQ7QUFDekQsTUFBSSxDQUFDQSxNQUFMLEVBQWE7QUFDWCxXQUFPLEVBQVA7QUFDRDs7QUFFRCxRQUFNQyxVQUFVLEVBQWhCO0FBQ0EsUUFBTUMsUUFBUUYsT0FBT0csSUFBUCxHQUFjQyxLQUFkLENBQW9CLE9BQXBCLENBQWQ7O0FBRUEsT0FBSyxJQUFJQyxJQUFJLENBQWIsRUFBZ0JBLElBQUlILE1BQU1JLE1BQTFCLEVBQWtDRCxHQUFsQyxFQUF1QztBQUNyQyxRQUFJRSxRQUFRTCxNQUFNRyxDQUFOLEVBQVNELEtBQVQsQ0FBZSxTQUFmLEVBQTBCSSxNQUExQixDQUFrQ0MsQ0FBRCxJQUFPQSxNQUFNLEVBQTlDLENBQVo7O0FBRUEsUUFBSUYsTUFBTSxDQUFOLE1BQWEsUUFBakIsRUFBMkI7QUFDekJOLGNBQVFTLElBQVIsQ0FBYUgsTUFBTSxDQUFOLENBQWI7QUFDRDtBQUNGO0FBQ0QsU0FBT04sT0FBUDtBQUNEOztBQUVEOzs7QUFHQSxTQUFTVSxVQUFULEdBQXFDO0FBQ25DLE1BQUk7QUFDRixVQUFNQyxnQkFBZ0JmLGNBQWNnQixRQUFkLENBQXVCLGFBQXZCLENBQXRCO0FBQ0EsV0FBT2QsbUJBQW1CYSxjQUFjRSxRQUFkLEVBQW5CLENBQVA7QUFDRCxHQUhELENBR0UsT0FBT0MsQ0FBUCxFQUFVO0FBQ1YsV0FBTyxFQUFQO0FBQ0Q7OztBQUdGOztBQUVEQyxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZsQixzQkFBb0JBLGtCQURMO0FBRWZZLGNBQVlBLFVBRkcsRUFBakIiLCJmaWxlIjoiYWRiLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL3J1bkFuZHJvaWQiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQGZsb3dcbiAqL1xuXG5jb25zdCBjaGlsZF9wcm9jZXNzID0gcmVxdWlyZSgnY2hpbGRfcHJvY2VzcycpO1xuXG4vKipcbiAqIFBhcnNlcyB0aGUgb3V0cHV0IG9mIHRoZSAnYWRiIGRldmljZXMnIGNvbW1hbmRcbiAqL1xuZnVuY3Rpb24gcGFyc2VEZXZpY2VzUmVzdWx0KHJlc3VsdDogc3RyaW5nKTogQXJyYXk8c3RyaW5nPiB7XG4gIGlmICghcmVzdWx0KSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgY29uc3QgZGV2aWNlcyA9IFtdO1xuICBjb25zdCBsaW5lcyA9IHJlc3VsdC50cmltKCkuc3BsaXQoL1xccj9cXG4vKTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGxpbmVzLmxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IHdvcmRzID0gbGluZXNbaV0uc3BsaXQoL1sgLFxcdF0rLykuZmlsdGVyKCh3KSA9PiB3ICE9PSAnJyk7XG5cbiAgICBpZiAod29yZHNbMV0gPT09ICdkZXZpY2UnKSB7XG4gICAgICBkZXZpY2VzLnB1c2god29yZHNbMF0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZGV2aWNlcztcbn1cblxuLyoqXG4gKiBFeGVjdXRlcyB0aGUgY29tbWFuZHMgbmVlZGVkIHRvIGdldCBhIGxpc3Qgb2YgZGV2aWNlcyBmcm9tIEFEQlxuICovXG5mdW5jdGlvbiBnZXREZXZpY2VzKCk6IEFycmF5PHN0cmluZz4ge1xuICB0cnkge1xuICAgIGNvbnN0IGRldmljZXNSZXN1bHQgPSBjaGlsZF9wcm9jZXNzLmV4ZWNTeW5jKCdhZGIgZGV2aWNlcycpO1xuICAgIHJldHVybiBwYXJzZURldmljZXNSZXN1bHQoZGV2aWNlc1Jlc3VsdC50b1N0cmluZygpKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuXG5cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHBhcnNlRGV2aWNlc1Jlc3VsdDogcGFyc2VEZXZpY2VzUmVzdWx0LFxuICBnZXREZXZpY2VzOiBnZXREZXZpY2VzXG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "adb.js"
      ],
      "names": [
        "child_process",
        "require",
        "parseDevicesResult",
        "result",
        "devices",
        "lines",
        "trim",
        "split",
        "i",
        "length",
        "words",
        "filter",
        "w",
        "push",
        "getDevices",
        "devicesResult",
        "execSync",
        "toString",
        "e",
        "module",
        "exports"
      ],
      "mappings": "cAAA;;;;;;;;;;;AAWA,MAAMA,gBAAgBC,QAAQ,eAAR,CAAtB;;AAEA;;;AAGA,SAASC,kBAAT,CAA4BC,MAA5B,EAA2D;AACzD,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,EAAP;AACD;;AAED,QAAMC,UAAU,EAAhB;AACA,QAAMC,QAAQF,OAAOG,IAAP,GAAcC,KAAd,CAAoB,OAApB,CAAd;;AAEA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIH,MAAMI,MAA1B,EAAkCD,GAAlC,EAAuC;AACrC,QAAIE,QAAQL,MAAMG,CAAN,EAASD,KAAT,CAAe,SAAf,EAA0BI,MAA1B,CAAkCC,CAAD,IAAOA,MAAM,EAA9C,CAAZ;;AAEA,QAAIF,MAAM,CAAN,MAAa,QAAjB,EAA2B;AACzBN,cAAQS,IAAR,CAAaH,MAAM,CAAN,CAAb;AACD;AACF;AACD,SAAON,OAAP;AACD;;AAED;;;AAGA,SAASU,UAAT,GAAqC;AACnC,MAAI;AACF,UAAMC,gBAAgBf,cAAcgB,QAAd,CAAuB,aAAvB,CAAtB;AACA,WAAOd,mBAAmBa,cAAcE,QAAd,EAAnB,CAAP;AACD,GAHD,CAGE,OAAOC,CAAP,EAAU;AACV,WAAO,EAAP;AACD;;;AAGF;;AAEDC,OAAOC,OAAP,GAAiB;AACflB,sBAAoBA,kBADL;AAEfY,cAAYA,UAFG,EAAjB",
      "file": "adb.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/runAndroid",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\nconst child_process = require('child_process');\n\n/**\n * Parses the output of the 'adb devices' command\n */\nfunction parseDevicesResult(result: string): Array<string> {\n  if (!result) {\n    return [];\n  }\n\n  const devices = [];\n  const lines = result.trim().split(/\\r?\\n/);\n\n  for (let i = 0; i < lines.length; i++) {\n    let words = lines[i].split(/[ ,\\t]+/).filter((w) => w !== '');\n\n    if (words[1] === 'device') {\n      devices.push(words[0]);\n    }\n  }\n  return devices;\n}\n\n/**\n * Executes the commands needed to get a list of devices from ADB\n */\nfunction getDevices(): Array<string> {\n  try {\n    const devicesResult = child_process.execSync('adb devices');\n    return parseDevicesResult(devicesResult.toString());\n  } catch (e) {\n    return [];\n  }\n\n\n}\n\nmodule.exports = {\n  parseDevicesResult: parseDevicesResult,\n  getDevices: getDevices\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/isPackagerRunning.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/isPackagerRunning.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/isPackagerRunning.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "isPackagerRunning.js",
      "sourceFileName": "isPackagerRunning.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "isPackagerRunning"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fetch = require('node-fetch');\n\n/**\n                                      * Indicates whether or not the packager is running. It returns a promise that\n                                      * when fulfilled can returns one out of these possible values:\n                                      *   - `running`: the packager is running\n                                      *   - `not_running`: the packager nor any process is running on the expected\n                                      *                    port.\n                                      *   - `unrecognized`: one other process is running on the port we expect the\n                                      *                     packager to be running.\n                                      */\nfunction isPackagerRunning() {\n  return fetch('http://localhost:8081/status').then(\n  res => res.text().then(body =>\n  body === 'packager-status:running' ? 'running' : 'unrecognized'),\n\n  () => 'not_running');\n\n}\n\nmodule.exports = isPackagerRunning;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzUGFja2FnZXJSdW5uaW5nLmpzIl0sIm5hbWVzIjpbImZldGNoIiwicmVxdWlyZSIsImlzUGFja2FnZXJSdW5uaW5nIiwidGhlbiIsInJlcyIsInRleHQiLCJib2R5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUEsTUFBTUEsUUFBUUMsUUFBUSxZQUFSLENBQWQ7O0FBRUE7Ozs7Ozs7OztBQVNBLFNBQVNDLGlCQUFULEdBQTZCO0FBQzNCLFNBQU9GLE1BQU0sOEJBQU4sRUFBc0NHLElBQXRDO0FBQ0xDLFNBQU9BLElBQUlDLElBQUosR0FBV0YsSUFBWCxDQUFnQkc7QUFDckJBLFdBQVMseUJBQVQsR0FBcUMsU0FBckMsR0FBaUQsY0FENUMsQ0FERjs7QUFJTCxRQUFNLGFBSkQsQ0FBUDs7QUFNRDs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQk4saUJBQWpCIiwiZmlsZSI6ImlzUGFja2FnZXJSdW5uaW5nLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgZmV0Y2ggPSByZXF1aXJlKCdub2RlLWZldGNoJyk7XG5cbi8qKlxuICogSW5kaWNhdGVzIHdoZXRoZXIgb3Igbm90IHRoZSBwYWNrYWdlciBpcyBydW5uaW5nLiBJdCByZXR1cm5zIGEgcHJvbWlzZSB0aGF0XG4gKiB3aGVuIGZ1bGZpbGxlZCBjYW4gcmV0dXJucyBvbmUgb3V0IG9mIHRoZXNlIHBvc3NpYmxlIHZhbHVlczpcbiAqICAgLSBgcnVubmluZ2A6IHRoZSBwYWNrYWdlciBpcyBydW5uaW5nXG4gKiAgIC0gYG5vdF9ydW5uaW5nYDogdGhlIHBhY2thZ2VyIG5vciBhbnkgcHJvY2VzcyBpcyBydW5uaW5nIG9uIHRoZSBleHBlY3RlZFxuICogICAgICAgICAgICAgICAgICAgIHBvcnQuXG4gKiAgIC0gYHVucmVjb2duaXplZGA6IG9uZSBvdGhlciBwcm9jZXNzIGlzIHJ1bm5pbmcgb24gdGhlIHBvcnQgd2UgZXhwZWN0IHRoZVxuICogICAgICAgICAgICAgICAgICAgICBwYWNrYWdlciB0byBiZSBydW5uaW5nLlxuICovXG5mdW5jdGlvbiBpc1BhY2thZ2VyUnVubmluZygpIHtcbiAgcmV0dXJuIGZldGNoKCdodHRwOi8vbG9jYWxob3N0OjgwODEvc3RhdHVzJykudGhlbihcbiAgICByZXMgPT4gcmVzLnRleHQoKS50aGVuKGJvZHkgPT5cbiAgICAgIGJvZHkgPT09ICdwYWNrYWdlci1zdGF0dXM6cnVubmluZycgPyAncnVubmluZycgOiAndW5yZWNvZ25pemVkJ1xuICAgICksXG4gICAgKCkgPT4gJ25vdF9ydW5uaW5nJ1xuICApO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzUGFja2FnZXJSdW5uaW5nO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "isPackagerRunning.js"
      ],
      "names": [
        "fetch",
        "require",
        "isPackagerRunning",
        "then",
        "res",
        "text",
        "body",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,QAAQC,QAAQ,YAAR,CAAd;;AAEA;;;;;;;;;AASA,SAASC,iBAAT,GAA6B;AAC3B,SAAOF,MAAM,8BAAN,EAAsCG,IAAtC;AACLC,SAAOA,IAAIC,IAAJ,GAAWF,IAAX,CAAgBG;AACrBA,WAAS,yBAAT,GAAqC,SAArC,GAAiD,cAD5C,CADF;;AAIL,QAAM,aAJD,CAAP;;AAMD;;AAEDC,OAAOC,OAAP,GAAiBN,iBAAjB",
      "file": "isPackagerRunning.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fetch = require('node-fetch');\n\n/**\n * Indicates whether or not the packager is running. It returns a promise that\n * when fulfilled can returns one out of these possible values:\n *   - `running`: the packager is running\n *   - `not_running`: the packager nor any process is running on the expected\n *                    port.\n *   - `unrecognized`: one other process is running on the port we expect the\n *                     packager to be running.\n */\nfunction isPackagerRunning() {\n  return fetch('http://localhost:8081/status').then(\n    res => res.text().then(body =>\n      body === 'packager-status:running' ? 'running' : 'unrecognized'\n    ),\n    () => 'not_running'\n  );\n}\n\nmodule.exports = isPackagerRunning;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/library/library.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/library\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/library/library.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/library/library.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "library.js",
      "sourceFileName": "library.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/library",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/library",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "library"
    },
    "ignored": false,
    "code": "/**\n* Copyright (c) 2015-present, Facebook, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the BSD-style license found in the\n* LICENSE file in the root directory of this source tree. An additional grant\n* of patent rights can be found in the PATENTS file in the same directory.\n*/\n'use strict';\n\nconst copyAndReplace = require('../util/copyAndReplace');\nconst fs = require('fs');\nconst isValidPackageName = require('../util/isValidPackageName');\nconst path = require('path');\nconst walk = require('../util/walk');\n\n/**\n                                       * Creates a new native library with the given name\n                                       */\nfunction library(argv, config, args) {\n  if (!isValidPackageName(args.name)) {\n    return Promise.reject(\n    args.name + ' is not a valid name for a project. Please use a valid ' +\n    'identifier name (alphanumeric).');\n\n  }\n\n  const root = process.cwd();\n  const libraries = path.resolve(root, 'Libraries');\n  const libraryDest = path.resolve(libraries, args.name);\n  const source = path.resolve('node_modules', 'react-native', 'Libraries', 'Sample');\n\n  if (!fs.existsSync(libraries)) {\n    fs.mkdir(libraries);\n  }\n\n  if (fs.existsSync(libraryDest)) {\n    return Promise.reject(new Error(`Library already exists in ${libraryDest}`));\n  }\n\n  walk(source).forEach(f => {\n    if (f.indexOf('project.xcworkspace') !== -1 ||\n    f.indexOf('.xcodeproj/xcuserdata') !== -1) {\n      return;\n    }\n\n    const dest = path.relative(source, f.replace(/Sample/g, args.name).replace(/^_/, '.'));\n    copyAndReplace(\n    path.resolve(source, f),\n    path.resolve(libraryDest, dest),\n    { 'Sample': args.name });\n\n  });\n\n  console.log('Created library in', libraryDest);\n  console.log('Next Steps:');\n  console.log('   Link your library in Xcode:');\n  console.log(\n  '   https://facebook.github.io/react-native/docs/' +\n  'linking-libraries-ios.html#content\\n');\n\n}\n\nmodule.exports = {\n  name: 'new-library',\n  func: library,\n  description: 'generates a native library bridge',\n  options: [{\n    command: '--name <string>',\n    description: 'name of the library to generate',\n    default: null }] };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnJhcnkuanMiXSwibmFtZXMiOlsiY29weUFuZFJlcGxhY2UiLCJyZXF1aXJlIiwiZnMiLCJpc1ZhbGlkUGFja2FnZU5hbWUiLCJwYXRoIiwid2FsayIsImxpYnJhcnkiLCJhcmd2IiwiY29uZmlnIiwiYXJncyIsIm5hbWUiLCJQcm9taXNlIiwicmVqZWN0Iiwicm9vdCIsInByb2Nlc3MiLCJjd2QiLCJsaWJyYXJpZXMiLCJyZXNvbHZlIiwibGlicmFyeURlc3QiLCJzb3VyY2UiLCJleGlzdHNTeW5jIiwibWtkaXIiLCJFcnJvciIsImZvckVhY2giLCJmIiwiaW5kZXhPZiIsImRlc3QiLCJyZWxhdGl2ZSIsInJlcGxhY2UiLCJjb25zb2xlIiwibG9nIiwibW9kdWxlIiwiZXhwb3J0cyIsImZ1bmMiLCJkZXNjcmlwdGlvbiIsIm9wdGlvbnMiLCJjb21tYW5kIiwiZGVmYXVsdCJdLCJtYXBwaW5ncyI6IkFBQUM7Ozs7Ozs7O0FBUUQ7O0FBRUEsTUFBTUEsaUJBQWlCQyxRQUFRLHdCQUFSLENBQXZCO0FBQ0EsTUFBTUMsS0FBS0QsUUFBUSxJQUFSLENBQVg7QUFDQSxNQUFNRSxxQkFBcUJGLFFBQVEsNEJBQVIsQ0FBM0I7QUFDQSxNQUFNRyxPQUFPSCxRQUFRLE1BQVIsQ0FBYjtBQUNBLE1BQU1JLE9BQU9KLFFBQVEsY0FBUixDQUFiOztBQUVBOzs7QUFHQSxTQUFTSyxPQUFULENBQWlCQyxJQUFqQixFQUF1QkMsTUFBdkIsRUFBK0JDLElBQS9CLEVBQXFDO0FBQ25DLE1BQUksQ0FBQ04sbUJBQW1CTSxLQUFLQyxJQUF4QixDQUFMLEVBQW9DO0FBQ2xDLFdBQU9DLFFBQVFDLE1BQVI7QUFDTEgsU0FBS0MsSUFBTCxHQUFZLHlEQUFaO0FBQ0EscUNBRkssQ0FBUDs7QUFJRDs7QUFFRCxRQUFNRyxPQUFPQyxRQUFRQyxHQUFSLEVBQWI7QUFDQSxRQUFNQyxZQUFZWixLQUFLYSxPQUFMLENBQWFKLElBQWIsRUFBbUIsV0FBbkIsQ0FBbEI7QUFDQSxRQUFNSyxjQUFjZCxLQUFLYSxPQUFMLENBQWFELFNBQWIsRUFBd0JQLEtBQUtDLElBQTdCLENBQXBCO0FBQ0EsUUFBTVMsU0FBU2YsS0FBS2EsT0FBTCxDQUFhLGNBQWIsRUFBNkIsY0FBN0IsRUFBNkMsV0FBN0MsRUFBMEQsUUFBMUQsQ0FBZjs7QUFFQSxNQUFJLENBQUNmLEdBQUdrQixVQUFILENBQWNKLFNBQWQsQ0FBTCxFQUErQjtBQUM3QmQsT0FBR21CLEtBQUgsQ0FBU0wsU0FBVDtBQUNEOztBQUVELE1BQUlkLEdBQUdrQixVQUFILENBQWNGLFdBQWQsQ0FBSixFQUFnQztBQUM5QixXQUFPUCxRQUFRQyxNQUFSLENBQWUsSUFBSVUsS0FBSixDQUFXLDZCQUE0QkosV0FBWSxFQUFuRCxDQUFmLENBQVA7QUFDRDs7QUFFRGIsT0FBS2MsTUFBTCxFQUFhSSxPQUFiLENBQXFCQyxLQUFLO0FBQ3hCLFFBQUlBLEVBQUVDLE9BQUYsQ0FBVSxxQkFBVixNQUFxQyxDQUFDLENBQXRDO0FBQ0FELE1BQUVDLE9BQUYsQ0FBVSx1QkFBVixNQUF1QyxDQUFDLENBRDVDLEVBQytDO0FBQzdDO0FBQ0Q7O0FBRUQsVUFBTUMsT0FBT3RCLEtBQUt1QixRQUFMLENBQWNSLE1BQWQsRUFBc0JLLEVBQUVJLE9BQUYsQ0FBVSxTQUFWLEVBQXFCbkIsS0FBS0MsSUFBMUIsRUFBZ0NrQixPQUFoQyxDQUF3QyxJQUF4QyxFQUE4QyxHQUE5QyxDQUF0QixDQUFiO0FBQ0E1QjtBQUNFSSxTQUFLYSxPQUFMLENBQWFFLE1BQWIsRUFBcUJLLENBQXJCLENBREY7QUFFRXBCLFNBQUthLE9BQUwsQ0FBYUMsV0FBYixFQUEwQlEsSUFBMUIsQ0FGRjtBQUdFLE1BQUMsVUFBVWpCLEtBQUtDLElBQWhCLEVBSEY7O0FBS0QsR0FaRDs7QUFjQW1CLFVBQVFDLEdBQVIsQ0FBWSxvQkFBWixFQUFrQ1osV0FBbEM7QUFDQVcsVUFBUUMsR0FBUixDQUFZLGFBQVo7QUFDQUQsVUFBUUMsR0FBUixDQUFZLGdDQUFaO0FBQ0FELFVBQVFDLEdBQVI7QUFDRTtBQUNBLHdDQUZGOztBQUlEOztBQUVEQyxPQUFPQyxPQUFQLEdBQWlCO0FBQ2Z0QixRQUFNLGFBRFM7QUFFZnVCLFFBQU0zQixPQUZTO0FBR2Y0QixlQUFhLG1DQUhFO0FBSWZDLFdBQVMsQ0FBQztBQUNSQyxhQUFTLGlCQUREO0FBRVJGLGlCQUFhLGlDQUZMO0FBR1JHLGFBQVMsSUFIRCxFQUFELENBSk0sRUFBakIiLCJmaWxlIjoibGlicmFyeS5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saWJyYXJ5Iiwic291cmNlc0NvbnRlbnQiOlsiIC8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBjb3B5QW5kUmVwbGFjZSA9IHJlcXVpcmUoJy4uL3V0aWwvY29weUFuZFJlcGxhY2UnKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IGlzVmFsaWRQYWNrYWdlTmFtZSA9IHJlcXVpcmUoJy4uL3V0aWwvaXNWYWxpZFBhY2thZ2VOYW1lJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3Qgd2FsayA9IHJlcXVpcmUoJy4uL3V0aWwvd2FsaycpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgbmF0aXZlIGxpYnJhcnkgd2l0aCB0aGUgZ2l2ZW4gbmFtZVxuICovXG5mdW5jdGlvbiBsaWJyYXJ5KGFyZ3YsIGNvbmZpZywgYXJncykge1xuICBpZiAoIWlzVmFsaWRQYWNrYWdlTmFtZShhcmdzLm5hbWUpKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KFxuICAgICAgYXJncy5uYW1lICsgJyBpcyBub3QgYSB2YWxpZCBuYW1lIGZvciBhIHByb2plY3QuIFBsZWFzZSB1c2UgYSB2YWxpZCAnICtcbiAgICAgICdpZGVudGlmaWVyIG5hbWUgKGFscGhhbnVtZXJpYykuJ1xuICAgICk7XG4gIH1cblxuICBjb25zdCByb290ID0gcHJvY2Vzcy5jd2QoKTtcbiAgY29uc3QgbGlicmFyaWVzID0gcGF0aC5yZXNvbHZlKHJvb3QsICdMaWJyYXJpZXMnKTtcbiAgY29uc3QgbGlicmFyeURlc3QgPSBwYXRoLnJlc29sdmUobGlicmFyaWVzLCBhcmdzLm5hbWUpO1xuICBjb25zdCBzb3VyY2UgPSBwYXRoLnJlc29sdmUoJ25vZGVfbW9kdWxlcycsICdyZWFjdC1uYXRpdmUnLCAnTGlicmFyaWVzJywgJ1NhbXBsZScpO1xuXG4gIGlmICghZnMuZXhpc3RzU3luYyhsaWJyYXJpZXMpKSB7XG4gICAgZnMubWtkaXIobGlicmFyaWVzKTtcbiAgfVxuXG4gIGlmIChmcy5leGlzdHNTeW5jKGxpYnJhcnlEZXN0KSkge1xuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoYExpYnJhcnkgYWxyZWFkeSBleGlzdHMgaW4gJHtsaWJyYXJ5RGVzdH1gKSk7XG4gIH1cblxuICB3YWxrKHNvdXJjZSkuZm9yRWFjaChmID0+IHtcbiAgICBpZiAoZi5pbmRleE9mKCdwcm9qZWN0Lnhjd29ya3NwYWNlJykgIT09IC0xIHx8XG4gICAgICAgIGYuaW5kZXhPZignLnhjb2RlcHJvai94Y3VzZXJkYXRhJykgIT09IC0xKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgZGVzdCA9IHBhdGgucmVsYXRpdmUoc291cmNlLCBmLnJlcGxhY2UoL1NhbXBsZS9nLCBhcmdzLm5hbWUpLnJlcGxhY2UoL15fLywgJy4nKSk7XG4gICAgY29weUFuZFJlcGxhY2UoXG4gICAgICBwYXRoLnJlc29sdmUoc291cmNlLCBmKSxcbiAgICAgIHBhdGgucmVzb2x2ZShsaWJyYXJ5RGVzdCwgZGVzdCksXG4gICAgICB7J1NhbXBsZSc6IGFyZ3MubmFtZX1cbiAgICApO1xuICB9KTtcblxuICBjb25zb2xlLmxvZygnQ3JlYXRlZCBsaWJyYXJ5IGluJywgbGlicmFyeURlc3QpO1xuICBjb25zb2xlLmxvZygnTmV4dCBTdGVwczonKTtcbiAgY29uc29sZS5sb2coJyAgIExpbmsgeW91ciBsaWJyYXJ5IGluIFhjb2RlOicpO1xuICBjb25zb2xlLmxvZyhcbiAgICAnICAgaHR0cHM6Ly9mYWNlYm9vay5naXRodWIuaW8vcmVhY3QtbmF0aXZlL2RvY3MvJyArXG4gICAgJ2xpbmtpbmctbGlicmFyaWVzLWlvcy5odG1sI2NvbnRlbnRcXG4nXG4gICk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBuYW1lOiAnbmV3LWxpYnJhcnknLFxuICBmdW5jOiBsaWJyYXJ5LFxuICBkZXNjcmlwdGlvbjogJ2dlbmVyYXRlcyBhIG5hdGl2ZSBsaWJyYXJ5IGJyaWRnZScsXG4gIG9wdGlvbnM6IFt7XG4gICAgY29tbWFuZDogJy0tbmFtZSA8c3RyaW5nPicsXG4gICAgZGVzY3JpcHRpb246ICduYW1lIG9mIHRoZSBsaWJyYXJ5IHRvIGdlbmVyYXRlJyxcbiAgICBkZWZhdWx0OiBudWxsLFxuICB9XSxcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "library.js"
      ],
      "names": [
        "copyAndReplace",
        "require",
        "fs",
        "isValidPackageName",
        "path",
        "walk",
        "library",
        "argv",
        "config",
        "args",
        "name",
        "Promise",
        "reject",
        "root",
        "process",
        "cwd",
        "libraries",
        "resolve",
        "libraryDest",
        "source",
        "existsSync",
        "mkdir",
        "Error",
        "forEach",
        "f",
        "indexOf",
        "dest",
        "relative",
        "replace",
        "console",
        "log",
        "module",
        "exports",
        "func",
        "description",
        "options",
        "command",
        "default"
      ],
      "mappings": "AAAC;;;;;;;;AAQD;;AAEA,MAAMA,iBAAiBC,QAAQ,wBAAR,CAAvB;AACA,MAAMC,KAAKD,QAAQ,IAAR,CAAX;AACA,MAAME,qBAAqBF,QAAQ,4BAAR,CAA3B;AACA,MAAMG,OAAOH,QAAQ,MAAR,CAAb;AACA,MAAMI,OAAOJ,QAAQ,cAAR,CAAb;;AAEA;;;AAGA,SAASK,OAAT,CAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqC;AACnC,MAAI,CAACN,mBAAmBM,KAAKC,IAAxB,CAAL,EAAoC;AAClC,WAAOC,QAAQC,MAAR;AACLH,SAAKC,IAAL,GAAY,yDAAZ;AACA,qCAFK,CAAP;;AAID;;AAED,QAAMG,OAAOC,QAAQC,GAAR,EAAb;AACA,QAAMC,YAAYZ,KAAKa,OAAL,CAAaJ,IAAb,EAAmB,WAAnB,CAAlB;AACA,QAAMK,cAAcd,KAAKa,OAAL,CAAaD,SAAb,EAAwBP,KAAKC,IAA7B,CAApB;AACA,QAAMS,SAASf,KAAKa,OAAL,CAAa,cAAb,EAA6B,cAA7B,EAA6C,WAA7C,EAA0D,QAA1D,CAAf;;AAEA,MAAI,CAACf,GAAGkB,UAAH,CAAcJ,SAAd,CAAL,EAA+B;AAC7Bd,OAAGmB,KAAH,CAASL,SAAT;AACD;;AAED,MAAId,GAAGkB,UAAH,CAAcF,WAAd,CAAJ,EAAgC;AAC9B,WAAOP,QAAQC,MAAR,CAAe,IAAIU,KAAJ,CAAW,6BAA4BJ,WAAY,EAAnD,CAAf,CAAP;AACD;;AAEDb,OAAKc,MAAL,EAAaI,OAAb,CAAqBC,KAAK;AACxB,QAAIA,EAAEC,OAAF,CAAU,qBAAV,MAAqC,CAAC,CAAtC;AACAD,MAAEC,OAAF,CAAU,uBAAV,MAAuC,CAAC,CAD5C,EAC+C;AAC7C;AACD;;AAED,UAAMC,OAAOtB,KAAKuB,QAAL,CAAcR,MAAd,EAAsBK,EAAEI,OAAF,CAAU,SAAV,EAAqBnB,KAAKC,IAA1B,EAAgCkB,OAAhC,CAAwC,IAAxC,EAA8C,GAA9C,CAAtB,CAAb;AACA5B;AACEI,SAAKa,OAAL,CAAaE,MAAb,EAAqBK,CAArB,CADF;AAEEpB,SAAKa,OAAL,CAAaC,WAAb,EAA0BQ,IAA1B,CAFF;AAGE,MAAC,UAAUjB,KAAKC,IAAhB,EAHF;;AAKD,GAZD;;AAcAmB,UAAQC,GAAR,CAAY,oBAAZ,EAAkCZ,WAAlC;AACAW,UAAQC,GAAR,CAAY,aAAZ;AACAD,UAAQC,GAAR,CAAY,gCAAZ;AACAD,UAAQC,GAAR;AACE;AACA,wCAFF;;AAID;;AAEDC,OAAOC,OAAP,GAAiB;AACftB,QAAM,aADS;AAEfuB,QAAM3B,OAFS;AAGf4B,eAAa,mCAHE;AAIfC,WAAS,CAAC;AACRC,aAAS,iBADD;AAERF,iBAAa,iCAFL;AAGRG,aAAS,IAHD,EAAD,CAJM,EAAjB",
      "file": "library.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/library",
      "sourcesContent": [
        " /**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst copyAndReplace = require('../util/copyAndReplace');\nconst fs = require('fs');\nconst isValidPackageName = require('../util/isValidPackageName');\nconst path = require('path');\nconst walk = require('../util/walk');\n\n/**\n * Creates a new native library with the given name\n */\nfunction library(argv, config, args) {\n  if (!isValidPackageName(args.name)) {\n    return Promise.reject(\n      args.name + ' is not a valid name for a project. Please use a valid ' +\n      'identifier name (alphanumeric).'\n    );\n  }\n\n  const root = process.cwd();\n  const libraries = path.resolve(root, 'Libraries');\n  const libraryDest = path.resolve(libraries, args.name);\n  const source = path.resolve('node_modules', 'react-native', 'Libraries', 'Sample');\n\n  if (!fs.existsSync(libraries)) {\n    fs.mkdir(libraries);\n  }\n\n  if (fs.existsSync(libraryDest)) {\n    return Promise.reject(new Error(`Library already exists in ${libraryDest}`));\n  }\n\n  walk(source).forEach(f => {\n    if (f.indexOf('project.xcworkspace') !== -1 ||\n        f.indexOf('.xcodeproj/xcuserdata') !== -1) {\n      return;\n    }\n\n    const dest = path.relative(source, f.replace(/Sample/g, args.name).replace(/^_/, '.'));\n    copyAndReplace(\n      path.resolve(source, f),\n      path.resolve(libraryDest, dest),\n      {'Sample': args.name}\n    );\n  });\n\n  console.log('Created library in', libraryDest);\n  console.log('Next Steps:');\n  console.log('   Link your library in Xcode:');\n  console.log(\n    '   https://facebook.github.io/react-native/docs/' +\n    'linking-libraries-ios.html#content\\n'\n  );\n}\n\nmodule.exports = {\n  name: 'new-library',\n  func: library,\n  description: 'generates a native library bridge',\n  options: [{\n    command: '--name <string>',\n    description: 'name of the library to generate',\n    default: null,\n  }],\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/copyAndReplace.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/copyAndReplace.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/copyAndReplace.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "copyAndReplace.js",
      "sourceFileName": "copyAndReplace.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "copyAndReplace"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\n// Binary files, don't process these (avoid decoding as utf8)\nconst binaryExtensions = ['.png', '.jar'];\n\n/**\n                                            * Copy a file to given destination, replacing parts of its contents.\n                                            * @param srcPath Path to a file to be copied.\n                                            * @param destPath Destination path.\n                                            * @param replacements: e.g. {'TextToBeReplaced': 'Replacement'}\n                                            * @param contentChangedCallback\n                                            *        Used when upgrading projects. Based on if file contents would change\n                                            *        when being replaced, allows the caller to specify whether the file\n                                            *        should be replaced or not.\n                                            *        If null, files will be overwritten.\n                                            *        Function(path, 'identical' | 'changed' | 'new') => 'keep' | 'overwrite'\n                                            */\nfunction copyAndReplace(srcPath, destPath, replacements, contentChangedCallback) {\n  if (fs.lstatSync(srcPath).isDirectory()) {\n    if (!fs.existsSync(destPath)) {\n      fs.mkdirSync(destPath);\n    }\n    // Not recursive\n    return;\n  }\n\n  const extension = path.extname(srcPath);\n  if (binaryExtensions.indexOf(extension) !== -1) {\n    // Binary file\n    let shouldOverwrite = 'overwrite';\n    if (contentChangedCallback) {\n      const newContentBuffer = fs.readFileSync(srcPath);\n      let contentChanged = 'identical';\n      try {\n        const origContentBuffer = fs.readFileSync(destPath);\n        if (Buffer.compare(origContentBuffer, newContentBuffer) !== 0) {\n          contentChanged = 'changed';\n        }\n      } catch (err) {\n        if (err.code === 'ENOENT') {\n          contentChanged = 'new';\n        } else {\n          throw err;\n        }\n      }\n      shouldOverwrite = contentChangedCallback(destPath, contentChanged);\n    }\n    if (shouldOverwrite === 'overwrite') {\n      copyBinaryFile(srcPath, destPath, err => {\n        if (err) {throw err;}\n      });\n    }\n  } else {\n    // Text file\n    const srcPermissions = fs.statSync(srcPath).mode;\n    let content = fs.readFileSync(srcPath, 'utf8');\n    Object.keys(replacements).forEach(regex =>\n    content = content.replace(new RegExp(regex, 'g'), replacements[regex]));\n\n\n    let shouldOverwrite = 'overwrite';\n    if (contentChangedCallback) {\n      // Check if contents changed and ask to overwrite\n      let contentChanged = 'identical';\n      try {\n        const origContent = fs.readFileSync(destPath, 'utf8');\n        if (content !== origContent) {\n          //console.log('Content changed: ' + destPath);\n          contentChanged = 'changed';\n        }\n      } catch (err) {\n        if (err.code === 'ENOENT') {\n          contentChanged = 'new';\n        } else {\n          throw err;\n        }\n      }\n      shouldOverwrite = contentChangedCallback(destPath, contentChanged);\n    }\n    if (shouldOverwrite === 'overwrite') {\n      fs.writeFileSync(destPath, content, {\n        encoding: 'utf8',\n        mode: srcPermissions });\n\n    }\n  }\n}\n\n/**\n   * Same as 'cp' on Unix. Don't do any replacements.\n   */\nfunction copyBinaryFile(srcPath, destPath, cb) {\n  let cbCalled = false;\n  const srcPermissions = fs.statSync(srcPath).mode;\n  const readStream = fs.createReadStream(srcPath);\n  readStream.on('error', function (err) {\n    done(err);\n  });\n  const writeStream = fs.createWriteStream(destPath, {\n    mode: srcPermissions });\n\n  writeStream.on('error', function (err) {\n    done(err);\n  });\n  writeStream.on('close', function (ex) {\n    done();\n  });\n  readStream.pipe(writeStream);\n  function done(err) {\n    if (!cbCalled) {\n      cb(err);\n      cbCalled = true;\n    }\n  }\n}\n\nmodule.exports = copyAndReplace;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "copyAndReplace.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "binaryExtensions",
        "copyAndReplace",
        "srcPath",
        "destPath",
        "replacements",
        "contentChangedCallback",
        "lstatSync",
        "isDirectory",
        "existsSync",
        "mkdirSync",
        "extension",
        "extname",
        "indexOf",
        "shouldOverwrite",
        "newContentBuffer",
        "readFileSync",
        "contentChanged",
        "origContentBuffer",
        "Buffer",
        "compare",
        "err",
        "code",
        "copyBinaryFile",
        "srcPermissions",
        "statSync",
        "mode",
        "content",
        "Object",
        "keys",
        "forEach",
        "regex",
        "replace",
        "RegExp",
        "origContent",
        "writeFileSync",
        "encoding",
        "cb",
        "cbCalled",
        "readStream",
        "createReadStream",
        "on",
        "done",
        "writeStream",
        "createWriteStream",
        "ex",
        "pipe",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA;AACA,MAAME,mBAAmB,CAAC,MAAD,EAAS,MAAT,CAAzB;;AAEA;;;;;;;;;;;;AAYA,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,YAA3C,EAAyDC,sBAAzD,EAAiF;AAC/E,MAAIR,GAAGS,SAAH,CAAaJ,OAAb,EAAsBK,WAAtB,EAAJ,EAAyC;AACvC,QAAI,CAACV,GAAGW,UAAH,CAAcL,QAAd,CAAL,EAA8B;AAC5BN,SAAGY,SAAH,CAAaN,QAAb;AACD;AACD;AACA;AACD;;AAED,QAAMO,YAAYX,KAAKY,OAAL,CAAaT,OAAb,CAAlB;AACA,MAAIF,iBAAiBY,OAAjB,CAAyBF,SAAzB,MAAwC,CAAC,CAA7C,EAAgD;AAC9C;AACA,QAAIG,kBAAkB,WAAtB;AACA,QAAIR,sBAAJ,EAA4B;AAC1B,YAAMS,mBAAmBjB,GAAGkB,YAAH,CAAgBb,OAAhB,CAAzB;AACA,UAAIc,iBAAiB,WAArB;AACA,UAAI;AACF,cAAMC,oBAAoBpB,GAAGkB,YAAH,CAAgBZ,QAAhB,CAA1B;AACA,YAAIe,OAAOC,OAAP,CAAeF,iBAAf,EAAkCH,gBAAlC,MAAwD,CAA5D,EAA+D;AAC7DE,2BAAiB,SAAjB;AACD;AACF,OALD,CAKE,OAAOI,GAAP,EAAY;AACZ,YAAIA,IAAIC,IAAJ,KAAa,QAAjB,EAA2B;AACzBL,2BAAiB,KAAjB;AACD,SAFD,MAEO;AACL,gBAAMI,GAAN;AACD;AACF;AACDP,wBAAkBR,uBAAuBF,QAAvB,EAAiCa,cAAjC,CAAlB;AACD;AACD,QAAIH,oBAAoB,WAAxB,EAAqC;AACnCS,qBAAepB,OAAf,EAAwBC,QAAxB,EAAmCiB,GAAD,IAAS;AACzC,YAAIA,GAAJ,EAAS,CAAE,MAAMA,GAAN,CAAY;AACxB,OAFD;AAGD;AACF,GAzBD,MAyBO;AACL;AACA,UAAMG,iBAAiB1B,GAAG2B,QAAH,CAAYtB,OAAZ,EAAqBuB,IAA5C;AACA,QAAIC,UAAU7B,GAAGkB,YAAH,CAAgBb,OAAhB,EAAyB,MAAzB,CAAd;AACAyB,WAAOC,IAAP,CAAYxB,YAAZ,EAA0ByB,OAA1B,CAAkCC;AAChCJ,cAAUA,QAAQK,OAAR,CAAgB,IAAIC,MAAJ,CAAWF,KAAX,EAAkB,GAAlB,CAAhB,EAAwC1B,aAAa0B,KAAb,CAAxC,CADZ;;;AAIA,QAAIjB,kBAAkB,WAAtB;AACA,QAAIR,sBAAJ,EAA4B;AAC1B;AACA,UAAIW,iBAAiB,WAArB;AACA,UAAI;AACF,cAAMiB,cAAcpC,GAAGkB,YAAH,CAAgBZ,QAAhB,EAA0B,MAA1B,CAApB;AACA,YAAIuB,YAAYO,WAAhB,EAA6B;AAC3B;AACAjB,2BAAiB,SAAjB;AACD;AACF,OAND,CAME,OAAOI,GAAP,EAAY;AACZ,YAAIA,IAAIC,IAAJ,KAAa,QAAjB,EAA2B;AACzBL,2BAAiB,KAAjB;AACD,SAFD,MAEO;AACL,gBAAMI,GAAN;AACD;AACF;AACDP,wBAAkBR,uBAAuBF,QAAvB,EAAiCa,cAAjC,CAAlB;AACD;AACD,QAAIH,oBAAoB,WAAxB,EAAqC;AACnChB,SAAGqC,aAAH,CAAiB/B,QAAjB,EAA2BuB,OAA3B,EAAoC;AAClCS,kBAAU,MADwB;AAElCV,cAAMF,cAF4B,EAApC;;AAID;AACF;AACF;;AAED;;;AAGA,SAASD,cAAT,CAAwBpB,OAAxB,EAAiCC,QAAjC,EAA2CiC,EAA3C,EAA+C;AAC7C,MAAIC,WAAW,KAAf;AACA,QAAMd,iBAAiB1B,GAAG2B,QAAH,CAAYtB,OAAZ,EAAqBuB,IAA5C;AACA,QAAMa,aAAazC,GAAG0C,gBAAH,CAAoBrC,OAApB,CAAnB;AACAoC,aAAWE,EAAX,CAAc,OAAd,EAAuB,UAASpB,GAAT,EAAc;AACnCqB,SAAKrB,GAAL;AACD,GAFD;AAGA,QAAMsB,cAAc7C,GAAG8C,iBAAH,CAAqBxC,QAArB,EAA+B;AACjDsB,UAAMF,cAD2C,EAA/B,CAApB;;AAGAmB,cAAYF,EAAZ,CAAe,OAAf,EAAwB,UAASpB,GAAT,EAAc;AACpCqB,SAAKrB,GAAL;AACD,GAFD;AAGAsB,cAAYF,EAAZ,CAAe,OAAf,EAAwB,UAASI,EAAT,EAAa;AACnCH;AACD,GAFD;AAGAH,aAAWO,IAAX,CAAgBH,WAAhB;AACA,WAASD,IAAT,CAAcrB,GAAd,EAAmB;AACjB,QAAI,CAACiB,QAAL,EAAe;AACbD,SAAGhB,GAAH;AACAiB,iBAAW,IAAX;AACD;AACF;AACF;;AAEDS,OAAOC,OAAP,GAAiB9C,cAAjB",
      "file": "copyAndReplace.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\n// Binary files, don't process these (avoid decoding as utf8)\nconst binaryExtensions = ['.png', '.jar'];\n\n/**\n * Copy a file to given destination, replacing parts of its contents.\n * @param srcPath Path to a file to be copied.\n * @param destPath Destination path.\n * @param replacements: e.g. {'TextToBeReplaced': 'Replacement'}\n * @param contentChangedCallback\n *        Used when upgrading projects. Based on if file contents would change\n *        when being replaced, allows the caller to specify whether the file\n *        should be replaced or not.\n *        If null, files will be overwritten.\n *        Function(path, 'identical' | 'changed' | 'new') => 'keep' | 'overwrite'\n */\nfunction copyAndReplace(srcPath, destPath, replacements, contentChangedCallback) {\n  if (fs.lstatSync(srcPath).isDirectory()) {\n    if (!fs.existsSync(destPath)) {\n      fs.mkdirSync(destPath);\n    }\n    // Not recursive\n    return;\n  }\n\n  const extension = path.extname(srcPath);\n  if (binaryExtensions.indexOf(extension) !== -1) {\n    // Binary file\n    let shouldOverwrite = 'overwrite';\n    if (contentChangedCallback) {\n      const newContentBuffer = fs.readFileSync(srcPath);\n      let contentChanged = 'identical';\n      try {\n        const origContentBuffer = fs.readFileSync(destPath);\n        if (Buffer.compare(origContentBuffer, newContentBuffer) !== 0) {\n          contentChanged = 'changed';\n        }\n      } catch (err) {\n        if (err.code === 'ENOENT') {\n          contentChanged = 'new';\n        } else {\n          throw err;\n        }\n      }\n      shouldOverwrite = contentChangedCallback(destPath, contentChanged);\n    }\n    if (shouldOverwrite === 'overwrite') {\n      copyBinaryFile(srcPath, destPath, (err) => {\n        if (err) { throw err; }\n      });\n    }\n  } else {\n    // Text file\n    const srcPermissions = fs.statSync(srcPath).mode;\n    let content = fs.readFileSync(srcPath, 'utf8');\n    Object.keys(replacements).forEach(regex =>\n      content = content.replace(new RegExp(regex, 'g'), replacements[regex])\n    );\n\n    let shouldOverwrite = 'overwrite';\n    if (contentChangedCallback) {\n      // Check if contents changed and ask to overwrite\n      let contentChanged = 'identical';\n      try {\n        const origContent = fs.readFileSync(destPath, 'utf8');\n        if (content !== origContent) {\n          //console.log('Content changed: ' + destPath);\n          contentChanged = 'changed';\n        }\n      } catch (err) {\n        if (err.code === 'ENOENT') {\n          contentChanged = 'new';\n        } else {\n          throw err;\n        }\n      }\n      shouldOverwrite = contentChangedCallback(destPath, contentChanged);\n    }\n    if (shouldOverwrite === 'overwrite') {\n      fs.writeFileSync(destPath, content, {\n        encoding: 'utf8',\n        mode: srcPermissions,\n      });\n    }\n  }\n}\n\n/**\n * Same as 'cp' on Unix. Don't do any replacements.\n */\nfunction copyBinaryFile(srcPath, destPath, cb) {\n  let cbCalled = false;\n  const srcPermissions = fs.statSync(srcPath).mode;\n  const readStream = fs.createReadStream(srcPath);\n  readStream.on('error', function(err) {\n    done(err);\n  });\n  const writeStream = fs.createWriteStream(destPath, {\n    mode: srcPermissions\n  });\n  writeStream.on('error', function(err) {\n    done(err);\n  });\n  writeStream.on('close', function(ex) {\n    done();\n  });\n  readStream.pipe(writeStream);\n  function done(err) {\n    if (!cbCalled) {\n      cb(err);\n      cbCalled = true;\n    }\n  }\n}\n\nmodule.exports = copyAndReplace;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/isValidPackageName.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/isValidPackageName.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/isValidPackageName.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "isValidPackageName.js",
      "sourceFileName": "isValidPackageName.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "isValidPackageName"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nfunction isValidPackageName(name) {\n  return name.match(/^[$A-Z_][0-9A-Z_$]*$/i);\n}\n\nmodule.exports = isValidPackageName;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzVmFsaWRQYWNrYWdlTmFtZS5qcyJdLCJuYW1lcyI6WyJpc1ZhbGlkUGFja2FnZU5hbWUiLCJuYW1lIiwibWF0Y2giLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTs7QUFFQSxTQUFTQSxrQkFBVCxDQUE0QkMsSUFBNUIsRUFBa0M7QUFDaEMsU0FBT0EsS0FBS0MsS0FBTCxDQUFXLHVCQUFYLENBQVA7QUFDRDs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQkosa0JBQWpCIiwiZmlsZSI6ImlzVmFsaWRQYWNrYWdlTmFtZS5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG4ndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGlzVmFsaWRQYWNrYWdlTmFtZShuYW1lKSB7XG4gIHJldHVybiBuYW1lLm1hdGNoKC9eWyRBLVpfXVswLTlBLVpfJF0qJC9pKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1ZhbGlkUGFja2FnZU5hbWU7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "isValidPackageName.js"
      ],
      "names": [
        "isValidPackageName",
        "name",
        "match",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,SAASA,kBAAT,CAA4BC,IAA5B,EAAkC;AAChC,SAAOA,KAAKC,KAAL,CAAW,uBAAX,CAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBJ,kBAAjB",
      "file": "isValidPackageName.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nfunction isValidPackageName(name) {\n  return name.match(/^[$A-Z_][0-9A-Z_$]*$/i);\n}\n\nmodule.exports = isValidPackageName;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/walk.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/walk.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/walk.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "walk.js",
      "sourceFileName": "walk.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "walk"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\nfunction walk(current) {\n  if (!fs.lstatSync(current).isDirectory()) {\n    return [current];\n  }\n\n  const files = fs.readdirSync(current).map(child => {\n    child = path.join(current, child);\n    return walk(child);\n  });\n  return [].concat.apply([current], files);\n}\n\nmodule.exports = walk;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhbGsuanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwicGF0aCIsIndhbGsiLCJjdXJyZW50IiwibHN0YXRTeW5jIiwiaXNEaXJlY3RvcnkiLCJmaWxlcyIsInJlYWRkaXJTeW5jIiwibWFwIiwiY2hpbGQiLCJqb2luIiwiY29uY2F0IiwiYXBwbHkiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTs7QUFFQSxNQUFNQSxLQUFLQyxRQUFRLElBQVIsQ0FBWDtBQUNBLE1BQU1DLE9BQU9ELFFBQVEsTUFBUixDQUFiOztBQUVBLFNBQVNFLElBQVQsQ0FBY0MsT0FBZCxFQUF1QjtBQUNyQixNQUFJLENBQUNKLEdBQUdLLFNBQUgsQ0FBYUQsT0FBYixFQUFzQkUsV0FBdEIsRUFBTCxFQUEwQztBQUN4QyxXQUFPLENBQUNGLE9BQUQsQ0FBUDtBQUNEOztBQUVELFFBQU1HLFFBQVFQLEdBQUdRLFdBQUgsQ0FBZUosT0FBZixFQUF3QkssR0FBeEIsQ0FBNEJDLFNBQVM7QUFDakRBLFlBQVFSLEtBQUtTLElBQUwsQ0FBVVAsT0FBVixFQUFtQk0sS0FBbkIsQ0FBUjtBQUNBLFdBQU9QLEtBQUtPLEtBQUwsQ0FBUDtBQUNELEdBSGEsQ0FBZDtBQUlBLFNBQU8sR0FBR0UsTUFBSCxDQUFVQyxLQUFWLENBQWdCLENBQUNULE9BQUQsQ0FBaEIsRUFBMkJHLEtBQTNCLENBQVA7QUFDRDs7QUFFRE8sT0FBT0MsT0FBUCxHQUFpQlosSUFBakIiLCJmaWxlIjoid2Fsay5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5cbmZ1bmN0aW9uIHdhbGsoY3VycmVudCkge1xuICBpZiAoIWZzLmxzdGF0U3luYyhjdXJyZW50KS5pc0RpcmVjdG9yeSgpKSB7XG4gICAgcmV0dXJuIFtjdXJyZW50XTtcbiAgfVxuXG4gIGNvbnN0IGZpbGVzID0gZnMucmVhZGRpclN5bmMoY3VycmVudCkubWFwKGNoaWxkID0+IHtcbiAgICBjaGlsZCA9IHBhdGguam9pbihjdXJyZW50LCBjaGlsZCk7XG4gICAgcmV0dXJuIHdhbGsoY2hpbGQpO1xuICB9KTtcbiAgcmV0dXJuIFtdLmNvbmNhdC5hcHBseShbY3VycmVudF0sIGZpbGVzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3YWxrO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "walk.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "walk",
        "current",
        "lstatSync",
        "isDirectory",
        "files",
        "readdirSync",
        "map",
        "child",
        "join",
        "concat",
        "apply",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA,SAASE,IAAT,CAAcC,OAAd,EAAuB;AACrB,MAAI,CAACJ,GAAGK,SAAH,CAAaD,OAAb,EAAsBE,WAAtB,EAAL,EAA0C;AACxC,WAAO,CAACF,OAAD,CAAP;AACD;;AAED,QAAMG,QAAQP,GAAGQ,WAAH,CAAeJ,OAAf,EAAwBK,GAAxB,CAA4BC,SAAS;AACjDA,YAAQR,KAAKS,IAAL,CAAUP,OAAV,EAAmBM,KAAnB,CAAR;AACA,WAAOP,KAAKO,KAAL,CAAP;AACD,GAHa,CAAd;AAIA,SAAO,GAAGE,MAAH,CAAUC,KAAV,CAAgB,CAACT,OAAD,CAAhB,EAA2BG,KAA3B,CAAP;AACD;;AAEDO,OAAOC,OAAP,GAAiBZ,IAAjB",
      "file": "walk.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\n\nfunction walk(current) {\n  if (!fs.lstatSync(current).isDirectory()) {\n    return [current];\n  }\n\n  const files = fs.readdirSync(current).map(child => {\n    child = path.join(current, child);\n    return walk(child);\n  });\n  return [].concat.apply([current], files);\n}\n\nmodule.exports = walk;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/bundle.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/bundle.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/bundle.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "bundle.js",
      "sourceFileName": "bundle.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "bundle"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst buildBundle = require('./buildBundle');\nconst bundleCommandLineArgs = require('./bundleCommandLineArgs');\nconst outputBundle = require('metro/src/shared/output/bundle');\n\n/**\n                                                                 * Builds the bundle starting to look for dependencies at the given entry path.\n                                                                 */\nfunction bundleWithOutput(argv, config, args, output, packagerInstance) {\n  if (!output) {\n    output = outputBundle;\n  }\n  return buildBundle(args, config, output, packagerInstance);\n}\n\nfunction bundle(argv, config, args, packagerInstance) {\n  return bundleWithOutput(argv, config, args, undefined, packagerInstance);\n}\n\nmodule.exports = {\n  name: 'bundle',\n  description: 'builds the javascript bundle for offline use',\n  func: bundle,\n  options: bundleCommandLineArgs,\n\n  // not used by the CLI itself\n  withOutput: bundleWithOutput };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1bmRsZS5qcyJdLCJuYW1lcyI6WyJidWlsZEJ1bmRsZSIsInJlcXVpcmUiLCJidW5kbGVDb21tYW5kTGluZUFyZ3MiLCJvdXRwdXRCdW5kbGUiLCJidW5kbGVXaXRoT3V0cHV0IiwiYXJndiIsImNvbmZpZyIsImFyZ3MiLCJvdXRwdXQiLCJwYWNrYWdlckluc3RhbmNlIiwiYnVuZGxlIiwidW5kZWZpbmVkIiwibW9kdWxlIiwiZXhwb3J0cyIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsImZ1bmMiLCJvcHRpb25zIiwid2l0aE91dHB1dCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUEsTUFBTUEsY0FBY0MsUUFBUSxlQUFSLENBQXBCO0FBQ0EsTUFBTUMsd0JBQXdCRCxRQUFRLHlCQUFSLENBQTlCO0FBQ0EsTUFBTUUsZUFBZUYsUUFBUSxnQ0FBUixDQUFyQjs7QUFFQTs7O0FBR0EsU0FBU0csZ0JBQVQsQ0FBMEJDLElBQTFCLEVBQWdDQyxNQUFoQyxFQUF3Q0MsSUFBeEMsRUFBOENDLE1BQTlDLEVBQXNEQyxnQkFBdEQsRUFBd0U7QUFDdEUsTUFBSSxDQUFDRCxNQUFMLEVBQWE7QUFDWEEsYUFBU0wsWUFBVDtBQUNEO0FBQ0QsU0FBT0gsWUFBWU8sSUFBWixFQUFrQkQsTUFBbEIsRUFBMEJFLE1BQTFCLEVBQWtDQyxnQkFBbEMsQ0FBUDtBQUNEOztBQUVELFNBQVNDLE1BQVQsQ0FBZ0JMLElBQWhCLEVBQXNCQyxNQUF0QixFQUE4QkMsSUFBOUIsRUFBb0NFLGdCQUFwQyxFQUFzRDtBQUNwRCxTQUFPTCxpQkFBaUJDLElBQWpCLEVBQXVCQyxNQUF2QixFQUErQkMsSUFBL0IsRUFBcUNJLFNBQXJDLEVBQWdERixnQkFBaEQsQ0FBUDtBQUNEOztBQUVERyxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLFFBQU0sUUFEUztBQUVmQyxlQUFhLDhDQUZFO0FBR2ZDLFFBQU1OLE1BSFM7QUFJZk8sV0FBU2YscUJBSk07O0FBTWY7QUFDQWdCLGNBQVlkLGdCQVBHLEVBQWpCIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9idW5kbGUiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgYnVpbGRCdW5kbGUgPSByZXF1aXJlKCcuL2J1aWxkQnVuZGxlJyk7XG5jb25zdCBidW5kbGVDb21tYW5kTGluZUFyZ3MgPSByZXF1aXJlKCcuL2J1bmRsZUNvbW1hbmRMaW5lQXJncycpO1xuY29uc3Qgb3V0cHV0QnVuZGxlID0gcmVxdWlyZSgnbWV0cm8vc3JjL3NoYXJlZC9vdXRwdXQvYnVuZGxlJyk7XG5cbi8qKlxuICogQnVpbGRzIHRoZSBidW5kbGUgc3RhcnRpbmcgdG8gbG9vayBmb3IgZGVwZW5kZW5jaWVzIGF0IHRoZSBnaXZlbiBlbnRyeSBwYXRoLlxuICovXG5mdW5jdGlvbiBidW5kbGVXaXRoT3V0cHV0KGFyZ3YsIGNvbmZpZywgYXJncywgb3V0cHV0LCBwYWNrYWdlckluc3RhbmNlKSB7XG4gIGlmICghb3V0cHV0KSB7XG4gICAgb3V0cHV0ID0gb3V0cHV0QnVuZGxlO1xuICB9XG4gIHJldHVybiBidWlsZEJ1bmRsZShhcmdzLCBjb25maWcsIG91dHB1dCwgcGFja2FnZXJJbnN0YW5jZSk7XG59XG5cbmZ1bmN0aW9uIGJ1bmRsZShhcmd2LCBjb25maWcsIGFyZ3MsIHBhY2thZ2VySW5zdGFuY2UpIHtcbiAgcmV0dXJuIGJ1bmRsZVdpdGhPdXRwdXQoYXJndiwgY29uZmlnLCBhcmdzLCB1bmRlZmluZWQsIHBhY2thZ2VySW5zdGFuY2UpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgbmFtZTogJ2J1bmRsZScsXG4gIGRlc2NyaXB0aW9uOiAnYnVpbGRzIHRoZSBqYXZhc2NyaXB0IGJ1bmRsZSBmb3Igb2ZmbGluZSB1c2UnLFxuICBmdW5jOiBidW5kbGUsXG4gIG9wdGlvbnM6IGJ1bmRsZUNvbW1hbmRMaW5lQXJncyxcblxuICAvLyBub3QgdXNlZCBieSB0aGUgQ0xJIGl0c2VsZlxuICB3aXRoT3V0cHV0OiBidW5kbGVXaXRoT3V0cHV0LFxufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "bundle.js"
      ],
      "names": [
        "buildBundle",
        "require",
        "bundleCommandLineArgs",
        "outputBundle",
        "bundleWithOutput",
        "argv",
        "config",
        "args",
        "output",
        "packagerInstance",
        "bundle",
        "undefined",
        "module",
        "exports",
        "name",
        "description",
        "func",
        "options",
        "withOutput"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,cAAcC,QAAQ,eAAR,CAApB;AACA,MAAMC,wBAAwBD,QAAQ,yBAAR,CAA9B;AACA,MAAME,eAAeF,QAAQ,gCAAR,CAArB;;AAEA;;;AAGA,SAASG,gBAAT,CAA0BC,IAA1B,EAAgCC,MAAhC,EAAwCC,IAAxC,EAA8CC,MAA9C,EAAsDC,gBAAtD,EAAwE;AACtE,MAAI,CAACD,MAAL,EAAa;AACXA,aAASL,YAAT;AACD;AACD,SAAOH,YAAYO,IAAZ,EAAkBD,MAAlB,EAA0BE,MAA1B,EAAkCC,gBAAlC,CAAP;AACD;;AAED,SAASC,MAAT,CAAgBL,IAAhB,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCE,gBAApC,EAAsD;AACpD,SAAOL,iBAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCI,SAArC,EAAgDF,gBAAhD,CAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiB;AACfC,QAAM,QADS;AAEfC,eAAa,8CAFE;AAGfC,QAAMN,MAHS;AAIfO,WAASf,qBAJM;;AAMf;AACAgB,cAAYd,gBAPG,EAAjB",
      "file": "bundle.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst buildBundle = require('./buildBundle');\nconst bundleCommandLineArgs = require('./bundleCommandLineArgs');\nconst outputBundle = require('metro/src/shared/output/bundle');\n\n/**\n * Builds the bundle starting to look for dependencies at the given entry path.\n */\nfunction bundleWithOutput(argv, config, args, output, packagerInstance) {\n  if (!output) {\n    output = outputBundle;\n  }\n  return buildBundle(args, config, output, packagerInstance);\n}\n\nfunction bundle(argv, config, args, packagerInstance) {\n  return bundleWithOutput(argv, config, args, undefined, packagerInstance);\n}\n\nmodule.exports = {\n  name: 'bundle',\n  description: 'builds the javascript bundle for offline use',\n  func: bundle,\n  options: bundleCommandLineArgs,\n\n  // not used by the CLI itself\n  withOutput: bundleWithOutput,\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/buildBundle.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [
        "extends"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "./types.flow",
            "imported": [
              "RequestOptions",
              "OutputOptions"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "RequestOptions",
                "local": "RequestOptions"
              },
              {
                "kind": "named",
                "imported": "OutputOptions",
                "local": "OutputOptions"
              }
            ]
          },
          {
            "source": "metro",
            "imported": [
              "ConfigT"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "ConfigT",
                "local": "ConfigT"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/buildBundle.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/buildBundle.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "buildBundle.js",
      "sourceFileName": "buildBundle.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "buildBundle"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};\n\nconst log = require('../util/log').out('bundle');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n                                                   * found when Flow v0.54 was deployed. To see the error delete this comment and\n                                                   * run Flow. */\nconst Server = require('metro/src/Server');\nconst { Terminal } = require('metro-core');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n                                             * found when Flow v0.54 was deployed. To see the error delete this comment and\n                                             * run Flow. */\nconst TerminalReporter = require('metro/src/lib/TerminalReporter');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n                                                                     * found when Flow v0.54 was deployed. To see the error delete this comment and\n                                                                     * run Flow. */\nconst TransformCaching = require('metro/src/lib/TransformCaching');\n\nconst { defaults } = require('metro');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n                                        * found when Flow v0.54 was deployed. To see the error delete this comment and\n                                        * run Flow. */\nconst outputBundle = require('metro/src/shared/output/bundle');\nconst path = require('path');\nconst saveAssets = require('./saveAssets');\n\nconst { ASSET_REGISTRY_PATH } = require('../core/Constants');\n\n\n\n\nconst defaultAssetExts = defaults.assetExts;\nconst defaultSourceExts = defaults.sourceExts;\nconst defaultPlatforms = defaults.platforms;\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n                                              * found when Flow v0.54 was deployed. To see the error delete this comment and\n                                              * run Flow. */\nconst defaultProvidesModuleNodeModules = defaults.providesModuleNodeModules;\n\nasync function buildBundle(\nargs,\n\n\n\n\n\n\nconfig,\noutput = outputBundle,\npackagerInstance)\n{\n  // This is used by a bazillion of npm modules we don't control so we don't\n  // have other choice than defining it as an env variable here.\n  process.env.NODE_ENV = args.dev ? 'development' : 'production';\n\n  let sourceMapUrl = args.sourcemapOutput;\n  if (sourceMapUrl && !args.sourcemapUseAbsolutePath) {\n    sourceMapUrl = path.basename(sourceMapUrl);\n  }\n\n  const requestOpts = {\n    entryFile: args.entryFile,\n    sourceMapUrl,\n    dev: args.dev,\n    minify: !args.dev,\n    platform: args.platform };\n\n\n  // If a packager instance was not provided, then just create one for this\n  // bundle command and close it down afterwards.\n  var shouldClosePackager = false;\n  if (!packagerInstance) {\n    const assetExts = config.getAssetExts && config.getAssetExts() || [];\n    const sourceExts = config.getSourceExts && config.getSourceExts() || [];\n    const platforms = config.getPlatforms && config.getPlatforms() || [];\n\n    const transformModulePath = args.transformer ?\n    path.resolve(args.transformer) :\n    config.getTransformModulePath();\n\n    const providesModuleNodeModules =\n    typeof config.getProvidesModuleNodeModules === 'function' ?\n    config.getProvidesModuleNodeModules() :\n    defaultProvidesModuleNodeModules;\n\n    const terminal = new Terminal(process.stdout);\n    const options = {\n      assetExts: defaultAssetExts.concat(assetExts),\n      assetRegistryPath: ASSET_REGISTRY_PATH,\n      blacklistRE: config.getBlacklistRE(),\n      extraNodeModules: config.extraNodeModules,\n      getModulesRunBeforeMainModule: config.getModulesRunBeforeMainModule,\n      getPolyfills: config.getPolyfills,\n      getTransformOptions: config.getTransformOptions,\n      globalTransformCache: null,\n      hasteImpl: config.hasteImpl,\n      maxWorkers: args.maxWorkers,\n      platforms: defaultPlatforms.concat(platforms),\n      postMinifyProcess: config.postMinifyProcess,\n      postProcessModules: config.postProcessModules,\n      postProcessBundleSourcemap: config.postProcessBundleSourcemap,\n      projectRoots: config.getProjectRoots(),\n      providesModuleNodeModules: providesModuleNodeModules,\n      resetCache: args.resetCache,\n      reporter: new TerminalReporter(terminal),\n      sourceExts: defaultSourceExts.concat(sourceExts),\n      transformCache: TransformCaching.useTempDir(),\n      transformModulePath: transformModulePath,\n      watch: false,\n      workerPath: config.getWorkerPath && config.getWorkerPath() };\n\n\n    packagerInstance = new Server(options);\n    shouldClosePackager = true;\n  }\n\n  const bundle = await output.build(packagerInstance, requestOpts);\n\n  await output.save(bundle, args, log);\n\n  // Save the assets of the bundle\n  const outputAssets = await packagerInstance.getAssets(_extends({},\n  Server.DEFAULT_BUNDLE_OPTIONS,\n  requestOpts, {\n    bundleType: 'todo' }));\n\n\n  // When we're done saving bundle output and the assets, we're done.\n  const assets = await saveAssets(\n  outputAssets,\n  args.platform,\n  args.assetsDest);\n\n\n  if (shouldClosePackager) {\n    packagerInstance.end();\n  }\n\n  return assets;\n}\n\nmodule.exports = buildBundle;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "buildBundle.js"
      ],
      "names": [
        "log",
        "require",
        "out",
        "Server",
        "Terminal",
        "TerminalReporter",
        "TransformCaching",
        "defaults",
        "outputBundle",
        "path",
        "saveAssets",
        "ASSET_REGISTRY_PATH",
        "defaultAssetExts",
        "assetExts",
        "defaultSourceExts",
        "sourceExts",
        "defaultPlatforms",
        "platforms",
        "defaultProvidesModuleNodeModules",
        "providesModuleNodeModules",
        "buildBundle",
        "args",
        "config",
        "output",
        "packagerInstance",
        "process",
        "env",
        "NODE_ENV",
        "dev",
        "sourceMapUrl",
        "sourcemapOutput",
        "sourcemapUseAbsolutePath",
        "basename",
        "requestOpts",
        "entryFile",
        "minify",
        "platform",
        "shouldClosePackager",
        "getAssetExts",
        "getSourceExts",
        "getPlatforms",
        "transformModulePath",
        "transformer",
        "resolve",
        "getTransformModulePath",
        "getProvidesModuleNodeModules",
        "terminal",
        "stdout",
        "options",
        "concat",
        "assetRegistryPath",
        "blacklistRE",
        "getBlacklistRE",
        "extraNodeModules",
        "getModulesRunBeforeMainModule",
        "getPolyfills",
        "getTransformOptions",
        "globalTransformCache",
        "hasteImpl",
        "maxWorkers",
        "postMinifyProcess",
        "postProcessModules",
        "postProcessBundleSourcemap",
        "projectRoots",
        "getProjectRoots",
        "resetCache",
        "reporter",
        "transformCache",
        "useTempDir",
        "watch",
        "workerPath",
        "getWorkerPath",
        "bundle",
        "build",
        "save",
        "outputAssets",
        "getAssets",
        "DEFAULT_BUNDLE_OPTIONS",
        "bundleType",
        "assets",
        "assetsDest",
        "end",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;AAWA,a;;AAEA,MAAMA,MAAMC,QAAQ,aAAR,EAAuBC,GAAvB,CAA2B,QAA3B,CAAZ;AACA;;;AAGA,MAAMC,SAASF,QAAQ,kBAAR,CAAf;AACA,MAAM,EAACG,QAAD,KAAaH,QAAQ,YAAR,CAAnB;AACA;;;AAGA,MAAMI,mBAAmBJ,QAAQ,gCAAR,CAAzB;AACA;;;AAGA,MAAMK,mBAAmBL,QAAQ,gCAAR,CAAzB;;AAEA,MAAM,EAACM,QAAD,KAAaN,QAAQ,OAAR,CAAnB;AACA;;;AAGA,MAAMO,eAAeP,QAAQ,gCAAR,CAArB;AACA,MAAMQ,OAAOR,QAAQ,MAAR,CAAb;AACA,MAAMS,aAAaT,QAAQ,cAAR,CAAnB;;AAEA,MAAM,EAACU,mBAAD,KAAwBV,QAAQ,mBAAR,CAA9B;;;;;AAKA,MAAMW,mBAAmBL,SAASM,SAAlC;AACA,MAAMC,oBAAoBP,SAASQ,UAAnC;AACA,MAAMC,mBAAmBT,SAASU,SAAlC;AACA;;;AAGA,MAAMC,mCAAmCX,SAASY,yBAAlD;;AAEA,eAAeC,WAAf;AACEC,IADF;;;;;;;AAQEC,MARF;AASEC,SAASf,YATX;AAUEgB,gBAVF;AAWE;AACA;AACA;AACAC,UAAQC,GAAR,CAAYC,QAAZ,GAAuBN,KAAKO,GAAL,GAAW,aAAX,GAA2B,YAAlD;;AAEA,MAAIC,eAAeR,KAAKS,eAAxB;AACA,MAAID,gBAAgB,CAACR,KAAKU,wBAA1B,EAAoD;AAClDF,mBAAepB,KAAKuB,QAAL,CAAcH,YAAd,CAAf;AACD;;AAED,QAAMI,cAA8B;AAClCC,eAAWb,KAAKa,SADkB;AAElCL,gBAFkC;AAGlCD,SAAKP,KAAKO,GAHwB;AAIlCO,YAAQ,CAACd,KAAKO,GAJoB;AAKlCQ,cAAUf,KAAKe,QALmB,EAApC;;;AAQA;AACA;AACA,MAAIC,sBAAsB,KAA1B;AACA,MAAI,CAACb,gBAAL,EAAuB;AACrB,UAAMX,YAAaS,OAAOgB,YAAP,IAAuBhB,OAAOgB,YAAP,EAAxB,IAAkD,EAApE;AACA,UAAMvB,aAAcO,OAAOiB,aAAP,IAAwBjB,OAAOiB,aAAP,EAAzB,IAAoD,EAAvE;AACA,UAAMtB,YAAaK,OAAOkB,YAAP,IAAuBlB,OAAOkB,YAAP,EAAxB,IAAkD,EAApE;;AAEA,UAAMC,sBAAsBpB,KAAKqB,WAAL;AACxBjC,SAAKkC,OAAL,CAAatB,KAAKqB,WAAlB,CADwB;AAExBpB,WAAOsB,sBAAP,EAFJ;;AAIA,UAAMzB;AACJ,WAAOG,OAAOuB,4BAAd,KAA+C,UAA/C;AACIvB,WAAOuB,4BAAP,EADJ;AAEI3B,oCAHN;;AAKA,UAAM4B,WAAW,IAAI1C,QAAJ,CAAaqB,QAAQsB,MAArB,CAAjB;AACA,UAAMC,UAAU;AACdnC,iBAAWD,iBAAiBqC,MAAjB,CAAwBpC,SAAxB,CADG;AAEdqC,yBAAmBvC,mBAFL;AAGdwC,mBAAa7B,OAAO8B,cAAP,EAHC;AAIdC,wBAAkB/B,OAAO+B,gBAJX;AAKdC,qCAA+BhC,OAAOgC,6BALxB;AAMdC,oBAAcjC,OAAOiC,YANP;AAOdC,2BAAqBlC,OAAOkC,mBAPd;AAQdC,4BAAsB,IARR;AASdC,iBAAWpC,OAAOoC,SATJ;AAUdC,kBAAYtC,KAAKsC,UAVH;AAWd1C,iBAAWD,iBAAiBiC,MAAjB,CAAwBhC,SAAxB,CAXG;AAYd2C,yBAAmBtC,OAAOsC,iBAZZ;AAadC,0BAAoBvC,OAAOuC,kBAbb;AAcdC,kCAA4BxC,OAAOwC,0BAdrB;AAedC,oBAAczC,OAAO0C,eAAP,EAfA;AAgBd7C,iCAA2BA,yBAhBb;AAiBd8C,kBAAY5C,KAAK4C,UAjBH;AAkBdC,gBAAU,IAAI7D,gBAAJ,CAAqByC,QAArB,CAlBI;AAmBd/B,kBAAYD,kBAAkBmC,MAAlB,CAAyBlC,UAAzB,CAnBE;AAoBdoD,sBAAgB7D,iBAAiB8D,UAAjB,EApBF;AAqBd3B,2BAAqBA,mBArBP;AAsBd4B,aAAO,KAtBO;AAuBdC,kBAAYhD,OAAOiD,aAAP,IAAwBjD,OAAOiD,aAAP,EAvBtB,EAAhB;;;AA0BA/C,uBAAmB,IAAIrB,MAAJ,CAAW6C,OAAX,CAAnB;AACAX,0BAAsB,IAAtB;AACD;;AAED,QAAMmC,SAAS,MAAMjD,OAAOkD,KAAP,CAAajD,gBAAb,EAA+BS,WAA/B,CAArB;;AAEA,QAAMV,OAAOmD,IAAP,CAAYF,MAAZ,EAAoBnD,IAApB,EAA0BrB,GAA1B,CAAN;;AAEA;AACA,QAAM2E,eAAe,MAAMnD,iBAAiBoD,SAAjB;AACtBzE,SAAO0E,sBADe;AAEtB5C,aAFsB;AAGzB6C,gBAAY,MAHa,IAA3B;;;AAMA;AACA,QAAMC,SAAS,MAAMrE;AACnBiE,cADmB;AAEnBtD,OAAKe,QAFc;AAGnBf,OAAK2D,UAHc,CAArB;;;AAMA,MAAI3C,mBAAJ,EAAyB;AACvBb,qBAAiByD,GAAjB;AACD;;AAED,SAAOF,MAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiB/D,WAAjB",
      "file": "buildBundle.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n'use strict';\n\nconst log = require('../util/log').out('bundle');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst Server = require('metro/src/Server');\nconst {Terminal} = require('metro-core');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst TerminalReporter = require('metro/src/lib/TerminalReporter');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst TransformCaching = require('metro/src/lib/TransformCaching');\n\nconst {defaults} = require('metro');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst outputBundle = require('metro/src/shared/output/bundle');\nconst path = require('path');\nconst saveAssets = require('./saveAssets');\n\nconst {ASSET_REGISTRY_PATH} = require('../core/Constants');\n\nimport type {RequestOptions, OutputOptions} from './types.flow';\nimport type {ConfigT} from 'metro';\n\nconst defaultAssetExts = defaults.assetExts;\nconst defaultSourceExts = defaults.sourceExts;\nconst defaultPlatforms = defaults.platforms;\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst defaultProvidesModuleNodeModules = defaults.providesModuleNodeModules;\n\nasync function buildBundle(\n  args: OutputOptions & {\n    assetsDest: mixed,\n    entryFile: string,\n    maxWorkers: number,\n    resetCache: boolean,\n    transformer: string,\n  },\n  config: ConfigT,\n  output = outputBundle,\n  packagerInstance,\n) {\n  // This is used by a bazillion of npm modules we don't control so we don't\n  // have other choice than defining it as an env variable here.\n  process.env.NODE_ENV = args.dev ? 'development' : 'production';\n\n  let sourceMapUrl = args.sourcemapOutput;\n  if (sourceMapUrl && !args.sourcemapUseAbsolutePath) {\n    sourceMapUrl = path.basename(sourceMapUrl);\n  }\n\n  const requestOpts: RequestOptions = {\n    entryFile: args.entryFile,\n    sourceMapUrl,\n    dev: args.dev,\n    minify: !args.dev,\n    platform: args.platform,\n  };\n\n  // If a packager instance was not provided, then just create one for this\n  // bundle command and close it down afterwards.\n  var shouldClosePackager = false;\n  if (!packagerInstance) {\n    const assetExts = (config.getAssetExts && config.getAssetExts()) || [];\n    const sourceExts = (config.getSourceExts && config.getSourceExts()) || [];\n    const platforms = (config.getPlatforms && config.getPlatforms()) || [];\n\n    const transformModulePath = args.transformer\n      ? path.resolve(args.transformer)\n      : config.getTransformModulePath();\n\n    const providesModuleNodeModules =\n      typeof config.getProvidesModuleNodeModules === 'function'\n        ? config.getProvidesModuleNodeModules()\n        : defaultProvidesModuleNodeModules;\n\n    const terminal = new Terminal(process.stdout);\n    const options = {\n      assetExts: defaultAssetExts.concat(assetExts),\n      assetRegistryPath: ASSET_REGISTRY_PATH,\n      blacklistRE: config.getBlacklistRE(),\n      extraNodeModules: config.extraNodeModules,\n      getModulesRunBeforeMainModule: config.getModulesRunBeforeMainModule,\n      getPolyfills: config.getPolyfills,\n      getTransformOptions: config.getTransformOptions,\n      globalTransformCache: null,\n      hasteImpl: config.hasteImpl,\n      maxWorkers: args.maxWorkers,\n      platforms: defaultPlatforms.concat(platforms),\n      postMinifyProcess: config.postMinifyProcess,\n      postProcessModules: config.postProcessModules,\n      postProcessBundleSourcemap: config.postProcessBundleSourcemap,\n      projectRoots: config.getProjectRoots(),\n      providesModuleNodeModules: providesModuleNodeModules,\n      resetCache: args.resetCache,\n      reporter: new TerminalReporter(terminal),\n      sourceExts: defaultSourceExts.concat(sourceExts),\n      transformCache: TransformCaching.useTempDir(),\n      transformModulePath: transformModulePath,\n      watch: false,\n      workerPath: config.getWorkerPath && config.getWorkerPath(),\n    };\n\n    packagerInstance = new Server(options);\n    shouldClosePackager = true;\n  }\n\n  const bundle = await output.build(packagerInstance, requestOpts);\n\n  await output.save(bundle, args, log);\n\n  // Save the assets of the bundle\n  const outputAssets = await packagerInstance.getAssets({\n    ...Server.DEFAULT_BUNDLE_OPTIONS,\n    ...requestOpts,\n    bundleType: 'todo',\n  });\n\n  // When we're done saving bundle output and the assets, we're done.\n  const assets = await saveAssets(\n    outputAssets,\n    args.platform,\n    args.assetsDest,\n  );\n\n  if (shouldClosePackager) {\n    packagerInstance.end();\n  }\n\n  return assets;\n}\n\nmodule.exports = buildBundle;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/log.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/log.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/log.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "log.js",
      "sourceFileName": "log.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "log"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nvar _enabled = true;\n\nfunction disable() {\n  _enabled = false;\n}\n\nfunction log(stream, module) {\n  return function () {\n    if (!_enabled) {\n      return;\n    }\n    const message = Array.prototype.slice.call(arguments).join(' ');\n    stream.write(module + ': ' + message + '\\n');\n  };\n}\n\nmodule.exports.out = log.bind(null, process.stdout);\nmodule.exports.err = log.bind(null, process.stderr);\nmodule.exports.disable = disable;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZy5qcyJdLCJuYW1lcyI6WyJfZW5hYmxlZCIsImRpc2FibGUiLCJsb2ciLCJzdHJlYW0iLCJtb2R1bGUiLCJtZXNzYWdlIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJzbGljZSIsImNhbGwiLCJhcmd1bWVudHMiLCJqb2luIiwid3JpdGUiLCJleHBvcnRzIiwib3V0IiwiYmluZCIsInByb2Nlc3MiLCJzdGRvdXQiLCJlcnIiLCJzdGRlcnIiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLElBQUlBLFdBQVcsSUFBZjs7QUFFQSxTQUFTQyxPQUFULEdBQW1CO0FBQ2pCRCxhQUFXLEtBQVg7QUFDRDs7QUFFRCxTQUFTRSxHQUFULENBQWFDLE1BQWIsRUFBcUJDLE1BQXJCLEVBQTZCO0FBQzNCLFNBQU8sWUFBVztBQUNoQixRQUFJLENBQUNKLFFBQUwsRUFBZTtBQUNiO0FBQ0Q7QUFDRCxVQUFNSyxVQUFVQyxNQUFNQyxTQUFOLENBQWdCQyxLQUFoQixDQUFzQkMsSUFBdEIsQ0FBMkJDLFNBQTNCLEVBQXNDQyxJQUF0QyxDQUEyQyxHQUEzQyxDQUFoQjtBQUNBUixXQUFPUyxLQUFQLENBQWFSLFNBQVMsSUFBVCxHQUFnQkMsT0FBaEIsR0FBMEIsSUFBdkM7QUFDRCxHQU5EO0FBT0Q7O0FBRURELE9BQU9TLE9BQVAsQ0FBZUMsR0FBZixHQUFxQlosSUFBSWEsSUFBSixDQUFTLElBQVQsRUFBZUMsUUFBUUMsTUFBdkIsQ0FBckI7QUFDQWIsT0FBT1MsT0FBUCxDQUFlSyxHQUFmLEdBQXFCaEIsSUFBSWEsSUFBSixDQUFTLElBQVQsRUFBZUMsUUFBUUcsTUFBdkIsQ0FBckI7QUFDQWYsT0FBT1MsT0FBUCxDQUFlWixPQUFmLEdBQXlCQSxPQUF6QiIsImZpbGUiOiJsb2cuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2VuYWJsZWQgPSB0cnVlO1xuXG5mdW5jdGlvbiBkaXNhYmxlKCkge1xuICBfZW5hYmxlZCA9IGZhbHNlO1xufVxuXG5mdW5jdGlvbiBsb2coc3RyZWFtLCBtb2R1bGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIGlmICghX2VuYWJsZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgbWVzc2FnZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cykuam9pbignICcpO1xuICAgIHN0cmVhbS53cml0ZShtb2R1bGUgKyAnOiAnICsgbWVzc2FnZSArICdcXG4nKTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMub3V0ID0gbG9nLmJpbmQobnVsbCwgcHJvY2Vzcy5zdGRvdXQpO1xubW9kdWxlLmV4cG9ydHMuZXJyID0gbG9nLmJpbmQobnVsbCwgcHJvY2Vzcy5zdGRlcnIpO1xubW9kdWxlLmV4cG9ydHMuZGlzYWJsZSA9IGRpc2FibGU7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "log.js"
      ],
      "names": [
        "_enabled",
        "disable",
        "log",
        "stream",
        "module",
        "message",
        "Array",
        "prototype",
        "slice",
        "call",
        "arguments",
        "join",
        "write",
        "exports",
        "out",
        "bind",
        "process",
        "stdout",
        "err",
        "stderr"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,IAAIA,WAAW,IAAf;;AAEA,SAASC,OAAT,GAAmB;AACjBD,aAAW,KAAX;AACD;;AAED,SAASE,GAAT,CAAaC,MAAb,EAAqBC,MAArB,EAA6B;AAC3B,SAAO,YAAW;AAChB,QAAI,CAACJ,QAAL,EAAe;AACb;AACD;AACD,UAAMK,UAAUC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsCC,IAAtC,CAA2C,GAA3C,CAAhB;AACAR,WAAOS,KAAP,CAAaR,SAAS,IAAT,GAAgBC,OAAhB,GAA0B,IAAvC;AACD,GAND;AAOD;;AAEDD,OAAOS,OAAP,CAAeC,GAAf,GAAqBZ,IAAIa,IAAJ,CAAS,IAAT,EAAeC,QAAQC,MAAvB,CAArB;AACAb,OAAOS,OAAP,CAAeK,GAAf,GAAqBhB,IAAIa,IAAJ,CAAS,IAAT,EAAeC,QAAQG,MAAvB,CAArB;AACAf,OAAOS,OAAP,CAAeZ,OAAf,GAAyBA,OAAzB",
      "file": "log.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nvar _enabled = true;\n\nfunction disable() {\n  _enabled = false;\n}\n\nfunction log(stream, module) {\n  return function() {\n    if (!_enabled) {\n      return;\n    }\n    const message = Array.prototype.slice.call(arguments).join(' ');\n    stream.write(module + ': ' + message + '\\n');\n  };\n}\n\nmodule.exports.out = log.bind(null, process.stdout);\nmodule.exports.err = log.bind(null, process.stderr);\nmodule.exports.disable = disable;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/saveAssets.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/saveAssets.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/saveAssets.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "saveAssets.js",
      "sourceFileName": "saveAssets.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "saveAssets"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst filterPlatformAssetScales = require('./filterPlatformAssetScales');\nconst fs = require('fs');\nconst getAssetDestPathAndroid = require('./getAssetDestPathAndroid');\nconst getAssetDestPathIOS = require('./getAssetDestPathIOS');\nconst log = require('../util/log').out('bundle');\nconst mkdirp = require('mkdirp');\nconst path = require('path');\n\nfunction saveAssets(\nassets,\nplatform,\nassetsDest)\n{\n  if (!assetsDest) {\n    console.warn('Assets destination folder is not set, skipping...');\n    return Promise.resolve();\n  }\n\n  const getAssetDestPath = platform === 'android' ?\n  getAssetDestPathAndroid :\n  getAssetDestPathIOS;\n\n  const filesToCopy = Object.create(null); // Map src -> dest\n  assets.\n  forEach(asset => {\n    const validScales = new Set(filterPlatformAssetScales(platform, asset.scales));\n    asset.scales.forEach((scale, idx) => {\n      if (!validScales.has(scale)) {\n        return;\n      }\n      const src = asset.files[idx];\n      const dest = path.join(assetsDest, getAssetDestPath(asset, scale));\n      filesToCopy[src] = dest;\n    });\n  });\n\n  return copyAll(filesToCopy);\n}\n\nfunction copyAll(filesToCopy) {\n  const queue = Object.keys(filesToCopy);\n  if (queue.length === 0) {\n    return Promise.resolve();\n  }\n\n  log('Copying ' + queue.length + ' asset files');\n  return new Promise((resolve, reject) => {\n    const copyNext = error => {\n      if (error) {\n        return reject(error);\n      }\n      if (queue.length === 0) {\n        log('Done copying assets');\n        resolve();\n      } else {\n        const src = queue.shift();\n        const dest = filesToCopy[src];\n        copy(src, dest, copyNext);\n      }\n    };\n    copyNext();\n  });\n}\n\nfunction copy(src, dest, callback) {\n  const destDir = path.dirname(dest);\n  mkdirp(destDir, err => {\n    if (err) {\n      return callback(err);\n    }\n    fs.createReadStream(src).\n    pipe(fs.createWriteStream(dest)).\n    on('finish', callback);\n  });\n}\n\nmodule.exports = saveAssets;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhdmVBc3NldHMuanMiXSwibmFtZXMiOlsiZmlsdGVyUGxhdGZvcm1Bc3NldFNjYWxlcyIsInJlcXVpcmUiLCJmcyIsImdldEFzc2V0RGVzdFBhdGhBbmRyb2lkIiwiZ2V0QXNzZXREZXN0UGF0aElPUyIsImxvZyIsIm91dCIsIm1rZGlycCIsInBhdGgiLCJzYXZlQXNzZXRzIiwiYXNzZXRzIiwicGxhdGZvcm0iLCJhc3NldHNEZXN0IiwiY29uc29sZSIsIndhcm4iLCJQcm9taXNlIiwicmVzb2x2ZSIsImdldEFzc2V0RGVzdFBhdGgiLCJmaWxlc1RvQ29weSIsIk9iamVjdCIsImNyZWF0ZSIsImZvckVhY2giLCJhc3NldCIsInZhbGlkU2NhbGVzIiwiU2V0Iiwic2NhbGVzIiwic2NhbGUiLCJpZHgiLCJoYXMiLCJzcmMiLCJmaWxlcyIsImRlc3QiLCJqb2luIiwiY29weUFsbCIsInF1ZXVlIiwia2V5cyIsImxlbmd0aCIsInJlamVjdCIsImNvcHlOZXh0IiwiZXJyb3IiLCJzaGlmdCIsImNvcHkiLCJjYWxsYmFjayIsImRlc3REaXIiLCJkaXJuYW1lIiwiZXJyIiwiY3JlYXRlUmVhZFN0cmVhbSIsInBpcGUiLCJjcmVhdGVXcml0ZVN0cmVhbSIsIm9uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUEsTUFBTUEsNEJBQTRCQyxRQUFRLDZCQUFSLENBQWxDO0FBQ0EsTUFBTUMsS0FBS0QsUUFBUSxJQUFSLENBQVg7QUFDQSxNQUFNRSwwQkFBMEJGLFFBQVEsMkJBQVIsQ0FBaEM7QUFDQSxNQUFNRyxzQkFBc0JILFFBQVEsdUJBQVIsQ0FBNUI7QUFDQSxNQUFNSSxNQUFNSixRQUFRLGFBQVIsRUFBdUJLLEdBQXZCLENBQTJCLFFBQTNCLENBQVo7QUFDQSxNQUFNQyxTQUFTTixRQUFRLFFBQVIsQ0FBZjtBQUNBLE1BQU1PLE9BQU9QLFFBQVEsTUFBUixDQUFiOztBQUVBLFNBQVNRLFVBQVQ7QUFDRUMsTUFERjtBQUVFQyxRQUZGO0FBR0VDLFVBSEY7QUFJRTtBQUNBLE1BQUksQ0FBQ0EsVUFBTCxFQUFpQjtBQUNmQyxZQUFRQyxJQUFSLENBQWEsbURBQWI7QUFDQSxXQUFPQyxRQUFRQyxPQUFSLEVBQVA7QUFDRDs7QUFFRCxRQUFNQyxtQkFBbUJOLGFBQWEsU0FBYjtBQUNyQlIseUJBRHFCO0FBRXJCQyxxQkFGSjs7QUFJQSxRQUFNYyxjQUFjQyxPQUFPQyxNQUFQLENBQWMsSUFBZCxDQUFwQixDQVZBLENBVXlDO0FBQ3pDVjtBQUNHVyxTQURILENBQ1dDLFNBQVM7QUFDaEIsVUFBTUMsY0FBYyxJQUFJQyxHQUFKLENBQVF4QiwwQkFBMEJXLFFBQTFCLEVBQW9DVyxNQUFNRyxNQUExQyxDQUFSLENBQXBCO0FBQ0FILFVBQU1HLE1BQU4sQ0FBYUosT0FBYixDQUFxQixDQUFDSyxLQUFELEVBQVFDLEdBQVIsS0FBZ0I7QUFDbkMsVUFBSSxDQUFDSixZQUFZSyxHQUFaLENBQWdCRixLQUFoQixDQUFMLEVBQTZCO0FBQzNCO0FBQ0Q7QUFDRCxZQUFNRyxNQUFNUCxNQUFNUSxLQUFOLENBQVlILEdBQVosQ0FBWjtBQUNBLFlBQU1JLE9BQU92QixLQUFLd0IsSUFBTCxDQUFVcEIsVUFBVixFQUFzQkssaUJBQWlCSyxLQUFqQixFQUF3QkksS0FBeEIsQ0FBdEIsQ0FBYjtBQUNBUixrQkFBWVcsR0FBWixJQUFtQkUsSUFBbkI7QUFDRCxLQVBEO0FBUUQsR0FYSDs7QUFhQSxTQUFPRSxRQUFRZixXQUFSLENBQVA7QUFDRDs7QUFFRCxTQUFTZSxPQUFULENBQWlCZixXQUFqQixFQUE4QjtBQUM1QixRQUFNZ0IsUUFBUWYsT0FBT2dCLElBQVAsQ0FBWWpCLFdBQVosQ0FBZDtBQUNBLE1BQUlnQixNQUFNRSxNQUFOLEtBQWlCLENBQXJCLEVBQXdCO0FBQ3RCLFdBQU9yQixRQUFRQyxPQUFSLEVBQVA7QUFDRDs7QUFFRFgsTUFBSSxhQUFhNkIsTUFBTUUsTUFBbkIsR0FBNEIsY0FBaEM7QUFDQSxTQUFPLElBQUlyQixPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVcUIsTUFBVixLQUFxQjtBQUN0QyxVQUFNQyxXQUFZQyxLQUFELElBQVc7QUFDMUIsVUFBSUEsS0FBSixFQUFXO0FBQ1QsZUFBT0YsT0FBT0UsS0FBUCxDQUFQO0FBQ0Q7QUFDRCxVQUFJTCxNQUFNRSxNQUFOLEtBQWlCLENBQXJCLEVBQXdCO0FBQ3RCL0IsWUFBSSxxQkFBSjtBQUNBVztBQUNELE9BSEQsTUFHTztBQUNMLGNBQU1hLE1BQU1LLE1BQU1NLEtBQU4sRUFBWjtBQUNBLGNBQU1ULE9BQU9iLFlBQVlXLEdBQVosQ0FBYjtBQUNBWSxhQUFLWixHQUFMLEVBQVVFLElBQVYsRUFBZ0JPLFFBQWhCO0FBQ0Q7QUFDRixLQVpEO0FBYUFBO0FBQ0QsR0FmTSxDQUFQO0FBZ0JEOztBQUVELFNBQVNHLElBQVQsQ0FBY1osR0FBZCxFQUFtQkUsSUFBbkIsRUFBeUJXLFFBQXpCLEVBQW1DO0FBQ2pDLFFBQU1DLFVBQVVuQyxLQUFLb0MsT0FBTCxDQUFhYixJQUFiLENBQWhCO0FBQ0F4QixTQUFPb0MsT0FBUCxFQUFnQkUsT0FBTztBQUNyQixRQUFJQSxHQUFKLEVBQVM7QUFDUCxhQUFPSCxTQUFTRyxHQUFULENBQVA7QUFDRDtBQUNEM0MsT0FBRzRDLGdCQUFILENBQW9CakIsR0FBcEI7QUFDR2tCLFFBREgsQ0FDUTdDLEdBQUc4QyxpQkFBSCxDQUFxQmpCLElBQXJCLENBRFI7QUFFR2tCLE1BRkgsQ0FFTSxRQUZOLEVBRWdCUCxRQUZoQjtBQUdELEdBUEQ7QUFRRDs7QUFFRFEsT0FBT0MsT0FBUCxHQUFpQjFDLFVBQWpCIiwiZmlsZSI6InNhdmVBc3NldHMuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvYnVuZGxlIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IGZpbHRlclBsYXRmb3JtQXNzZXRTY2FsZXMgPSByZXF1aXJlKCcuL2ZpbHRlclBsYXRmb3JtQXNzZXRTY2FsZXMnKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IGdldEFzc2V0RGVzdFBhdGhBbmRyb2lkID0gcmVxdWlyZSgnLi9nZXRBc3NldERlc3RQYXRoQW5kcm9pZCcpO1xuY29uc3QgZ2V0QXNzZXREZXN0UGF0aElPUyA9IHJlcXVpcmUoJy4vZ2V0QXNzZXREZXN0UGF0aElPUycpO1xuY29uc3QgbG9nID0gcmVxdWlyZSgnLi4vdXRpbC9sb2cnKS5vdXQoJ2J1bmRsZScpO1xuY29uc3QgbWtkaXJwID0gcmVxdWlyZSgnbWtkaXJwJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG5mdW5jdGlvbiBzYXZlQXNzZXRzKFxuICBhc3NldHMsXG4gIHBsYXRmb3JtLFxuICBhc3NldHNEZXN0XG4pIHtcbiAgaWYgKCFhc3NldHNEZXN0KSB7XG4gICAgY29uc29sZS53YXJuKCdBc3NldHMgZGVzdGluYXRpb24gZm9sZGVyIGlzIG5vdCBzZXQsIHNraXBwaW5nLi4uJyk7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICB9XG5cbiAgY29uc3QgZ2V0QXNzZXREZXN0UGF0aCA9IHBsYXRmb3JtID09PSAnYW5kcm9pZCdcbiAgICA/IGdldEFzc2V0RGVzdFBhdGhBbmRyb2lkXG4gICAgOiBnZXRBc3NldERlc3RQYXRoSU9TO1xuXG4gIGNvbnN0IGZpbGVzVG9Db3B5ID0gT2JqZWN0LmNyZWF0ZShudWxsKTsgLy8gTWFwIHNyYyAtPiBkZXN0XG4gIGFzc2V0c1xuICAgIC5mb3JFYWNoKGFzc2V0ID0+IHtcbiAgICAgIGNvbnN0IHZhbGlkU2NhbGVzID0gbmV3IFNldChmaWx0ZXJQbGF0Zm9ybUFzc2V0U2NhbGVzKHBsYXRmb3JtLCBhc3NldC5zY2FsZXMpKTtcbiAgICAgIGFzc2V0LnNjYWxlcy5mb3JFYWNoKChzY2FsZSwgaWR4KSA9PiB7XG4gICAgICAgIGlmICghdmFsaWRTY2FsZXMuaGFzKHNjYWxlKSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzcmMgPSBhc3NldC5maWxlc1tpZHhdO1xuICAgICAgICBjb25zdCBkZXN0ID0gcGF0aC5qb2luKGFzc2V0c0Rlc3QsIGdldEFzc2V0RGVzdFBhdGgoYXNzZXQsIHNjYWxlKSk7XG4gICAgICAgIGZpbGVzVG9Db3B5W3NyY10gPSBkZXN0O1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgcmV0dXJuIGNvcHlBbGwoZmlsZXNUb0NvcHkpO1xufVxuXG5mdW5jdGlvbiBjb3B5QWxsKGZpbGVzVG9Db3B5KSB7XG4gIGNvbnN0IHF1ZXVlID0gT2JqZWN0LmtleXMoZmlsZXNUb0NvcHkpO1xuICBpZiAocXVldWUubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICB9XG5cbiAgbG9nKCdDb3B5aW5nICcgKyBxdWV1ZS5sZW5ndGggKyAnIGFzc2V0IGZpbGVzJyk7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgY29weU5leHQgPSAoZXJyb3IpID0+IHtcbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICByZXR1cm4gcmVqZWN0KGVycm9yKTtcbiAgICAgIH1cbiAgICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgbG9nKCdEb25lIGNvcHlpbmcgYXNzZXRzJyk7XG4gICAgICAgIHJlc29sdmUoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IHNyYyA9IHF1ZXVlLnNoaWZ0KCk7XG4gICAgICAgIGNvbnN0IGRlc3QgPSBmaWxlc1RvQ29weVtzcmNdO1xuICAgICAgICBjb3B5KHNyYywgZGVzdCwgY29weU5leHQpO1xuICAgICAgfVxuICAgIH07XG4gICAgY29weU5leHQoKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNvcHkoc3JjLCBkZXN0LCBjYWxsYmFjaykge1xuICBjb25zdCBkZXN0RGlyID0gcGF0aC5kaXJuYW1lKGRlc3QpO1xuICBta2RpcnAoZGVzdERpciwgZXJyID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICByZXR1cm4gY2FsbGJhY2soZXJyKTtcbiAgICB9XG4gICAgZnMuY3JlYXRlUmVhZFN0cmVhbShzcmMpXG4gICAgICAucGlwZShmcy5jcmVhdGVXcml0ZVN0cmVhbShkZXN0KSlcbiAgICAgIC5vbignZmluaXNoJywgY2FsbGJhY2spO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzYXZlQXNzZXRzO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "saveAssets.js"
      ],
      "names": [
        "filterPlatformAssetScales",
        "require",
        "fs",
        "getAssetDestPathAndroid",
        "getAssetDestPathIOS",
        "log",
        "out",
        "mkdirp",
        "path",
        "saveAssets",
        "assets",
        "platform",
        "assetsDest",
        "console",
        "warn",
        "Promise",
        "resolve",
        "getAssetDestPath",
        "filesToCopy",
        "Object",
        "create",
        "forEach",
        "asset",
        "validScales",
        "Set",
        "scales",
        "scale",
        "idx",
        "has",
        "src",
        "files",
        "dest",
        "join",
        "copyAll",
        "queue",
        "keys",
        "length",
        "reject",
        "copyNext",
        "error",
        "shift",
        "copy",
        "callback",
        "destDir",
        "dirname",
        "err",
        "createReadStream",
        "pipe",
        "createWriteStream",
        "on",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,4BAA4BC,QAAQ,6BAAR,CAAlC;AACA,MAAMC,KAAKD,QAAQ,IAAR,CAAX;AACA,MAAME,0BAA0BF,QAAQ,2BAAR,CAAhC;AACA,MAAMG,sBAAsBH,QAAQ,uBAAR,CAA5B;AACA,MAAMI,MAAMJ,QAAQ,aAAR,EAAuBK,GAAvB,CAA2B,QAA3B,CAAZ;AACA,MAAMC,SAASN,QAAQ,QAAR,CAAf;AACA,MAAMO,OAAOP,QAAQ,MAAR,CAAb;;AAEA,SAASQ,UAAT;AACEC,MADF;AAEEC,QAFF;AAGEC,UAHF;AAIE;AACA,MAAI,CAACA,UAAL,EAAiB;AACfC,YAAQC,IAAR,CAAa,mDAAb;AACA,WAAOC,QAAQC,OAAR,EAAP;AACD;;AAED,QAAMC,mBAAmBN,aAAa,SAAb;AACrBR,yBADqB;AAErBC,qBAFJ;;AAIA,QAAMc,cAAcC,OAAOC,MAAP,CAAc,IAAd,CAApB,CAVA,CAUyC;AACzCV;AACGW,SADH,CACWC,SAAS;AAChB,UAAMC,cAAc,IAAIC,GAAJ,CAAQxB,0BAA0BW,QAA1B,EAAoCW,MAAMG,MAA1C,CAAR,CAApB;AACAH,UAAMG,MAAN,CAAaJ,OAAb,CAAqB,CAACK,KAAD,EAAQC,GAAR,KAAgB;AACnC,UAAI,CAACJ,YAAYK,GAAZ,CAAgBF,KAAhB,CAAL,EAA6B;AAC3B;AACD;AACD,YAAMG,MAAMP,MAAMQ,KAAN,CAAYH,GAAZ,CAAZ;AACA,YAAMI,OAAOvB,KAAKwB,IAAL,CAAUpB,UAAV,EAAsBK,iBAAiBK,KAAjB,EAAwBI,KAAxB,CAAtB,CAAb;AACAR,kBAAYW,GAAZ,IAAmBE,IAAnB;AACD,KAPD;AAQD,GAXH;;AAaA,SAAOE,QAAQf,WAAR,CAAP;AACD;;AAED,SAASe,OAAT,CAAiBf,WAAjB,EAA8B;AAC5B,QAAMgB,QAAQf,OAAOgB,IAAP,CAAYjB,WAAZ,CAAd;AACA,MAAIgB,MAAME,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAOrB,QAAQC,OAAR,EAAP;AACD;;AAEDX,MAAI,aAAa6B,MAAME,MAAnB,GAA4B,cAAhC;AACA,SAAO,IAAIrB,OAAJ,CAAY,CAACC,OAAD,EAAUqB,MAAV,KAAqB;AACtC,UAAMC,WAAYC,KAAD,IAAW;AAC1B,UAAIA,KAAJ,EAAW;AACT,eAAOF,OAAOE,KAAP,CAAP;AACD;AACD,UAAIL,MAAME,MAAN,KAAiB,CAArB,EAAwB;AACtB/B,YAAI,qBAAJ;AACAW;AACD,OAHD,MAGO;AACL,cAAMa,MAAMK,MAAMM,KAAN,EAAZ;AACA,cAAMT,OAAOb,YAAYW,GAAZ,CAAb;AACAY,aAAKZ,GAAL,EAAUE,IAAV,EAAgBO,QAAhB;AACD;AACF,KAZD;AAaAA;AACD,GAfM,CAAP;AAgBD;;AAED,SAASG,IAAT,CAAcZ,GAAd,EAAmBE,IAAnB,EAAyBW,QAAzB,EAAmC;AACjC,QAAMC,UAAUnC,KAAKoC,OAAL,CAAab,IAAb,CAAhB;AACAxB,SAAOoC,OAAP,EAAgBE,OAAO;AACrB,QAAIA,GAAJ,EAAS;AACP,aAAOH,SAASG,GAAT,CAAP;AACD;AACD3C,OAAG4C,gBAAH,CAAoBjB,GAApB;AACGkB,QADH,CACQ7C,GAAG8C,iBAAH,CAAqBjB,IAArB,CADR;AAEGkB,MAFH,CAEM,QAFN,EAEgBP,QAFhB;AAGD,GAPD;AAQD;;AAEDQ,OAAOC,OAAP,GAAiB1C,UAAjB",
      "file": "saveAssets.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst filterPlatformAssetScales = require('./filterPlatformAssetScales');\nconst fs = require('fs');\nconst getAssetDestPathAndroid = require('./getAssetDestPathAndroid');\nconst getAssetDestPathIOS = require('./getAssetDestPathIOS');\nconst log = require('../util/log').out('bundle');\nconst mkdirp = require('mkdirp');\nconst path = require('path');\n\nfunction saveAssets(\n  assets,\n  platform,\n  assetsDest\n) {\n  if (!assetsDest) {\n    console.warn('Assets destination folder is not set, skipping...');\n    return Promise.resolve();\n  }\n\n  const getAssetDestPath = platform === 'android'\n    ? getAssetDestPathAndroid\n    : getAssetDestPathIOS;\n\n  const filesToCopy = Object.create(null); // Map src -> dest\n  assets\n    .forEach(asset => {\n      const validScales = new Set(filterPlatformAssetScales(platform, asset.scales));\n      asset.scales.forEach((scale, idx) => {\n        if (!validScales.has(scale)) {\n          return;\n        }\n        const src = asset.files[idx];\n        const dest = path.join(assetsDest, getAssetDestPath(asset, scale));\n        filesToCopy[src] = dest;\n      });\n    });\n\n  return copyAll(filesToCopy);\n}\n\nfunction copyAll(filesToCopy) {\n  const queue = Object.keys(filesToCopy);\n  if (queue.length === 0) {\n    return Promise.resolve();\n  }\n\n  log('Copying ' + queue.length + ' asset files');\n  return new Promise((resolve, reject) => {\n    const copyNext = (error) => {\n      if (error) {\n        return reject(error);\n      }\n      if (queue.length === 0) {\n        log('Done copying assets');\n        resolve();\n      } else {\n        const src = queue.shift();\n        const dest = filesToCopy[src];\n        copy(src, dest, copyNext);\n      }\n    };\n    copyNext();\n  });\n}\n\nfunction copy(src, dest, callback) {\n  const destDir = path.dirname(dest);\n  mkdirp(destDir, err => {\n    if (err) {\n      return callback(err);\n    }\n    fs.createReadStream(src)\n      .pipe(fs.createWriteStream(dest))\n      .on('finish', callback);\n  });\n}\n\nmodule.exports = saveAssets;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/filterPlatformAssetScales.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/filterPlatformAssetScales.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/filterPlatformAssetScales.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "filterPlatformAssetScales.js",
      "sourceFileName": "filterPlatformAssetScales.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "filterPlatformAssetScales"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n * @format\n */\n\n'use strict';\n\nconst ALLOWED_SCALES = {\n  ios: [1, 2, 3] };\n\n\nfunction filterPlatformAssetScales(\nplatform,\nscales)\n{\n  const whitelist = ALLOWED_SCALES[platform];\n  if (!whitelist) {\n    return scales;\n  }\n  const result = scales.filter(scale => whitelist.indexOf(scale) > -1);\n  if (result.length === 0 && scales.length > 0) {\n    // No matching scale found, but there are some available. Ideally we don't\n    // want to be in this situation and should throw, but for now as a fallback\n    // let's just use the closest larger image\n    const maxScale = whitelist[whitelist.length - 1];\n    for (const scale of scales) {\n      if (scale > maxScale) {\n        result.push(scale);\n        break;\n      }\n    }\n\n    // There is no larger scales available, use the largest we have\n    if (result.length === 0) {\n      result.push(scales[scales.length - 1]);\n    }\n  }\n  return result;\n}\n\nmodule.exports = filterPlatformAssetScales;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbHRlclBsYXRmb3JtQXNzZXRTY2FsZXMuanMiXSwibmFtZXMiOlsiQUxMT1dFRF9TQ0FMRVMiLCJpb3MiLCJmaWx0ZXJQbGF0Zm9ybUFzc2V0U2NhbGVzIiwicGxhdGZvcm0iLCJzY2FsZXMiLCJ3aGl0ZWxpc3QiLCJyZXN1bHQiLCJmaWx0ZXIiLCJzY2FsZSIsImluZGV4T2YiLCJsZW5ndGgiLCJtYXhTY2FsZSIsInB1c2giLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7O0FBWUE7O0FBRUEsTUFBTUEsaUJBQWlCO0FBQ3JCQyxPQUFLLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLENBRGdCLEVBQXZCOzs7QUFJQSxTQUFTQyx5QkFBVDtBQUNFQyxRQURGO0FBRUVDLE1BRkY7QUFHMEI7QUFDeEIsUUFBTUMsWUFBWUwsZUFBZUcsUUFBZixDQUFsQjtBQUNBLE1BQUksQ0FBQ0UsU0FBTCxFQUFnQjtBQUNkLFdBQU9ELE1BQVA7QUFDRDtBQUNELFFBQU1FLFNBQVNGLE9BQU9HLE1BQVAsQ0FBY0MsU0FBU0gsVUFBVUksT0FBVixDQUFrQkQsS0FBbEIsSUFBMkIsQ0FBQyxDQUFuRCxDQUFmO0FBQ0EsTUFBSUYsT0FBT0ksTUFBUCxLQUFrQixDQUFsQixJQUF1Qk4sT0FBT00sTUFBUCxHQUFnQixDQUEzQyxFQUE4QztBQUM1QztBQUNBO0FBQ0E7QUFDQSxVQUFNQyxXQUFXTixVQUFVQSxVQUFVSyxNQUFWLEdBQW1CLENBQTdCLENBQWpCO0FBQ0EsU0FBSyxNQUFNRixLQUFYLElBQW9CSixNQUFwQixFQUE0QjtBQUMxQixVQUFJSSxRQUFRRyxRQUFaLEVBQXNCO0FBQ3BCTCxlQUFPTSxJQUFQLENBQVlKLEtBQVo7QUFDQTtBQUNEO0FBQ0Y7O0FBRUQ7QUFDQSxRQUFJRixPQUFPSSxNQUFQLEtBQWtCLENBQXRCLEVBQXlCO0FBQ3ZCSixhQUFPTSxJQUFQLENBQVlSLE9BQU9BLE9BQU9NLE1BQVAsR0FBZ0IsQ0FBdkIsQ0FBWjtBQUNEO0FBQ0Y7QUFDRCxTQUFPSixNQUFQO0FBQ0Q7O0FBRURPLE9BQU9DLE9BQVAsR0FBaUJaLHlCQUFqQiIsImZpbGUiOiJmaWx0ZXJQbGF0Zm9ybUFzc2V0U2NhbGVzLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2J1bmRsZSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgQUxMT1dFRF9TQ0FMRVMgPSB7XG4gIGlvczogWzEsIDIsIDNdLFxufTtcblxuZnVuY3Rpb24gZmlsdGVyUGxhdGZvcm1Bc3NldFNjYWxlcyhcbiAgcGxhdGZvcm06IHN0cmluZyxcbiAgc2NhbGVzOiAkUmVhZE9ubHlBcnJheTxudW1iZXI+LFxuKTogJFJlYWRPbmx5QXJyYXk8bnVtYmVyPiB7XG4gIGNvbnN0IHdoaXRlbGlzdCA9IEFMTE9XRURfU0NBTEVTW3BsYXRmb3JtXTtcbiAgaWYgKCF3aGl0ZWxpc3QpIHtcbiAgICByZXR1cm4gc2NhbGVzO1xuICB9XG4gIGNvbnN0IHJlc3VsdCA9IHNjYWxlcy5maWx0ZXIoc2NhbGUgPT4gd2hpdGVsaXN0LmluZGV4T2Yoc2NhbGUpID4gLTEpO1xuICBpZiAocmVzdWx0Lmxlbmd0aCA9PT0gMCAmJiBzY2FsZXMubGVuZ3RoID4gMCkge1xuICAgIC8vIE5vIG1hdGNoaW5nIHNjYWxlIGZvdW5kLCBidXQgdGhlcmUgYXJlIHNvbWUgYXZhaWxhYmxlLiBJZGVhbGx5IHdlIGRvbid0XG4gICAgLy8gd2FudCB0byBiZSBpbiB0aGlzIHNpdHVhdGlvbiBhbmQgc2hvdWxkIHRocm93LCBidXQgZm9yIG5vdyBhcyBhIGZhbGxiYWNrXG4gICAgLy8gbGV0J3MganVzdCB1c2UgdGhlIGNsb3Nlc3QgbGFyZ2VyIGltYWdlXG4gICAgY29uc3QgbWF4U2NhbGUgPSB3aGl0ZWxpc3Rbd2hpdGVsaXN0Lmxlbmd0aCAtIDFdO1xuICAgIGZvciAoY29uc3Qgc2NhbGUgb2Ygc2NhbGVzKSB7XG4gICAgICBpZiAoc2NhbGUgPiBtYXhTY2FsZSkge1xuICAgICAgICByZXN1bHQucHVzaChzY2FsZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFRoZXJlIGlzIG5vIGxhcmdlciBzY2FsZXMgYXZhaWxhYmxlLCB1c2UgdGhlIGxhcmdlc3Qgd2UgaGF2ZVxuICAgIGlmIChyZXN1bHQubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXN1bHQucHVzaChzY2FsZXNbc2NhbGVzLmxlbmd0aCAtIDFdKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmaWx0ZXJQbGF0Zm9ybUFzc2V0U2NhbGVzO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "filterPlatformAssetScales.js"
      ],
      "names": [
        "ALLOWED_SCALES",
        "ios",
        "filterPlatformAssetScales",
        "platform",
        "scales",
        "whitelist",
        "result",
        "filter",
        "scale",
        "indexOf",
        "length",
        "maxScale",
        "push",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;AAYA;;AAEA,MAAMA,iBAAiB;AACrBC,OAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADgB,EAAvB;;;AAIA,SAASC,yBAAT;AACEC,QADF;AAEEC,MAFF;AAG0B;AACxB,QAAMC,YAAYL,eAAeG,QAAf,CAAlB;AACA,MAAI,CAACE,SAAL,EAAgB;AACd,WAAOD,MAAP;AACD;AACD,QAAME,SAASF,OAAOG,MAAP,CAAcC,SAASH,UAAUI,OAAV,CAAkBD,KAAlB,IAA2B,CAAC,CAAnD,CAAf;AACA,MAAIF,OAAOI,MAAP,KAAkB,CAAlB,IAAuBN,OAAOM,MAAP,GAAgB,CAA3C,EAA8C;AAC5C;AACA;AACA;AACA,UAAMC,WAAWN,UAAUA,UAAUK,MAAV,GAAmB,CAA7B,CAAjB;AACA,SAAK,MAAMF,KAAX,IAAoBJ,MAApB,EAA4B;AAC1B,UAAII,QAAQG,QAAZ,EAAsB;AACpBL,eAAOM,IAAP,CAAYJ,KAAZ;AACA;AACD;AACF;;AAED;AACA,QAAIF,OAAOI,MAAP,KAAkB,CAAtB,EAAyB;AACvBJ,aAAOM,IAAP,CAAYR,OAAOA,OAAOM,MAAP,GAAgB,CAAvB,CAAZ;AACD;AACF;AACD,SAAOJ,MAAP;AACD;;AAEDO,OAAOC,OAAP,GAAiBZ,yBAAjB",
      "file": "filterPlatformAssetScales.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst ALLOWED_SCALES = {\n  ios: [1, 2, 3],\n};\n\nfunction filterPlatformAssetScales(\n  platform: string,\n  scales: $ReadOnlyArray<number>,\n): $ReadOnlyArray<number> {\n  const whitelist = ALLOWED_SCALES[platform];\n  if (!whitelist) {\n    return scales;\n  }\n  const result = scales.filter(scale => whitelist.indexOf(scale) > -1);\n  if (result.length === 0 && scales.length > 0) {\n    // No matching scale found, but there are some available. Ideally we don't\n    // want to be in this situation and should throw, but for now as a fallback\n    // let's just use the closest larger image\n    const maxScale = whitelist[whitelist.length - 1];\n    for (const scale of scales) {\n      if (scale > maxScale) {\n        result.push(scale);\n        break;\n      }\n    }\n\n    // There is no larger scales available, use the largest we have\n    if (result.length === 0) {\n      result.push(scales[scales.length - 1]);\n    }\n  }\n  return result;\n}\n\nmodule.exports = filterPlatformAssetScales;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/getAssetDestPathAndroid.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../../Libraries/Image/AssetRegistry",
            "imported": [
              "PackagerAsset"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "PackagerAsset",
                "local": "PackagerAsset"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/getAssetDestPathAndroid.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/getAssetDestPathAndroid.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "getAssetDestPathAndroid.js",
      "sourceFileName": "getAssetDestPathAndroid.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "getAssetDestPathAndroid"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nconst assetPathUtils = require('./assetPathUtils');\nconst path = require('path');\n\n\n\nfunction getAssetDestPathAndroid(asset, scale) {\n  const androidFolder = assetPathUtils.getAndroidResourceFolderName(asset, scale);\n  const fileName = assetPathUtils.getAndroidResourceIdentifier(asset);\n  return path.join(androidFolder, fileName + '.' + asset.type);\n}\n\nmodule.exports = getAssetDestPathAndroid;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldEFzc2V0RGVzdFBhdGhBbmRyb2lkLmpzIl0sIm5hbWVzIjpbImFzc2V0UGF0aFV0aWxzIiwicmVxdWlyZSIsInBhdGgiLCJnZXRBc3NldERlc3RQYXRoQW5kcm9pZCIsImFzc2V0Iiwic2NhbGUiLCJhbmRyb2lkRm9sZGVyIiwiZ2V0QW5kcm9pZFJlc291cmNlRm9sZGVyTmFtZSIsImZpbGVOYW1lIiwiZ2V0QW5kcm9pZFJlc291cmNlSWRlbnRpZmllciIsImpvaW4iLCJ0eXBlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0FBV0E7O0FBRUEsTUFBTUEsaUJBQWlCQyxRQUFRLGtCQUFSLENBQXZCO0FBQ0EsTUFBTUMsT0FBT0QsUUFBUSxNQUFSLENBQWI7Ozs7QUFJQSxTQUFTRSx1QkFBVCxDQUFpQ0MsS0FBakMsRUFBdURDLEtBQXZELEVBQThFO0FBQzVFLFFBQU1DLGdCQUFnQk4sZUFBZU8sNEJBQWYsQ0FBNENILEtBQTVDLEVBQW1EQyxLQUFuRCxDQUF0QjtBQUNBLFFBQU1HLFdBQVlSLGVBQWVTLDRCQUFmLENBQTRDTCxLQUE1QyxDQUFsQjtBQUNBLFNBQU9GLEtBQUtRLElBQUwsQ0FBVUosYUFBVixFQUF5QkUsV0FBVyxHQUFYLEdBQWlCSixNQUFNTyxJQUFoRCxDQUFQO0FBQ0Q7O0FBRURDLE9BQU9DLE9BQVAsR0FBaUJWLHVCQUFqQiIsImZpbGUiOiJnZXRBc3NldERlc3RQYXRoQW5kcm9pZC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9idW5kbGUiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKlxuICogQGZsb3dcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IGFzc2V0UGF0aFV0aWxzID0gcmVxdWlyZSgnLi9hc3NldFBhdGhVdGlscycpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxuaW1wb3J0IHR5cGUge1BhY2thZ2VyQXNzZXR9IGZyb20gJy4uLy4uL0xpYnJhcmllcy9JbWFnZS9Bc3NldFJlZ2lzdHJ5JztcblxuZnVuY3Rpb24gZ2V0QXNzZXREZXN0UGF0aEFuZHJvaWQoYXNzZXQ6IFBhY2thZ2VyQXNzZXQsIHNjYWxlOiBudW1iZXIpOiBzdHJpbmcge1xuICBjb25zdCBhbmRyb2lkRm9sZGVyID0gYXNzZXRQYXRoVXRpbHMuZ2V0QW5kcm9pZFJlc291cmNlRm9sZGVyTmFtZShhc3NldCwgc2NhbGUpO1xuICBjb25zdCBmaWxlTmFtZSA9ICBhc3NldFBhdGhVdGlscy5nZXRBbmRyb2lkUmVzb3VyY2VJZGVudGlmaWVyKGFzc2V0KTtcbiAgcmV0dXJuIHBhdGguam9pbihhbmRyb2lkRm9sZGVyLCBmaWxlTmFtZSArICcuJyArIGFzc2V0LnR5cGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldEFzc2V0RGVzdFBhdGhBbmRyb2lkO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "getAssetDestPathAndroid.js"
      ],
      "names": [
        "assetPathUtils",
        "require",
        "path",
        "getAssetDestPathAndroid",
        "asset",
        "scale",
        "androidFolder",
        "getAndroidResourceFolderName",
        "fileName",
        "getAndroidResourceIdentifier",
        "join",
        "type",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;AAWA;;AAEA,MAAMA,iBAAiBC,QAAQ,kBAAR,CAAvB;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;;;;AAIA,SAASE,uBAAT,CAAiCC,KAAjC,EAAuDC,KAAvD,EAA8E;AAC5E,QAAMC,gBAAgBN,eAAeO,4BAAf,CAA4CH,KAA5C,EAAmDC,KAAnD,CAAtB;AACA,QAAMG,WAAYR,eAAeS,4BAAf,CAA4CL,KAA5C,CAAlB;AACA,SAAOF,KAAKQ,IAAL,CAAUJ,aAAV,EAAyBE,WAAW,GAAX,GAAiBJ,MAAMO,IAAhD,CAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBV,uBAAjB",
      "file": "getAssetDestPathAndroid.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n'use strict';\n\nconst assetPathUtils = require('./assetPathUtils');\nconst path = require('path');\n\nimport type {PackagerAsset} from '../../Libraries/Image/AssetRegistry';\n\nfunction getAssetDestPathAndroid(asset: PackagerAsset, scale: number): string {\n  const androidFolder = assetPathUtils.getAndroidResourceFolderName(asset, scale);\n  const fileName =  assetPathUtils.getAndroidResourceIdentifier(asset);\n  return path.join(androidFolder, fileName + '.' + asset.type);\n}\n\nmodule.exports = getAssetDestPathAndroid;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/assetPathUtils.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../../Libraries/Image/AssetRegistry",
            "imported": [
              "PackagerAsset"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "PackagerAsset",
                "local": "PackagerAsset"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/assetPathUtils.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/assetPathUtils.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "assetPathUtils.js",
      "sourceFileName": "assetPathUtils.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "assetPathUtils"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n\n\n/**\n               * FIXME: using number to represent discrete scale numbers is fragile in essence because of\n               * floating point numbers imprecision.\n               */\nfunction getAndroidAssetSuffix(scale) {\n  switch (scale) {\n    case 0.75:return 'ldpi';\n    case 1:return 'mdpi';\n    case 1.5:return 'hdpi';\n    case 2:return 'xhdpi';\n    case 3:return 'xxhdpi';\n    case 4:return 'xxxhdpi';}\n\n  throw new Error('no such scale');\n}\n\n// See https://developer.android.com/guide/topics/resources/drawable-resource.html\nconst drawableFileTypes = new Set([\n'gif',\n'jpeg',\n'jpg',\n'png',\n'svg',\n'webp',\n'xml']);\n\n\nfunction getAndroidResourceFolderName(asset, scale) {\n  if (!drawableFileTypes.has(asset.type)) {\n    return 'raw';\n  }\n  var suffix = getAndroidAssetSuffix(scale);\n  if (!suffix) {\n    throw new Error(\n    'Don\\'t know which android drawable suffix to use for asset: ' +\n    JSON.stringify(asset));\n\n  }\n  const androidFolder = 'drawable-' + suffix;\n  return androidFolder;\n}\n\nfunction getAndroidResourceIdentifier(asset) {\n  var folderPath = getBasePath(asset);\n  return (folderPath + '/' + asset.name).\n  toLowerCase().\n  replace(/\\//g, '_') // Encode folder structure in file name\n  .replace(/([^a-z0-9_])/g, '') // Remove illegal chars\n  .replace(/^assets_/, ''); // Remove \"assets_\" prefix\n}\n\nfunction getBasePath(asset) {\n  var basePath = asset.httpServerLocation;\n  if (basePath[0] === '/') {\n    basePath = basePath.substr(1);\n  }\n  return basePath;\n}\n\nmodule.exports = {\n  getAndroidAssetSuffix: getAndroidAssetSuffix,\n  getAndroidResourceFolderName: getAndroidResourceFolderName,\n  getAndroidResourceIdentifier: getAndroidResourceIdentifier,\n  getBasePath: getBasePath };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0UGF0aFV0aWxzLmpzIl0sIm5hbWVzIjpbImdldEFuZHJvaWRBc3NldFN1ZmZpeCIsInNjYWxlIiwiRXJyb3IiLCJkcmF3YWJsZUZpbGVUeXBlcyIsIlNldCIsImdldEFuZHJvaWRSZXNvdXJjZUZvbGRlck5hbWUiLCJhc3NldCIsImhhcyIsInR5cGUiLCJzdWZmaXgiLCJKU09OIiwic3RyaW5naWZ5IiwiYW5kcm9pZEZvbGRlciIsImdldEFuZHJvaWRSZXNvdXJjZUlkZW50aWZpZXIiLCJmb2xkZXJQYXRoIiwiZ2V0QmFzZVBhdGgiLCJuYW1lIiwidG9Mb3dlckNhc2UiLCJyZXBsYWNlIiwiYmFzZVBhdGgiLCJodHRwU2VydmVyTG9jYXRpb24iLCJzdWJzdHIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7QUFXQTs7OztBQUlBOzs7O0FBSUEsU0FBU0EscUJBQVQsQ0FBK0JDLEtBQS9CLEVBQXNEO0FBQ3BELFVBQVFBLEtBQVI7QUFDRSxTQUFLLElBQUwsQ0FBVyxPQUFPLE1BQVA7QUFDWCxTQUFLLENBQUwsQ0FBUSxPQUFPLE1BQVA7QUFDUixTQUFLLEdBQUwsQ0FBVSxPQUFPLE1BQVA7QUFDVixTQUFLLENBQUwsQ0FBUSxPQUFPLE9BQVA7QUFDUixTQUFLLENBQUwsQ0FBUSxPQUFPLFFBQVA7QUFDUixTQUFLLENBQUwsQ0FBUSxPQUFPLFNBQVAsQ0FOVjs7QUFRQSxRQUFNLElBQUlDLEtBQUosQ0FBVSxlQUFWLENBQU47QUFDRDs7QUFFRDtBQUNBLE1BQU1DLG9CQUFvQixJQUFJQyxHQUFKLENBQVE7QUFDaEMsS0FEZ0M7QUFFaEMsTUFGZ0M7QUFHaEMsS0FIZ0M7QUFJaEMsS0FKZ0M7QUFLaEMsS0FMZ0M7QUFNaEMsTUFOZ0M7QUFPaEMsS0FQZ0MsQ0FBUixDQUExQjs7O0FBVUEsU0FBU0MsNEJBQVQsQ0FBc0NDLEtBQXRDLEVBQTRETCxLQUE1RCxFQUEyRTtBQUN6RSxNQUFJLENBQUNFLGtCQUFrQkksR0FBbEIsQ0FBc0JELE1BQU1FLElBQTVCLENBQUwsRUFBd0M7QUFDdEMsV0FBTyxLQUFQO0FBQ0Q7QUFDRCxNQUFJQyxTQUFTVCxzQkFBc0JDLEtBQXRCLENBQWI7QUFDQSxNQUFJLENBQUNRLE1BQUwsRUFBYTtBQUNYLFVBQU0sSUFBSVAsS0FBSjtBQUNKO0FBQ0FRLFNBQUtDLFNBQUwsQ0FBZUwsS0FBZixDQUZJLENBQU47O0FBSUQ7QUFDRCxRQUFNTSxnQkFBZ0IsY0FBY0gsTUFBcEM7QUFDQSxTQUFPRyxhQUFQO0FBQ0Q7O0FBRUQsU0FBU0MsNEJBQVQsQ0FBc0NQLEtBQXRDLEVBQTREO0FBQzFELE1BQUlRLGFBQWFDLFlBQVlULEtBQVosQ0FBakI7QUFDQSxTQUFPLENBQUNRLGFBQWEsR0FBYixHQUFtQlIsTUFBTVUsSUFBMUI7QUFDSkMsYUFESTtBQUVKQyxTQUZJLENBRUksS0FGSixFQUVXLEdBRlgsRUFFMEI7QUFGMUIsR0FHSkEsT0FISSxDQUdJLGVBSEosRUFHcUIsRUFIckIsRUFHMEI7QUFIMUIsR0FJSkEsT0FKSSxDQUlJLFVBSkosRUFJZ0IsRUFKaEIsQ0FBUCxDQUYwRCxDQU16QjtBQUNsQzs7QUFFRCxTQUFTSCxXQUFULENBQXFCVCxLQUFyQixFQUEyQztBQUN6QyxNQUFJYSxXQUFXYixNQUFNYyxrQkFBckI7QUFDQSxNQUFJRCxTQUFTLENBQVQsTUFBZ0IsR0FBcEIsRUFBeUI7QUFDdkJBLGVBQVdBLFNBQVNFLE1BQVQsQ0FBZ0IsQ0FBaEIsQ0FBWDtBQUNEO0FBQ0QsU0FBT0YsUUFBUDtBQUNEOztBQUVERyxPQUFPQyxPQUFQLEdBQWlCO0FBQ2Z2Qix5QkFBdUJBLHFCQURSO0FBRWZLLGdDQUE4QkEsNEJBRmY7QUFHZlEsZ0NBQThCQSw0QkFIZjtBQUlmRSxlQUFhQSxXQUpFLEVBQWpCIiwiZmlsZSI6ImFzc2V0UGF0aFV0aWxzLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2J1bmRsZSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqXG4gKiBAZmxvd1xuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHR5cGUge1BhY2thZ2VyQXNzZXR9IGZyb20gJy4uLy4uL0xpYnJhcmllcy9JbWFnZS9Bc3NldFJlZ2lzdHJ5JztcblxuLyoqXG4gKiBGSVhNRTogdXNpbmcgbnVtYmVyIHRvIHJlcHJlc2VudCBkaXNjcmV0ZSBzY2FsZSBudW1iZXJzIGlzIGZyYWdpbGUgaW4gZXNzZW5jZSBiZWNhdXNlIG9mXG4gKiBmbG9hdGluZyBwb2ludCBudW1iZXJzIGltcHJlY2lzaW9uLlxuICovXG5mdW5jdGlvbiBnZXRBbmRyb2lkQXNzZXRTdWZmaXgoc2NhbGU6IG51bWJlcik6IHN0cmluZyB7XG4gIHN3aXRjaCAoc2NhbGUpIHtcbiAgICBjYXNlIDAuNzU6IHJldHVybiAnbGRwaSc7XG4gICAgY2FzZSAxOiByZXR1cm4gJ21kcGknO1xuICAgIGNhc2UgMS41OiByZXR1cm4gJ2hkcGknO1xuICAgIGNhc2UgMjogcmV0dXJuICd4aGRwaSc7XG4gICAgY2FzZSAzOiByZXR1cm4gJ3h4aGRwaSc7XG4gICAgY2FzZSA0OiByZXR1cm4gJ3h4eGhkcGknO1xuICB9XG4gIHRocm93IG5ldyBFcnJvcignbm8gc3VjaCBzY2FsZScpO1xufVxuXG4vLyBTZWUgaHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vZ3VpZGUvdG9waWNzL3Jlc291cmNlcy9kcmF3YWJsZS1yZXNvdXJjZS5odG1sXG5jb25zdCBkcmF3YWJsZUZpbGVUeXBlcyA9IG5ldyBTZXQoW1xuICAnZ2lmJyxcbiAgJ2pwZWcnLFxuICAnanBnJyxcbiAgJ3BuZycsXG4gICdzdmcnLFxuICAnd2VicCcsXG4gICd4bWwnLFxuXSk7XG5cbmZ1bmN0aW9uIGdldEFuZHJvaWRSZXNvdXJjZUZvbGRlck5hbWUoYXNzZXQ6IFBhY2thZ2VyQXNzZXQsIHNjYWxlOiBudW1iZXIpIHtcbiAgaWYgKCFkcmF3YWJsZUZpbGVUeXBlcy5oYXMoYXNzZXQudHlwZSkpIHtcbiAgICByZXR1cm4gJ3Jhdyc7XG4gIH1cbiAgdmFyIHN1ZmZpeCA9IGdldEFuZHJvaWRBc3NldFN1ZmZpeChzY2FsZSk7XG4gIGlmICghc3VmZml4KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ0RvblxcJ3Qga25vdyB3aGljaCBhbmRyb2lkIGRyYXdhYmxlIHN1ZmZpeCB0byB1c2UgZm9yIGFzc2V0OiAnICtcbiAgICAgIEpTT04uc3RyaW5naWZ5KGFzc2V0KVxuICAgICk7XG4gIH1cbiAgY29uc3QgYW5kcm9pZEZvbGRlciA9ICdkcmF3YWJsZS0nICsgc3VmZml4O1xuICByZXR1cm4gYW5kcm9pZEZvbGRlcjtcbn1cblxuZnVuY3Rpb24gZ2V0QW5kcm9pZFJlc291cmNlSWRlbnRpZmllcihhc3NldDogUGFja2FnZXJBc3NldCkge1xuICB2YXIgZm9sZGVyUGF0aCA9IGdldEJhc2VQYXRoKGFzc2V0KTtcbiAgcmV0dXJuIChmb2xkZXJQYXRoICsgJy8nICsgYXNzZXQubmFtZSlcbiAgICAudG9Mb3dlckNhc2UoKVxuICAgIC5yZXBsYWNlKC9cXC8vZywgJ18nKSAgICAgICAgICAgLy8gRW5jb2RlIGZvbGRlciBzdHJ1Y3R1cmUgaW4gZmlsZSBuYW1lXG4gICAgLnJlcGxhY2UoLyhbXmEtejAtOV9dKS9nLCAnJykgIC8vIFJlbW92ZSBpbGxlZ2FsIGNoYXJzXG4gICAgLnJlcGxhY2UoL15hc3NldHNfLywgJycpOyAgICAgIC8vIFJlbW92ZSBcImFzc2V0c19cIiBwcmVmaXhcbn1cblxuZnVuY3Rpb24gZ2V0QmFzZVBhdGgoYXNzZXQ6IFBhY2thZ2VyQXNzZXQpIHtcbiAgdmFyIGJhc2VQYXRoID0gYXNzZXQuaHR0cFNlcnZlckxvY2F0aW9uO1xuICBpZiAoYmFzZVBhdGhbMF0gPT09ICcvJykge1xuICAgIGJhc2VQYXRoID0gYmFzZVBhdGguc3Vic3RyKDEpO1xuICB9XG4gIHJldHVybiBiYXNlUGF0aDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldEFuZHJvaWRBc3NldFN1ZmZpeDogZ2V0QW5kcm9pZEFzc2V0U3VmZml4LFxuICBnZXRBbmRyb2lkUmVzb3VyY2VGb2xkZXJOYW1lOiBnZXRBbmRyb2lkUmVzb3VyY2VGb2xkZXJOYW1lLFxuICBnZXRBbmRyb2lkUmVzb3VyY2VJZGVudGlmaWVyOiBnZXRBbmRyb2lkUmVzb3VyY2VJZGVudGlmaWVyLFxuICBnZXRCYXNlUGF0aDogZ2V0QmFzZVBhdGhcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "assetPathUtils.js"
      ],
      "names": [
        "getAndroidAssetSuffix",
        "scale",
        "Error",
        "drawableFileTypes",
        "Set",
        "getAndroidResourceFolderName",
        "asset",
        "has",
        "type",
        "suffix",
        "JSON",
        "stringify",
        "androidFolder",
        "getAndroidResourceIdentifier",
        "folderPath",
        "getBasePath",
        "name",
        "toLowerCase",
        "replace",
        "basePath",
        "httpServerLocation",
        "substr",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;AAWA;;;;AAIA;;;;AAIA,SAASA,qBAAT,CAA+BC,KAA/B,EAAsD;AACpD,UAAQA,KAAR;AACE,SAAK,IAAL,CAAW,OAAO,MAAP;AACX,SAAK,CAAL,CAAQ,OAAO,MAAP;AACR,SAAK,GAAL,CAAU,OAAO,MAAP;AACV,SAAK,CAAL,CAAQ,OAAO,OAAP;AACR,SAAK,CAAL,CAAQ,OAAO,QAAP;AACR,SAAK,CAAL,CAAQ,OAAO,SAAP,CANV;;AAQA,QAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN;AACD;;AAED;AACA,MAAMC,oBAAoB,IAAIC,GAAJ,CAAQ;AAChC,KADgC;AAEhC,MAFgC;AAGhC,KAHgC;AAIhC,KAJgC;AAKhC,KALgC;AAMhC,MANgC;AAOhC,KAPgC,CAAR,CAA1B;;;AAUA,SAASC,4BAAT,CAAsCC,KAAtC,EAA4DL,KAA5D,EAA2E;AACzE,MAAI,CAACE,kBAAkBI,GAAlB,CAAsBD,MAAME,IAA5B,CAAL,EAAwC;AACtC,WAAO,KAAP;AACD;AACD,MAAIC,SAAST,sBAAsBC,KAAtB,CAAb;AACA,MAAI,CAACQ,MAAL,EAAa;AACX,UAAM,IAAIP,KAAJ;AACJ;AACAQ,SAAKC,SAAL,CAAeL,KAAf,CAFI,CAAN;;AAID;AACD,QAAMM,gBAAgB,cAAcH,MAApC;AACA,SAAOG,aAAP;AACD;;AAED,SAASC,4BAAT,CAAsCP,KAAtC,EAA4D;AAC1D,MAAIQ,aAAaC,YAAYT,KAAZ,CAAjB;AACA,SAAO,CAACQ,aAAa,GAAb,GAAmBR,MAAMU,IAA1B;AACJC,aADI;AAEJC,SAFI,CAEI,KAFJ,EAEW,GAFX,EAE0B;AAF1B,GAGJA,OAHI,CAGI,eAHJ,EAGqB,EAHrB,EAG0B;AAH1B,GAIJA,OAJI,CAII,UAJJ,EAIgB,EAJhB,CAAP,CAF0D,CAMzB;AAClC;;AAED,SAASH,WAAT,CAAqBT,KAArB,EAA2C;AACzC,MAAIa,WAAWb,MAAMc,kBAArB;AACA,MAAID,SAAS,CAAT,MAAgB,GAApB,EAAyB;AACvBA,eAAWA,SAASE,MAAT,CAAgB,CAAhB,CAAX;AACD;AACD,SAAOF,QAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiB;AACfvB,yBAAuBA,qBADR;AAEfK,gCAA8BA,4BAFf;AAGfQ,gCAA8BA,4BAHf;AAIfE,eAAaA,WAJE,EAAjB",
      "file": "assetPathUtils.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n'use strict';\n\nimport type {PackagerAsset} from '../../Libraries/Image/AssetRegistry';\n\n/**\n * FIXME: using number to represent discrete scale numbers is fragile in essence because of\n * floating point numbers imprecision.\n */\nfunction getAndroidAssetSuffix(scale: number): string {\n  switch (scale) {\n    case 0.75: return 'ldpi';\n    case 1: return 'mdpi';\n    case 1.5: return 'hdpi';\n    case 2: return 'xhdpi';\n    case 3: return 'xxhdpi';\n    case 4: return 'xxxhdpi';\n  }\n  throw new Error('no such scale');\n}\n\n// See https://developer.android.com/guide/topics/resources/drawable-resource.html\nconst drawableFileTypes = new Set([\n  'gif',\n  'jpeg',\n  'jpg',\n  'png',\n  'svg',\n  'webp',\n  'xml',\n]);\n\nfunction getAndroidResourceFolderName(asset: PackagerAsset, scale: number) {\n  if (!drawableFileTypes.has(asset.type)) {\n    return 'raw';\n  }\n  var suffix = getAndroidAssetSuffix(scale);\n  if (!suffix) {\n    throw new Error(\n      'Don\\'t know which android drawable suffix to use for asset: ' +\n      JSON.stringify(asset)\n    );\n  }\n  const androidFolder = 'drawable-' + suffix;\n  return androidFolder;\n}\n\nfunction getAndroidResourceIdentifier(asset: PackagerAsset) {\n  var folderPath = getBasePath(asset);\n  return (folderPath + '/' + asset.name)\n    .toLowerCase()\n    .replace(/\\//g, '_')           // Encode folder structure in file name\n    .replace(/([^a-z0-9_])/g, '')  // Remove illegal chars\n    .replace(/^assets_/, '');      // Remove \"assets_\" prefix\n}\n\nfunction getBasePath(asset: PackagerAsset) {\n  var basePath = asset.httpServerLocation;\n  if (basePath[0] === '/') {\n    basePath = basePath.substr(1);\n  }\n  return basePath;\n}\n\nmodule.exports = {\n  getAndroidAssetSuffix: getAndroidAssetSuffix,\n  getAndroidResourceFolderName: getAndroidResourceFolderName,\n  getAndroidResourceIdentifier: getAndroidResourceIdentifier,\n  getBasePath: getBasePath\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/getAssetDestPathIOS.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../../Libraries/Image/AssetRegistry",
            "imported": [
              "PackagerAsset"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "PackagerAsset",
                "local": "PackagerAsset"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/getAssetDestPathIOS.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/getAssetDestPathIOS.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "getAssetDestPathIOS.js",
      "sourceFileName": "getAssetDestPathIOS.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "getAssetDestPathIOS"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nconst path = require('path');\n\n\n\nfunction getAssetDestPathIOS(asset, scale) {\n  const suffix = scale === 1 ? '' : '@' + scale + 'x';\n  const fileName = asset.name + suffix + '.' + asset.type;\n  return path.join(asset.httpServerLocation.substr(1), fileName);\n}\n\nmodule.exports = getAssetDestPathIOS;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldEFzc2V0RGVzdFBhdGhJT1MuanMiXSwibmFtZXMiOlsicGF0aCIsInJlcXVpcmUiLCJnZXRBc3NldERlc3RQYXRoSU9TIiwiYXNzZXQiLCJzY2FsZSIsInN1ZmZpeCIsImZpbGVOYW1lIiwibmFtZSIsInR5cGUiLCJqb2luIiwiaHR0cFNlcnZlckxvY2F0aW9uIiwic3Vic3RyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0FBV0E7O0FBRUEsTUFBTUEsT0FBT0MsUUFBUSxNQUFSLENBQWI7Ozs7QUFJQSxTQUFTQyxtQkFBVCxDQUE2QkMsS0FBN0IsRUFBbURDLEtBQW5ELEVBQTBFO0FBQ3hFLFFBQU1DLFNBQVNELFVBQVUsQ0FBVixHQUFjLEVBQWQsR0FBbUIsTUFBTUEsS0FBTixHQUFjLEdBQWhEO0FBQ0EsUUFBTUUsV0FBV0gsTUFBTUksSUFBTixHQUFhRixNQUFiLEdBQXNCLEdBQXRCLEdBQTRCRixNQUFNSyxJQUFuRDtBQUNBLFNBQU9SLEtBQUtTLElBQUwsQ0FBVU4sTUFBTU8sa0JBQU4sQ0FBeUJDLE1BQXpCLENBQWdDLENBQWhDLENBQVYsRUFBOENMLFFBQTlDLENBQVA7QUFDRDs7QUFFRE0sT0FBT0MsT0FBUCxHQUFpQlgsbUJBQWpCIiwiZmlsZSI6ImdldEFzc2V0RGVzdFBhdGhJT1MuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvYnVuZGxlIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICpcbiAqIEBmbG93XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG5pbXBvcnQgdHlwZSB7UGFja2FnZXJBc3NldH0gZnJvbSAnLi4vLi4vTGlicmFyaWVzL0ltYWdlL0Fzc2V0UmVnaXN0cnknO1xuXG5mdW5jdGlvbiBnZXRBc3NldERlc3RQYXRoSU9TKGFzc2V0OiBQYWNrYWdlckFzc2V0LCBzY2FsZTogbnVtYmVyKTogc3RyaW5nIHtcbiAgY29uc3Qgc3VmZml4ID0gc2NhbGUgPT09IDEgPyAnJyA6ICdAJyArIHNjYWxlICsgJ3gnO1xuICBjb25zdCBmaWxlTmFtZSA9IGFzc2V0Lm5hbWUgKyBzdWZmaXggKyAnLicgKyBhc3NldC50eXBlO1xuICByZXR1cm4gcGF0aC5qb2luKGFzc2V0Lmh0dHBTZXJ2ZXJMb2NhdGlvbi5zdWJzdHIoMSksIGZpbGVOYW1lKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRBc3NldERlc3RQYXRoSU9TO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "getAssetDestPathIOS.js"
      ],
      "names": [
        "path",
        "require",
        "getAssetDestPathIOS",
        "asset",
        "scale",
        "suffix",
        "fileName",
        "name",
        "type",
        "join",
        "httpServerLocation",
        "substr",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;AAWA;;AAEA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;;;;AAIA,SAASC,mBAAT,CAA6BC,KAA7B,EAAmDC,KAAnD,EAA0E;AACxE,QAAMC,SAASD,UAAU,CAAV,GAAc,EAAd,GAAmB,MAAMA,KAAN,GAAc,GAAhD;AACA,QAAME,WAAWH,MAAMI,IAAN,GAAaF,MAAb,GAAsB,GAAtB,GAA4BF,MAAMK,IAAnD;AACA,SAAOR,KAAKS,IAAL,CAAUN,MAAMO,kBAAN,CAAyBC,MAAzB,CAAgC,CAAhC,CAAV,EAA8CL,QAA9C,CAAP;AACD;;AAEDM,OAAOC,OAAP,GAAiBX,mBAAjB",
      "file": "getAssetDestPathIOS.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n'use strict';\n\nconst path = require('path');\n\nimport type {PackagerAsset} from '../../Libraries/Image/AssetRegistry';\n\nfunction getAssetDestPathIOS(asset: PackagerAsset, scale: number): string {\n  const suffix = scale === 1 ? '' : '@' + scale + 'x';\n  const fileName = asset.name + suffix + '.' + asset.type;\n  return path.join(asset.httpServerLocation.substr(1), fileName);\n}\n\nmodule.exports = getAssetDestPathIOS;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/bundleCommandLineArgs.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/bundleCommandLineArgs.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/bundleCommandLineArgs.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "bundleCommandLineArgs.js",
      "sourceFileName": "bundleCommandLineArgs.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "bundleCommandLineArgs"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nmodule.exports = [\n{\n  command: '--entry-file <path>',\n  description: 'Path to the root JS file, either absolute or relative to JS root' },\n{\n  command: '--platform [string]',\n  description: 'Either \"ios\" or \"android\"',\n  default: 'ios' },\n{\n  command: '--transformer [string]',\n  description: 'Specify a custom transformer to be used' },\n{\n  command: '--dev [boolean]',\n  description: 'If false, warnings are disabled and the bundle is minified',\n  parse: val => val === 'false' ? false : true,\n  default: true },\n{\n  command: '--bundle-output <string>',\n  description: 'File name where to store the resulting bundle, ex. /tmp/groups.bundle' },\n{\n  command: '--bundle-encoding [string]',\n  description: 'Encoding the bundle should be written in (https://nodejs.org/api/buffer.html#buffer_buffer).',\n  default: 'utf8' },\n{\n  command: '--max-workers [number]',\n  description: 'Specifies the maximum number of workers the worker-pool ' +\n  'will spawn for transforming files. This defaults to the number of the ' +\n  'cores available on your machine.',\n  parse: workers => Number(workers) },\n{\n  command: '--sourcemap-output [string]',\n  description: 'File name where to store the sourcemap file for resulting bundle, ex. /tmp/groups.map' },\n{\n  command: '--sourcemap-sources-root [string]',\n  description: 'Path to make sourcemap\\'s sources entries relative to, ex. /root/dir' },\n{\n  command: '--sourcemap-use-absolute-path',\n  description: 'Report SourceMapURL using its full path',\n  default: false },\n{\n  command: '--assets-dest [string]',\n  description: 'Directory name where to store assets referenced in the bundle' },\n{\n  command: '--verbose',\n  description: 'Enables logging',\n  default: false },\n{\n  command: '--reset-cache',\n  description: 'Removes cached files',\n  default: false },\n{\n  command: '--read-global-cache',\n  description: 'Try to fetch transformed JS code from the global cache, if configured.',\n  default: false }];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1bmRsZUNvbW1hbmRMaW5lQXJncy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY29tbWFuZCIsImRlc2NyaXB0aW9uIiwiZGVmYXVsdCIsInBhcnNlIiwidmFsIiwid29ya2VycyIsIk51bWJlciJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUFBLE9BQU9DLE9BQVAsR0FBaUI7QUFDZjtBQUNFQyxXQUFTLHFCQURYO0FBRUVDLGVBQWEsa0VBRmYsRUFEZTtBQUlaO0FBQ0RELFdBQVMscUJBRFI7QUFFREMsZUFBYSwyQkFGWjtBQUdEQyxXQUFTLEtBSFIsRUFKWTtBQVFaO0FBQ0RGLFdBQVMsd0JBRFI7QUFFREMsZUFBYSx5Q0FGWixFQVJZO0FBV1o7QUFDREQsV0FBUyxpQkFEUjtBQUVEQyxlQUFhLDREQUZaO0FBR0RFLFNBQVFDLEdBQUQsSUFBU0EsUUFBUSxPQUFSLEdBQWtCLEtBQWxCLEdBQTBCLElBSHpDO0FBSURGLFdBQVMsSUFKUixFQVhZO0FBZ0JaO0FBQ0RGLFdBQVMsMEJBRFI7QUFFREMsZUFBYSx1RUFGWixFQWhCWTtBQW1CWjtBQUNERCxXQUFTLDRCQURSO0FBRURDLGVBQWEsOEZBRlo7QUFHREMsV0FBUyxNQUhSLEVBbkJZO0FBdUJaO0FBQ0RGLFdBQVMsd0JBRFI7QUFFREMsZUFBYTtBQUNYLDBFQURXO0FBRVgsb0NBSkQ7QUFLREUsU0FBUUUsT0FBRCxJQUFxQkMsT0FBT0QsT0FBUCxDQUwzQixFQXZCWTtBQTZCWjtBQUNETCxXQUFTLDZCQURSO0FBRURDLGVBQWEsdUZBRlosRUE3Qlk7QUFnQ1o7QUFDREQsV0FBUyxtQ0FEUjtBQUVEQyxlQUFhLHNFQUZaLEVBaENZO0FBbUNaO0FBQ0RELFdBQVMsK0JBRFI7QUFFREMsZUFBYSx5Q0FGWjtBQUdEQyxXQUFTLEtBSFIsRUFuQ1k7QUF1Q1o7QUFDREYsV0FBUyx3QkFEUjtBQUVEQyxlQUFhLCtEQUZaLEVBdkNZO0FBMENaO0FBQ0RELFdBQVMsV0FEUjtBQUVEQyxlQUFhLGlCQUZaO0FBR0RDLFdBQVMsS0FIUixFQTFDWTtBQThDWjtBQUNERixXQUFTLGVBRFI7QUFFREMsZUFBYSxzQkFGWjtBQUdEQyxXQUFTLEtBSFIsRUE5Q1k7QUFrRFo7QUFDREYsV0FBUyxxQkFEUjtBQUVEQyxlQUFhLHdFQUZaO0FBR0RDLFdBQVMsS0FIUixFQWxEWSxDQUFqQiIsImZpbGUiOiJidW5kbGVDb21tYW5kTGluZUFyZ3MuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvYnVuZGxlIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG4ndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gW1xuICB7XG4gICAgY29tbWFuZDogJy0tZW50cnktZmlsZSA8cGF0aD4nLFxuICAgIGRlc2NyaXB0aW9uOiAnUGF0aCB0byB0aGUgcm9vdCBKUyBmaWxlLCBlaXRoZXIgYWJzb2x1dGUgb3IgcmVsYXRpdmUgdG8gSlMgcm9vdCcsXG4gIH0sIHtcbiAgICBjb21tYW5kOiAnLS1wbGF0Zm9ybSBbc3RyaW5nXScsXG4gICAgZGVzY3JpcHRpb246ICdFaXRoZXIgXCJpb3NcIiBvciBcImFuZHJvaWRcIicsXG4gICAgZGVmYXVsdDogJ2lvcycsXG4gIH0sIHtcbiAgICBjb21tYW5kOiAnLS10cmFuc2Zvcm1lciBbc3RyaW5nXScsXG4gICAgZGVzY3JpcHRpb246ICdTcGVjaWZ5IGEgY3VzdG9tIHRyYW5zZm9ybWVyIHRvIGJlIHVzZWQnLFxuICB9LCB7XG4gICAgY29tbWFuZDogJy0tZGV2IFtib29sZWFuXScsXG4gICAgZGVzY3JpcHRpb246ICdJZiBmYWxzZSwgd2FybmluZ3MgYXJlIGRpc2FibGVkIGFuZCB0aGUgYnVuZGxlIGlzIG1pbmlmaWVkJyxcbiAgICBwYXJzZTogKHZhbCkgPT4gdmFsID09PSAnZmFsc2UnID8gZmFsc2UgOiB0cnVlLFxuICAgIGRlZmF1bHQ6IHRydWUsXG4gIH0sIHtcbiAgICBjb21tYW5kOiAnLS1idW5kbGUtb3V0cHV0IDxzdHJpbmc+JyxcbiAgICBkZXNjcmlwdGlvbjogJ0ZpbGUgbmFtZSB3aGVyZSB0byBzdG9yZSB0aGUgcmVzdWx0aW5nIGJ1bmRsZSwgZXguIC90bXAvZ3JvdXBzLmJ1bmRsZScsXG4gIH0sIHtcbiAgICBjb21tYW5kOiAnLS1idW5kbGUtZW5jb2RpbmcgW3N0cmluZ10nLFxuICAgIGRlc2NyaXB0aW9uOiAnRW5jb2RpbmcgdGhlIGJ1bmRsZSBzaG91bGQgYmUgd3JpdHRlbiBpbiAoaHR0cHM6Ly9ub2RlanMub3JnL2FwaS9idWZmZXIuaHRtbCNidWZmZXJfYnVmZmVyKS4nLFxuICAgIGRlZmF1bHQ6ICd1dGY4JyxcbiAgfSwge1xuICAgIGNvbW1hbmQ6ICctLW1heC13b3JrZXJzIFtudW1iZXJdJyxcbiAgICBkZXNjcmlwdGlvbjogJ1NwZWNpZmllcyB0aGUgbWF4aW11bSBudW1iZXIgb2Ygd29ya2VycyB0aGUgd29ya2VyLXBvb2wgJyArXG4gICAgICAnd2lsbCBzcGF3biBmb3IgdHJhbnNmb3JtaW5nIGZpbGVzLiBUaGlzIGRlZmF1bHRzIHRvIHRoZSBudW1iZXIgb2YgdGhlICcgK1xuICAgICAgJ2NvcmVzIGF2YWlsYWJsZSBvbiB5b3VyIG1hY2hpbmUuJyxcbiAgICBwYXJzZTogKHdvcmtlcnM6IHN0cmluZykgPT4gTnVtYmVyKHdvcmtlcnMpLFxuICB9LCB7XG4gICAgY29tbWFuZDogJy0tc291cmNlbWFwLW91dHB1dCBbc3RyaW5nXScsXG4gICAgZGVzY3JpcHRpb246ICdGaWxlIG5hbWUgd2hlcmUgdG8gc3RvcmUgdGhlIHNvdXJjZW1hcCBmaWxlIGZvciByZXN1bHRpbmcgYnVuZGxlLCBleC4gL3RtcC9ncm91cHMubWFwJyxcbiAgfSwge1xuICAgIGNvbW1hbmQ6ICctLXNvdXJjZW1hcC1zb3VyY2VzLXJvb3QgW3N0cmluZ10nLFxuICAgIGRlc2NyaXB0aW9uOiAnUGF0aCB0byBtYWtlIHNvdXJjZW1hcFxcJ3Mgc291cmNlcyBlbnRyaWVzIHJlbGF0aXZlIHRvLCBleC4gL3Jvb3QvZGlyJyxcbiAgfSwge1xuICAgIGNvbW1hbmQ6ICctLXNvdXJjZW1hcC11c2UtYWJzb2x1dGUtcGF0aCcsXG4gICAgZGVzY3JpcHRpb246ICdSZXBvcnQgU291cmNlTWFwVVJMIHVzaW5nIGl0cyBmdWxsIHBhdGgnLFxuICAgIGRlZmF1bHQ6IGZhbHNlLFxuICB9LCB7XG4gICAgY29tbWFuZDogJy0tYXNzZXRzLWRlc3QgW3N0cmluZ10nLFxuICAgIGRlc2NyaXB0aW9uOiAnRGlyZWN0b3J5IG5hbWUgd2hlcmUgdG8gc3RvcmUgYXNzZXRzIHJlZmVyZW5jZWQgaW4gdGhlIGJ1bmRsZScsXG4gIH0sIHtcbiAgICBjb21tYW5kOiAnLS12ZXJib3NlJyxcbiAgICBkZXNjcmlwdGlvbjogJ0VuYWJsZXMgbG9nZ2luZycsXG4gICAgZGVmYXVsdDogZmFsc2UsXG4gIH0sIHtcbiAgICBjb21tYW5kOiAnLS1yZXNldC1jYWNoZScsXG4gICAgZGVzY3JpcHRpb246ICdSZW1vdmVzIGNhY2hlZCBmaWxlcycsXG4gICAgZGVmYXVsdDogZmFsc2UsXG4gIH0sIHtcbiAgICBjb21tYW5kOiAnLS1yZWFkLWdsb2JhbC1jYWNoZScsXG4gICAgZGVzY3JpcHRpb246ICdUcnkgdG8gZmV0Y2ggdHJhbnNmb3JtZWQgSlMgY29kZSBmcm9tIHRoZSBnbG9iYWwgY2FjaGUsIGlmIGNvbmZpZ3VyZWQuJyxcbiAgICBkZWZhdWx0OiBmYWxzZSxcbiAgfSxcbl07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "bundleCommandLineArgs.js"
      ],
      "names": [
        "module",
        "exports",
        "command",
        "description",
        "default",
        "parse",
        "val",
        "workers",
        "Number"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEAA,OAAOC,OAAP,GAAiB;AACf;AACEC,WAAS,qBADX;AAEEC,eAAa,kEAFf,EADe;AAIZ;AACDD,WAAS,qBADR;AAEDC,eAAa,2BAFZ;AAGDC,WAAS,KAHR,EAJY;AAQZ;AACDF,WAAS,wBADR;AAEDC,eAAa,yCAFZ,EARY;AAWZ;AACDD,WAAS,iBADR;AAEDC,eAAa,4DAFZ;AAGDE,SAAQC,GAAD,IAASA,QAAQ,OAAR,GAAkB,KAAlB,GAA0B,IAHzC;AAIDF,WAAS,IAJR,EAXY;AAgBZ;AACDF,WAAS,0BADR;AAEDC,eAAa,uEAFZ,EAhBY;AAmBZ;AACDD,WAAS,4BADR;AAEDC,eAAa,8FAFZ;AAGDC,WAAS,MAHR,EAnBY;AAuBZ;AACDF,WAAS,wBADR;AAEDC,eAAa;AACX,0EADW;AAEX,oCAJD;AAKDE,SAAQE,OAAD,IAAqBC,OAAOD,OAAP,CAL3B,EAvBY;AA6BZ;AACDL,WAAS,6BADR;AAEDC,eAAa,uFAFZ,EA7BY;AAgCZ;AACDD,WAAS,mCADR;AAEDC,eAAa,sEAFZ,EAhCY;AAmCZ;AACDD,WAAS,+BADR;AAEDC,eAAa,yCAFZ;AAGDC,WAAS,KAHR,EAnCY;AAuCZ;AACDF,WAAS,wBADR;AAEDC,eAAa,+DAFZ,EAvCY;AA0CZ;AACDD,WAAS,WADR;AAEDC,eAAa,iBAFZ;AAGDC,WAAS,KAHR,EA1CY;AA8CZ;AACDF,WAAS,eADR;AAEDC,eAAa,sBAFZ;AAGDC,WAAS,KAHR,EA9CY;AAkDZ;AACDF,WAAS,qBADR;AAEDC,eAAa,wEAFZ;AAGDC,WAAS,KAHR,EAlDY,CAAjB",
      "file": "bundleCommandLineArgs.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nmodule.exports = [\n  {\n    command: '--entry-file <path>',\n    description: 'Path to the root JS file, either absolute or relative to JS root',\n  }, {\n    command: '--platform [string]',\n    description: 'Either \"ios\" or \"android\"',\n    default: 'ios',\n  }, {\n    command: '--transformer [string]',\n    description: 'Specify a custom transformer to be used',\n  }, {\n    command: '--dev [boolean]',\n    description: 'If false, warnings are disabled and the bundle is minified',\n    parse: (val) => val === 'false' ? false : true,\n    default: true,\n  }, {\n    command: '--bundle-output <string>',\n    description: 'File name where to store the resulting bundle, ex. /tmp/groups.bundle',\n  }, {\n    command: '--bundle-encoding [string]',\n    description: 'Encoding the bundle should be written in (https://nodejs.org/api/buffer.html#buffer_buffer).',\n    default: 'utf8',\n  }, {\n    command: '--max-workers [number]',\n    description: 'Specifies the maximum number of workers the worker-pool ' +\n      'will spawn for transforming files. This defaults to the number of the ' +\n      'cores available on your machine.',\n    parse: (workers: string) => Number(workers),\n  }, {\n    command: '--sourcemap-output [string]',\n    description: 'File name where to store the sourcemap file for resulting bundle, ex. /tmp/groups.map',\n  }, {\n    command: '--sourcemap-sources-root [string]',\n    description: 'Path to make sourcemap\\'s sources entries relative to, ex. /root/dir',\n  }, {\n    command: '--sourcemap-use-absolute-path',\n    description: 'Report SourceMapURL using its full path',\n    default: false,\n  }, {\n    command: '--assets-dest [string]',\n    description: 'Directory name where to store assets referenced in the bundle',\n  }, {\n    command: '--verbose',\n    description: 'Enables logging',\n    default: false,\n  }, {\n    command: '--reset-cache',\n    description: 'Removes cached files',\n    default: false,\n  }, {\n    command: '--read-global-cache',\n    description: 'Try to fetch transformed JS code from the global cache, if configured.',\n    default: false,\n  },\n];\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/unbundle.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/unbundle.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle/unbundle.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "unbundle.js",
      "sourceFileName": "unbundle.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "unbundle"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst bundleWithOutput = require('./bundle').withOutput;\nconst bundleCommandLineArgs = require('./bundleCommandLineArgs');\nconst outputUnbundle = require('metro/src/shared/output/unbundle');\n\n/**\n                                                                     * Builds the bundle starting to look for dependencies at the given entry path.\n                                                                     */\nfunction unbundle(argv, config, args, packagerInstance) {\n  return bundleWithOutput(argv, config, args, outputUnbundle, packagerInstance);\n}\n\nmodule.exports = {\n  name: 'unbundle',\n  description: 'builds javascript as \"unbundle\" for offline use',\n  func: unbundle,\n  options: bundleCommandLineArgs.concat({\n    command: '--indexed-unbundle',\n    description: 'Force indexed unbundle file format, even when building for android',\n    default: false }) };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuYnVuZGxlLmpzIl0sIm5hbWVzIjpbImJ1bmRsZVdpdGhPdXRwdXQiLCJyZXF1aXJlIiwid2l0aE91dHB1dCIsImJ1bmRsZUNvbW1hbmRMaW5lQXJncyIsIm91dHB1dFVuYnVuZGxlIiwidW5idW5kbGUiLCJhcmd2IiwiY29uZmlnIiwiYXJncyIsInBhY2thZ2VySW5zdGFuY2UiLCJtb2R1bGUiLCJleHBvcnRzIiwibmFtZSIsImRlc2NyaXB0aW9uIiwiZnVuYyIsIm9wdGlvbnMiLCJjb25jYXQiLCJjb21tYW5kIiwiZGVmYXVsdCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUEsTUFBTUEsbUJBQW1CQyxRQUFRLFVBQVIsRUFBb0JDLFVBQTdDO0FBQ0EsTUFBTUMsd0JBQXdCRixRQUFRLHlCQUFSLENBQTlCO0FBQ0EsTUFBTUcsaUJBQWlCSCxRQUFRLGtDQUFSLENBQXZCOztBQUVBOzs7QUFHQSxTQUFTSSxRQUFULENBQWtCQyxJQUFsQixFQUF3QkMsTUFBeEIsRUFBZ0NDLElBQWhDLEVBQXNDQyxnQkFBdEMsRUFBd0Q7QUFDdEQsU0FBT1QsaUJBQWlCTSxJQUFqQixFQUF1QkMsTUFBdkIsRUFBK0JDLElBQS9CLEVBQXFDSixjQUFyQyxFQUFxREssZ0JBQXJELENBQVA7QUFDRDs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQjtBQUNmQyxRQUFNLFVBRFM7QUFFZkMsZUFBYSxpREFGRTtBQUdmQyxRQUFNVCxRQUhTO0FBSWZVLFdBQVNaLHNCQUFzQmEsTUFBdEIsQ0FBNkI7QUFDcENDLGFBQVMsb0JBRDJCO0FBRXBDSixpQkFBYSxvRUFGdUI7QUFHcENLLGFBQVMsS0FIMkIsRUFBN0IsQ0FKTSxFQUFqQiIsImZpbGUiOiJ1bmJ1bmRsZS5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9idW5kbGUiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgYnVuZGxlV2l0aE91dHB1dCA9IHJlcXVpcmUoJy4vYnVuZGxlJykud2l0aE91dHB1dDtcbmNvbnN0IGJ1bmRsZUNvbW1hbmRMaW5lQXJncyA9IHJlcXVpcmUoJy4vYnVuZGxlQ29tbWFuZExpbmVBcmdzJyk7XG5jb25zdCBvdXRwdXRVbmJ1bmRsZSA9IHJlcXVpcmUoJ21ldHJvL3NyYy9zaGFyZWQvb3V0cHV0L3VuYnVuZGxlJyk7XG5cbi8qKlxuICogQnVpbGRzIHRoZSBidW5kbGUgc3RhcnRpbmcgdG8gbG9vayBmb3IgZGVwZW5kZW5jaWVzIGF0IHRoZSBnaXZlbiBlbnRyeSBwYXRoLlxuICovXG5mdW5jdGlvbiB1bmJ1bmRsZShhcmd2LCBjb25maWcsIGFyZ3MsIHBhY2thZ2VySW5zdGFuY2UpIHtcbiAgcmV0dXJuIGJ1bmRsZVdpdGhPdXRwdXQoYXJndiwgY29uZmlnLCBhcmdzLCBvdXRwdXRVbmJ1bmRsZSwgcGFja2FnZXJJbnN0YW5jZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBuYW1lOiAndW5idW5kbGUnLFxuICBkZXNjcmlwdGlvbjogJ2J1aWxkcyBqYXZhc2NyaXB0IGFzIFwidW5idW5kbGVcIiBmb3Igb2ZmbGluZSB1c2UnLFxuICBmdW5jOiB1bmJ1bmRsZSxcbiAgb3B0aW9uczogYnVuZGxlQ29tbWFuZExpbmVBcmdzLmNvbmNhdCh7XG4gICAgY29tbWFuZDogJy0taW5kZXhlZC11bmJ1bmRsZScsXG4gICAgZGVzY3JpcHRpb246ICdGb3JjZSBpbmRleGVkIHVuYnVuZGxlIGZpbGUgZm9ybWF0LCBldmVuIHdoZW4gYnVpbGRpbmcgZm9yIGFuZHJvaWQnLFxuICAgIGRlZmF1bHQ6IGZhbHNlLFxuICB9KSxcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "unbundle.js"
      ],
      "names": [
        "bundleWithOutput",
        "require",
        "withOutput",
        "bundleCommandLineArgs",
        "outputUnbundle",
        "unbundle",
        "argv",
        "config",
        "args",
        "packagerInstance",
        "module",
        "exports",
        "name",
        "description",
        "func",
        "options",
        "concat",
        "command",
        "default"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,mBAAmBC,QAAQ,UAAR,EAAoBC,UAA7C;AACA,MAAMC,wBAAwBF,QAAQ,yBAAR,CAA9B;AACA,MAAMG,iBAAiBH,QAAQ,kCAAR,CAAvB;;AAEA;;;AAGA,SAASI,QAAT,CAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,IAAhC,EAAsCC,gBAAtC,EAAwD;AACtD,SAAOT,iBAAiBM,IAAjB,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCJ,cAArC,EAAqDK,gBAArD,CAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiB;AACfC,QAAM,UADS;AAEfC,eAAa,iDAFE;AAGfC,QAAMT,QAHS;AAIfU,WAASZ,sBAAsBa,MAAtB,CAA6B;AACpCC,aAAS,oBAD2B;AAEpCJ,iBAAa,oEAFuB;AAGpCK,aAAS,KAH2B,EAA7B,CAJM,EAAjB",
      "file": "unbundle.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/bundle",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst bundleWithOutput = require('./bundle').withOutput;\nconst bundleCommandLineArgs = require('./bundleCommandLineArgs');\nconst outputUnbundle = require('metro/src/shared/output/unbundle');\n\n/**\n * Builds the bundle starting to look for dependencies at the given entry path.\n */\nfunction unbundle(argv, config, args, packagerInstance) {\n  return bundleWithOutput(argv, config, args, outputUnbundle, packagerInstance);\n}\n\nmodule.exports = {\n  name: 'unbundle',\n  description: 'builds javascript as \"unbundle\" for offline use',\n  func: unbundle,\n  options: bundleCommandLineArgs.concat({\n    command: '--indexed-unbundle',\n    description: 'Force indexed unbundle file format, even when building for android',\n    default: false,\n  }),\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/eject/eject.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/eject\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/eject/eject.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/eject/eject.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "eject.js",
      "sourceFileName": "eject.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/eject",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/eject",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "eject"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst copyProjectTemplateAndReplace = require('../generator/copyProjectTemplateAndReplace');\nconst path = require('path');\nconst fs = require('fs');\n\n/**\n                           * The eject command re-creates the `android` and `ios` native folders. Because native code can be\n                           * difficult to maintain, this new script allows an `app.json` to be defined for the project, which\n                           * is used to configure the native app.\n                           *\n                           * The `app.json` config may contain the following keys:\n                           *\n                           * - `name` - The short name used for the project, should be TitleCase\n                           * - `displayName` - The app's name on the home screen\n                           */\n\nfunction eject() {\n\n  const doesIOSExist = fs.existsSync(path.resolve('ios'));\n  const doesAndroidExist = fs.existsSync(path.resolve('android'));\n  if (doesIOSExist && doesAndroidExist) {\n    console.error(\n    'Both the iOS and Android folders already exist! Please delete `ios` and/or `android` ' +\n    'before ejecting.');\n\n    process.exit(1);\n  }\n\n  let appConfig = null;\n  try {\n    appConfig = require(path.resolve('app.json'));\n  } catch (e) {\n    console.error(\n    'Eject requires an `app.json` config file to be located at ' +\n    `${path.resolve('app.json')}, and it must at least specify a \\`name\\` for the project ` +\n    'name, and a `displayName` for the app\\'s home screen label.');\n\n    process.exit(1);\n  }\n\n  const appName = appConfig.name;\n  if (!appName) {\n    console.error(\n    'App `name` must be defined in the `app.json` config file to define the project name. ' +\n    'It must not contain any spaces or dashes.');\n\n    process.exit(1);\n  }\n  const displayName = appConfig.displayName;\n  if (!displayName) {\n    console.error(\n    'App `displayName` must be defined in the `app.json` config file, to define the label ' +\n    'of the app on the home screen.');\n\n    process.exit(1);\n  }\n\n  const templateOptions = { displayName };\n\n  if (!doesIOSExist) {\n    console.log('Generating the iOS folder.');\n    copyProjectTemplateAndReplace(\n    path.resolve('node_modules', 'react-native', 'local-cli', 'templates', 'HelloWorld', 'ios'),\n    path.resolve('ios'),\n    appName,\n    templateOptions);\n\n  }\n\n  if (!doesAndroidExist) {\n    console.log('Generating the Android folder.');\n    copyProjectTemplateAndReplace(\n    path.resolve('node_modules', 'react-native', 'local-cli', 'templates', 'HelloWorld', 'android'),\n    path.resolve('android'),\n    appName,\n    templateOptions);\n\n  }\n\n}\n\nmodule.exports = {\n  name: 'eject',\n  description: 'Re-create the iOS and Android folders and native code',\n  func: eject,\n  options: [] };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVqZWN0LmpzIl0sIm5hbWVzIjpbImNvcHlQcm9qZWN0VGVtcGxhdGVBbmRSZXBsYWNlIiwicmVxdWlyZSIsInBhdGgiLCJmcyIsImVqZWN0IiwiZG9lc0lPU0V4aXN0IiwiZXhpc3RzU3luYyIsInJlc29sdmUiLCJkb2VzQW5kcm9pZEV4aXN0IiwiY29uc29sZSIsImVycm9yIiwicHJvY2VzcyIsImV4aXQiLCJhcHBDb25maWciLCJlIiwiYXBwTmFtZSIsIm5hbWUiLCJkaXNwbGF5TmFtZSIsInRlbXBsYXRlT3B0aW9ucyIsImxvZyIsIm1vZHVsZSIsImV4cG9ydHMiLCJkZXNjcmlwdGlvbiIsImZ1bmMiLCJvcHRpb25zIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTs7QUFFQSxNQUFNQSxnQ0FBZ0NDLFFBQVEsNENBQVIsQ0FBdEM7QUFDQSxNQUFNQyxPQUFPRCxRQUFRLE1BQVIsQ0FBYjtBQUNBLE1BQU1FLEtBQUtGLFFBQVEsSUFBUixDQUFYOztBQUVBOzs7Ozs7Ozs7OztBQVdBLFNBQVNHLEtBQVQsR0FBaUI7O0FBRWYsUUFBTUMsZUFBZUYsR0FBR0csVUFBSCxDQUFjSixLQUFLSyxPQUFMLENBQWEsS0FBYixDQUFkLENBQXJCO0FBQ0EsUUFBTUMsbUJBQW1CTCxHQUFHRyxVQUFILENBQWNKLEtBQUtLLE9BQUwsQ0FBYSxTQUFiLENBQWQsQ0FBekI7QUFDQSxNQUFJRixnQkFBZ0JHLGdCQUFwQixFQUFzQztBQUNwQ0MsWUFBUUMsS0FBUjtBQUNFO0FBQ0Esc0JBRkY7O0FBSUFDLFlBQVFDLElBQVIsQ0FBYSxDQUFiO0FBQ0Q7O0FBRUQsTUFBSUMsWUFBWSxJQUFoQjtBQUNBLE1BQUk7QUFDRkEsZ0JBQVlaLFFBQVFDLEtBQUtLLE9BQUwsQ0FBYSxVQUFiLENBQVIsQ0FBWjtBQUNELEdBRkQsQ0FFRSxPQUFPTyxDQUFQLEVBQVU7QUFDVkwsWUFBUUMsS0FBUjtBQUNFO0FBQ0MsT0FBRVIsS0FBS0ssT0FBTCxDQUFhLFVBQWIsQ0FBeUIsNERBRDVCO0FBRUEsaUVBSEY7O0FBS0FJLFlBQVFDLElBQVIsQ0FBYSxDQUFiO0FBQ0Q7O0FBRUQsUUFBTUcsVUFBVUYsVUFBVUcsSUFBMUI7QUFDQSxNQUFJLENBQUNELE9BQUwsRUFBYztBQUNaTixZQUFRQyxLQUFSO0FBQ0U7QUFDQSwrQ0FGRjs7QUFJQUMsWUFBUUMsSUFBUixDQUFhLENBQWI7QUFDRDtBQUNELFFBQU1LLGNBQWNKLFVBQVVJLFdBQTlCO0FBQ0EsTUFBSSxDQUFDQSxXQUFMLEVBQWtCO0FBQ2hCUixZQUFRQyxLQUFSO0FBQ0U7QUFDQSxvQ0FGRjs7QUFJQUMsWUFBUUMsSUFBUixDQUFhLENBQWI7QUFDRDs7QUFFRCxRQUFNTSxrQkFBa0IsRUFBRUQsV0FBRixFQUF4Qjs7QUFFQSxNQUFJLENBQUNaLFlBQUwsRUFBbUI7QUFDakJJLFlBQVFVLEdBQVIsQ0FBWSw0QkFBWjtBQUNBbkI7QUFDRUUsU0FBS0ssT0FBTCxDQUFhLGNBQWIsRUFBNkIsY0FBN0IsRUFBNkMsV0FBN0MsRUFBMEQsV0FBMUQsRUFBdUUsWUFBdkUsRUFBcUYsS0FBckYsQ0FERjtBQUVFTCxTQUFLSyxPQUFMLENBQWEsS0FBYixDQUZGO0FBR0VRLFdBSEY7QUFJRUcsbUJBSkY7O0FBTUQ7O0FBRUQsTUFBSSxDQUFDVixnQkFBTCxFQUF1QjtBQUNyQkMsWUFBUVUsR0FBUixDQUFZLGdDQUFaO0FBQ0FuQjtBQUNFRSxTQUFLSyxPQUFMLENBQWEsY0FBYixFQUE2QixjQUE3QixFQUE2QyxXQUE3QyxFQUEwRCxXQUExRCxFQUF1RSxZQUF2RSxFQUFxRixTQUFyRixDQURGO0FBRUVMLFNBQUtLLE9BQUwsQ0FBYSxTQUFiLENBRkY7QUFHRVEsV0FIRjtBQUlFRyxtQkFKRjs7QUFNRDs7QUFFRjs7QUFFREUsT0FBT0MsT0FBUCxHQUFpQjtBQUNmTCxRQUFNLE9BRFM7QUFFZk0sZUFBYSx1REFGRTtBQUdmQyxRQUFNbkIsS0FIUztBQUlmb0IsV0FBUyxFQUpNLEVBQWpCIiwiZmlsZSI6ImVqZWN0LmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2VqZWN0Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IGNvcHlQcm9qZWN0VGVtcGxhdGVBbmRSZXBsYWNlID0gcmVxdWlyZSgnLi4vZ2VuZXJhdG9yL2NvcHlQcm9qZWN0VGVtcGxhdGVBbmRSZXBsYWNlJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuXG4vKipcbiAqIFRoZSBlamVjdCBjb21tYW5kIHJlLWNyZWF0ZXMgdGhlIGBhbmRyb2lkYCBhbmQgYGlvc2AgbmF0aXZlIGZvbGRlcnMuIEJlY2F1c2UgbmF0aXZlIGNvZGUgY2FuIGJlXG4gKiBkaWZmaWN1bHQgdG8gbWFpbnRhaW4sIHRoaXMgbmV3IHNjcmlwdCBhbGxvd3MgYW4gYGFwcC5qc29uYCB0byBiZSBkZWZpbmVkIGZvciB0aGUgcHJvamVjdCwgd2hpY2hcbiAqIGlzIHVzZWQgdG8gY29uZmlndXJlIHRoZSBuYXRpdmUgYXBwLlxuICpcbiAqIFRoZSBgYXBwLmpzb25gIGNvbmZpZyBtYXkgY29udGFpbiB0aGUgZm9sbG93aW5nIGtleXM6XG4gKlxuICogLSBgbmFtZWAgLSBUaGUgc2hvcnQgbmFtZSB1c2VkIGZvciB0aGUgcHJvamVjdCwgc2hvdWxkIGJlIFRpdGxlQ2FzZVxuICogLSBgZGlzcGxheU5hbWVgIC0gVGhlIGFwcCdzIG5hbWUgb24gdGhlIGhvbWUgc2NyZWVuXG4gKi9cblxuZnVuY3Rpb24gZWplY3QoKSB7XG5cbiAgY29uc3QgZG9lc0lPU0V4aXN0ID0gZnMuZXhpc3RzU3luYyhwYXRoLnJlc29sdmUoJ2lvcycpKTtcbiAgY29uc3QgZG9lc0FuZHJvaWRFeGlzdCA9IGZzLmV4aXN0c1N5bmMocGF0aC5yZXNvbHZlKCdhbmRyb2lkJykpO1xuICBpZiAoZG9lc0lPU0V4aXN0ICYmIGRvZXNBbmRyb2lkRXhpc3QpIHtcbiAgICBjb25zb2xlLmVycm9yKFxuICAgICAgJ0JvdGggdGhlIGlPUyBhbmQgQW5kcm9pZCBmb2xkZXJzIGFscmVhZHkgZXhpc3QhIFBsZWFzZSBkZWxldGUgYGlvc2AgYW5kL29yIGBhbmRyb2lkYCAnICtcbiAgICAgICdiZWZvcmUgZWplY3RpbmcuJ1xuICAgICk7XG4gICAgcHJvY2Vzcy5leGl0KDEpO1xuICB9XG5cbiAgbGV0IGFwcENvbmZpZyA9IG51bGw7XG4gIHRyeSB7XG4gICAgYXBwQ29uZmlnID0gcmVxdWlyZShwYXRoLnJlc29sdmUoJ2FwcC5qc29uJykpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5lcnJvcihcbiAgICAgICdFamVjdCByZXF1aXJlcyBhbiBgYXBwLmpzb25gIGNvbmZpZyBmaWxlIHRvIGJlIGxvY2F0ZWQgYXQgJyArXG4gICAgICBgJHtwYXRoLnJlc29sdmUoJ2FwcC5qc29uJyl9LCBhbmQgaXQgbXVzdCBhdCBsZWFzdCBzcGVjaWZ5IGEgXFxgbmFtZVxcYCBmb3IgdGhlIHByb2plY3QgYCArXG4gICAgICAnbmFtZSwgYW5kIGEgYGRpc3BsYXlOYW1lYCBmb3IgdGhlIGFwcFxcJ3MgaG9tZSBzY3JlZW4gbGFiZWwuJ1xuICAgICk7XG4gICAgcHJvY2Vzcy5leGl0KDEpO1xuICB9XG5cbiAgY29uc3QgYXBwTmFtZSA9IGFwcENvbmZpZy5uYW1lO1xuICBpZiAoIWFwcE5hbWUpIHtcbiAgICBjb25zb2xlLmVycm9yKFxuICAgICAgJ0FwcCBgbmFtZWAgbXVzdCBiZSBkZWZpbmVkIGluIHRoZSBgYXBwLmpzb25gIGNvbmZpZyBmaWxlIHRvIGRlZmluZSB0aGUgcHJvamVjdCBuYW1lLiAnICtcbiAgICAgICdJdCBtdXN0IG5vdCBjb250YWluIGFueSBzcGFjZXMgb3IgZGFzaGVzLidcbiAgICApO1xuICAgIHByb2Nlc3MuZXhpdCgxKTtcbiAgfVxuICBjb25zdCBkaXNwbGF5TmFtZSA9IGFwcENvbmZpZy5kaXNwbGF5TmFtZTtcbiAgaWYgKCFkaXNwbGF5TmFtZSkge1xuICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAnQXBwIGBkaXNwbGF5TmFtZWAgbXVzdCBiZSBkZWZpbmVkIGluIHRoZSBgYXBwLmpzb25gIGNvbmZpZyBmaWxlLCB0byBkZWZpbmUgdGhlIGxhYmVsICcgK1xuICAgICAgJ29mIHRoZSBhcHAgb24gdGhlIGhvbWUgc2NyZWVuLidcbiAgICApO1xuICAgIHByb2Nlc3MuZXhpdCgxKTtcbiAgfVxuXG4gIGNvbnN0IHRlbXBsYXRlT3B0aW9ucyA9IHsgZGlzcGxheU5hbWUgfTtcblxuICBpZiAoIWRvZXNJT1NFeGlzdCkge1xuICAgIGNvbnNvbGUubG9nKCdHZW5lcmF0aW5nIHRoZSBpT1MgZm9sZGVyLicpO1xuICAgIGNvcHlQcm9qZWN0VGVtcGxhdGVBbmRSZXBsYWNlKFxuICAgICAgcGF0aC5yZXNvbHZlKCdub2RlX21vZHVsZXMnLCAncmVhY3QtbmF0aXZlJywgJ2xvY2FsLWNsaScsICd0ZW1wbGF0ZXMnLCAnSGVsbG9Xb3JsZCcsICdpb3MnKSxcbiAgICAgIHBhdGgucmVzb2x2ZSgnaW9zJyksXG4gICAgICBhcHBOYW1lLFxuICAgICAgdGVtcGxhdGVPcHRpb25zXG4gICAgKTtcbiAgfVxuXG4gIGlmICghZG9lc0FuZHJvaWRFeGlzdCkge1xuICAgIGNvbnNvbGUubG9nKCdHZW5lcmF0aW5nIHRoZSBBbmRyb2lkIGZvbGRlci4nKTtcbiAgICBjb3B5UHJvamVjdFRlbXBsYXRlQW5kUmVwbGFjZShcbiAgICAgIHBhdGgucmVzb2x2ZSgnbm9kZV9tb2R1bGVzJywgJ3JlYWN0LW5hdGl2ZScsICdsb2NhbC1jbGknLCAndGVtcGxhdGVzJywgJ0hlbGxvV29ybGQnLCAnYW5kcm9pZCcpLFxuICAgICAgcGF0aC5yZXNvbHZlKCdhbmRyb2lkJyksXG4gICAgICBhcHBOYW1lLFxuICAgICAgdGVtcGxhdGVPcHRpb25zXG4gICAgKTtcbiAgfVxuXG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBuYW1lOiAnZWplY3QnLFxuICBkZXNjcmlwdGlvbjogJ1JlLWNyZWF0ZSB0aGUgaU9TIGFuZCBBbmRyb2lkIGZvbGRlcnMgYW5kIG5hdGl2ZSBjb2RlJyxcbiAgZnVuYzogZWplY3QsXG4gIG9wdGlvbnM6IFtdLFxufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "eject.js"
      ],
      "names": [
        "copyProjectTemplateAndReplace",
        "require",
        "path",
        "fs",
        "eject",
        "doesIOSExist",
        "existsSync",
        "resolve",
        "doesAndroidExist",
        "console",
        "error",
        "process",
        "exit",
        "appConfig",
        "e",
        "appName",
        "name",
        "displayName",
        "templateOptions",
        "log",
        "module",
        "exports",
        "description",
        "func",
        "options"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,gCAAgCC,QAAQ,4CAAR,CAAtC;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,KAAKF,QAAQ,IAAR,CAAX;;AAEA;;;;;;;;;;;AAWA,SAASG,KAAT,GAAiB;;AAEf,QAAMC,eAAeF,GAAGG,UAAH,CAAcJ,KAAKK,OAAL,CAAa,KAAb,CAAd,CAArB;AACA,QAAMC,mBAAmBL,GAAGG,UAAH,CAAcJ,KAAKK,OAAL,CAAa,SAAb,CAAd,CAAzB;AACA,MAAIF,gBAAgBG,gBAApB,EAAsC;AACpCC,YAAQC,KAAR;AACE;AACA,sBAFF;;AAIAC,YAAQC,IAAR,CAAa,CAAb;AACD;;AAED,MAAIC,YAAY,IAAhB;AACA,MAAI;AACFA,gBAAYZ,QAAQC,KAAKK,OAAL,CAAa,UAAb,CAAR,CAAZ;AACD,GAFD,CAEE,OAAOO,CAAP,EAAU;AACVL,YAAQC,KAAR;AACE;AACC,OAAER,KAAKK,OAAL,CAAa,UAAb,CAAyB,4DAD5B;AAEA,iEAHF;;AAKAI,YAAQC,IAAR,CAAa,CAAb;AACD;;AAED,QAAMG,UAAUF,UAAUG,IAA1B;AACA,MAAI,CAACD,OAAL,EAAc;AACZN,YAAQC,KAAR;AACE;AACA,+CAFF;;AAIAC,YAAQC,IAAR,CAAa,CAAb;AACD;AACD,QAAMK,cAAcJ,UAAUI,WAA9B;AACA,MAAI,CAACA,WAAL,EAAkB;AAChBR,YAAQC,KAAR;AACE;AACA,oCAFF;;AAIAC,YAAQC,IAAR,CAAa,CAAb;AACD;;AAED,QAAMM,kBAAkB,EAAED,WAAF,EAAxB;;AAEA,MAAI,CAACZ,YAAL,EAAmB;AACjBI,YAAQU,GAAR,CAAY,4BAAZ;AACAnB;AACEE,SAAKK,OAAL,CAAa,cAAb,EAA6B,cAA7B,EAA6C,WAA7C,EAA0D,WAA1D,EAAuE,YAAvE,EAAqF,KAArF,CADF;AAEEL,SAAKK,OAAL,CAAa,KAAb,CAFF;AAGEQ,WAHF;AAIEG,mBAJF;;AAMD;;AAED,MAAI,CAACV,gBAAL,EAAuB;AACrBC,YAAQU,GAAR,CAAY,gCAAZ;AACAnB;AACEE,SAAKK,OAAL,CAAa,cAAb,EAA6B,cAA7B,EAA6C,WAA7C,EAA0D,WAA1D,EAAuE,YAAvE,EAAqF,SAArF,CADF;AAEEL,SAAKK,OAAL,CAAa,SAAb,CAFF;AAGEQ,WAHF;AAIEG,mBAJF;;AAMD;;AAEF;;AAEDE,OAAOC,OAAP,GAAiB;AACfL,QAAM,OADS;AAEfM,eAAa,uDAFE;AAGfC,QAAMnB,KAHS;AAIfoB,WAAS,EAJM,EAAjB",
      "file": "eject.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/eject",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst copyProjectTemplateAndReplace = require('../generator/copyProjectTemplateAndReplace');\nconst path = require('path');\nconst fs = require('fs');\n\n/**\n * The eject command re-creates the `android` and `ios` native folders. Because native code can be\n * difficult to maintain, this new script allows an `app.json` to be defined for the project, which\n * is used to configure the native app.\n *\n * The `app.json` config may contain the following keys:\n *\n * - `name` - The short name used for the project, should be TitleCase\n * - `displayName` - The app's name on the home screen\n */\n\nfunction eject() {\n\n  const doesIOSExist = fs.existsSync(path.resolve('ios'));\n  const doesAndroidExist = fs.existsSync(path.resolve('android'));\n  if (doesIOSExist && doesAndroidExist) {\n    console.error(\n      'Both the iOS and Android folders already exist! Please delete `ios` and/or `android` ' +\n      'before ejecting.'\n    );\n    process.exit(1);\n  }\n\n  let appConfig = null;\n  try {\n    appConfig = require(path.resolve('app.json'));\n  } catch (e) {\n    console.error(\n      'Eject requires an `app.json` config file to be located at ' +\n      `${path.resolve('app.json')}, and it must at least specify a \\`name\\` for the project ` +\n      'name, and a `displayName` for the app\\'s home screen label.'\n    );\n    process.exit(1);\n  }\n\n  const appName = appConfig.name;\n  if (!appName) {\n    console.error(\n      'App `name` must be defined in the `app.json` config file to define the project name. ' +\n      'It must not contain any spaces or dashes.'\n    );\n    process.exit(1);\n  }\n  const displayName = appConfig.displayName;\n  if (!displayName) {\n    console.error(\n      'App `displayName` must be defined in the `app.json` config file, to define the label ' +\n      'of the app on the home screen.'\n    );\n    process.exit(1);\n  }\n\n  const templateOptions = { displayName };\n\n  if (!doesIOSExist) {\n    console.log('Generating the iOS folder.');\n    copyProjectTemplateAndReplace(\n      path.resolve('node_modules', 'react-native', 'local-cli', 'templates', 'HelloWorld', 'ios'),\n      path.resolve('ios'),\n      appName,\n      templateOptions\n    );\n  }\n\n  if (!doesAndroidExist) {\n    console.log('Generating the Android folder.');\n    copyProjectTemplateAndReplace(\n      path.resolve('node_modules', 'react-native', 'local-cli', 'templates', 'HelloWorld', 'android'),\n      path.resolve('android'),\n      appName,\n      templateOptions\n    );\n  }\n\n}\n\nmodule.exports = {\n  name: 'eject',\n  description: 'Re-create the iOS and Android folders and native code',\n  func: eject,\n  options: [],\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator/copyProjectTemplateAndReplace.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator/copyProjectTemplateAndReplace.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator/copyProjectTemplateAndReplace.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "copyProjectTemplateAndReplace.js",
      "sourceFileName": "copyProjectTemplateAndReplace.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "copyProjectTemplateAndReplace"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst chalk = require('chalk');\nconst copyAndReplace = require('../util/copyAndReplace');\nconst path = require('path');\nconst prompt = require('./promptSync')();\nconst walk = require('../util/walk');\n\n/**\n                                       * Util for creating a new React Native project.\n                                       * Copy the project from a template and use the correct project name in\n                                       * all files.\n                                       * @param srcPath e.g. '/Users/martin/AwesomeApp/node_modules/react-native/local-cli/templates/HelloWorld'\n                                       * @param destPath e.g. '/Users/martin/AwesomeApp'\n                                       * @param newProjectName e.g. 'AwesomeApp'\n                                       * @param options e.g. {\n                                       *          upgrade: true,\n                                       *          force: false,\n                                       *          displayName: 'Hello World',\n                                       *          ignorePaths: ['template/file/to/ignore.md'],\n                                       *        }\n                                       */\nfunction copyProjectTemplateAndReplace(srcPath, destPath, newProjectName, options) {\n  if (!srcPath) {throw new Error('Need a path to copy from');}\n  if (!destPath) {throw new Error('Need a path to copy to');}\n  if (!newProjectName) {throw new Error('Need a project name');}\n\n  options = options || {};\n\n  walk(srcPath).forEach(absoluteSrcFilePath => {\n\n    // 'react-native upgrade'\n    if (options.upgrade) {\n      // Don't upgrade these files\n      const fileName = path.basename(absoluteSrcFilePath);\n      // This also includes __tests__/index.*.js\n      if (fileName === 'index.ios.js') {return;}\n      if (fileName === 'index.android.js') {return;}\n      if (fileName === 'index.js') {return;}\n      if (fileName === 'App.js') {return;}\n    }\n\n    const relativeFilePath = path.relative(srcPath, absoluteSrcFilePath);\n    const relativeRenamedPath = dotFilePath(relativeFilePath).\n    replace(/HelloWorld/g, newProjectName).\n    replace(/helloworld/g, newProjectName.toLowerCase());\n\n    // Templates may contain files that we don't want to copy.\n    // Examples:\n    // - Dummy package.json file included in the template only for publishing to npm\n    // - Docs specific to the template (.md files)\n    if (options.ignorePaths) {\n      if (!Array.isArray(options.ignorePaths)) {\n        throw new Error('options.ignorePaths must be an array');\n      }\n      if (options.ignorePaths.some(ignorePath => ignorePath === relativeFilePath)) {\n        // Skip copying this file\n        return;\n      }\n    }\n\n    let contentChangedCallback = null;\n    if (options.upgrade && !options.force) {\n      contentChangedCallback = (_, contentChanged) => {\n        return upgradeFileContentChangedCallback(\n        absoluteSrcFilePath,\n        relativeRenamedPath,\n        contentChanged);\n\n      };\n    }\n    copyAndReplace(\n    absoluteSrcFilePath,\n    path.resolve(destPath, relativeRenamedPath),\n    {\n      'Hello App Display Name': options.displayName || newProjectName,\n      'HelloWorld': newProjectName,\n      'helloworld': newProjectName.toLowerCase() },\n\n    contentChangedCallback);\n\n  });\n}\n\n/**\n   * There are various dotfiles in the templates folder in the RN repo. We want\n   * these to be ignored by tools when working with React Native itself.\n   * Example: _babelrc file is ignored by Babel, renamed to .babelrc inside\n   *          a real app folder.\n   * This is especially important for .gitignore because npm has some special\n   * behavior of automatically renaming .gitignore to .npmignore.\n   */\nfunction dotFilePath(path) {\n  if (!path) {return path;}\n  return path.\n  replace('_gitignore', '.gitignore').\n  replace('_gitattributes', '.gitattributes').\n  replace('_babelrc', '.babelrc').\n  replace('_flowconfig', '.flowconfig').\n  replace('_buckconfig', '.buckconfig').\n  replace('_watchmanconfig', '.watchmanconfig');\n}\n\nfunction upgradeFileContentChangedCallback(\nabsoluteSrcFilePath,\nrelativeDestPath,\ncontentChanged)\n{\n  if (contentChanged === 'new') {\n    console.log(chalk.bold('new') + ' ' + relativeDestPath);\n    return 'overwrite';\n  } else if (contentChanged === 'changed') {\n    console.log(chalk.bold(relativeDestPath) + ' ' +\n    'has changed in the new version.\\nDo you want to keep your ' +\n    relativeDestPath + ' or replace it with the ' +\n    'latest version?\\nIf you ever made any changes ' +\n    'to this file, you\\'ll probably want to keep it.\\n' +\n    'You can see the new version here: ' + absoluteSrcFilePath + '\\n' +\n    'Do you want to replace ' + relativeDestPath + '? ' +\n    'Answer y to replace, n to keep your version: ');\n    const answer = prompt();\n    if (answer === 'y') {\n      console.log('Replacing ' + relativeDestPath);\n      return 'overwrite';\n    } else {\n      console.log('Keeping your ' + relativeDestPath);\n      return 'keep';\n    }\n  } else if (contentChanged === 'identical') {\n    return 'keep';\n  } else {\n    throw new Error(`Unkown file changed state: ${relativeDestPath}, ${contentChanged}`);\n  }\n}\n\nmodule.exports = copyProjectTemplateAndReplace;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcHlQcm9qZWN0VGVtcGxhdGVBbmRSZXBsYWNlLmpzIl0sIm5hbWVzIjpbImNoYWxrIiwicmVxdWlyZSIsImNvcHlBbmRSZXBsYWNlIiwicGF0aCIsInByb21wdCIsIndhbGsiLCJjb3B5UHJvamVjdFRlbXBsYXRlQW5kUmVwbGFjZSIsInNyY1BhdGgiLCJkZXN0UGF0aCIsIm5ld1Byb2plY3ROYW1lIiwib3B0aW9ucyIsIkVycm9yIiwiZm9yRWFjaCIsImFic29sdXRlU3JjRmlsZVBhdGgiLCJ1cGdyYWRlIiwiZmlsZU5hbWUiLCJiYXNlbmFtZSIsInJlbGF0aXZlRmlsZVBhdGgiLCJyZWxhdGl2ZSIsInJlbGF0aXZlUmVuYW1lZFBhdGgiLCJkb3RGaWxlUGF0aCIsInJlcGxhY2UiLCJ0b0xvd2VyQ2FzZSIsImlnbm9yZVBhdGhzIiwiQXJyYXkiLCJpc0FycmF5Iiwic29tZSIsImlnbm9yZVBhdGgiLCJjb250ZW50Q2hhbmdlZENhbGxiYWNrIiwiZm9yY2UiLCJfIiwiY29udGVudENoYW5nZWQiLCJ1cGdyYWRlRmlsZUNvbnRlbnRDaGFuZ2VkQ2FsbGJhY2siLCJyZXNvbHZlIiwiZGlzcGxheU5hbWUiLCJyZWxhdGl2ZURlc3RQYXRoIiwiY29uc29sZSIsImxvZyIsImJvbGQiLCJhbnN3ZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTs7QUFFQSxNQUFNQSxRQUFRQyxRQUFRLE9BQVIsQ0FBZDtBQUNBLE1BQU1DLGlCQUFpQkQsUUFBUSx3QkFBUixDQUF2QjtBQUNBLE1BQU1FLE9BQU9GLFFBQVEsTUFBUixDQUFiO0FBQ0EsTUFBTUcsU0FBU0gsUUFBUSxjQUFSLEdBQWY7QUFDQSxNQUFNSSxPQUFPSixRQUFRLGNBQVIsQ0FBYjs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7QUFjQSxTQUFTSyw2QkFBVCxDQUF1Q0MsT0FBdkMsRUFBZ0RDLFFBQWhELEVBQTBEQyxjQUExRCxFQUEwRUMsT0FBMUUsRUFBbUY7QUFDakYs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QixHQUFwQixHQUEwQkgsZ0JBQXRDO0FBQ0EsV0FBTyxXQUFQO0FBQ0QsR0FIRCxNQUdPLElBQUlKLG1CQUFtQixTQUF2QixFQUFrQztBQUN2Q0ssWUFBUUMsR0FBUixDQUFZckMsTUFBTXNDLElBQU4sQ0FBV0gsZ0JBQVgsSUFBK0IsR0FBL0I7QUFDVixnRUFEVTtBQUVWQSxvQkFGVSxHQUVTLDBCQUZUO0FBR1Ysb0RBSFU7QUFJVix1REFKVTtBQUtWLHdDQUxVLEdBSzZCdEIsbUJBTDdCLEdBS21ELElBTG5EO0FBTVYsNkJBTlUsR0FNa0JzQixnQkFObEIsR0FNcUMsSUFOckM7QUFPVixtREFQRjtBQVFBLFVBQU1JLFNBQVNuQyxRQUFmO0FBQ0EsUUFBSW1DLFdBQVcsR0FBZixFQUFvQjtBQUNsQkgsY0FBUUMsR0FBUixDQUFZLGVBQWVGLGdCQUEzQjtBQUNBLGFBQU8sV0FBUDtBQUNELEtBSEQsTUFHTztBQUNMQyxjQUFRQyxHQUFSLENBQVksa0JBQWtCRixnQkFBOUI7QUFDQSxhQUFPLE1BQVA7QUFDRDtBQUNGLEdBakJNLE1BaUJBLElBQUlKLG1CQUFtQixXQUF2QixFQUFvQztBQUN6QyxXQUFPLE1BQVA7QUFDRCxHQUZNLE1BRUE7QUFDTCxVQUFNLElBQUlwQixLQUFKLENBQVcsOEJBQTZCd0IsZ0JBQWlCLEtBQUlKLGNBQWUsRUFBNUUsQ0FBTjtBQUNEO0FBQ0Y7O0FBRURTLE9BQU9DLE9BQVAsR0FBaUJuQyw2QkFBakIiLCJmaWxlIjoiY29weVByb2plY3RUZW1wbGF0ZUFuZFJlcGxhY2UuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvZ2VuZXJhdG9yIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IGNoYWxrID0gcmVxdWlyZSgnY2hhbGsnKTtcbmNvbnN0IGNvcHlBbmRSZXBsYWNlID0gcmVxdWlyZSgnLi4vdXRpbC9jb3B5QW5kUmVwbGFjZScpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IHByb21wdCA9IHJlcXVpcmUoJy4vcHJvbXB0U3luYycpKCk7XG5jb25zdCB3YWxrID0gcmVxdWlyZSgnLi4vdXRpbC93YWxrJyk7XG5cbi8qKlxuICogVXRpbCBmb3IgY3JlYXRpbmcgYSBuZXcgUmVhY3QgTmF0aXZlIHByb2plY3QuXG4gKiBDb3B5IHRoZSBwcm9qZWN0IGZyb20gYSB0ZW1wbGF0ZSBhbmQgdXNlIHRoZSBjb3JyZWN0IHByb2plY3QgbmFtZSBpblxuICogYWxsIGZpbGVzLlxuICogQHBhcmFtIHNyY1BhdGggZS5nLiAnL1VzZXJzL21hcnRpbi9Bd2Vzb21lQXBwL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL3RlbXBsYXRlcy9IZWxsb1dvcmxkJ1xuICogQHBhcmFtIGRlc3RQYXRoIGUuZy4gJy9Vc2Vycy9tYXJ0aW4vQXdlc29tZUFwcCdcbiAqIEBwYXJhbSBuZXdQcm9qZWN0TmFtZSBlLmcuICdBd2Vzb21lQXBwJ1xuICogQHBhcmFtIG9wdGlvbnMgZS5nLiB7XG4gKiAgICAgICAgICB1cGdyYWRlOiB0cnVlLFxuICogICAgICAgICAgZm9yY2U6IGZhbHNlLFxuICogICAgICAgICAgZGlzcGxheU5hbWU6ICdIZWxsbyBXb3JsZCcsXG4gKiAgICAgICAgICBpZ25vcmVQYXRoczogWyd0ZW1wbGF0ZS9maWxlL3RvL2lnbm9yZS5tZCddLFxuICogICAgICAgIH1cbiAqL1xuZnVuY3Rpb24gY29weVByb2plY3RUZW1wbGF0ZUFuZFJlcGxhY2Uoc3JjUGF0aCwgZGVzdFBhdGgsIG5ld1Byb2plY3ROYW1lLCBvcHRpb25zKSB7XG4gIGlmICghc3JjUGF0aCkgeyB0aHJvdyBuZXcgRXJyb3IoJ05lZWQgYSBwYXRoIHRvIGNvcHkgZnJvbScpOyB9XG4gIGlmICghZGVzdFBhdGgpIHsgdGhyb3cgbmV3IEVycm9yKCdOZWVkIGEgcGF0aCB0byBjb3B5IHRvJyk7IH1cbiAgaWYgKCFuZXdQcm9qZWN0TmFtZSkgeyB0aHJvdyBuZXcgRXJyb3IoJ05lZWQgYSBwcm9qZWN0IG5hbWUnKTsgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG4gIHdhbGsoc3JjUGF0aCkuZm9yRWFjaChhYnNvbHV0ZVNyY0ZpbGVQYXRoID0+IHtcblxuICAgIC8vICdyZWFjdC1uYXRpdmUgdXBncmFkZSdcbiAgICBpZiAob3B0aW9ucy51cGdyYWRlKSB7XG4gICAgICAvLyBEb24ndCB1cGdyYWRlIHRoZXNlIGZpbGVzXG4gICAgICBjb25zdCBmaWxlTmFtZSA9IHBhdGguYmFzZW5hbWUoYWJzb2x1dGVTcmNGaWxlUGF0aCk7XG4gICAgICAvLyBUaGlzIGFsc28gaW5jbHVkZXMgX190ZXN0c19fL2luZGV4LiouanNcbiAgICAgIGlmIChmaWxlTmFtZSA9PT0gJ2luZGV4Lmlvcy5qcycpIHsgcmV0dXJuOyB9XG4gICAgICBpZiAoZmlsZU5hbWUgPT09ICdpbmRleC5hbmRyb2lkLmpzJykgeyByZXR1cm47IH1cbiAgICAgIGlmIChmaWxlTmFtZSA9PT0gJ2luZGV4LmpzJykgeyByZXR1cm47IH1cbiAgICAgIGlmIChmaWxlTmFtZSA9PT0gJ0FwcC5qcycpIHsgcmV0dXJuOyB9XG4gICAgfVxuXG4gICAgY29uc3QgcmVsYXRpdmVGaWxlUGF0aCA9IHBhdGgucmVsYXRpdmUoc3JjUGF0aCwgYWJzb2x1dGVTcmNGaWxlUGF0aCk7XG4gICAgY29uc3QgcmVsYXRpdmVSZW5hbWVkUGF0aCA9IGRvdEZpbGVQYXRoKHJlbGF0aXZlRmlsZVBhdGgpXG4gICAgICAucmVwbGFjZSgvSGVsbG9Xb3JsZC9nLCBuZXdQcm9qZWN0TmFtZSlcbiAgICAgIC5yZXBsYWNlKC9oZWxsb3dvcmxkL2csIG5ld1Byb2plY3ROYW1lLnRvTG93ZXJDYXNlKCkpO1xuXG4gICAgLy8gVGVtcGxhdGVzIG1heSBjb250YWluIGZpbGVzIHRoYXQgd2UgZG9uJ3Qgd2FudCB0byBjb3B5LlxuICAgIC8vIEV4YW1wbGVzOlxuICAgIC8vIC0gRHVtbXkgcGFja2FnZS5qc29uIGZpbGUgaW5jbHVkZWQgaW4gdGhlIHRlbXBsYXRlIG9ubHkgZm9yIHB1Ymxpc2hpbmcgdG8gbnBtXG4gICAgLy8gLSBEb2NzIHNwZWNpZmljIHRvIHRoZSB0ZW1wbGF0ZSAoLm1kIGZpbGVzKVxuICAgIGlmIChvcHRpb25zLmlnbm9yZVBhdGhzKSB7XG4gICAgICBpZiAoIUFycmF5LmlzQXJyYXkob3B0aW9ucy5pZ25vcmVQYXRocykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdvcHRpb25zLmlnbm9yZVBhdGhzIG11c3QgYmUgYW4gYXJyYXknKTtcbiAgICAgIH1cbiAgICAgIGlmIChvcHRpb25zLmlnbm9yZVBhdGhzLnNvbWUoaWdub3JlUGF0aCA9PiBpZ25vcmVQYXRoID09PSByZWxhdGl2ZUZpbGVQYXRoKSkge1xuICAgICAgICAvLyBTa2lwIGNvcHlpbmcgdGhpcyBmaWxlXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsZXQgY29udGVudENoYW5nZWRDYWxsYmFjayA9IG51bGw7XG4gICAgaWYgKG9wdGlvbnMudXBncmFkZSAmJiAoIW9wdGlvbnMuZm9yY2UpKSB7XG4gICAgICBjb250ZW50Q2hhbmdlZENhbGxiYWNrID0gKF8sIGNvbnRlbnRDaGFuZ2VkKSA9PiB7XG4gICAgICAgIHJldHVybiB1cGdyYWRlRmlsZUNvbnRlbnRDaGFuZ2VkQ2FsbGJhY2soXG4gICAgICAgICAgYWJzb2x1dGVTcmNGaWxlUGF0aCxcbiAgICAgICAgICByZWxhdGl2ZVJlbmFtZWRQYXRoLFxuICAgICAgICAgIGNvbnRlbnRDaGFuZ2VkLFxuICAgICAgICApO1xuICAgICAgfTtcbiAgICB9XG4gICAgY29weUFuZFJlcGxhY2UoXG4gICAgICBhYnNvbHV0ZVNyY0ZpbGVQYXRoLFxuICAgICAgcGF0aC5yZXNvbHZlKGRlc3RQYXRoLCByZWxhdGl2ZVJlbmFtZWRQYXRoKSxcbiAgICAgIHtcbiAgICAgICAgJ0hlbGxvIEFwcCBEaXNwbGF5IE5hbWUnOiBvcHRpb25zLmRpc3BsYXlOYW1lIHx8IG5ld1Byb2plY3ROYW1lLFxuICAgICAgICAnSGVsbG9Xb3JsZCc6IG5ld1Byb2plY3ROYW1lLFxuICAgICAgICAnaGVsbG93b3JsZCc6IG5ld1Byb2plY3ROYW1lLnRvTG93ZXJDYXNlKCksXG4gICAgICB9LFxuICAgICAgY29udGVudENoYW5nZWRDYWxsYmFjayxcbiAgICApO1xuICB9KTtcbn1cblxuLyoqXG4gKiBUaGVyZSBhcmUgdmFyaW91cyBkb3RmaWxlcyBpbiB0aGUgdGVtcGxhdGVzIGZvbGRlciBpbiB0aGUgUk4gcmVwby4gV2Ugd2FudFxuICogdGhlc2UgdG8gYmUgaWdub3JlZCBieSB0b29scyB3aGVuIHdvcmtpbmcgd2l0aCBSZWFjdCBOYXRpdmUgaXRzZWxmLlxuICogRXhhbXBsZTogX2JhYmVscmMgZmlsZSBpcyBpZ25vcmVkIGJ5IEJhYmVsLCByZW5hbWVkIHRvIC5iYWJlbHJjIGluc2lkZVxuICogICAgICAgICAgYSByZWFsIGFwcCBmb2xkZXIuXG4gKiBUaGlzIGlzIGVzcGVjaWFsbHkgaW1wb3J0YW50IGZvciAuZ2l0aWdub3JlIGJlY2F1c2UgbnBtIGhhcyBzb21lIHNwZWNpYWxcbiAqIGJlaGF2aW9yIG9mIGF1dG9tYXRpY2FsbHkgcmVuYW1pbmcgLmdpdGlnbm9yZSB0byAubnBtaWdub3JlLlxuICovXG5mdW5jdGlvbiBkb3RGaWxlUGF0aChwYXRoKSB7XG4gIGlmICghcGF0aCkge3JldHVybiBwYXRoO31cbiAgcmV0dXJuIHBhdGhcbiAgICAucmVwbGFjZSgnX2dpdGlnbm9yZScsICcuZ2l0aWdub3JlJylcbiAgICAucmVwbGFjZSgnX2dpdGF0dHJpYnV0ZXMnLCAnLmdpdGF0dHJpYnV0ZXMnKVxuICAgIC5yZXBsYWNlKCdfYmFiZWxyYycsICcuYmFiZWxyYycpXG4gICAgLnJlcGxhY2UoJ19mbG93Y29uZmlnJywgJy5mbG93Y29uZmlnJylcbiAgICAucmVwbGFjZSgnX2J1Y2tjb25maWcnLCAnLmJ1Y2tjb25maWcnKVxuICAgIC5yZXBsYWNlKCdfd2F0Y2htYW5jb25maWcnLCAnLndhdGNobWFuY29uZmlnJyk7XG59XG5cbmZ1bmN0aW9uIHVwZ3JhZGVGaWxlQ29udGVudENoYW5nZWRDYWxsYmFjayhcbiAgYWJzb2x1dGVTcmNGaWxlUGF0aCxcbiAgcmVsYXRpdmVEZXN0UGF0aCxcbiAgY29udGVudENoYW5nZWRcbikge1xuICBpZiAoY29udGVudENoYW5nZWQgPT09ICduZXcnKSB7XG4gICAgY29uc29sZS5sb2coY2hhbGsuYm9sZCgnbmV3JykgKyAnICcgKyByZWxhdGl2ZURlc3RQYXRoKTtcbiAgICByZXR1cm4gJ292ZXJ3cml0ZSc7XG4gIH0gZWxzZSBpZiAoY29udGVudENoYW5nZWQgPT09ICdjaGFuZ2VkJykge1xuICAgIGNvbnNvbGUubG9nKGNoYWxrLmJvbGQocmVsYXRpdmVEZXN0UGF0aCkgKyAnICcgK1xuICAgICAgJ2hhcyBjaGFuZ2VkIGluIHRoZSBuZXcgdmVyc2lvbi5cXG5EbyB5b3Ugd2FudCB0byBrZWVwIHlvdXIgJyArXG4gICAgICByZWxhdGl2ZURlc3RQYXRoICsgJyBvciByZXBsYWNlIGl0IHdpdGggdGhlICcgK1xuICAgICAgJ2xhdGVzdCB2ZXJzaW9uP1xcbklmIHlvdSBldmVyIG1hZGUgYW55IGNoYW5nZXMgJyArXG4gICAgICAndG8gdGhpcyBmaWxlLCB5b3VcXCdsbCBwcm9iYWJseSB3YW50IHRvIGtlZXAgaXQuXFxuJyArXG4gICAgICAnWW91IGNhbiBzZWUgdGhlIG5ldyB2ZXJzaW9uIGhlcmU6ICcgKyBhYnNvbHV0ZVNyY0ZpbGVQYXRoICsgJ1xcbicgK1xuICAgICAgJ0RvIHlvdSB3YW50IHRvIHJlcGxhY2UgJyArIHJlbGF0aXZlRGVzdFBhdGggKyAnPyAnICtcbiAgICAgICdBbnN3ZXIgeSB0byByZXBsYWNlLCBuIHRvIGtlZXAgeW91ciB2ZXJzaW9uOiAnKTtcbiAgICBjb25zdCBhbnN3ZXIgPSBwcm9tcHQoKTtcbiAgICBpZiAoYW5zd2VyID09PSAneScpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdSZXBsYWNpbmcgJyArIHJlbGF0aXZlRGVzdFBhdGgpO1xuICAgICAgcmV0dXJuICdvdmVyd3JpdGUnO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZygnS2VlcGluZyB5b3VyICcgKyByZWxhdGl2ZURlc3RQYXRoKTtcbiAgICAgIHJldHVybiAna2VlcCc7XG4gICAgfVxuICB9IGVsc2UgaWYgKGNvbnRlbnRDaGFuZ2VkID09PSAnaWRlbnRpY2FsJykge1xuICAgIHJldHVybiAna2VlcCc7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBVbmtvd24gZmlsZSBjaGFuZ2VkIHN0YXRlOiAke3JlbGF0aXZlRGVzdFBhdGh9LCAke2NvbnRlbnRDaGFuZ2VkfWApO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29weVByb2plY3RUZW1wbGF0ZUFuZFJlcGxhY2U7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "copyProjectTemplateAndReplace.js"
      ],
      "names": [
        "chalk",
        "require",
        "copyAndReplace",
        "path",
        "prompt",
        "walk",
        "copyProjectTemplateAndReplace",
        "srcPath",
        "destPath",
        "newProjectName",
        "options",
        "Error",
        "forEach",
        "absoluteSrcFilePath",
        "upgrade",
        "fileName",
        "basename",
        "relativeFilePath",
        "relative",
        "relativeRenamedPath",
        "dotFilePath",
        "replace",
        "toLowerCase",
        "ignorePaths",
        "Array",
        "isArray",
        "some",
        "ignorePath",
        "contentChangedCallback",
        "force",
        "_",
        "contentChanged",
        "upgradeFileContentChangedCallback",
        "resolve",
        "displayName",
        "relativeDestPath",
        "console",
        "log",
        "bold",
        "answer",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "copyProjectTemplateAndReplace.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst chalk = require('chalk');\nconst copyAndReplace = require('../util/copyAndReplace');\nconst path = require('path');\nconst prompt = require('./promptSync')();\nconst walk = require('../util/walk');\n\n/**\n * Util for creating a new React Native project.\n * Copy the project from a template and use the correct project name in\n * all files.\n * @param srcPath e.g. '/Users/martin/AwesomeApp/node_modules/react-native/local-cli/templates/HelloWorld'\n * @param destPath e.g. '/Users/martin/AwesomeApp'\n * @param newProjectName e.g. 'AwesomeApp'\n * @param options e.g. {\n *          upgrade: true,\n *          force: false,\n *          displayName: 'Hello World',\n *          ignorePaths: ['template/file/to/ignore.md'],\n *        }\n */\nfunction copyProjectTemplateAndReplace(srcPath, destPath, newProjectName, options) {\n  if (!srcPath) { throw new Error('Need a path to copy from'); }\n  if (!destPath) { throw new Error('Need a path to copy to'); }\n  if (!newProjectName) { throw new Error('Need a project name'); }\n\n  options = options || {};\n\n  walk(srcPath).forEach(absoluteSrcFilePath => {\n\n    // 'react-native upgrade'\n    if (options.upgrade) {\n      // Don't upgrade these files\n      const fileName = path.basename(absoluteSrcFilePath);\n      // This also includes __tests__/index.*.js\n      if (fileName === 'index.ios.js') { return; }\n      if (fileName === 'index.android.js') { return; }\n      if (fileName === 'index.js') { return; }\n      if (fileName === 'App.js') { return; }\n    }\n\n    const relativeFilePath = path.relative(srcPath, absoluteSrcFilePath);\n    const relativeRenamedPath = dotFilePath(relativeFilePath)\n      .replace(/HelloWorld/g, newProjectName)\n      .replace(/helloworld/g, newProjectName.toLowerCase());\n\n    // Templates may contain files that we don't want to copy.\n    // Examples:\n    // - Dummy package.json file included in the template only for publishing to npm\n    // - Docs specific to the template (.md files)\n    if (options.ignorePaths) {\n      if (!Array.isArray(options.ignorePaths)) {\n        throw new Error('options.ignorePaths must be an array');\n      }\n      if (options.ignorePaths.some(ignorePath => ignorePath === relativeFilePath)) {\n        // Skip copying this file\n        return;\n      }\n    }\n\n    let contentChangedCallback = null;\n    if (options.upgrade && (!options.force)) {\n      contentChangedCallback = (_, contentChanged) => {\n        return upgradeFileContentChangedCallback(\n          absoluteSrcFilePath,\n          relativeRenamedPath,\n          contentChanged,\n        );\n      };\n    }\n    copyAndReplace(\n      absoluteSrcFilePath,\n      path.resolve(destPath, relativeRenamedPath),\n      {\n        'Hello App Display Name': options.displayName || newProjectName,\n        'HelloWorld': newProjectName,\n        'helloworld': newProjectName.toLowerCase(),\n      },\n      contentChangedCallback,\n    );\n  });\n}\n\n/**\n * There are various dotfiles in the templates folder in the RN repo. We want\n * these to be ignored by tools when working with React Native itself.\n * Example: _babelrc file is ignored by Babel, renamed to .babelrc inside\n *          a real app folder.\n * This is especially important for .gitignore because npm has some special\n * behavior of automatically renaming .gitignore to .npmignore.\n */\nfunction dotFilePath(path) {\n  if (!path) {return path;}\n  return path\n    .replace('_gitignore', '.gitignore')\n    .replace('_gitattributes', '.gitattributes')\n    .replace('_babelrc', '.babelrc')\n    .replace('_flowconfig', '.flowconfig')\n    .replace('_buckconfig', '.buckconfig')\n    .replace('_watchmanconfig', '.watchmanconfig');\n}\n\nfunction upgradeFileContentChangedCallback(\n  absoluteSrcFilePath,\n  relativeDestPath,\n  contentChanged\n) {\n  if (contentChanged === 'new') {\n    console.log(chalk.bold('new') + ' ' + relativeDestPath);\n    return 'overwrite';\n  } else if (contentChanged === 'changed') {\n    console.log(chalk.bold(relativeDestPath) + ' ' +\n      'has changed in the new version.\\nDo you want to keep your ' +\n      relativeDestPath + ' or replace it with the ' +\n      'latest version?\\nIf you ever made any changes ' +\n      'to this file, you\\'ll probably want to keep it.\\n' +\n      'You can see the new version here: ' + absoluteSrcFilePath + '\\n' +\n      'Do you want to replace ' + relativeDestPath + '? ' +\n      'Answer y to replace, n to keep your version: ');\n    const answer = prompt();\n    if (answer === 'y') {\n      console.log('Replacing ' + relativeDestPath);\n      return 'overwrite';\n    } else {\n      console.log('Keeping your ' + relativeDestPath);\n      return 'keep';\n    }\n  } else if (contentChanged === 'identical') {\n    return 'keep';\n  } else {\n    throw new Error(`Unkown file changed state: ${relativeDestPath}, ${contentChanged}`);\n  }\n}\n\nmodule.exports = copyProjectTemplateAndReplace;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator/promptSync.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator/promptSync.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator/promptSync.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "promptSync.js",
      "sourceFileName": "promptSync.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "promptSync"
    },
    "ignored": false,
    "code": "// Simplified version of:\n// https://github.com/0x00A/prompt-sync/blob/master/index.js\n\n'use strict';\n\nvar fs = require('fs');\nvar term = 13; // carriage return\n\nfunction create() {\n\n  return prompt;\n\n  function prompt(ask, value, opts) {\n    var insert = 0,savedinsert = 0,res,i,savedstr;\n    opts = opts || {};\n\n    if (Object(ask) === ask) {\n      opts = ask;\n      ask = opts.ask;\n    } else if (Object(value) === value) {\n      opts = value;\n      value = opts.value;\n    }\n    ask = ask || '';\n    var echo = opts.echo;\n    var masked = 'echo' in opts;\n\n    var fd = process.platform === 'win32' ?\n    process.stdin.fd :\n    fs.openSync('/dev/tty', 'rs');\n\n    var wasRaw = process.stdin.isRaw;\n    if (!wasRaw) {process.stdin.setRawMode(true);}\n\n    var buf = new Buffer(3);\n    var str = '',character,read;\n\n    savedstr = '';\n\n    if (ask) {\n      process.stdout.write(ask);\n    }\n\n    var cycle = 0;\n    var prevComplete;\n\n    while (true) {\n      read = fs.readSync(fd, buf, 0, 3);\n      if (read > 1) {// received a control sequence\n        if (buf.toString()) {\n          str = str + buf.toString();\n          str = str.replace(/\\0/g, '');\n          insert = str.length;\n          process.stdout.write('\\u001b[2K\\u001b[0G' + ask + str);\n          process.stdout.write('\\u001b[' + (insert + ask.length + 1) + 'G');\n          buf = new Buffer(3);\n        }\n        continue; // any other 3 character sequence is ignored\n      }\n\n      // if it is not a control character seq, assume only one character is read\n      character = buf[read - 1];\n\n      // catch a ^C and return null\n      if (character == 3) {\n        process.stdout.write('^C\\n');\n        fs.closeSync(fd);\n        process.exit(130);\n        process.stdin.setRawMode(wasRaw);\n        return null;\n      }\n\n      // catch the terminating character\n      if (character == term) {\n        fs.closeSync(fd);\n        break;\n      }\n\n      if (character == 127 || process.platform == 'win32' && character == 8) {//backspace\n        if (!insert) {continue;}\n        str = str.slice(0, insert - 1) + str.slice(insert);\n        insert--;\n        process.stdout.write('\\u001b[2D');\n      } else {\n        if (character < 32 || character > 126)\n        {continue;}\n        str = str.slice(0, insert) + String.fromCharCode(character) + str.slice(insert);\n        insert++;\n      }\n\n      if (masked) {\n        process.stdout.write('\\u001b[2K\\u001b[0G' + ask + Array(str.length + 1).join(echo));\n      } else {\n        process.stdout.write('\\u001b[s');\n        if (insert == str.length) {\n          process.stdout.write('\\u001b[2K\\u001b[0G' + ask + str);\n        } else {\n          if (ask) {\n            process.stdout.write('\\u001b[2K\\u001b[0G' + ask + str);\n          } else {\n            process.stdout.write('\\u001b[2K\\u001b[0G' + str + '\\u001b[' + (str.length - insert) + 'D');\n          }\n        }\n        process.stdout.write('\\u001b[u');\n        process.stdout.write('\\u001b[1C');\n      }\n\n    }\n\n    process.stdout.write('\\n');\n\n    process.stdin.setRawMode(wasRaw);\n\n    return str || value || '';\n  }\n}\n\nmodule.exports = create;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "promptSync.js"
      ],
      "names": [
        "fs",
        "require",
        "term",
        "create",
        "prompt",
        "ask",
        "value",
        "opts",
        "insert",
        "savedinsert",
        "res",
        "i",
        "savedstr",
        "Object",
        "echo",
        "masked",
        "fd",
        "process",
        "platform",
        "stdin",
        "openSync",
        "wasRaw",
        "isRaw",
        "setRawMode",
        "buf",
        "Buffer",
        "str",
        "character",
        "read",
        "stdout",
        "write",
        "cycle",
        "prevComplete",
        "readSync",
        "toString",
        "replace",
        "length",
        "closeSync",
        "exit",
        "slice",
        "String",
        "fromCharCode",
        "Array",
        "join",
        "module",
        "exports"
      ],
      "mappings": "AAAA;AACA;;AAEA;;AAEA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,OAAO,EAAX,C,CAAe;;AAEf,SAASC,MAAT,GAAkB;;AAEhB,SAAOC,MAAP;;AAEA,WAASA,MAAT,CAAgBC,GAAhB,EAAqBC,KAArB,EAA4BC,IAA5B,EAAkC;AAChC,QAAIC,SAAS,CAAb,CAAgBC,cAAc,CAA9B,CAAiCC,GAAjC,CAAsCC,CAAtC,CAAyCC,QAAzC;AACAL,WAAOA,QAAQ,EAAf;;AAEA,QAAIM,OAAOR,GAAP,MAAgBA,GAApB,EAAyB;AACvBE,aAAOF,GAAP;AACAA,YAAME,KAAKF,GAAX;AACD,KAHD,MAGO,IAAIQ,OAAOP,KAAP,MAAkBA,KAAtB,EAA6B;AAClCC,aAAOD,KAAP;AACAA,cAAQC,KAAKD,KAAb;AACD;AACDD,UAAMA,OAAO,EAAb;AACA,QAAIS,OAAOP,KAAKO,IAAhB;AACA,QAAIC,SAAS,UAAUR,IAAvB;;AAEA,QAAIS,KAAMC,QAAQC,QAAR,KAAqB,OAAtB;AACPD,YAAQE,KAAR,CAAcH,EADP;AAEPhB,OAAGoB,QAAH,CAAY,UAAZ,EAAwB,IAAxB,CAFF;;AAIA,QAAIC,SAASJ,QAAQE,KAAR,CAAcG,KAA3B;AACA,QAAI,CAACD,MAAL,EAAa,CAAEJ,QAAQE,KAAR,CAAcI,UAAd,CAAyB,IAAzB,EAAiC;;AAEhD,QAAIC,MAAM,IAAIC,MAAJ,CAAW,CAAX,CAAV;AACA,QAAIC,MAAM,EAAV,CAAcC,SAAd,CAAyBC,IAAzB;;AAEAhB,eAAW,EAAX;;AAEA,QAAIP,GAAJ,EAAS;AACPY,cAAQY,MAAR,CAAeC,KAAf,CAAqBzB,GAArB;AACD;;AAED,QAAI0B,QAAQ,CAAZ;AACA,QAAIC,YAAJ;;AAEA,WAAO,IAAP,EAAa;AACXJ,aAAO5B,GAAGiC,QAAH,CAAYjB,EAAZ,EAAgBQ,GAAhB,EAAqB,CAArB,EAAwB,CAAxB,CAAP;AACA,UAAII,OAAO,CAAX,EAAc,CAAE;AACd,YAAIJ,IAAIU,QAAJ,EAAJ,EAAoB;AAClBR,gBAAMA,MAAMF,IAAIU,QAAJ,EAAZ;AACAR,gBAAMA,IAAIS,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAAN;AACA3B,mBAASkB,IAAIU,MAAb;AACAnB,kBAAQY,MAAR,CAAeC,KAAf,CAAqB,uBAAuBzB,GAAvB,GAA6BqB,GAAlD;AACAT,kBAAQY,MAAR,CAAeC,KAAf,CAAqB,aAAatB,SAASH,IAAI+B,MAAb,GAAsB,CAAnC,IAAwC,GAA7D;AACAZ,gBAAM,IAAIC,MAAJ,CAAW,CAAX,CAAN;AACD;AACD,iBATY,CASF;AACX;;AAED;AACAE,kBAAYH,IAAII,OAAO,CAAX,CAAZ;;AAEA;AACA,UAAID,aAAa,CAAjB,EAAmB;AACjBV,gBAAQY,MAAR,CAAeC,KAAf,CAAqB,MAArB;AACA9B,WAAGqC,SAAH,CAAarB,EAAb;AACAC,gBAAQqB,IAAR,CAAa,GAAb;AACArB,gBAAQE,KAAR,CAAcI,UAAd,CAAyBF,MAAzB;AACA,eAAO,IAAP;AACD;;AAED;AACA,UAAIM,aAAazB,IAAjB,EAAuB;AACrBF,WAAGqC,SAAH,CAAarB,EAAb;AACA;AACD;;AAED,UAAIW,aAAa,GAAb,IAAqBV,QAAQC,QAAR,IAAoB,OAApB,IAA+BS,aAAa,CAArE,EAAyE,CAAE;AACzE,YAAI,CAACnB,MAAL,EAAa,CAAC,SAAU;AACxBkB,cAAMA,IAAIa,KAAJ,CAAU,CAAV,EAAa/B,SAAS,CAAtB,IAA2BkB,IAAIa,KAAJ,CAAU/B,MAAV,CAAjC;AACAA;AACAS,gBAAQY,MAAR,CAAeC,KAAf,CAAqB,WAArB;AACD,OALD,MAKO;AACL,YAAKH,YAAY,EAAb,IAAsBA,YAAY,GAAtC;AACI,SAAC,SAAU;AACfD,cAAMA,IAAIa,KAAJ,CAAU,CAAV,EAAa/B,MAAb,IAAuBgC,OAAOC,YAAP,CAAoBd,SAApB,CAAvB,GAAwDD,IAAIa,KAAJ,CAAU/B,MAAV,CAA9D;AACAA;AACD;;AAED,UAAIO,MAAJ,EAAY;AACRE,gBAAQY,MAAR,CAAeC,KAAf,CAAqB,uBAAuBzB,GAAvB,GAA6BqC,MAAMhB,IAAIU,MAAJ,GAAa,CAAnB,EAAsBO,IAAtB,CAA2B7B,IAA3B,CAAlD;AACH,OAFD,MAEO;AACLG,gBAAQY,MAAR,CAAeC,KAAf,CAAqB,UAArB;AACA,YAAItB,UAAUkB,IAAIU,MAAlB,EAA0B;AACtBnB,kBAAQY,MAAR,CAAeC,KAAf,CAAqB,uBAAuBzB,GAAvB,GAA6BqB,GAAlD;AACH,SAFD,MAEO;AACL,cAAIrB,GAAJ,EAAS;AACPY,oBAAQY,MAAR,CAAeC,KAAf,CAAqB,uBAAuBzB,GAAvB,GAA6BqB,GAAlD;AACD,WAFD,MAEO;AACLT,oBAAQY,MAAR,CAAeC,KAAf,CAAqB,uBAAuBJ,GAAvB,GAA6B,SAA7B,IAA0CA,IAAIU,MAAJ,GAAa5B,MAAvD,IAAiE,GAAtF;AACD;AACF;AACDS,gBAAQY,MAAR,CAAeC,KAAf,CAAqB,UAArB;AACAb,gBAAQY,MAAR,CAAeC,KAAf,CAAqB,WAArB;AACD;;AAEF;;AAEDb,YAAQY,MAAR,CAAeC,KAAf,CAAqB,IAArB;;AAEAb,YAAQE,KAAR,CAAcI,UAAd,CAAyBF,MAAzB;;AAEA,WAAOK,OAAOpB,KAAP,IAAgB,EAAvB;AACD;AACF;;AAEDsC,OAAOC,OAAP,GAAiB1C,MAAjB",
      "file": "promptSync.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator",
      "sourcesContent": [
        "// Simplified version of:\n// https://github.com/0x00A/prompt-sync/blob/master/index.js\n\n'use strict';\n\nvar fs = require('fs');\nvar term = 13; // carriage return\n\nfunction create() {\n\n  return prompt;\n\n  function prompt(ask, value, opts) {\n    var insert = 0, savedinsert = 0, res, i, savedstr;\n    opts = opts || {};\n\n    if (Object(ask) === ask) {\n      opts = ask;\n      ask = opts.ask;\n    } else if (Object(value) === value) {\n      opts = value;\n      value = opts.value;\n    }\n    ask = ask || '';\n    var echo = opts.echo;\n    var masked = 'echo' in opts;\n\n    var fd = (process.platform === 'win32') ?\n      process.stdin.fd :\n      fs.openSync('/dev/tty', 'rs');\n\n    var wasRaw = process.stdin.isRaw;\n    if (!wasRaw) { process.stdin.setRawMode(true); }\n\n    var buf = new Buffer(3);\n    var str = '', character, read;\n\n    savedstr = '';\n\n    if (ask) {\n      process.stdout.write(ask);\n    }\n\n    var cycle = 0;\n    var prevComplete;\n\n    while (true) {\n      read = fs.readSync(fd, buf, 0, 3);\n      if (read > 1) { // received a control sequence\n        if (buf.toString()) {\n          str = str + buf.toString();\n          str = str.replace(/\\0/g, '');\n          insert = str.length;\n          process.stdout.write('\\u001b[2K\\u001b[0G' + ask + str);\n          process.stdout.write('\\u001b[' + (insert + ask.length + 1) + 'G');\n          buf = new Buffer(3);\n        }\n        continue; // any other 3 character sequence is ignored\n      }\n\n      // if it is not a control character seq, assume only one character is read\n      character = buf[read - 1];\n\n      // catch a ^C and return null\n      if (character == 3){\n        process.stdout.write('^C\\n');\n        fs.closeSync(fd);\n        process.exit(130);\n        process.stdin.setRawMode(wasRaw);\n        return null;\n      }\n\n      // catch the terminating character\n      if (character == term) {\n        fs.closeSync(fd);\n        break;\n      }\n\n      if (character == 127 || (process.platform == 'win32' && character == 8)) { //backspace\n        if (!insert) {continue;}\n        str = str.slice(0, insert - 1) + str.slice(insert);\n        insert--;\n        process.stdout.write('\\u001b[2D');\n      } else {\n        if ((character < 32 ) || (character > 126))\n            {continue;}\n        str = str.slice(0, insert) + String.fromCharCode(character) + str.slice(insert);\n        insert++;\n      }\n\n      if (masked) {\n          process.stdout.write('\\u001b[2K\\u001b[0G' + ask + Array(str.length + 1).join(echo));\n      } else {\n        process.stdout.write('\\u001b[s');\n        if (insert == str.length) {\n            process.stdout.write('\\u001b[2K\\u001b[0G' + ask + str);\n        } else {\n          if (ask) {\n            process.stdout.write('\\u001b[2K\\u001b[0G' + ask + str);\n          } else {\n            process.stdout.write('\\u001b[2K\\u001b[0G' + str + '\\u001b[' + (str.length - insert) + 'D');\n          }\n        }\n        process.stdout.write('\\u001b[u');\n        process.stdout.write('\\u001b[1C');\n      }\n\n    }\n\n    process.stdout.write('\\n');\n\n    process.stdin.setRawMode(wasRaw);\n\n    return str || value || '';\n  }\n}\n\nmodule.exports = create;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/link.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../core",
            "imported": [
              "RNConfig"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "RNConfig",
                "local": "RNConfig"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/link.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/link.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "link.js",
      "sourceFileName": "link.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "link"
    },
    "ignored": false,
    "code": "'use strict'; /**\n               * Copyright (c) 2013-present, Facebook, Inc.\n               * All rights reserved.\n               *\n               * This source code is licensed under the BSD-style license found in the\n               * LICENSE file in the root directory of this source tree. An additional grant\n               * of patent rights can be found in the PATENTS file in the same directory.\n               *\n               * \n               */\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n                   * found when Flow v0.54 was deployed. To see the error delete this comment and\n                   * run Flow. */\nconst log = require('npmlog');\nconst path = require('path');\nconst uniqBy = require('lodash').uniqBy;\nconst flatten = require('lodash').flatten;\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n                                            * found when Flow v0.54 was deployed. To see the error delete this comment and\n                                            * run Flow. */\nconst chalk = require('chalk');\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n                                 * found when Flow v0.54 was deployed. To see the error delete this comment and\n                                 * run Flow. */\nconst isEmpty = require('lodash').isEmpty;\nconst promiseWaterfall = require('./promiseWaterfall');\nconst registerDependencyAndroid = require('./android/registerNativeModule');\nconst registerDependencyWindows = require('./windows/registerNativeModule');\nconst registerDependencyIOS = require('./ios/registerNativeModule');\nconst registerDependencyPods = require('./pods/registerNativeModule');\nconst isInstalledAndroid = require('./android/isInstalled');\nconst isInstalledWindows = require('./windows/isInstalled');\nconst isInstalledIOS = require('./ios/isInstalled');\nconst isInstalledPods = require('./pods/isInstalled');\nconst copyAssetsAndroid = require('./android/copyAssets');\nconst copyAssetsIOS = require('./ios/copyAssets');\nconst getProjectDependencies = require('./getProjectDependencies');\nconst getDependencyConfig = require('./getDependencyConfig');\nconst pollParams = require('./pollParams');\nconst commandStub = require('./commandStub');\nconst promisify = require('./promisify');\nconst findReactNativeScripts = require('../util/findReactNativeScripts');\n\n\n\nlog.heading = 'rnpm-link';\n\nconst dedupeAssets = assets => uniqBy(assets, asset => path.basename(asset));\n\n\nconst linkDependencyAndroid = (androidProject, dependency) => {\n  if (!androidProject || !dependency.config.android) {\n    return null;\n  }\n\n  const isInstalled = isInstalledAndroid(androidProject, dependency.name);\n\n  if (isInstalled) {\n    log.info(chalk.grey(`Android module ${dependency.name} is already linked`));\n    return null;\n  }\n\n  return pollParams(dependency.config.params).then(params => {\n    log.info(`Linking ${dependency.name} android dependency`);\n\n    registerDependencyAndroid(\n    dependency.name,\n    dependency.config.android,\n    params,\n    androidProject);\n\n\n    log.info(`Android module ${dependency.name} has been successfully linked`);\n  });\n};\n\nconst linkDependencyWindows = (windowsProject, dependency) => {\n\n  if (!windowsProject || !dependency.config.windows) {\n    return null;\n  }\n\n  const isInstalled = isInstalledWindows(windowsProject, dependency.config.windows);\n\n  if (isInstalled) {\n    log.info(chalk.grey(`Windows module ${dependency.name} is already linked`));\n    return null;\n  }\n\n  return pollParams(dependency.config.params).then(params => {\n    log.info(`Linking ${dependency.name} windows dependency`);\n\n    registerDependencyWindows(\n    dependency.name,\n    dependency.config.windows,\n    params,\n    windowsProject);\n\n\n    log.info(`Windows module ${dependency.name} has been successfully linked`);\n  });\n};\n\nconst linkDependencyIOS = (iOSProject, dependency) => {\n  if (!iOSProject || !dependency.config.ios) {\n    return;\n  }\n\n  const isInstalled = isInstalledIOS(iOSProject, dependency.config.ios) || isInstalledPods(iOSProject, dependency.config.ios);\n  if (isInstalled) {\n    log.info(chalk.grey(`iOS module ${dependency.name} is already linked`));\n    return;\n  }\n\n  log.info(`Linking ${dependency.name} ios dependency`);\n  if (iOSProject.podfile && dependency.config.ios.podspec) {\n    registerDependencyPods(dependency, iOSProject);\n  } else\n  {\n    registerDependencyIOS(dependency.config.ios, iOSProject);\n  }\n  log.info(`iOS module ${dependency.name} has been successfully linked`);\n};\n\nconst linkAssets = (project, assets) => {\n  if (isEmpty(assets)) {\n    return;\n  }\n\n  if (project.ios) {\n    log.info('Linking assets to ios project');\n    copyAssetsIOS(assets, project.ios);\n  }\n\n  if (project.android) {\n    log.info('Linking assets to android project');\n    copyAssetsAndroid(assets, project.android.assetsPath);\n  }\n\n  log.info('Assets have been successfully linked to your project');\n};\n\n/**\n    * Updates project and links all dependencies to it.\n    *\n    * @param args If optional argument [packageName] is provided,\n    *             only that package is processed.\n    * @param config CLI config, see local-cli/core/index.js\n    */\nfunction link(args, config) {\n  var project;\n  try {\n    project = config.getProjectConfig();\n  } catch (err) {\n    log.error(\n    'ERRPACKAGEJSON',\n    'No package found. Are you sure this is a React Native project?');\n\n    return Promise.reject(err);\n  }\n\n  if (!project.android && !project.ios && !project.windows && findReactNativeScripts()) {\n    throw new Error(\n    '`react-native link` can not be used in Create React Native App projects. ' +\n    'If you need to include a library that relies on custom native code, ' +\n    'you might have to eject first. ' +\n    'See https://github.com/react-community/create-react-native-app/blob/master/EJECTING.md ' +\n    'for more information.');\n\n  }\n\n  let packageName = args[0];\n  // Check if install package by specific version (eg. package@latest)\n  if (packageName !== undefined) {\n    packageName = packageName.split('@')[0];\n  }\n\n  const dependencies = getDependencyConfig(\n  config,\n  packageName ? [packageName] : getProjectDependencies());\n\n\n  const assets = dedupeAssets(dependencies.reduce(\n  (assets, dependency) => assets.concat(dependency.config.assets),\n  project.assets));\n\n\n  const tasks = flatten(dependencies.map(dependency => [\n  () => promisify(dependency.config.commands.prelink || commandStub),\n  () => linkDependencyAndroid(project.android, dependency),\n  () => linkDependencyIOS(project.ios, dependency),\n  () => linkDependencyWindows(project.windows, dependency),\n  () => promisify(dependency.config.commands.postlink || commandStub)]));\n\n\n  tasks.push(() => linkAssets(project, assets));\n\n  return promiseWaterfall(tasks).catch(err => {\n    log.error(\n    `Something went wrong while linking. Error: ${err.message} \\n` +\n    'Please file an issue here: https://github.com/facebook/react-native/issues');\n\n    throw err;\n  });\n}\n\nmodule.exports = {\n  func: link,\n  description: 'links all native dependencies (updates native build files)',\n  name: 'link [packageName]' };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "link.js"
      ],
      "names": [
        "log",
        "require",
        "path",
        "uniqBy",
        "flatten",
        "chalk",
        "isEmpty",
        "promiseWaterfall",
        "registerDependencyAndroid",
        "registerDependencyWindows",
        "registerDependencyIOS",
        "registerDependencyPods",
        "isInstalledAndroid",
        "isInstalledWindows",
        "isInstalledIOS",
        "isInstalledPods",
        "copyAssetsAndroid",
        "copyAssetsIOS",
        "getProjectDependencies",
        "getDependencyConfig",
        "pollParams",
        "commandStub",
        "promisify",
        "findReactNativeScripts",
        "heading",
        "dedupeAssets",
        "assets",
        "asset",
        "basename",
        "linkDependencyAndroid",
        "androidProject",
        "dependency",
        "config",
        "android",
        "isInstalled",
        "name",
        "info",
        "grey",
        "params",
        "then",
        "linkDependencyWindows",
        "windowsProject",
        "windows",
        "linkDependencyIOS",
        "iOSProject",
        "ios",
        "podfile",
        "podspec",
        "linkAssets",
        "project",
        "assetsPath",
        "link",
        "args",
        "getProjectConfig",
        "err",
        "error",
        "Promise",
        "reject",
        "Error",
        "packageName",
        "undefined",
        "split",
        "dependencies",
        "reduce",
        "concat",
        "tasks",
        "map",
        "commands",
        "prelink",
        "postlink",
        "push",
        "catch",
        "message",
        "module",
        "exports",
        "func",
        "description"
      ],
      "mappings": "cAAA;;;;;;;;;;;AAWA;;;AAGA,MAAMA,MAAMC,QAAQ,QAAR,CAAZ;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,SAASF,QAAQ,QAAR,EAAkBE,MAAjC;AACA,MAAMC,UAAUH,QAAQ,QAAR,EAAkBG,OAAlC;AACA;;;AAGA,MAAMC,QAAQJ,QAAQ,OAAR,CAAd;;AAEA;;;AAGA,MAAMK,UAAUL,QAAQ,QAAR,EAAkBK,OAAlC;AACA,MAAMC,mBAAmBN,QAAQ,oBAAR,CAAzB;AACA,MAAMO,4BAA4BP,QAAQ,gCAAR,CAAlC;AACA,MAAMQ,4BAA4BR,QAAQ,gCAAR,CAAlC;AACA,MAAMS,wBAAwBT,QAAQ,4BAAR,CAA9B;AACA,MAAMU,yBAAyBV,QAAQ,6BAAR,CAA/B;AACA,MAAMW,qBAAqBX,QAAQ,uBAAR,CAA3B;AACA,MAAMY,qBAAqBZ,QAAQ,uBAAR,CAA3B;AACA,MAAMa,iBAAiBb,QAAQ,mBAAR,CAAvB;AACA,MAAMc,kBAAkBd,QAAQ,oBAAR,CAAxB;AACA,MAAMe,oBAAoBf,QAAQ,sBAAR,CAA1B;AACA,MAAMgB,gBAAgBhB,QAAQ,kBAAR,CAAtB;AACA,MAAMiB,yBAAyBjB,QAAQ,0BAAR,CAA/B;AACA,MAAMkB,sBAAsBlB,QAAQ,uBAAR,CAA5B;AACA,MAAMmB,aAAanB,QAAQ,cAAR,CAAnB;AACA,MAAMoB,cAAcpB,QAAQ,eAAR,CAApB;AACA,MAAMqB,YAAYrB,QAAQ,aAAR,CAAlB;AACA,MAAMsB,yBAAyBtB,QAAQ,gCAAR,CAA/B;;;;AAIAD,IAAIwB,OAAJ,GAAc,WAAd;;AAEA,MAAMC,eAAgBC,MAAD,IAAYvB,OAAOuB,MAAP,EAAeC,SAASzB,KAAK0B,QAAL,CAAcD,KAAd,CAAxB,CAAjC;;;AAGA,MAAME,wBAAwB,CAACC,cAAD,EAAiBC,UAAjB,KAAgC;AAC5D,MAAI,CAACD,cAAD,IAAmB,CAACC,WAAWC,MAAX,CAAkBC,OAA1C,EAAmD;AACjD,WAAO,IAAP;AACD;;AAED,QAAMC,cAActB,mBAAmBkB,cAAnB,EAAmCC,WAAWI,IAA9C,CAApB;;AAEA,MAAID,WAAJ,EAAiB;AACflC,QAAIoC,IAAJ,CAAS/B,MAAMgC,IAAN,CAAY,kBAAiBN,WAAWI,IAAK,oBAA7C,CAAT;AACA,WAAO,IAAP;AACD;;AAED,SAAOf,WAAWW,WAAWC,MAAX,CAAkBM,MAA7B,EAAqCC,IAArC,CAA0CD,UAAU;AACzDtC,QAAIoC,IAAJ,CAAU,WAAUL,WAAWI,IAAK,qBAApC;;AAEA3B;AACEuB,eAAWI,IADb;AAEEJ,eAAWC,MAAX,CAAkBC,OAFpB;AAGEK,UAHF;AAIER,kBAJF;;;AAOA9B,QAAIoC,IAAJ,CAAU,kBAAiBL,WAAWI,IAAK,+BAA3C;AACD,GAXM,CAAP;AAYD,CAxBD;;AA0BA,MAAMK,wBAAwB,CAACC,cAAD,EAAiBV,UAAjB,KAAgC;;AAE5D,MAAI,CAACU,cAAD,IAAmB,CAACV,WAAWC,MAAX,CAAkBU,OAA1C,EAAmD;AACjD,WAAO,IAAP;AACD;;AAED,QAAMR,cAAcrB,mBAAmB4B,cAAnB,EAAmCV,WAAWC,MAAX,CAAkBU,OAArD,CAApB;;AAEA,MAAIR,WAAJ,EAAiB;AACflC,QAAIoC,IAAJ,CAAS/B,MAAMgC,IAAN,CAAY,kBAAiBN,WAAWI,IAAK,oBAA7C,CAAT;AACA,WAAO,IAAP;AACD;;AAED,SAAOf,WAAWW,WAAWC,MAAX,CAAkBM,MAA7B,EAAqCC,IAArC,CAA0CD,UAAU;AACzDtC,QAAIoC,IAAJ,CAAU,WAAUL,WAAWI,IAAK,qBAApC;;AAEA1B;AACEsB,eAAWI,IADb;AAEEJ,eAAWC,MAAX,CAAkBU,OAFpB;AAGEJ,UAHF;AAIEG,kBAJF;;;AAOAzC,QAAIoC,IAAJ,CAAU,kBAAiBL,WAAWI,IAAK,+BAA3C;AACD,GAXM,CAAP;AAYD,CAzBD;;AA2BA,MAAMQ,oBAAoB,CAACC,UAAD,EAAab,UAAb,KAA4B;AACpD,MAAI,CAACa,UAAD,IAAe,CAACb,WAAWC,MAAX,CAAkBa,GAAtC,EAA2C;AACzC;AACD;;AAED,QAAMX,cAAcpB,eAAe8B,UAAf,EAA2Bb,WAAWC,MAAX,CAAkBa,GAA7C,KAAqD9B,gBAAgB6B,UAAhB,EAA4Bb,WAAWC,MAAX,CAAkBa,GAA9C,CAAzE;AACA,MAAIX,WAAJ,EAAiB;AACflC,QAAIoC,IAAJ,CAAS/B,MAAMgC,IAAN,CAAY,cAAaN,WAAWI,IAAK,oBAAzC,CAAT;AACA;AACD;;AAEDnC,MAAIoC,IAAJ,CAAU,WAAUL,WAAWI,IAAK,iBAApC;AACA,MAAIS,WAAWE,OAAX,IAAsBf,WAAWC,MAAX,CAAkBa,GAAlB,CAAsBE,OAAhD,EAAyD;AACvDpC,2BAAuBoB,UAAvB,EAAmCa,UAAnC;AACD,GAFD;AAGK;AACHlC,0BAAsBqB,WAAWC,MAAX,CAAkBa,GAAxC,EAA6CD,UAA7C;AACD;AACD5C,MAAIoC,IAAJ,CAAU,cAAaL,WAAWI,IAAK,+BAAvC;AACD,CAnBD;;AAqBA,MAAMa,aAAa,CAACC,OAAD,EAAUvB,MAAV,KAAqB;AACtC,MAAIpB,QAAQoB,MAAR,CAAJ,EAAqB;AACnB;AACD;;AAED,MAAIuB,QAAQJ,GAAZ,EAAiB;AACf7C,QAAIoC,IAAJ,CAAS,+BAAT;AACAnB,kBAAcS,MAAd,EAAsBuB,QAAQJ,GAA9B;AACD;;AAED,MAAII,QAAQhB,OAAZ,EAAqB;AACnBjC,QAAIoC,IAAJ,CAAS,mCAAT;AACApB,sBAAkBU,MAAlB,EAA0BuB,QAAQhB,OAAR,CAAgBiB,UAA1C;AACD;;AAEDlD,MAAIoC,IAAJ,CAAS,sDAAT;AACD,CAhBD;;AAkBA;;;;;;;AAOA,SAASe,IAAT,CAAcC,IAAd,EAAmCpB,MAAnC,EAAqD;AACnD,MAAIiB,OAAJ;AACA,MAAI;AACFA,cAAUjB,OAAOqB,gBAAP,EAAV;AACD,GAFD,CAEE,OAAOC,GAAP,EAAY;AACZtD,QAAIuD,KAAJ;AACE,oBADF;AAEE,oEAFF;;AAIA,WAAOC,QAAQC,MAAR,CAAeH,GAAf,CAAP;AACD;;AAED,MAAI,CAACL,QAAQhB,OAAT,IAAoB,CAACgB,QAAQJ,GAA7B,IAAoC,CAACI,QAAQP,OAA7C,IAAwDnB,wBAA5D,EAAsF;AACpF,UAAM,IAAImC,KAAJ;AACJ;AACA,0EADA;AAEA,qCAFA;AAGA,6FAHA;AAIA,2BALI,CAAN;;AAOD;;AAED,MAAIC,cAAcP,KAAK,CAAL,CAAlB;AACA;AACA,MAAIO,gBAAgBC,SAApB,EAA+B;AAC7BD,kBAAcA,YAAYE,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAd;AACD;;AAED,QAAMC,eAAe3C;AACnBa,QADmB;AAEnB2B,gBAAc,CAACA,WAAD,CAAd,GAA8BzC,wBAFX,CAArB;;;AAKA,QAAMQ,SAASD,aAAaqC,aAAaC,MAAb;AAC1B,GAACrC,MAAD,EAASK,UAAT,KAAwBL,OAAOsC,MAAP,CAAcjC,WAAWC,MAAX,CAAkBN,MAAhC,CADE;AAE1BuB,UAAQvB,MAFkB,CAAb,CAAf;;;AAKA,QAAMuC,QAAQ7D,QAAQ0D,aAAaI,GAAb,CAAiBnC,cAAc;AACnD,QAAMT,UAAUS,WAAWC,MAAX,CAAkBmC,QAAlB,CAA2BC,OAA3B,IAAsC/C,WAAhD,CAD6C;AAEnD,QAAMQ,sBAAsBoB,QAAQhB,OAA9B,EAAuCF,UAAvC,CAF6C;AAGnD,QAAMY,kBAAkBM,QAAQJ,GAA1B,EAA+Bd,UAA/B,CAH6C;AAInD,QAAMS,sBAAsBS,QAAQP,OAA9B,EAAuCX,UAAvC,CAJ6C;AAKnD,QAAMT,UAAUS,WAAWC,MAAX,CAAkBmC,QAAlB,CAA2BE,QAA3B,IAAuChD,WAAjD,CAL6C,CAA/B,CAAR,CAAd;;;AAQA4C,QAAMK,IAAN,CAAW,MAAMtB,WAAWC,OAAX,EAAoBvB,MAApB,CAAjB;;AAEA,SAAOnB,iBAAiB0D,KAAjB,EAAwBM,KAAxB,CAA8BjB,OAAO;AAC1CtD,QAAIuD,KAAJ;AACG,kDAA6CD,IAAIkB,OAAQ,KAA1D;AACA,gFAFF;;AAIA,UAAMlB,GAAN;AACD,GANM,CAAP;AAOD;;AAEDmB,OAAOC,OAAP,GAAiB;AACfC,QAAMxB,IADS;AAEfyB,eAAa,4DAFE;AAGfzC,QAAM,oBAHS,EAAjB",
      "file": "link.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "sourcesContent": [
        "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst log = require('npmlog');\nconst path = require('path');\nconst uniqBy = require('lodash').uniqBy;\nconst flatten = require('lodash').flatten;\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst chalk = require('chalk');\n\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst isEmpty = require('lodash').isEmpty;\nconst promiseWaterfall = require('./promiseWaterfall');\nconst registerDependencyAndroid = require('./android/registerNativeModule');\nconst registerDependencyWindows = require('./windows/registerNativeModule');\nconst registerDependencyIOS = require('./ios/registerNativeModule');\nconst registerDependencyPods = require('./pods/registerNativeModule');\nconst isInstalledAndroid = require('./android/isInstalled');\nconst isInstalledWindows = require('./windows/isInstalled');\nconst isInstalledIOS = require('./ios/isInstalled');\nconst isInstalledPods = require('./pods/isInstalled');\nconst copyAssetsAndroid = require('./android/copyAssets');\nconst copyAssetsIOS = require('./ios/copyAssets');\nconst getProjectDependencies = require('./getProjectDependencies');\nconst getDependencyConfig = require('./getDependencyConfig');\nconst pollParams = require('./pollParams');\nconst commandStub = require('./commandStub');\nconst promisify = require('./promisify');\nconst findReactNativeScripts = require('../util/findReactNativeScripts');\n\nimport type {RNConfig} from '../core';\n\nlog.heading = 'rnpm-link';\n\nconst dedupeAssets = (assets) => uniqBy(assets, asset => path.basename(asset));\n\n\nconst linkDependencyAndroid = (androidProject, dependency) => {\n  if (!androidProject || !dependency.config.android) {\n    return null;\n  }\n\n  const isInstalled = isInstalledAndroid(androidProject, dependency.name);\n\n  if (isInstalled) {\n    log.info(chalk.grey(`Android module ${dependency.name} is already linked`));\n    return null;\n  }\n\n  return pollParams(dependency.config.params).then(params => {\n    log.info(`Linking ${dependency.name} android dependency`);\n\n    registerDependencyAndroid(\n      dependency.name,\n      dependency.config.android,\n      params,\n      androidProject\n    );\n\n    log.info(`Android module ${dependency.name} has been successfully linked`);\n  });\n};\n\nconst linkDependencyWindows = (windowsProject, dependency) => {\n\n  if (!windowsProject || !dependency.config.windows) {\n    return null;\n  }\n\n  const isInstalled = isInstalledWindows(windowsProject, dependency.config.windows);\n\n  if (isInstalled) {\n    log.info(chalk.grey(`Windows module ${dependency.name} is already linked`));\n    return null;\n  }\n\n  return pollParams(dependency.config.params).then(params => {\n    log.info(`Linking ${dependency.name} windows dependency`);\n\n    registerDependencyWindows(\n      dependency.name,\n      dependency.config.windows,\n      params,\n      windowsProject\n    );\n\n    log.info(`Windows module ${dependency.name} has been successfully linked`);\n  });\n};\n\nconst linkDependencyIOS = (iOSProject, dependency) => {\n  if (!iOSProject || !dependency.config.ios) {\n    return;\n  }\n\n  const isInstalled = isInstalledIOS(iOSProject, dependency.config.ios) || isInstalledPods(iOSProject, dependency.config.ios);\n  if (isInstalled) {\n    log.info(chalk.grey(`iOS module ${dependency.name} is already linked`));\n    return;\n  }\n\n  log.info(`Linking ${dependency.name} ios dependency`);\n  if (iOSProject.podfile && dependency.config.ios.podspec) {\n    registerDependencyPods(dependency, iOSProject);\n  }\n  else {\n    registerDependencyIOS(dependency.config.ios, iOSProject);\n  }\n  log.info(`iOS module ${dependency.name} has been successfully linked`);\n};\n\nconst linkAssets = (project, assets) => {\n  if (isEmpty(assets)) {\n    return;\n  }\n\n  if (project.ios) {\n    log.info('Linking assets to ios project');\n    copyAssetsIOS(assets, project.ios);\n  }\n\n  if (project.android) {\n    log.info('Linking assets to android project');\n    copyAssetsAndroid(assets, project.android.assetsPath);\n  }\n\n  log.info('Assets have been successfully linked to your project');\n};\n\n/**\n * Updates project and links all dependencies to it.\n *\n * @param args If optional argument [packageName] is provided,\n *             only that package is processed.\n * @param config CLI config, see local-cli/core/index.js\n */\nfunction link(args: Array<string>, config: RNConfig) {\n  var project;\n  try {\n    project = config.getProjectConfig();\n  } catch (err) {\n    log.error(\n      'ERRPACKAGEJSON',\n      'No package found. Are you sure this is a React Native project?'\n    );\n    return Promise.reject(err);\n  }\n\n  if (!project.android && !project.ios && !project.windows && findReactNativeScripts()) {\n    throw new Error(\n      '`react-native link` can not be used in Create React Native App projects. ' +\n      'If you need to include a library that relies on custom native code, ' +\n      'you might have to eject first. ' +\n      'See https://github.com/react-community/create-react-native-app/blob/master/EJECTING.md ' +\n      'for more information.'\n    );\n  }\n\n  let packageName = args[0];\n  // Check if install package by specific version (eg. package@latest)\n  if (packageName !== undefined) {\n    packageName = packageName.split('@')[0];\n  }\n\n  const dependencies = getDependencyConfig(\n    config,\n    packageName ? [packageName] : getProjectDependencies()\n  );\n\n  const assets = dedupeAssets(dependencies.reduce(\n    (assets, dependency) => assets.concat(dependency.config.assets),\n    project.assets\n  ));\n\n  const tasks = flatten(dependencies.map(dependency => [\n    () => promisify(dependency.config.commands.prelink || commandStub),\n    () => linkDependencyAndroid(project.android, dependency),\n    () => linkDependencyIOS(project.ios, dependency),\n    () => linkDependencyWindows(project.windows, dependency),\n    () => promisify(dependency.config.commands.postlink || commandStub),\n  ]));\n\n  tasks.push(() => linkAssets(project, assets));\n\n  return promiseWaterfall(tasks).catch(err => {\n    log.error(\n      `Something went wrong while linking. Error: ${err.message} \\n` +\n      'Please file an issue here: https://github.com/facebook/react-native/issues'\n    );\n    throw err;\n  });\n}\n\nmodule.exports = {\n  func: link,\n  description: 'links all native dependencies (updates native build files)',\n  name: 'link [packageName]',\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/promiseWaterfall.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/promiseWaterfall.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/promiseWaterfall.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "promiseWaterfall.js",
      "sourceFileName": "promiseWaterfall.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "promiseWaterfall"
    },
    "ignored": false,
    "code": "\"use strict\"; /**\n               * Given an array of promise creators, executes them in a sequence.\n               *\n               * If any of the promises in the chain fails, all subsequent promises\n               * will be skipped\n               *\n               * Returns the value last promise from a sequence resolved\n               */\nmodule.exports = function promiseWaterfall(tasks) {\n  return tasks.reduce(\n  (prevTaskPromise, task) => prevTaskPromise.then(task),\n  Promise.resolve());\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21pc2VXYXRlcmZhbGwuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInByb21pc2VXYXRlcmZhbGwiLCJ0YXNrcyIsInJlZHVjZSIsInByZXZUYXNrUHJvbWlzZSIsInRhc2siLCJ0aGVuIiwiUHJvbWlzZSIsInJlc29sdmUiXSwibWFwcGluZ3MiOiJjQUFBOzs7Ozs7OztBQVFBQSxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLGdCQUFULENBQTBCQyxLQUExQixFQUFpQztBQUNoRCxTQUFPQSxNQUFNQyxNQUFOO0FBQ0wsR0FBQ0MsZUFBRCxFQUFrQkMsSUFBbEIsS0FBMkJELGdCQUFnQkUsSUFBaEIsQ0FBcUJELElBQXJCLENBRHRCO0FBRUxFLFVBQVFDLE9BQVIsRUFGSyxDQUFQOztBQUlELENBTEQiLCJmaWxlIjoicHJvbWlzZVdhdGVyZmFsbC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHaXZlbiBhbiBhcnJheSBvZiBwcm9taXNlIGNyZWF0b3JzLCBleGVjdXRlcyB0aGVtIGluIGEgc2VxdWVuY2UuXG4gKlxuICogSWYgYW55IG9mIHRoZSBwcm9taXNlcyBpbiB0aGUgY2hhaW4gZmFpbHMsIGFsbCBzdWJzZXF1ZW50IHByb21pc2VzXG4gKiB3aWxsIGJlIHNraXBwZWRcbiAqXG4gKiBSZXR1cm5zIHRoZSB2YWx1ZSBsYXN0IHByb21pc2UgZnJvbSBhIHNlcXVlbmNlIHJlc29sdmVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcHJvbWlzZVdhdGVyZmFsbCh0YXNrcykge1xuICByZXR1cm4gdGFza3MucmVkdWNlKFxuICAgIChwcmV2VGFza1Byb21pc2UsIHRhc2spID0+IHByZXZUYXNrUHJvbWlzZS50aGVuKHRhc2spLFxuICAgIFByb21pc2UucmVzb2x2ZSgpXG4gICk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "promiseWaterfall.js"
      ],
      "names": [
        "module",
        "exports",
        "promiseWaterfall",
        "tasks",
        "reduce",
        "prevTaskPromise",
        "task",
        "then",
        "Promise",
        "resolve"
      ],
      "mappings": "cAAA;;;;;;;;AAQAA,OAAOC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAChD,SAAOA,MAAMC,MAAN;AACL,GAACC,eAAD,EAAkBC,IAAlB,KAA2BD,gBAAgBE,IAAhB,CAAqBD,IAArB,CADtB;AAELE,UAAQC,OAAR,EAFK,CAAP;;AAID,CALD",
      "file": "promiseWaterfall.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "sourcesContent": [
        "/**\n * Given an array of promise creators, executes them in a sequence.\n *\n * If any of the promises in the chain fails, all subsequent promises\n * will be skipped\n *\n * Returns the value last promise from a sequence resolved\n */\nmodule.exports = function promiseWaterfall(tasks) {\n  return tasks.reduce(\n    (prevTaskPromise, task) => prevTaskPromise.then(task),\n    Promise.resolve()\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/registerNativeModule.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/registerNativeModule.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/registerNativeModule.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "registerNativeModule.js",
      "sourceFileName": "registerNativeModule.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "registerNativeModule"
    },
    "ignored": false,
    "code": "'use strict';const applyPatch = require('./patches/applyPatch');\nconst makeStringsPatch = require('./patches/makeStringsPatch');\nconst makeSettingsPatch = require('./patches/makeSettingsPatch');\nconst makeBuildPatch = require('./patches/makeBuildPatch');\nconst makeImportPatch = require('./patches/makeImportPatch');\nconst makePackagePatch = require('./patches/makePackagePatch');\n\nmodule.exports = function registerNativeAndroidModule(\nname,\nandroidConfig,\nparams,\nprojectConfig)\n{\n  const buildPatch = makeBuildPatch(name);\n\n  applyPatch(\n  projectConfig.settingsGradlePath,\n  makeSettingsPatch(name, androidConfig, projectConfig));\n\n\n  applyPatch(projectConfig.buildGradlePath, buildPatch);\n  applyPatch(projectConfig.stringsPath, makeStringsPatch(params, name));\n\n  applyPatch(\n  projectConfig.mainFilePath,\n  makePackagePatch(androidConfig.packageInstance, params, name));\n\n\n  applyPatch(\n  projectConfig.mainFilePath,\n  makeImportPatch(androidConfig.packageImportPath));\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyTmF0aXZlTW9kdWxlLmpzIl0sIm5hbWVzIjpbImFwcGx5UGF0Y2giLCJyZXF1aXJlIiwibWFrZVN0cmluZ3NQYXRjaCIsIm1ha2VTZXR0aW5nc1BhdGNoIiwibWFrZUJ1aWxkUGF0Y2giLCJtYWtlSW1wb3J0UGF0Y2giLCJtYWtlUGFja2FnZVBhdGNoIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlZ2lzdGVyTmF0aXZlQW5kcm9pZE1vZHVsZSIsIm5hbWUiLCJhbmRyb2lkQ29uZmlnIiwicGFyYW1zIiwicHJvamVjdENvbmZpZyIsImJ1aWxkUGF0Y2giLCJzZXR0aW5nc0dyYWRsZVBhdGgiLCJidWlsZEdyYWRsZVBhdGgiLCJzdHJpbmdzUGF0aCIsIm1haW5GaWxlUGF0aCIsInBhY2thZ2VJbnN0YW5jZSIsInBhY2thZ2VJbXBvcnRQYXRoIl0sIm1hcHBpbmdzIjoiYUFBQSxNQUFNQSxhQUFhQyxRQUFRLHNCQUFSLENBQW5CO0FBQ0EsTUFBTUMsbUJBQW1CRCxRQUFRLDRCQUFSLENBQXpCO0FBQ0EsTUFBTUUsb0JBQW9CRixRQUFRLDZCQUFSLENBQTFCO0FBQ0EsTUFBTUcsaUJBQWlCSCxRQUFRLDBCQUFSLENBQXZCO0FBQ0EsTUFBTUksa0JBQWtCSixRQUFRLDJCQUFSLENBQXhCO0FBQ0EsTUFBTUssbUJBQW1CTCxRQUFRLDRCQUFSLENBQXpCOztBQUVBTSxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLDJCQUFUO0FBQ2ZDLElBRGU7QUFFZkMsYUFGZTtBQUdmQyxNQUhlO0FBSWZDLGFBSmU7QUFLZjtBQUNBLFFBQU1DLGFBQWFWLGVBQWVNLElBQWYsQ0FBbkI7O0FBRUFWO0FBQ0VhLGdCQUFjRSxrQkFEaEI7QUFFRVosb0JBQWtCTyxJQUFsQixFQUF3QkMsYUFBeEIsRUFBdUNFLGFBQXZDLENBRkY7OztBQUtBYixhQUFXYSxjQUFjRyxlQUF6QixFQUEwQ0YsVUFBMUM7QUFDQWQsYUFBV2EsY0FBY0ksV0FBekIsRUFBc0NmLGlCQUFpQlUsTUFBakIsRUFBeUJGLElBQXpCLENBQXRDOztBQUVBVjtBQUNFYSxnQkFBY0ssWUFEaEI7QUFFRVosbUJBQWlCSyxjQUFjUSxlQUEvQixFQUFnRFAsTUFBaEQsRUFBd0RGLElBQXhELENBRkY7OztBQUtBVjtBQUNFYSxnQkFBY0ssWUFEaEI7QUFFRWIsa0JBQWdCTSxjQUFjUyxpQkFBOUIsQ0FGRjs7QUFJRCxDQXpCRCIsImZpbGUiOiJyZWdpc3Rlck5hdGl2ZU1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL2FuZHJvaWQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhcHBseVBhdGNoID0gcmVxdWlyZSgnLi9wYXRjaGVzL2FwcGx5UGF0Y2gnKTtcbmNvbnN0IG1ha2VTdHJpbmdzUGF0Y2ggPSByZXF1aXJlKCcuL3BhdGNoZXMvbWFrZVN0cmluZ3NQYXRjaCcpO1xuY29uc3QgbWFrZVNldHRpbmdzUGF0Y2ggPSByZXF1aXJlKCcuL3BhdGNoZXMvbWFrZVNldHRpbmdzUGF0Y2gnKTtcbmNvbnN0IG1ha2VCdWlsZFBhdGNoID0gcmVxdWlyZSgnLi9wYXRjaGVzL21ha2VCdWlsZFBhdGNoJyk7XG5jb25zdCBtYWtlSW1wb3J0UGF0Y2ggPSByZXF1aXJlKCcuL3BhdGNoZXMvbWFrZUltcG9ydFBhdGNoJyk7XG5jb25zdCBtYWtlUGFja2FnZVBhdGNoID0gcmVxdWlyZSgnLi9wYXRjaGVzL21ha2VQYWNrYWdlUGF0Y2gnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiByZWdpc3Rlck5hdGl2ZUFuZHJvaWRNb2R1bGUoXG4gIG5hbWUsXG4gIGFuZHJvaWRDb25maWcsXG4gIHBhcmFtcyxcbiAgcHJvamVjdENvbmZpZ1xuKSB7XG4gIGNvbnN0IGJ1aWxkUGF0Y2ggPSBtYWtlQnVpbGRQYXRjaChuYW1lKTtcblxuICBhcHBseVBhdGNoKFxuICAgIHByb2plY3RDb25maWcuc2V0dGluZ3NHcmFkbGVQYXRoLFxuICAgIG1ha2VTZXR0aW5nc1BhdGNoKG5hbWUsIGFuZHJvaWRDb25maWcsIHByb2plY3RDb25maWcpXG4gICk7XG5cbiAgYXBwbHlQYXRjaChwcm9qZWN0Q29uZmlnLmJ1aWxkR3JhZGxlUGF0aCwgYnVpbGRQYXRjaCk7XG4gIGFwcGx5UGF0Y2gocHJvamVjdENvbmZpZy5zdHJpbmdzUGF0aCwgbWFrZVN0cmluZ3NQYXRjaChwYXJhbXMsIG5hbWUpKTtcblxuICBhcHBseVBhdGNoKFxuICAgIHByb2plY3RDb25maWcubWFpbkZpbGVQYXRoLFxuICAgIG1ha2VQYWNrYWdlUGF0Y2goYW5kcm9pZENvbmZpZy5wYWNrYWdlSW5zdGFuY2UsIHBhcmFtcywgbmFtZSlcbiAgKTtcblxuICBhcHBseVBhdGNoKFxuICAgIHByb2plY3RDb25maWcubWFpbkZpbGVQYXRoLFxuICAgIG1ha2VJbXBvcnRQYXRjaChhbmRyb2lkQ29uZmlnLnBhY2thZ2VJbXBvcnRQYXRoKVxuICApO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "registerNativeModule.js"
      ],
      "names": [
        "applyPatch",
        "require",
        "makeStringsPatch",
        "makeSettingsPatch",
        "makeBuildPatch",
        "makeImportPatch",
        "makePackagePatch",
        "module",
        "exports",
        "registerNativeAndroidModule",
        "name",
        "androidConfig",
        "params",
        "projectConfig",
        "buildPatch",
        "settingsGradlePath",
        "buildGradlePath",
        "stringsPath",
        "mainFilePath",
        "packageInstance",
        "packageImportPath"
      ],
      "mappings": "aAAA,MAAMA,aAAaC,QAAQ,sBAAR,CAAnB;AACA,MAAMC,mBAAmBD,QAAQ,4BAAR,CAAzB;AACA,MAAME,oBAAoBF,QAAQ,6BAAR,CAA1B;AACA,MAAMG,iBAAiBH,QAAQ,0BAAR,CAAvB;AACA,MAAMI,kBAAkBJ,QAAQ,2BAAR,CAAxB;AACA,MAAMK,mBAAmBL,QAAQ,4BAAR,CAAzB;;AAEAM,OAAOC,OAAP,GAAiB,SAASC,2BAAT;AACfC,IADe;AAEfC,aAFe;AAGfC,MAHe;AAIfC,aAJe;AAKf;AACA,QAAMC,aAAaV,eAAeM,IAAf,CAAnB;;AAEAV;AACEa,gBAAcE,kBADhB;AAEEZ,oBAAkBO,IAAlB,EAAwBC,aAAxB,EAAuCE,aAAvC,CAFF;;;AAKAb,aAAWa,cAAcG,eAAzB,EAA0CF,UAA1C;AACAd,aAAWa,cAAcI,WAAzB,EAAsCf,iBAAiBU,MAAjB,EAAyBF,IAAzB,CAAtC;;AAEAV;AACEa,gBAAcK,YADhB;AAEEZ,mBAAiBK,cAAcQ,eAA/B,EAAgDP,MAAhD,EAAwDF,IAAxD,CAFF;;;AAKAV;AACEa,gBAAcK,YADhB;AAEEb,kBAAgBM,cAAcS,iBAA9B,CAFF;;AAID,CAzBD",
      "file": "registerNativeModule.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android",
      "sourcesContent": [
        "const applyPatch = require('./patches/applyPatch');\nconst makeStringsPatch = require('./patches/makeStringsPatch');\nconst makeSettingsPatch = require('./patches/makeSettingsPatch');\nconst makeBuildPatch = require('./patches/makeBuildPatch');\nconst makeImportPatch = require('./patches/makeImportPatch');\nconst makePackagePatch = require('./patches/makePackagePatch');\n\nmodule.exports = function registerNativeAndroidModule(\n  name,\n  androidConfig,\n  params,\n  projectConfig\n) {\n  const buildPatch = makeBuildPatch(name);\n\n  applyPatch(\n    projectConfig.settingsGradlePath,\n    makeSettingsPatch(name, androidConfig, projectConfig)\n  );\n\n  applyPatch(projectConfig.buildGradlePath, buildPatch);\n  applyPatch(projectConfig.stringsPath, makeStringsPatch(params, name));\n\n  applyPatch(\n    projectConfig.mainFilePath,\n    makePackagePatch(androidConfig.packageInstance, params, name)\n  );\n\n  applyPatch(\n    projectConfig.mainFilePath,\n    makeImportPatch(androidConfig.packageImportPath)\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/applyPatch.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/applyPatch.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/applyPatch.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "applyPatch.js",
      "sourceFileName": "applyPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "applyPatch"
    },
    "ignored": false,
    "code": "'use strict';const fs = require('fs');\n\nmodule.exports = function applyPatch(file, patch) {\n  fs.writeFileSync(file, fs.\n  readFileSync(file, 'utf8').\n  replace(patch.pattern, match => `${match}${patch.patch}`));\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcGx5UGF0Y2guanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImFwcGx5UGF0Y2giLCJmaWxlIiwicGF0Y2giLCJ3cml0ZUZpbGVTeW5jIiwicmVhZEZpbGVTeW5jIiwicmVwbGFjZSIsInBhdHRlcm4iLCJtYXRjaCJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsS0FBS0MsUUFBUSxJQUFSLENBQVg7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsVUFBVCxDQUFvQkMsSUFBcEIsRUFBMEJDLEtBQTFCLEVBQWlDO0FBQ2hETixLQUFHTyxhQUFILENBQWlCRixJQUFqQixFQUF1Qkw7QUFDcEJRLGNBRG9CLENBQ1BILElBRE8sRUFDRCxNQURDO0FBRXBCSSxTQUZvQixDQUVaSCxNQUFNSSxPQUZNLEVBRUdDLFNBQVUsR0FBRUEsS0FBTSxHQUFFTCxNQUFNQSxLQUFNLEVBRm5DLENBQXZCOztBQUlELENBTEQiLCJmaWxlIjoiYXBwbHlQYXRjaC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL2FuZHJvaWQvcGF0Y2hlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBhcHBseVBhdGNoKGZpbGUsIHBhdGNoKSB7XG4gIGZzLndyaXRlRmlsZVN5bmMoZmlsZSwgZnNcbiAgICAucmVhZEZpbGVTeW5jKGZpbGUsICd1dGY4JylcbiAgICAucmVwbGFjZShwYXRjaC5wYXR0ZXJuLCBtYXRjaCA9PiBgJHttYXRjaH0ke3BhdGNoLnBhdGNofWApXG4gICk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "applyPatch.js"
      ],
      "names": [
        "fs",
        "require",
        "module",
        "exports",
        "applyPatch",
        "file",
        "patch",
        "writeFileSync",
        "readFileSync",
        "replace",
        "pattern",
        "match"
      ],
      "mappings": "aAAA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiC;AAChDN,KAAGO,aAAH,CAAiBF,IAAjB,EAAuBL;AACpBQ,cADoB,CACPH,IADO,EACD,MADC;AAEpBI,SAFoB,CAEZH,MAAMI,OAFM,EAEGC,SAAU,GAAEA,KAAM,GAAEL,MAAMA,KAAM,EAFnC,CAAvB;;AAID,CALD",
      "file": "applyPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "sourcesContent": [
        "const fs = require('fs');\n\nmodule.exports = function applyPatch(file, patch) {\n  fs.writeFileSync(file, fs\n    .readFileSync(file, 'utf8')\n    .replace(patch.pattern, match => `${match}${patch.patch}`)\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/makeStringsPatch.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/makeStringsPatch.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/makeStringsPatch.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "makeStringsPatch.js",
      "sourceFileName": "makeStringsPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "makeStringsPatch"
    },
    "ignored": false,
    "code": "'use strict';const toCamelCase = require('lodash').camelCase;\n\nmodule.exports = function makeStringsPatch(params, prefix) {\n  const values = Object.keys(params).\n  map(param => {\n    const name = toCamelCase(prefix) + '_' + param;\n    return '    ' +\n    `<string moduleConfig=\"true\" name=\"${name}\">${params[param]}</string>`;\n  });\n\n  const patch = values.length > 0 ?\n  values.join('\\n') + '\\n' :\n  '';\n\n  return {\n    pattern: '<resources>\\n',\n    patch };\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ha2VTdHJpbmdzUGF0Y2guanMiXSwibmFtZXMiOlsidG9DYW1lbENhc2UiLCJyZXF1aXJlIiwiY2FtZWxDYXNlIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1ha2VTdHJpbmdzUGF0Y2giLCJwYXJhbXMiLCJwcmVmaXgiLCJ2YWx1ZXMiLCJPYmplY3QiLCJrZXlzIiwibWFwIiwicGFyYW0iLCJuYW1lIiwicGF0Y2giLCJsZW5ndGgiLCJqb2luIiwicGF0dGVybiJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsY0FBY0MsUUFBUSxRQUFSLEVBQWtCQyxTQUF0Qzs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxnQkFBVCxDQUEwQkMsTUFBMUIsRUFBa0NDLE1BQWxDLEVBQTBDO0FBQ3pELFFBQU1DLFNBQVNDLE9BQU9DLElBQVAsQ0FBWUosTUFBWjtBQUNaSyxLQURZLENBQ1JDLFNBQVM7QUFDWixVQUFNQyxPQUFPYixZQUFZTyxNQUFaLElBQXNCLEdBQXRCLEdBQTRCSyxLQUF6QztBQUNBLFdBQU87QUFDSix5Q0FBb0NDLElBQUssS0FBSVAsT0FBT00sS0FBUCxDQUFjLFdBRDlEO0FBRUQsR0FMWSxDQUFmOztBQU9BLFFBQU1FLFFBQVFOLE9BQU9PLE1BQVAsR0FBZ0IsQ0FBaEI7QUFDVlAsU0FBT1EsSUFBUCxDQUFZLElBQVosSUFBb0IsSUFEVjtBQUVWLElBRko7O0FBSUEsU0FBTztBQUNMQyxhQUFTLGVBREo7QUFFTEgsU0FGSyxFQUFQOztBQUlELENBaEJEIiwiZmlsZSI6Im1ha2VTdHJpbmdzUGF0Y2guanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9hbmRyb2lkL3BhdGNoZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0b0NhbWVsQ2FzZSA9IHJlcXVpcmUoJ2xvZGFzaCcpLmNhbWVsQ2FzZTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtYWtlU3RyaW5nc1BhdGNoKHBhcmFtcywgcHJlZml4KSB7XG4gIGNvbnN0IHZhbHVlcyA9IE9iamVjdC5rZXlzKHBhcmFtcylcbiAgICAubWFwKHBhcmFtID0+IHtcbiAgICAgIGNvbnN0IG5hbWUgPSB0b0NhbWVsQ2FzZShwcmVmaXgpICsgJ18nICsgcGFyYW07XG4gICAgICByZXR1cm4gJyAgICAnICtcbiAgICAgICAgYDxzdHJpbmcgbW9kdWxlQ29uZmlnPVwidHJ1ZVwiIG5hbWU9XCIke25hbWV9XCI+JHtwYXJhbXNbcGFyYW1dfTwvc3RyaW5nPmA7XG4gICAgfSk7XG5cbiAgY29uc3QgcGF0Y2ggPSB2YWx1ZXMubGVuZ3RoID4gMFxuICAgID8gdmFsdWVzLmpvaW4oJ1xcbicpICsgJ1xcbidcbiAgICA6ICcnO1xuXG4gIHJldHVybiB7XG4gICAgcGF0dGVybjogJzxyZXNvdXJjZXM+XFxuJyxcbiAgICBwYXRjaCxcbiAgfTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "makeStringsPatch.js"
      ],
      "names": [
        "toCamelCase",
        "require",
        "camelCase",
        "module",
        "exports",
        "makeStringsPatch",
        "params",
        "prefix",
        "values",
        "Object",
        "keys",
        "map",
        "param",
        "name",
        "patch",
        "length",
        "join",
        "pattern"
      ],
      "mappings": "aAAA,MAAMA,cAAcC,QAAQ,QAAR,EAAkBC,SAAtC;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,MAAlC,EAA0C;AACzD,QAAMC,SAASC,OAAOC,IAAP,CAAYJ,MAAZ;AACZK,KADY,CACRC,SAAS;AACZ,UAAMC,OAAOb,YAAYO,MAAZ,IAAsB,GAAtB,GAA4BK,KAAzC;AACA,WAAO;AACJ,yCAAoCC,IAAK,KAAIP,OAAOM,KAAP,CAAc,WAD9D;AAED,GALY,CAAf;;AAOA,QAAME,QAAQN,OAAOO,MAAP,GAAgB,CAAhB;AACVP,SAAOQ,IAAP,CAAY,IAAZ,IAAoB,IADV;AAEV,IAFJ;;AAIA,SAAO;AACLC,aAAS,eADJ;AAELH,SAFK,EAAP;;AAID,CAhBD",
      "file": "makeStringsPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "sourcesContent": [
        "const toCamelCase = require('lodash').camelCase;\n\nmodule.exports = function makeStringsPatch(params, prefix) {\n  const values = Object.keys(params)\n    .map(param => {\n      const name = toCamelCase(prefix) + '_' + param;\n      return '    ' +\n        `<string moduleConfig=\"true\" name=\"${name}\">${params[param]}</string>`;\n    });\n\n  const patch = values.length > 0\n    ? values.join('\\n') + '\\n'\n    : '';\n\n  return {\n    pattern: '<resources>\\n',\n    patch,\n  };\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/makeSettingsPatch.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/makeSettingsPatch.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/makeSettingsPatch.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "makeSettingsPatch.js",
      "sourceFileName": "makeSettingsPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "makeSettingsPatch"
    },
    "ignored": false,
    "code": "'use strict';const path = require('path');\nconst isWin = process.platform === 'win32';\n\nmodule.exports = function makeSettingsPatch(name, androidConfig, projectConfig) {\n  var projectDir = path.relative(\n  path.dirname(projectConfig.settingsGradlePath),\n  androidConfig.sourceDir);\n\n\n  /*\n                             * Fix for Windows\n                             * Backslashes is the escape character and will result in\n                             * an invalid path in settings.gradle\n                             * https://github.com/rnpm/rnpm/issues/113\n                             */\n  if (isWin) {\n    projectDir = projectDir.replace(/\\\\/g, '/');\n  }\n\n  return {\n    pattern: '\\n',\n    patch: `include ':${name}'\\n` +\n    `project(':${name}').projectDir = ` +\n    `new File(rootProject.projectDir, '${projectDir}')\\n` };\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ha2VTZXR0aW5nc1BhdGNoLmpzIl0sIm5hbWVzIjpbInBhdGgiLCJyZXF1aXJlIiwiaXNXaW4iLCJwcm9jZXNzIiwicGxhdGZvcm0iLCJtb2R1bGUiLCJleHBvcnRzIiwibWFrZVNldHRpbmdzUGF0Y2giLCJuYW1lIiwiYW5kcm9pZENvbmZpZyIsInByb2plY3RDb25maWciLCJwcm9qZWN0RGlyIiwicmVsYXRpdmUiLCJkaXJuYW1lIiwic2V0dGluZ3NHcmFkbGVQYXRoIiwic291cmNlRGlyIiwicmVwbGFjZSIsInBhdHRlcm4iLCJwYXRjaCJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsT0FBT0MsUUFBUSxNQUFSLENBQWI7QUFDQSxNQUFNQyxRQUFRQyxRQUFRQyxRQUFSLEtBQXFCLE9BQW5DOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLGlCQUFULENBQTJCQyxJQUEzQixFQUFpQ0MsYUFBakMsRUFBZ0RDLGFBQWhELEVBQStEO0FBQzlFLE1BQUlDLGFBQWFYLEtBQUtZLFFBQUw7QUFDZlosT0FBS2EsT0FBTCxDQUFhSCxjQUFjSSxrQkFBM0IsQ0FEZTtBQUVmTCxnQkFBY00sU0FGQyxDQUFqQjs7O0FBS0E7Ozs7OztBQU1BLE1BQUliLEtBQUosRUFBVztBQUNUUyxpQkFBYUEsV0FBV0ssT0FBWCxDQUFtQixLQUFuQixFQUEwQixHQUExQixDQUFiO0FBQ0Q7O0FBRUQsU0FBTztBQUNMQyxhQUFTLElBREo7QUFFTEMsV0FBUSxhQUFZVixJQUFLLEtBQWxCO0FBQ0osaUJBQVlBLElBQUssa0JBRGI7QUFFSix5Q0FBb0NHLFVBQVcsTUFKN0MsRUFBUDs7QUFNRCxDQXRCRCIsImZpbGUiOiJtYWtlU2V0dGluZ3NQYXRjaC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL2FuZHJvaWQvcGF0Y2hlcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBpc1dpbiA9IHByb2Nlc3MucGxhdGZvcm0gPT09ICd3aW4zMic7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWFrZVNldHRpbmdzUGF0Y2gobmFtZSwgYW5kcm9pZENvbmZpZywgcHJvamVjdENvbmZpZykge1xuICB2YXIgcHJvamVjdERpciA9IHBhdGgucmVsYXRpdmUoXG4gICAgcGF0aC5kaXJuYW1lKHByb2plY3RDb25maWcuc2V0dGluZ3NHcmFkbGVQYXRoKSxcbiAgICBhbmRyb2lkQ29uZmlnLnNvdXJjZURpclxuICApO1xuXG4gIC8qXG4gICAqIEZpeCBmb3IgV2luZG93c1xuICAgKiBCYWNrc2xhc2hlcyBpcyB0aGUgZXNjYXBlIGNoYXJhY3RlciBhbmQgd2lsbCByZXN1bHQgaW5cbiAgICogYW4gaW52YWxpZCBwYXRoIGluIHNldHRpbmdzLmdyYWRsZVxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vcm5wbS9ybnBtL2lzc3Vlcy8xMTNcbiAgICovXG4gIGlmIChpc1dpbikge1xuICAgIHByb2plY3REaXIgPSBwcm9qZWN0RGlyLnJlcGxhY2UoL1xcXFwvZywgJy8nKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0dGVybjogJ1xcbicsXG4gICAgcGF0Y2g6IGBpbmNsdWRlICc6JHtuYW1lfSdcXG5gICtcbiAgICAgIGBwcm9qZWN0KCc6JHtuYW1lfScpLnByb2plY3REaXIgPSBgICtcbiAgICAgIGBuZXcgRmlsZShyb290UHJvamVjdC5wcm9qZWN0RGlyLCAnJHtwcm9qZWN0RGlyfScpXFxuYCxcbiAgfTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "makeSettingsPatch.js"
      ],
      "names": [
        "path",
        "require",
        "isWin",
        "process",
        "platform",
        "module",
        "exports",
        "makeSettingsPatch",
        "name",
        "androidConfig",
        "projectConfig",
        "projectDir",
        "relative",
        "dirname",
        "settingsGradlePath",
        "sourceDir",
        "replace",
        "pattern",
        "patch"
      ],
      "mappings": "aAAA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,MAAMC,QAAQC,QAAQC,QAAR,KAAqB,OAAnC;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,aAAjC,EAAgDC,aAAhD,EAA+D;AAC9E,MAAIC,aAAaX,KAAKY,QAAL;AACfZ,OAAKa,OAAL,CAAaH,cAAcI,kBAA3B,CADe;AAEfL,gBAAcM,SAFC,CAAjB;;;AAKA;;;;;;AAMA,MAAIb,KAAJ,EAAW;AACTS,iBAAaA,WAAWK,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAAb;AACD;;AAED,SAAO;AACLC,aAAS,IADJ;AAELC,WAAQ,aAAYV,IAAK,KAAlB;AACJ,iBAAYA,IAAK,kBADb;AAEJ,yCAAoCG,UAAW,MAJ7C,EAAP;;AAMD,CAtBD",
      "file": "makeSettingsPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "sourcesContent": [
        "const path = require('path');\nconst isWin = process.platform === 'win32';\n\nmodule.exports = function makeSettingsPatch(name, androidConfig, projectConfig) {\n  var projectDir = path.relative(\n    path.dirname(projectConfig.settingsGradlePath),\n    androidConfig.sourceDir\n  );\n\n  /*\n   * Fix for Windows\n   * Backslashes is the escape character and will result in\n   * an invalid path in settings.gradle\n   * https://github.com/rnpm/rnpm/issues/113\n   */\n  if (isWin) {\n    projectDir = projectDir.replace(/\\\\/g, '/');\n  }\n\n  return {\n    pattern: '\\n',\n    patch: `include ':${name}'\\n` +\n      `project(':${name}').projectDir = ` +\n      `new File(rootProject.projectDir, '${projectDir}')\\n`,\n  };\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/makeBuildPatch.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/makeBuildPatch.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/makeBuildPatch.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "makeBuildPatch.js",
      "sourceFileName": "makeBuildPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "makeBuildPatch"
    },
    "ignored": false,
    "code": "\"use strict\";module.exports = function makeBuildPatch(name) {\n  const installPattern = new RegExp(\n  `\\\\s{4}(compile)(\\\\(|\\\\s)(project)\\\\(\\\\\\':${name}\\\\\\'\\\\)(\\\\)|\\\\s)`);\n\n\n  return {\n    installPattern,\n    pattern: /[^ \\t]dependencies {\\n/,\n    patch: `    compile project(':${name}')\\n` };\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ha2VCdWlsZFBhdGNoLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJtYWtlQnVpbGRQYXRjaCIsIm5hbWUiLCJpbnN0YWxsUGF0dGVybiIsIlJlZ0V4cCIsInBhdHRlcm4iLCJwYXRjaCJdLCJtYXBwaW5ncyI6ImFBQUFBLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsY0FBVCxDQUF3QkMsSUFBeEIsRUFBOEI7QUFDN0MsUUFBTUMsaUJBQWlCLElBQUlDLE1BQUo7QUFDcEIsOENBQTJDRixJQUFLLGtCQUQ1QixDQUF2Qjs7O0FBSUEsU0FBTztBQUNMQyxrQkFESztBQUVMRSxhQUFTLHdCQUZKO0FBR0xDLFdBQVEseUJBQXdCSixJQUFLLE1BSGhDLEVBQVA7O0FBS0QsQ0FWRCIsImZpbGUiOiJtYWtlQnVpbGRQYXRjaC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL2FuZHJvaWQvcGF0Y2hlcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWFrZUJ1aWxkUGF0Y2gobmFtZSkge1xuICBjb25zdCBpbnN0YWxsUGF0dGVybiA9IG5ldyBSZWdFeHAoXG4gICAgYFxcXFxzezR9KGNvbXBpbGUpKFxcXFwofFxcXFxzKShwcm9qZWN0KVxcXFwoXFxcXFxcJzoke25hbWV9XFxcXFxcJ1xcXFwpKFxcXFwpfFxcXFxzKWBcbiAgKTtcblxuICByZXR1cm4ge1xuICAgIGluc3RhbGxQYXR0ZXJuLFxuICAgIHBhdHRlcm46IC9bXiBcXHRdZGVwZW5kZW5jaWVzIHtcXG4vLFxuICAgIHBhdGNoOiBgICAgIGNvbXBpbGUgcHJvamVjdCgnOiR7bmFtZX0nKVxcbmBcbiAgfTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "makeBuildPatch.js"
      ],
      "names": [
        "module",
        "exports",
        "makeBuildPatch",
        "name",
        "installPattern",
        "RegExp",
        "pattern",
        "patch"
      ],
      "mappings": "aAAAA,OAAOC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC7C,QAAMC,iBAAiB,IAAIC,MAAJ;AACpB,8CAA2CF,IAAK,kBAD5B,CAAvB;;;AAIA,SAAO;AACLC,kBADK;AAELE,aAAS,wBAFJ;AAGLC,WAAQ,yBAAwBJ,IAAK,MAHhC,EAAP;;AAKD,CAVD",
      "file": "makeBuildPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "sourcesContent": [
        "module.exports = function makeBuildPatch(name) {\n  const installPattern = new RegExp(\n    `\\\\s{4}(compile)(\\\\(|\\\\s)(project)\\\\(\\\\\\':${name}\\\\\\'\\\\)(\\\\)|\\\\s)`\n  );\n\n  return {\n    installPattern,\n    pattern: /[^ \\t]dependencies {\\n/,\n    patch: `    compile project(':${name}')\\n`\n  };\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/makeImportPatch.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/makeImportPatch.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/makeImportPatch.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "makeImportPatch.js",
      "sourceFileName": "makeImportPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "makeImportPatch"
    },
    "ignored": false,
    "code": "'use strict';module.exports = function makeImportPatch(packageImportPath) {\n  return {\n    pattern: 'import com.facebook.react.ReactApplication;',\n    patch: '\\n' + packageImportPath };\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ha2VJbXBvcnRQYXRjaC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibWFrZUltcG9ydFBhdGNoIiwicGFja2FnZUltcG9ydFBhdGgiLCJwYXR0ZXJuIiwicGF0Y2giXSwibWFwcGluZ3MiOiJhQUFBQSxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLGVBQVQsQ0FBeUJDLGlCQUF6QixFQUE0QztBQUMzRCxTQUFPO0FBQ0xDLGFBQVMsNkNBREo7QUFFTEMsV0FBTyxPQUFPRixpQkFGVCxFQUFQOztBQUlELENBTEQiLCJmaWxlIjoibWFrZUltcG9ydFBhdGNoLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvYW5kcm9pZC9wYXRjaGVzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtYWtlSW1wb3J0UGF0Y2gocGFja2FnZUltcG9ydFBhdGgpIHtcbiAgcmV0dXJuIHtcbiAgICBwYXR0ZXJuOiAnaW1wb3J0IGNvbS5mYWNlYm9vay5yZWFjdC5SZWFjdEFwcGxpY2F0aW9uOycsXG4gICAgcGF0Y2g6ICdcXG4nICsgcGFja2FnZUltcG9ydFBhdGgsXG4gIH07XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "makeImportPatch.js"
      ],
      "names": [
        "module",
        "exports",
        "makeImportPatch",
        "packageImportPath",
        "pattern",
        "patch"
      ],
      "mappings": "aAAAA,OAAOC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,iBAAzB,EAA4C;AAC3D,SAAO;AACLC,aAAS,6CADJ;AAELC,WAAO,OAAOF,iBAFT,EAAP;;AAID,CALD",
      "file": "makeImportPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "sourcesContent": [
        "module.exports = function makeImportPatch(packageImportPath) {\n  return {\n    pattern: 'import com.facebook.react.ReactApplication;',\n    patch: '\\n' + packageImportPath,\n  };\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/makePackagePatch.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/makePackagePatch.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/makePackagePatch.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "makePackagePatch.js",
      "sourceFileName": "makePackagePatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "makePackagePatch"
    },
    "ignored": false,
    "code": "'use strict';const applyParams = require('./applyParams');\n\nmodule.exports = function makePackagePatch(packageInstance, params, prefix) {\n  const processedInstance = applyParams(packageInstance, params, prefix);\n\n  return {\n    pattern: 'new MainReactPackage()',\n    patch: ',\\n            ' + processedInstance };\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ha2VQYWNrYWdlUGF0Y2guanMiXSwibmFtZXMiOlsiYXBwbHlQYXJhbXMiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1ha2VQYWNrYWdlUGF0Y2giLCJwYWNrYWdlSW5zdGFuY2UiLCJwYXJhbXMiLCJwcmVmaXgiLCJwcm9jZXNzZWRJbnN0YW5jZSIsInBhdHRlcm4iLCJwYXRjaCJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsY0FBY0MsUUFBUSxlQUFSLENBQXBCOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLGdCQUFULENBQTBCQyxlQUExQixFQUEyQ0MsTUFBM0MsRUFBbURDLE1BQW5ELEVBQTJEO0FBQzFFLFFBQU1DLG9CQUFvQlIsWUFBWUssZUFBWixFQUE2QkMsTUFBN0IsRUFBcUNDLE1BQXJDLENBQTFCOztBQUVBLFNBQU87QUFDTEUsYUFBUyx3QkFESjtBQUVMQyxXQUFPLG9CQUFvQkYsaUJBRnRCLEVBQVA7O0FBSUQsQ0FQRCIsImZpbGUiOiJtYWtlUGFja2FnZVBhdGNoLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvYW5kcm9pZC9wYXRjaGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXBwbHlQYXJhbXMgPSByZXF1aXJlKCcuL2FwcGx5UGFyYW1zJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWFrZVBhY2thZ2VQYXRjaChwYWNrYWdlSW5zdGFuY2UsIHBhcmFtcywgcHJlZml4KSB7XG4gIGNvbnN0IHByb2Nlc3NlZEluc3RhbmNlID0gYXBwbHlQYXJhbXMocGFja2FnZUluc3RhbmNlLCBwYXJhbXMsIHByZWZpeCk7XG5cbiAgcmV0dXJuIHtcbiAgICBwYXR0ZXJuOiAnbmV3IE1haW5SZWFjdFBhY2thZ2UoKScsXG4gICAgcGF0Y2g6ICcsXFxuICAgICAgICAgICAgJyArIHByb2Nlc3NlZEluc3RhbmNlLFxuICB9O1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "makePackagePatch.js"
      ],
      "names": [
        "applyParams",
        "require",
        "module",
        "exports",
        "makePackagePatch",
        "packageInstance",
        "params",
        "prefix",
        "processedInstance",
        "pattern",
        "patch"
      ],
      "mappings": "aAAA,MAAMA,cAAcC,QAAQ,eAAR,CAApB;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,eAA1B,EAA2CC,MAA3C,EAAmDC,MAAnD,EAA2D;AAC1E,QAAMC,oBAAoBR,YAAYK,eAAZ,EAA6BC,MAA7B,EAAqCC,MAArC,CAA1B;;AAEA,SAAO;AACLE,aAAS,wBADJ;AAELC,WAAO,oBAAoBF,iBAFtB,EAAP;;AAID,CAPD",
      "file": "makePackagePatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "sourcesContent": [
        "const applyParams = require('./applyParams');\n\nmodule.exports = function makePackagePatch(packageInstance, params, prefix) {\n  const processedInstance = applyParams(packageInstance, params, prefix);\n\n  return {\n    pattern: 'new MainReactPackage()',\n    patch: ',\\n            ' + processedInstance,\n  };\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/applyParams.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/applyParams.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/applyParams.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "applyParams.js",
      "sourceFileName": "applyParams.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "applyParams"
    },
    "ignored": false,
    "code": "'use strict'; /**\n               * Copyright (c) 2013-present, Facebook, Inc.\n               * All rights reserved.\n               *\n               * This source code is licensed under the BSD-style license found in the\n               * LICENSE file in the root directory of this source tree. An additional grant\n               * of patent rights can be found in the PATENTS file in the same directory.\n               */\n\nconst toCamelCase = require('lodash').camelCase;\n\nmodule.exports = function applyParams(str, params, prefix) {\n  return str.replace(\n  /\\$\\{(\\w+)\\}/g,\n  (pattern, param) => {\n    const name = toCamelCase(prefix) + '_' + param;\n\n    return params[param] ?\n    `getResources().getString(R.string.${name})` :\n    null;\n  });\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcGx5UGFyYW1zLmpzIl0sIm5hbWVzIjpbInRvQ2FtZWxDYXNlIiwicmVxdWlyZSIsImNhbWVsQ2FzZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcHBseVBhcmFtcyIsInN0ciIsInBhcmFtcyIsInByZWZpeCIsInJlcGxhY2UiLCJwYXR0ZXJuIiwicGFyYW0iLCJuYW1lIl0sIm1hcHBpbmdzIjoiY0FBQTs7Ozs7Ozs7O0FBU0EsTUFBTUEsY0FBY0MsUUFBUSxRQUFSLEVBQWtCQyxTQUF0Qzs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxXQUFULENBQXFCQyxHQUFyQixFQUEwQkMsTUFBMUIsRUFBa0NDLE1BQWxDLEVBQTBDO0FBQ3pELFNBQU9GLElBQUlHLE9BQUo7QUFDTCxnQkFESztBQUVMLEdBQUNDLE9BQUQsRUFBVUMsS0FBVixLQUFvQjtBQUNsQixVQUFNQyxPQUFPWixZQUFZUSxNQUFaLElBQXNCLEdBQXRCLEdBQTRCRyxLQUF6Qzs7QUFFQSxXQUFPSixPQUFPSSxLQUFQO0FBQ0YseUNBQW9DQyxJQUFLLEdBRHZDO0FBRUgsUUFGSjtBQUdELEdBUkksQ0FBUDs7QUFVRCxDQVhEIiwiZmlsZSI6ImFwcGx5UGFyYW1zLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvYW5kcm9pZC9wYXRjaGVzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG5cbmNvbnN0IHRvQ2FtZWxDYXNlID0gcmVxdWlyZSgnbG9kYXNoJykuY2FtZWxDYXNlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGFwcGx5UGFyYW1zKHN0ciwgcGFyYW1zLCBwcmVmaXgpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKFxuICAgIC9cXCRcXHsoXFx3KylcXH0vZyxcbiAgICAocGF0dGVybiwgcGFyYW0pID0+IHtcbiAgICAgIGNvbnN0IG5hbWUgPSB0b0NhbWVsQ2FzZShwcmVmaXgpICsgJ18nICsgcGFyYW07XG5cbiAgICAgIHJldHVybiBwYXJhbXNbcGFyYW1dXG4gICAgICAgID8gYGdldFJlc291cmNlcygpLmdldFN0cmluZyhSLnN0cmluZy4ke25hbWV9KWBcbiAgICAgICAgOiBudWxsO1xuICAgIH1cbiAgKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "applyParams.js"
      ],
      "names": [
        "toCamelCase",
        "require",
        "camelCase",
        "module",
        "exports",
        "applyParams",
        "str",
        "params",
        "prefix",
        "replace",
        "pattern",
        "param",
        "name"
      ],
      "mappings": "cAAA;;;;;;;;;AASA,MAAMA,cAAcC,QAAQ,QAAR,EAAkBC,SAAtC;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,MAA1B,EAAkCC,MAAlC,EAA0C;AACzD,SAAOF,IAAIG,OAAJ;AACL,gBADK;AAEL,GAACC,OAAD,EAAUC,KAAV,KAAoB;AAClB,UAAMC,OAAOZ,YAAYQ,MAAZ,IAAsB,GAAtB,GAA4BG,KAAzC;;AAEA,WAAOJ,OAAOI,KAAP;AACF,yCAAoCC,IAAK,GADvC;AAEH,QAFJ;AAGD,GARI,CAAP;;AAUD,CAXD",
      "file": "applyParams.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "sourcesContent": [
        "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nconst toCamelCase = require('lodash').camelCase;\n\nmodule.exports = function applyParams(str, params, prefix) {\n  return str.replace(\n    /\\$\\{(\\w+)\\}/g,\n    (pattern, param) => {\n      const name = toCamelCase(prefix) + '_' + param;\n\n      return params[param]\n        ? `getResources().getString(R.string.${name})`\n        : null;\n    }\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/registerNativeModule.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/registerNativeModule.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/registerNativeModule.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "registerNativeModule.js",
      "sourceFileName": "registerNativeModule.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "registerNativeModule"
    },
    "ignored": false,
    "code": "'use strict';const applyPatch = require('./patches/applyPatch');\n\nconst makeProjectPatch = require('./patches/makeProjectPatch');\nconst makeSolutionPatch = require('./patches/makeSolutionPatch');\nconst makeUsingPatch = require('./patches/makeUsingPatch');\nconst makePackagePatch = require('./patches/makePackagePatch');\n\nmodule.exports = function registerNativeWindowsModule(\nname,\nwindowsConfig,\nparams,\nprojectConfig)\n{\n  applyPatch(projectConfig.projectPath, makeProjectPatch(windowsConfig), true);\n  applyPatch(projectConfig.solutionPath, makeSolutionPatch(windowsConfig), true);\n\n  applyPatch(\n  projectConfig.mainPage,\n  makePackagePatch(windowsConfig.packageInstance, params, name));\n\n\n  applyPatch(\n  projectConfig.mainPage,\n  makeUsingPatch(windowsConfig.packageUsingPath));\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyTmF0aXZlTW9kdWxlLmpzIl0sIm5hbWVzIjpbImFwcGx5UGF0Y2giLCJyZXF1aXJlIiwibWFrZVByb2plY3RQYXRjaCIsIm1ha2VTb2x1dGlvblBhdGNoIiwibWFrZVVzaW5nUGF0Y2giLCJtYWtlUGFja2FnZVBhdGNoIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlZ2lzdGVyTmF0aXZlV2luZG93c01vZHVsZSIsIm5hbWUiLCJ3aW5kb3dzQ29uZmlnIiwicGFyYW1zIiwicHJvamVjdENvbmZpZyIsInByb2plY3RQYXRoIiwic29sdXRpb25QYXRoIiwibWFpblBhZ2UiLCJwYWNrYWdlSW5zdGFuY2UiLCJwYWNrYWdlVXNpbmdQYXRoIl0sIm1hcHBpbmdzIjoiYUFBQSxNQUFNQSxhQUFhQyxRQUFRLHNCQUFSLENBQW5COztBQUVBLE1BQU1DLG1CQUFtQkQsUUFBUSw0QkFBUixDQUF6QjtBQUNBLE1BQU1FLG9CQUFvQkYsUUFBUSw2QkFBUixDQUExQjtBQUNBLE1BQU1HLGlCQUFpQkgsUUFBUSwwQkFBUixDQUF2QjtBQUNBLE1BQU1JLG1CQUFtQkosUUFBUSw0QkFBUixDQUF6Qjs7QUFFQUssT0FBT0MsT0FBUCxHQUFpQixTQUFTQywyQkFBVDtBQUNmQyxJQURlO0FBRWZDLGFBRmU7QUFHZkMsTUFIZTtBQUlmQyxhQUplO0FBS2Y7QUFDQVosYUFBV1ksY0FBY0MsV0FBekIsRUFBc0NYLGlCQUFpQlEsYUFBakIsQ0FBdEMsRUFBdUUsSUFBdkU7QUFDQVYsYUFBV1ksY0FBY0UsWUFBekIsRUFBdUNYLGtCQUFrQk8sYUFBbEIsQ0FBdkMsRUFBeUUsSUFBekU7O0FBRUFWO0FBQ0VZLGdCQUFjRyxRQURoQjtBQUVFVixtQkFBaUJLLGNBQWNNLGVBQS9CLEVBQWdETCxNQUFoRCxFQUF3REYsSUFBeEQsQ0FGRjs7O0FBS0FUO0FBQ0VZLGdCQUFjRyxRQURoQjtBQUVFWCxpQkFBZU0sY0FBY08sZ0JBQTdCLENBRkY7O0FBSUQsQ0FsQkQiLCJmaWxlIjoicmVnaXN0ZXJOYXRpdmVNb2R1bGUuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay93aW5kb3dzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXBwbHlQYXRjaCA9IHJlcXVpcmUoJy4vcGF0Y2hlcy9hcHBseVBhdGNoJyk7XG5cbmNvbnN0IG1ha2VQcm9qZWN0UGF0Y2ggPSByZXF1aXJlKCcuL3BhdGNoZXMvbWFrZVByb2plY3RQYXRjaCcpO1xuY29uc3QgbWFrZVNvbHV0aW9uUGF0Y2ggPSByZXF1aXJlKCcuL3BhdGNoZXMvbWFrZVNvbHV0aW9uUGF0Y2gnKTtcbmNvbnN0IG1ha2VVc2luZ1BhdGNoID0gcmVxdWlyZSgnLi9wYXRjaGVzL21ha2VVc2luZ1BhdGNoJyk7XG5jb25zdCBtYWtlUGFja2FnZVBhdGNoID0gcmVxdWlyZSgnLi9wYXRjaGVzL21ha2VQYWNrYWdlUGF0Y2gnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiByZWdpc3Rlck5hdGl2ZVdpbmRvd3NNb2R1bGUoXG4gIG5hbWUsXG4gIHdpbmRvd3NDb25maWcsXG4gIHBhcmFtcyxcbiAgcHJvamVjdENvbmZpZ1xuKSB7XG4gIGFwcGx5UGF0Y2gocHJvamVjdENvbmZpZy5wcm9qZWN0UGF0aCwgbWFrZVByb2plY3RQYXRjaCh3aW5kb3dzQ29uZmlnKSwgdHJ1ZSk7XG4gIGFwcGx5UGF0Y2gocHJvamVjdENvbmZpZy5zb2x1dGlvblBhdGgsIG1ha2VTb2x1dGlvblBhdGNoKHdpbmRvd3NDb25maWcpLCB0cnVlKTtcblxuICBhcHBseVBhdGNoKFxuICAgIHByb2plY3RDb25maWcubWFpblBhZ2UsXG4gICAgbWFrZVBhY2thZ2VQYXRjaCh3aW5kb3dzQ29uZmlnLnBhY2thZ2VJbnN0YW5jZSwgcGFyYW1zLCBuYW1lKVxuICApO1xuXG4gIGFwcGx5UGF0Y2goXG4gICAgcHJvamVjdENvbmZpZy5tYWluUGFnZSxcbiAgICBtYWtlVXNpbmdQYXRjaCh3aW5kb3dzQ29uZmlnLnBhY2thZ2VVc2luZ1BhdGgpXG4gICk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "registerNativeModule.js"
      ],
      "names": [
        "applyPatch",
        "require",
        "makeProjectPatch",
        "makeSolutionPatch",
        "makeUsingPatch",
        "makePackagePatch",
        "module",
        "exports",
        "registerNativeWindowsModule",
        "name",
        "windowsConfig",
        "params",
        "projectConfig",
        "projectPath",
        "solutionPath",
        "mainPage",
        "packageInstance",
        "packageUsingPath"
      ],
      "mappings": "aAAA,MAAMA,aAAaC,QAAQ,sBAAR,CAAnB;;AAEA,MAAMC,mBAAmBD,QAAQ,4BAAR,CAAzB;AACA,MAAME,oBAAoBF,QAAQ,6BAAR,CAA1B;AACA,MAAMG,iBAAiBH,QAAQ,0BAAR,CAAvB;AACA,MAAMI,mBAAmBJ,QAAQ,4BAAR,CAAzB;;AAEAK,OAAOC,OAAP,GAAiB,SAASC,2BAAT;AACfC,IADe;AAEfC,aAFe;AAGfC,MAHe;AAIfC,aAJe;AAKf;AACAZ,aAAWY,cAAcC,WAAzB,EAAsCX,iBAAiBQ,aAAjB,CAAtC,EAAuE,IAAvE;AACAV,aAAWY,cAAcE,YAAzB,EAAuCX,kBAAkBO,aAAlB,CAAvC,EAAyE,IAAzE;;AAEAV;AACEY,gBAAcG,QADhB;AAEEV,mBAAiBK,cAAcM,eAA/B,EAAgDL,MAAhD,EAAwDF,IAAxD,CAFF;;;AAKAT;AACEY,gBAAcG,QADhB;AAEEX,iBAAeM,cAAcO,gBAA7B,CAFF;;AAID,CAlBD",
      "file": "registerNativeModule.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows",
      "sourcesContent": [
        "const applyPatch = require('./patches/applyPatch');\n\nconst makeProjectPatch = require('./patches/makeProjectPatch');\nconst makeSolutionPatch = require('./patches/makeSolutionPatch');\nconst makeUsingPatch = require('./patches/makeUsingPatch');\nconst makePackagePatch = require('./patches/makePackagePatch');\n\nmodule.exports = function registerNativeWindowsModule(\n  name,\n  windowsConfig,\n  params,\n  projectConfig\n) {\n  applyPatch(projectConfig.projectPath, makeProjectPatch(windowsConfig), true);\n  applyPatch(projectConfig.solutionPath, makeSolutionPatch(windowsConfig), true);\n\n  applyPatch(\n    projectConfig.mainPage,\n    makePackagePatch(windowsConfig.packageInstance, params, name)\n  );\n\n  applyPatch(\n    projectConfig.mainPage,\n    makeUsingPatch(windowsConfig.packageUsingPath)\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/applyPatch.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/applyPatch.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/applyPatch.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "applyPatch.js",
      "sourceFileName": "applyPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "applyPatch"
    },
    "ignored": false,
    "code": "'use strict';const fs = require('fs');\n\nmodule.exports = function applyPatch(file, patch, flip = false) {\n\n  fs.writeFileSync(file, fs.\n  readFileSync(file, 'utf8').\n  replace(patch.pattern, match => {\n    return flip ? `${patch.patch}${match}` : `${match}${patch.patch}`;\n  }));\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcGx5UGF0Y2guanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImFwcGx5UGF0Y2giLCJmaWxlIiwicGF0Y2giLCJmbGlwIiwid3JpdGVGaWxlU3luYyIsInJlYWRGaWxlU3luYyIsInJlcGxhY2UiLCJwYXR0ZXJuIiwibWF0Y2giXSwibWFwcGluZ3MiOiJhQUFBLE1BQU1BLEtBQUtDLFFBQVEsSUFBUixDQUFYOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLFVBQVQsQ0FBb0JDLElBQXBCLEVBQTBCQyxLQUExQixFQUFpQ0MsT0FBTyxLQUF4QyxFQUErQzs7QUFFOURQLEtBQUdRLGFBQUgsQ0FBaUJILElBQWpCLEVBQXVCTDtBQUNwQlMsY0FEb0IsQ0FDUEosSUFETyxFQUNELE1BREM7QUFFcEJLLFNBRm9CLENBRVpKLE1BQU1LLE9BRk0sRUFFR0MsU0FBUztBQUMvQixXQUFPTCxPQUFRLEdBQUVELE1BQU1BLEtBQU0sR0FBRU0sS0FBTSxFQUE5QixHQUFtQyxHQUFFQSxLQUFNLEdBQUVOLE1BQU1BLEtBQU0sRUFBaEU7QUFDRCxHQUpvQixDQUF2Qjs7QUFNRCxDQVJEIiwiZmlsZSI6ImFwcGx5UGF0Y2guanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay93aW5kb3dzL3BhdGNoZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYXBwbHlQYXRjaChmaWxlLCBwYXRjaCwgZmxpcCA9IGZhbHNlKSB7XG5cbiAgZnMud3JpdGVGaWxlU3luYyhmaWxlLCBmc1xuICAgIC5yZWFkRmlsZVN5bmMoZmlsZSwgJ3V0ZjgnKVxuICAgIC5yZXBsYWNlKHBhdGNoLnBhdHRlcm4sIG1hdGNoID0+IHtcbiAgICAgIHJldHVybiBmbGlwID8gYCR7cGF0Y2gucGF0Y2h9JHttYXRjaH1gIDogYCR7bWF0Y2h9JHtwYXRjaC5wYXRjaH1gO1xuICAgIH0pXG4gICk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "applyPatch.js"
      ],
      "names": [
        "fs",
        "require",
        "module",
        "exports",
        "applyPatch",
        "file",
        "patch",
        "flip",
        "writeFileSync",
        "readFileSync",
        "replace",
        "pattern",
        "match"
      ],
      "mappings": "aAAA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,OAAO,KAAxC,EAA+C;;AAE9DP,KAAGQ,aAAH,CAAiBH,IAAjB,EAAuBL;AACpBS,cADoB,CACPJ,IADO,EACD,MADC;AAEpBK,SAFoB,CAEZJ,MAAMK,OAFM,EAEGC,SAAS;AAC/B,WAAOL,OAAQ,GAAED,MAAMA,KAAM,GAAEM,KAAM,EAA9B,GAAmC,GAAEA,KAAM,GAAEN,MAAMA,KAAM,EAAhE;AACD,GAJoB,CAAvB;;AAMD,CARD",
      "file": "applyPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "sourcesContent": [
        "const fs = require('fs');\n\nmodule.exports = function applyPatch(file, patch, flip = false) {\n\n  fs.writeFileSync(file, fs\n    .readFileSync(file, 'utf8')\n    .replace(patch.pattern, match => {\n      return flip ? `${patch.patch}${match}` : `${match}${patch.patch}`;\n    })\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/makeProjectPatch.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/makeProjectPatch.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/makeProjectPatch.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "makeProjectPatch.js",
      "sourceFileName": "makeProjectPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "makeProjectPatch"
    },
    "ignored": false,
    "code": "'use strict';module.exports = function makeProjectPatch(windowsConfig) {\n\n  const projectInsert = `<ProjectReference Include=\"..\\\\${windowsConfig.relativeProjPath}\">\n      <Project>{${windowsConfig.pathGUID}}</Project>\n      <Name>${windowsConfig.projectName}</Name>\n    </ProjectReference>\n    `;\n\n  return {\n    pattern: '<ProjectReference Include=\"..\\\\..\\\\node_modules\\\\react-native-windows\\\\ReactWindows\\\\ReactNative\\\\ReactNative.csproj\">',\n    patch: projectInsert,\n    unpatch: new RegExp(`<ProjectReference.+\\\\s+.+\\\\s+.+${windowsConfig.projectName}.+\\\\s+.+\\\\s`) };\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ha2VQcm9qZWN0UGF0Y2guanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIm1ha2VQcm9qZWN0UGF0Y2giLCJ3aW5kb3dzQ29uZmlnIiwicHJvamVjdEluc2VydCIsInJlbGF0aXZlUHJvalBhdGgiLCJwYXRoR1VJRCIsInByb2plY3ROYW1lIiwicGF0dGVybiIsInBhdGNoIiwidW5wYXRjaCIsIlJlZ0V4cCJdLCJtYXBwaW5ncyI6ImFBQUFBLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsZ0JBQVQsQ0FBMEJDLGFBQTFCLEVBQXlDOztBQUV4RCxRQUFNQyxnQkFBaUIsa0NBQWlDRCxjQUFjRSxnQkFBaUI7a0JBQ3ZFRixjQUFjRyxRQUFTO2NBQzNCSCxjQUFjSSxXQUFZOztLQUZ0Qzs7QUFNQSxTQUFPO0FBQ0xDLGFBQVMsd0hBREo7QUFFTEMsV0FBT0wsYUFGRjtBQUdMTSxhQUFTLElBQUlDLE1BQUosQ0FBWSxrQ0FBaUNSLGNBQWNJLFdBQVksYUFBdkUsQ0FISixFQUFQOztBQUtELENBYkQiLCJmaWxlIjoibWFrZVByb2plY3RQYXRjaC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL3dpbmRvd3MvcGF0Y2hlcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWFrZVByb2plY3RQYXRjaCh3aW5kb3dzQ29uZmlnKSB7XG5cbiAgY29uc3QgcHJvamVjdEluc2VydCA9IGA8UHJvamVjdFJlZmVyZW5jZSBJbmNsdWRlPVwiLi5cXFxcJHt3aW5kb3dzQ29uZmlnLnJlbGF0aXZlUHJvalBhdGh9XCI+XG4gICAgICA8UHJvamVjdD57JHt3aW5kb3dzQ29uZmlnLnBhdGhHVUlEfX08L1Byb2plY3Q+XG4gICAgICA8TmFtZT4ke3dpbmRvd3NDb25maWcucHJvamVjdE5hbWV9PC9OYW1lPlxuICAgIDwvUHJvamVjdFJlZmVyZW5jZT5cbiAgICBgO1xuXG4gIHJldHVybiB7XG4gICAgcGF0dGVybjogJzxQcm9qZWN0UmVmZXJlbmNlIEluY2x1ZGU9XCIuLlxcXFwuLlxcXFxub2RlX21vZHVsZXNcXFxccmVhY3QtbmF0aXZlLXdpbmRvd3NcXFxcUmVhY3RXaW5kb3dzXFxcXFJlYWN0TmF0aXZlXFxcXFJlYWN0TmF0aXZlLmNzcHJvalwiPicsXG4gICAgcGF0Y2g6IHByb2plY3RJbnNlcnQsXG4gICAgdW5wYXRjaDogbmV3IFJlZ0V4cChgPFByb2plY3RSZWZlcmVuY2UuK1xcXFxzKy4rXFxcXHMrLiske3dpbmRvd3NDb25maWcucHJvamVjdE5hbWV9LitcXFxccysuK1xcXFxzYCksXG4gIH07XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "makeProjectPatch.js"
      ],
      "names": [
        "module",
        "exports",
        "makeProjectPatch",
        "windowsConfig",
        "projectInsert",
        "relativeProjPath",
        "pathGUID",
        "projectName",
        "pattern",
        "patch",
        "unpatch",
        "RegExp"
      ],
      "mappings": "aAAAA,OAAOC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,aAA1B,EAAyC;;AAExD,QAAMC,gBAAiB,kCAAiCD,cAAcE,gBAAiB;kBACvEF,cAAcG,QAAS;cAC3BH,cAAcI,WAAY;;KAFtC;;AAMA,SAAO;AACLC,aAAS,wHADJ;AAELC,WAAOL,aAFF;AAGLM,aAAS,IAAIC,MAAJ,CAAY,kCAAiCR,cAAcI,WAAY,aAAvE,CAHJ,EAAP;;AAKD,CAbD",
      "file": "makeProjectPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "sourcesContent": [
        "module.exports = function makeProjectPatch(windowsConfig) {\n\n  const projectInsert = `<ProjectReference Include=\"..\\\\${windowsConfig.relativeProjPath}\">\n      <Project>{${windowsConfig.pathGUID}}</Project>\n      <Name>${windowsConfig.projectName}</Name>\n    </ProjectReference>\n    `;\n\n  return {\n    pattern: '<ProjectReference Include=\"..\\\\..\\\\node_modules\\\\react-native-windows\\\\ReactWindows\\\\ReactNative\\\\ReactNative.csproj\">',\n    patch: projectInsert,\n    unpatch: new RegExp(`<ProjectReference.+\\\\s+.+\\\\s+.+${windowsConfig.projectName}.+\\\\s+.+\\\\s`),\n  };\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/makeSolutionPatch.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/makeSolutionPatch.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/makeSolutionPatch.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "makeSolutionPatch.js",
      "sourceFileName": "makeSolutionPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "makeSolutionPatch"
    },
    "ignored": false,
    "code": "'use strict';module.exports = function makeSolutionPatch(windowsConfig) {\n\n  const solutionInsert = `Project(\"{${windowsConfig.projectGUID.toUpperCase()}}\") = \"${windowsConfig.projectName}\", \"${windowsConfig.relativeProjPath}\", \"{${windowsConfig.pathGUID.toUpperCase()}}\"\nEndProject\n`;\n\n  return {\n    pattern: 'Global',\n    patch: solutionInsert,\n    unpatch: new RegExp(`Project.+${windowsConfig.projectName}.+\\\\s+EndProject\\\\s+`) };\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ha2VTb2x1dGlvblBhdGNoLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJtYWtlU29sdXRpb25QYXRjaCIsIndpbmRvd3NDb25maWciLCJzb2x1dGlvbkluc2VydCIsInByb2plY3RHVUlEIiwidG9VcHBlckNhc2UiLCJwcm9qZWN0TmFtZSIsInJlbGF0aXZlUHJvalBhdGgiLCJwYXRoR1VJRCIsInBhdHRlcm4iLCJwYXRjaCIsInVucGF0Y2giLCJSZWdFeHAiXSwibWFwcGluZ3MiOiJhQUFBQSxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLGlCQUFULENBQTJCQyxhQUEzQixFQUEwQzs7QUFFekQsUUFBTUMsaUJBQWtCLGFBQVlELGNBQWNFLFdBQWQsQ0FBMEJDLFdBQTFCLEVBQXdDLFVBQVNILGNBQWNJLFdBQVksT0FBTUosY0FBY0ssZ0JBQWlCLFFBQU9MLGNBQWNNLFFBQWQsQ0FBdUJILFdBQXZCLEVBQXFDOztDQUFoTTs7QUFJQSxTQUFPO0FBQ0xJLGFBQVMsUUFESjtBQUVMQyxXQUFPUCxjQUZGO0FBR0xRLGFBQVMsSUFBSUMsTUFBSixDQUFZLFlBQVdWLGNBQWNJLFdBQVksc0JBQWpELENBSEosRUFBUDs7QUFLRCxDQVhEIiwiZmlsZSI6Im1ha2VTb2x1dGlvblBhdGNoLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvd2luZG93cy9wYXRjaGVzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtYWtlU29sdXRpb25QYXRjaCh3aW5kb3dzQ29uZmlnKSB7XG5cbiAgY29uc3Qgc29sdXRpb25JbnNlcnQgPSBgUHJvamVjdChcInske3dpbmRvd3NDb25maWcucHJvamVjdEdVSUQudG9VcHBlckNhc2UoKX19XCIpID0gXCIke3dpbmRvd3NDb25maWcucHJvamVjdE5hbWV9XCIsIFwiJHt3aW5kb3dzQ29uZmlnLnJlbGF0aXZlUHJvalBhdGh9XCIsIFwieyR7d2luZG93c0NvbmZpZy5wYXRoR1VJRC50b1VwcGVyQ2FzZSgpfX1cIlxuRW5kUHJvamVjdFxuYDtcblxuICByZXR1cm4ge1xuICAgIHBhdHRlcm46ICdHbG9iYWwnLFxuICAgIHBhdGNoOiBzb2x1dGlvbkluc2VydCxcbiAgICB1bnBhdGNoOiBuZXcgUmVnRXhwKGBQcm9qZWN0Liske3dpbmRvd3NDb25maWcucHJvamVjdE5hbWV9LitcXFxccytFbmRQcm9qZWN0XFxcXHMrYCksXG4gIH07XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "makeSolutionPatch.js"
      ],
      "names": [
        "module",
        "exports",
        "makeSolutionPatch",
        "windowsConfig",
        "solutionInsert",
        "projectGUID",
        "toUpperCase",
        "projectName",
        "relativeProjPath",
        "pathGUID",
        "pattern",
        "patch",
        "unpatch",
        "RegExp"
      ],
      "mappings": "aAAAA,OAAOC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,aAA3B,EAA0C;;AAEzD,QAAMC,iBAAkB,aAAYD,cAAcE,WAAd,CAA0BC,WAA1B,EAAwC,UAASH,cAAcI,WAAY,OAAMJ,cAAcK,gBAAiB,QAAOL,cAAcM,QAAd,CAAuBH,WAAvB,EAAqC;;CAAhM;;AAIA,SAAO;AACLI,aAAS,QADJ;AAELC,WAAOP,cAFF;AAGLQ,aAAS,IAAIC,MAAJ,CAAY,YAAWV,cAAcI,WAAY,sBAAjD,CAHJ,EAAP;;AAKD,CAXD",
      "file": "makeSolutionPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "sourcesContent": [
        "module.exports = function makeSolutionPatch(windowsConfig) {\n\n  const solutionInsert = `Project(\"{${windowsConfig.projectGUID.toUpperCase()}}\") = \"${windowsConfig.projectName}\", \"${windowsConfig.relativeProjPath}\", \"{${windowsConfig.pathGUID.toUpperCase()}}\"\nEndProject\n`;\n\n  return {\n    pattern: 'Global',\n    patch: solutionInsert,\n    unpatch: new RegExp(`Project.+${windowsConfig.projectName}.+\\\\s+EndProject\\\\s+`),\n  };\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/makeUsingPatch.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/makeUsingPatch.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/makeUsingPatch.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "makeUsingPatch.js",
      "sourceFileName": "makeUsingPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "makeUsingPatch"
    },
    "ignored": false,
    "code": "'use strict';module.exports = function makeUsingPatch(packageImportPath) {\n  return {\n    pattern: 'using ReactNative.Modules.Core;',\n    patch: '\\n' + packageImportPath };\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ha2VVc2luZ1BhdGNoLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJtYWtlVXNpbmdQYXRjaCIsInBhY2thZ2VJbXBvcnRQYXRoIiwicGF0dGVybiIsInBhdGNoIl0sIm1hcHBpbmdzIjoiYUFBQUEsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxjQUFULENBQXdCQyxpQkFBeEIsRUFBMkM7QUFDMUQsU0FBTztBQUNMQyxhQUFTLGlDQURKO0FBRUxDLFdBQU8sT0FBT0YsaUJBRlQsRUFBUDs7QUFJRCxDQUxEIiwiZmlsZSI6Im1ha2VVc2luZ1BhdGNoLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvd2luZG93cy9wYXRjaGVzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtYWtlVXNpbmdQYXRjaChwYWNrYWdlSW1wb3J0UGF0aCkge1xuICByZXR1cm4ge1xuICAgIHBhdHRlcm46ICd1c2luZyBSZWFjdE5hdGl2ZS5Nb2R1bGVzLkNvcmU7JyxcbiAgICBwYXRjaDogJ1xcbicgKyBwYWNrYWdlSW1wb3J0UGF0aCxcbiAgfTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "makeUsingPatch.js"
      ],
      "names": [
        "module",
        "exports",
        "makeUsingPatch",
        "packageImportPath",
        "pattern",
        "patch"
      ],
      "mappings": "aAAAA,OAAOC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,iBAAxB,EAA2C;AAC1D,SAAO;AACLC,aAAS,iCADJ;AAELC,WAAO,OAAOF,iBAFT,EAAP;;AAID,CALD",
      "file": "makeUsingPatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "sourcesContent": [
        "module.exports = function makeUsingPatch(packageImportPath) {\n  return {\n    pattern: 'using ReactNative.Modules.Core;',\n    patch: '\\n' + packageImportPath,\n  };\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/makePackagePatch.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/makePackagePatch.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/makePackagePatch.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "makePackagePatch.js",
      "sourceFileName": "makePackagePatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "makePackagePatch"
    },
    "ignored": false,
    "code": "'use strict';const applyParams = require('./applyParams');\n\nmodule.exports = function makePackagePatch(packageInstance, params, prefix) {\n  const processedInstance = applyParams(packageInstance, params, prefix);\n\n  return {\n    pattern: 'new MainReactPackage()',\n    patch: ',\\n                    ' + processedInstance };\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ha2VQYWNrYWdlUGF0Y2guanMiXSwibmFtZXMiOlsiYXBwbHlQYXJhbXMiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1ha2VQYWNrYWdlUGF0Y2giLCJwYWNrYWdlSW5zdGFuY2UiLCJwYXJhbXMiLCJwcmVmaXgiLCJwcm9jZXNzZWRJbnN0YW5jZSIsInBhdHRlcm4iLCJwYXRjaCJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsY0FBY0MsUUFBUSxlQUFSLENBQXBCOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLGdCQUFULENBQTBCQyxlQUExQixFQUEyQ0MsTUFBM0MsRUFBbURDLE1BQW5ELEVBQTJEO0FBQzFFLFFBQU1DLG9CQUFvQlIsWUFBWUssZUFBWixFQUE2QkMsTUFBN0IsRUFBcUNDLE1BQXJDLENBQTFCOztBQUVBLFNBQU87QUFDTEUsYUFBUyx3QkFESjtBQUVMQyxXQUFPLDRCQUE0QkYsaUJBRjlCLEVBQVA7O0FBSUQsQ0FQRCIsImZpbGUiOiJtYWtlUGFja2FnZVBhdGNoLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvd2luZG93cy9wYXRjaGVzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXBwbHlQYXJhbXMgPSByZXF1aXJlKCcuL2FwcGx5UGFyYW1zJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWFrZVBhY2thZ2VQYXRjaChwYWNrYWdlSW5zdGFuY2UsIHBhcmFtcywgcHJlZml4KSB7XG4gIGNvbnN0IHByb2Nlc3NlZEluc3RhbmNlID0gYXBwbHlQYXJhbXMocGFja2FnZUluc3RhbmNlLCBwYXJhbXMsIHByZWZpeCk7XG5cbiAgcmV0dXJuIHtcbiAgICBwYXR0ZXJuOiAnbmV3IE1haW5SZWFjdFBhY2thZ2UoKScsXG4gICAgcGF0Y2g6ICcsXFxuICAgICAgICAgICAgICAgICAgICAnICsgcHJvY2Vzc2VkSW5zdGFuY2UsXG4gIH07XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "makePackagePatch.js"
      ],
      "names": [
        "applyParams",
        "require",
        "module",
        "exports",
        "makePackagePatch",
        "packageInstance",
        "params",
        "prefix",
        "processedInstance",
        "pattern",
        "patch"
      ],
      "mappings": "aAAA,MAAMA,cAAcC,QAAQ,eAAR,CAApB;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,eAA1B,EAA2CC,MAA3C,EAAmDC,MAAnD,EAA2D;AAC1E,QAAMC,oBAAoBR,YAAYK,eAAZ,EAA6BC,MAA7B,EAAqCC,MAArC,CAA1B;;AAEA,SAAO;AACLE,aAAS,wBADJ;AAELC,WAAO,4BAA4BF,iBAF9B,EAAP;;AAID,CAPD",
      "file": "makePackagePatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "sourcesContent": [
        "const applyParams = require('./applyParams');\n\nmodule.exports = function makePackagePatch(packageInstance, params, prefix) {\n  const processedInstance = applyParams(packageInstance, params, prefix);\n\n  return {\n    pattern: 'new MainReactPackage()',\n    patch: ',\\n                    ' + processedInstance,\n  };\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/applyParams.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/applyParams.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/applyParams.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "applyParams.js",
      "sourceFileName": "applyParams.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "applyParams"
    },
    "ignored": false,
    "code": "'use strict'; /**\n               * Copyright (c) 2013-present, Facebook, Inc.\n               * All rights reserved.\n               *\n               * This source code is licensed under the BSD-style license found in the\n               * LICENSE file in the root directory of this source tree. An additional grant\n               * of patent rights can be found in the PATENTS file in the same directory.\n               */\n\nconst toCamelCase = require('lodash').camelCase;\n\nmodule.exports = function applyParams(str, params, prefix) {\n  return str.replace(\n  /\\$\\{(\\w+)\\}/g,\n  (pattern, param) => {\n    const name = toCamelCase(prefix) + '_' + param;\n\n    return params[param] ?\n    `getResources().getString(R.string.${name})` :\n    null;\n  });\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcGx5UGFyYW1zLmpzIl0sIm5hbWVzIjpbInRvQ2FtZWxDYXNlIiwicmVxdWlyZSIsImNhbWVsQ2FzZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcHBseVBhcmFtcyIsInN0ciIsInBhcmFtcyIsInByZWZpeCIsInJlcGxhY2UiLCJwYXR0ZXJuIiwicGFyYW0iLCJuYW1lIl0sIm1hcHBpbmdzIjoiY0FBQTs7Ozs7Ozs7O0FBU0EsTUFBTUEsY0FBY0MsUUFBUSxRQUFSLEVBQWtCQyxTQUF0Qzs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxXQUFULENBQXFCQyxHQUFyQixFQUEwQkMsTUFBMUIsRUFBa0NDLE1BQWxDLEVBQTBDO0FBQ3pELFNBQU9GLElBQUlHLE9BQUo7QUFDTCxnQkFESztBQUVMLEdBQUNDLE9BQUQsRUFBVUMsS0FBVixLQUFvQjtBQUNsQixVQUFNQyxPQUFPWixZQUFZUSxNQUFaLElBQXNCLEdBQXRCLEdBQTRCRyxLQUF6Qzs7QUFFQSxXQUFPSixPQUFPSSxLQUFQO0FBQ0YseUNBQW9DQyxJQUFLLEdBRHZDO0FBRUgsUUFGSjtBQUdELEdBUkksQ0FBUDs7QUFVRCxDQVhEIiwiZmlsZSI6ImFwcGx5UGFyYW1zLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvd2luZG93cy9wYXRjaGVzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG5cbmNvbnN0IHRvQ2FtZWxDYXNlID0gcmVxdWlyZSgnbG9kYXNoJykuY2FtZWxDYXNlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGFwcGx5UGFyYW1zKHN0ciwgcGFyYW1zLCBwcmVmaXgpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKFxuICAgIC9cXCRcXHsoXFx3KylcXH0vZyxcbiAgICAocGF0dGVybiwgcGFyYW0pID0+IHtcbiAgICAgIGNvbnN0IG5hbWUgPSB0b0NhbWVsQ2FzZShwcmVmaXgpICsgJ18nICsgcGFyYW07XG5cbiAgICAgIHJldHVybiBwYXJhbXNbcGFyYW1dXG4gICAgICAgID8gYGdldFJlc291cmNlcygpLmdldFN0cmluZyhSLnN0cmluZy4ke25hbWV9KWBcbiAgICAgICAgOiBudWxsO1xuICAgIH1cbiAgKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "applyParams.js"
      ],
      "names": [
        "toCamelCase",
        "require",
        "camelCase",
        "module",
        "exports",
        "applyParams",
        "str",
        "params",
        "prefix",
        "replace",
        "pattern",
        "param",
        "name"
      ],
      "mappings": "cAAA;;;;;;;;;AASA,MAAMA,cAAcC,QAAQ,QAAR,EAAkBC,SAAtC;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,MAA1B,EAAkCC,MAAlC,EAA0C;AACzD,SAAOF,IAAIG,OAAJ;AACL,gBADK;AAEL,GAACC,OAAD,EAAUC,KAAV,KAAoB;AAClB,UAAMC,OAAOZ,YAAYQ,MAAZ,IAAsB,GAAtB,GAA4BG,KAAzC;;AAEA,WAAOJ,OAAOI,KAAP;AACF,yCAAoCC,IAAK,GADvC;AAEH,QAFJ;AAGD,GARI,CAAP;;AAUD,CAXD",
      "file": "applyParams.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "sourcesContent": [
        "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nconst toCamelCase = require('lodash').camelCase;\n\nmodule.exports = function applyParams(str, params, prefix) {\n  return str.replace(\n    /\\$\\{(\\w+)\\}/g,\n    (pattern, param) => {\n      const name = toCamelCase(prefix) + '_' + param;\n\n      return params[param]\n        ? `getResources().getString(R.string.${name})`\n        : null;\n    }\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/registerNativeModule.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/registerNativeModule.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/registerNativeModule.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "registerNativeModule.js",
      "sourceFileName": "registerNativeModule.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "registerNativeModule"
    },
    "ignored": false,
    "code": "'use strict';const xcode = require('xcode');\nconst fs = require('fs');\nconst path = require('path');\nconst log = require('npmlog');\n\nconst addToHeaderSearchPaths = require('./addToHeaderSearchPaths');\nconst getHeadersInFolder = require('./getHeadersInFolder');\nconst getHeaderSearchPath = require('./getHeaderSearchPath');\nconst getProducts = require('./getProducts');\nconst createGroupWithMessage = require('./createGroupWithMessage');\nconst addFileToProject = require('./addFileToProject');\nconst addProjectToLibraries = require('./addProjectToLibraries');\nconst addSharedLibraries = require('./addSharedLibraries');\nconst isEmpty = require('lodash').isEmpty;\nconst getGroup = require('./getGroup');\n\n/**\n                                         * Register native module IOS adds given dependency to project by adding\n                                         * its xcodeproj to project libraries as well as attaching static library\n                                         * to the first target (the main one)\n                                         *\n                                         * If library is already linked, this action is a no-op.\n                                         */\nmodule.exports = function registerNativeModuleIOS(dependencyConfig, projectConfig) {\n  const project = xcode.project(projectConfig.pbxprojPath).parseSync();\n  const dependencyProject = xcode.project(dependencyConfig.pbxprojPath).parseSync();\n\n  const libraries = createGroupWithMessage(project, projectConfig.libraryFolder);\n  const file = addFileToProject(\n  project,\n  path.relative(projectConfig.sourceDir, dependencyConfig.projectPath));\n\n\n  addProjectToLibraries(libraries, file);\n\n  getProducts(dependencyProject).forEach(product => {\n    project.addStaticLibrary(product, {\n      target: project.getFirstTarget().uuid });\n\n  });\n\n  addSharedLibraries(project, dependencyConfig.sharedLibraries);\n\n  const headers = getHeadersInFolder(dependencyConfig.folder);\n  if (!isEmpty(headers)) {\n    addToHeaderSearchPaths(\n    project,\n    getHeaderSearchPath(projectConfig.sourceDir, headers));\n\n  }\n\n  fs.writeFileSync(\n  projectConfig.pbxprojPath,\n  project.writeSync());\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyTmF0aXZlTW9kdWxlLmpzIl0sIm5hbWVzIjpbInhjb2RlIiwicmVxdWlyZSIsImZzIiwicGF0aCIsImxvZyIsImFkZFRvSGVhZGVyU2VhcmNoUGF0aHMiLCJnZXRIZWFkZXJzSW5Gb2xkZXIiLCJnZXRIZWFkZXJTZWFyY2hQYXRoIiwiZ2V0UHJvZHVjdHMiLCJjcmVhdGVHcm91cFdpdGhNZXNzYWdlIiwiYWRkRmlsZVRvUHJvamVjdCIsImFkZFByb2plY3RUb0xpYnJhcmllcyIsImFkZFNoYXJlZExpYnJhcmllcyIsImlzRW1wdHkiLCJnZXRHcm91cCIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZWdpc3Rlck5hdGl2ZU1vZHVsZUlPUyIsImRlcGVuZGVuY3lDb25maWciLCJwcm9qZWN0Q29uZmlnIiwicHJvamVjdCIsInBieHByb2pQYXRoIiwicGFyc2VTeW5jIiwiZGVwZW5kZW5jeVByb2plY3QiLCJsaWJyYXJpZXMiLCJsaWJyYXJ5Rm9sZGVyIiwiZmlsZSIsInJlbGF0aXZlIiwic291cmNlRGlyIiwicHJvamVjdFBhdGgiLCJmb3JFYWNoIiwicHJvZHVjdCIsImFkZFN0YXRpY0xpYnJhcnkiLCJ0YXJnZXQiLCJnZXRGaXJzdFRhcmdldCIsInV1aWQiLCJzaGFyZWRMaWJyYXJpZXMiLCJoZWFkZXJzIiwiZm9sZGVyIiwid3JpdGVGaWxlU3luYyIsIndyaXRlU3luYyJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsUUFBUUMsUUFBUSxPQUFSLENBQWQ7QUFDQSxNQUFNQyxLQUFLRCxRQUFRLElBQVIsQ0FBWDtBQUNBLE1BQU1FLE9BQU9GLFFBQVEsTUFBUixDQUFiO0FBQ0EsTUFBTUcsTUFBTUgsUUFBUSxRQUFSLENBQVo7O0FBRUEsTUFBTUkseUJBQXlCSixRQUFRLDBCQUFSLENBQS9CO0FBQ0EsTUFBTUsscUJBQXFCTCxRQUFRLHNCQUFSLENBQTNCO0FBQ0EsTUFBTU0sc0JBQXNCTixRQUFRLHVCQUFSLENBQTVCO0FBQ0EsTUFBTU8sY0FBY1AsUUFBUSxlQUFSLENBQXBCO0FBQ0EsTUFBTVEseUJBQXlCUixRQUFRLDBCQUFSLENBQS9CO0FBQ0EsTUFBTVMsbUJBQW1CVCxRQUFRLG9CQUFSLENBQXpCO0FBQ0EsTUFBTVUsd0JBQXdCVixRQUFRLHlCQUFSLENBQTlCO0FBQ0EsTUFBTVcscUJBQXFCWCxRQUFRLHNCQUFSLENBQTNCO0FBQ0EsTUFBTVksVUFBVVosUUFBUSxRQUFSLEVBQWtCWSxPQUFsQztBQUNBLE1BQU1DLFdBQVdiLFFBQVEsWUFBUixDQUFqQjs7QUFFQTs7Ozs7OztBQU9BYyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLHVCQUFULENBQWlDQyxnQkFBakMsRUFBbURDLGFBQW5ELEVBQWtFO0FBQ2pGLFFBQU1DLFVBQVVwQixNQUFNb0IsT0FBTixDQUFjRCxjQUFjRSxXQUE1QixFQUF5Q0MsU0FBekMsRUFBaEI7QUFDQSxRQUFNQyxvQkFBb0J2QixNQUFNb0IsT0FBTixDQUFjRixpQkFBaUJHLFdBQS9CLEVBQTRDQyxTQUE1QyxFQUExQjs7QUFFQSxRQUFNRSxZQUFZZix1QkFBdUJXLE9BQXZCLEVBQWdDRCxjQUFjTSxhQUE5QyxDQUFsQjtBQUNBLFFBQU1DLE9BQU9oQjtBQUNYVSxTQURXO0FBRVhqQixPQUFLd0IsUUFBTCxDQUFjUixjQUFjUyxTQUE1QixFQUF1Q1YsaUJBQWlCVyxXQUF4RCxDQUZXLENBQWI7OztBQUtBbEIsd0JBQXNCYSxTQUF0QixFQUFpQ0UsSUFBakM7O0FBRUFsQixjQUFZZSxpQkFBWixFQUErQk8sT0FBL0IsQ0FBdUNDLFdBQVc7QUFDaERYLFlBQVFZLGdCQUFSLENBQXlCRCxPQUF6QixFQUFrQztBQUNoQ0UsY0FBUWIsUUFBUWMsY0FBUixHQUF5QkMsSUFERCxFQUFsQzs7QUFHRCxHQUpEOztBQU1BdkIscUJBQW1CUSxPQUFuQixFQUE0QkYsaUJBQWlCa0IsZUFBN0M7O0FBRUEsUUFBTUMsVUFBVS9CLG1CQUFtQlksaUJBQWlCb0IsTUFBcEMsQ0FBaEI7QUFDQSxNQUFJLENBQUN6QixRQUFRd0IsT0FBUixDQUFMLEVBQXVCO0FBQ3JCaEM7QUFDRWUsV0FERjtBQUVFYix3QkFBb0JZLGNBQWNTLFNBQWxDLEVBQTZDUyxPQUE3QyxDQUZGOztBQUlEOztBQUVEbkMsS0FBR3FDLGFBQUg7QUFDRXBCLGdCQUFjRSxXQURoQjtBQUVFRCxVQUFRb0IsU0FBUixFQUZGOztBQUlELENBaENEIiwiZmlsZSI6InJlZ2lzdGVyTmF0aXZlTW9kdWxlLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvaW9zIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeGNvZGUgPSByZXF1aXJlKCd4Y29kZScpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGxvZyA9IHJlcXVpcmUoJ25wbWxvZycpO1xuXG5jb25zdCBhZGRUb0hlYWRlclNlYXJjaFBhdGhzID0gcmVxdWlyZSgnLi9hZGRUb0hlYWRlclNlYXJjaFBhdGhzJyk7XG5jb25zdCBnZXRIZWFkZXJzSW5Gb2xkZXIgPSByZXF1aXJlKCcuL2dldEhlYWRlcnNJbkZvbGRlcicpO1xuY29uc3QgZ2V0SGVhZGVyU2VhcmNoUGF0aCA9IHJlcXVpcmUoJy4vZ2V0SGVhZGVyU2VhcmNoUGF0aCcpO1xuY29uc3QgZ2V0UHJvZHVjdHMgPSByZXF1aXJlKCcuL2dldFByb2R1Y3RzJyk7XG5jb25zdCBjcmVhdGVHcm91cFdpdGhNZXNzYWdlID0gcmVxdWlyZSgnLi9jcmVhdGVHcm91cFdpdGhNZXNzYWdlJyk7XG5jb25zdCBhZGRGaWxlVG9Qcm9qZWN0ID0gcmVxdWlyZSgnLi9hZGRGaWxlVG9Qcm9qZWN0Jyk7XG5jb25zdCBhZGRQcm9qZWN0VG9MaWJyYXJpZXMgPSByZXF1aXJlKCcuL2FkZFByb2plY3RUb0xpYnJhcmllcycpO1xuY29uc3QgYWRkU2hhcmVkTGlicmFyaWVzID0gcmVxdWlyZSgnLi9hZGRTaGFyZWRMaWJyYXJpZXMnKTtcbmNvbnN0IGlzRW1wdHkgPSByZXF1aXJlKCdsb2Rhc2gnKS5pc0VtcHR5O1xuY29uc3QgZ2V0R3JvdXAgPSByZXF1aXJlKCcuL2dldEdyb3VwJyk7XG5cbi8qKlxuICogUmVnaXN0ZXIgbmF0aXZlIG1vZHVsZSBJT1MgYWRkcyBnaXZlbiBkZXBlbmRlbmN5IHRvIHByb2plY3QgYnkgYWRkaW5nXG4gKiBpdHMgeGNvZGVwcm9qIHRvIHByb2plY3QgbGlicmFyaWVzIGFzIHdlbGwgYXMgYXR0YWNoaW5nIHN0YXRpYyBsaWJyYXJ5XG4gKiB0byB0aGUgZmlyc3QgdGFyZ2V0ICh0aGUgbWFpbiBvbmUpXG4gKlxuICogSWYgbGlicmFyeSBpcyBhbHJlYWR5IGxpbmtlZCwgdGhpcyBhY3Rpb24gaXMgYSBuby1vcC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiByZWdpc3Rlck5hdGl2ZU1vZHVsZUlPUyhkZXBlbmRlbmN5Q29uZmlnLCBwcm9qZWN0Q29uZmlnKSB7XG4gIGNvbnN0IHByb2plY3QgPSB4Y29kZS5wcm9qZWN0KHByb2plY3RDb25maWcucGJ4cHJvalBhdGgpLnBhcnNlU3luYygpO1xuICBjb25zdCBkZXBlbmRlbmN5UHJvamVjdCA9IHhjb2RlLnByb2plY3QoZGVwZW5kZW5jeUNvbmZpZy5wYnhwcm9qUGF0aCkucGFyc2VTeW5jKCk7XG5cbiAgY29uc3QgbGlicmFyaWVzID0gY3JlYXRlR3JvdXBXaXRoTWVzc2FnZShwcm9qZWN0LCBwcm9qZWN0Q29uZmlnLmxpYnJhcnlGb2xkZXIpO1xuICBjb25zdCBmaWxlID0gYWRkRmlsZVRvUHJvamVjdChcbiAgICBwcm9qZWN0LFxuICAgIHBhdGgucmVsYXRpdmUocHJvamVjdENvbmZpZy5zb3VyY2VEaXIsIGRlcGVuZGVuY3lDb25maWcucHJvamVjdFBhdGgpXG4gICk7XG5cbiAgYWRkUHJvamVjdFRvTGlicmFyaWVzKGxpYnJhcmllcywgZmlsZSk7XG5cbiAgZ2V0UHJvZHVjdHMoZGVwZW5kZW5jeVByb2plY3QpLmZvckVhY2gocHJvZHVjdCA9PiB7XG4gICAgcHJvamVjdC5hZGRTdGF0aWNMaWJyYXJ5KHByb2R1Y3QsIHtcbiAgICAgIHRhcmdldDogcHJvamVjdC5nZXRGaXJzdFRhcmdldCgpLnV1aWQsXG4gICAgfSk7XG4gIH0pO1xuXG4gIGFkZFNoYXJlZExpYnJhcmllcyhwcm9qZWN0LCBkZXBlbmRlbmN5Q29uZmlnLnNoYXJlZExpYnJhcmllcyk7XG5cbiAgY29uc3QgaGVhZGVycyA9IGdldEhlYWRlcnNJbkZvbGRlcihkZXBlbmRlbmN5Q29uZmlnLmZvbGRlcik7XG4gIGlmICghaXNFbXB0eShoZWFkZXJzKSkge1xuICAgIGFkZFRvSGVhZGVyU2VhcmNoUGF0aHMoXG4gICAgICBwcm9qZWN0LFxuICAgICAgZ2V0SGVhZGVyU2VhcmNoUGF0aChwcm9qZWN0Q29uZmlnLnNvdXJjZURpciwgaGVhZGVycylcbiAgICApO1xuICB9XG5cbiAgZnMud3JpdGVGaWxlU3luYyhcbiAgICBwcm9qZWN0Q29uZmlnLnBieHByb2pQYXRoLFxuICAgIHByb2plY3Qud3JpdGVTeW5jKClcbiAgKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "registerNativeModule.js"
      ],
      "names": [
        "xcode",
        "require",
        "fs",
        "path",
        "log",
        "addToHeaderSearchPaths",
        "getHeadersInFolder",
        "getHeaderSearchPath",
        "getProducts",
        "createGroupWithMessage",
        "addFileToProject",
        "addProjectToLibraries",
        "addSharedLibraries",
        "isEmpty",
        "getGroup",
        "module",
        "exports",
        "registerNativeModuleIOS",
        "dependencyConfig",
        "projectConfig",
        "project",
        "pbxprojPath",
        "parseSync",
        "dependencyProject",
        "libraries",
        "libraryFolder",
        "file",
        "relative",
        "sourceDir",
        "projectPath",
        "forEach",
        "product",
        "addStaticLibrary",
        "target",
        "getFirstTarget",
        "uuid",
        "sharedLibraries",
        "headers",
        "folder",
        "writeFileSync",
        "writeSync"
      ],
      "mappings": "aAAA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,MAAMC,KAAKD,QAAQ,IAAR,CAAX;AACA,MAAME,OAAOF,QAAQ,MAAR,CAAb;AACA,MAAMG,MAAMH,QAAQ,QAAR,CAAZ;;AAEA,MAAMI,yBAAyBJ,QAAQ,0BAAR,CAA/B;AACA,MAAMK,qBAAqBL,QAAQ,sBAAR,CAA3B;AACA,MAAMM,sBAAsBN,QAAQ,uBAAR,CAA5B;AACA,MAAMO,cAAcP,QAAQ,eAAR,CAApB;AACA,MAAMQ,yBAAyBR,QAAQ,0BAAR,CAA/B;AACA,MAAMS,mBAAmBT,QAAQ,oBAAR,CAAzB;AACA,MAAMU,wBAAwBV,QAAQ,yBAAR,CAA9B;AACA,MAAMW,qBAAqBX,QAAQ,sBAAR,CAA3B;AACA,MAAMY,UAAUZ,QAAQ,QAAR,EAAkBY,OAAlC;AACA,MAAMC,WAAWb,QAAQ,YAAR,CAAjB;;AAEA;;;;;;;AAOAc,OAAOC,OAAP,GAAiB,SAASC,uBAAT,CAAiCC,gBAAjC,EAAmDC,aAAnD,EAAkE;AACjF,QAAMC,UAAUpB,MAAMoB,OAAN,CAAcD,cAAcE,WAA5B,EAAyCC,SAAzC,EAAhB;AACA,QAAMC,oBAAoBvB,MAAMoB,OAAN,CAAcF,iBAAiBG,WAA/B,EAA4CC,SAA5C,EAA1B;;AAEA,QAAME,YAAYf,uBAAuBW,OAAvB,EAAgCD,cAAcM,aAA9C,CAAlB;AACA,QAAMC,OAAOhB;AACXU,SADW;AAEXjB,OAAKwB,QAAL,CAAcR,cAAcS,SAA5B,EAAuCV,iBAAiBW,WAAxD,CAFW,CAAb;;;AAKAlB,wBAAsBa,SAAtB,EAAiCE,IAAjC;;AAEAlB,cAAYe,iBAAZ,EAA+BO,OAA/B,CAAuCC,WAAW;AAChDX,YAAQY,gBAAR,CAAyBD,OAAzB,EAAkC;AAChCE,cAAQb,QAAQc,cAAR,GAAyBC,IADD,EAAlC;;AAGD,GAJD;;AAMAvB,qBAAmBQ,OAAnB,EAA4BF,iBAAiBkB,eAA7C;;AAEA,QAAMC,UAAU/B,mBAAmBY,iBAAiBoB,MAApC,CAAhB;AACA,MAAI,CAACzB,QAAQwB,OAAR,CAAL,EAAuB;AACrBhC;AACEe,WADF;AAEEb,wBAAoBY,cAAcS,SAAlC,EAA6CS,OAA7C,CAFF;;AAID;;AAEDnC,KAAGqC,aAAH;AACEpB,gBAAcE,WADhB;AAEED,UAAQoB,SAAR,EAFF;;AAID,CAhCD",
      "file": "registerNativeModule.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const xcode = require('xcode');\nconst fs = require('fs');\nconst path = require('path');\nconst log = require('npmlog');\n\nconst addToHeaderSearchPaths = require('./addToHeaderSearchPaths');\nconst getHeadersInFolder = require('./getHeadersInFolder');\nconst getHeaderSearchPath = require('./getHeaderSearchPath');\nconst getProducts = require('./getProducts');\nconst createGroupWithMessage = require('./createGroupWithMessage');\nconst addFileToProject = require('./addFileToProject');\nconst addProjectToLibraries = require('./addProjectToLibraries');\nconst addSharedLibraries = require('./addSharedLibraries');\nconst isEmpty = require('lodash').isEmpty;\nconst getGroup = require('./getGroup');\n\n/**\n * Register native module IOS adds given dependency to project by adding\n * its xcodeproj to project libraries as well as attaching static library\n * to the first target (the main one)\n *\n * If library is already linked, this action is a no-op.\n */\nmodule.exports = function registerNativeModuleIOS(dependencyConfig, projectConfig) {\n  const project = xcode.project(projectConfig.pbxprojPath).parseSync();\n  const dependencyProject = xcode.project(dependencyConfig.pbxprojPath).parseSync();\n\n  const libraries = createGroupWithMessage(project, projectConfig.libraryFolder);\n  const file = addFileToProject(\n    project,\n    path.relative(projectConfig.sourceDir, dependencyConfig.projectPath)\n  );\n\n  addProjectToLibraries(libraries, file);\n\n  getProducts(dependencyProject).forEach(product => {\n    project.addStaticLibrary(product, {\n      target: project.getFirstTarget().uuid,\n    });\n  });\n\n  addSharedLibraries(project, dependencyConfig.sharedLibraries);\n\n  const headers = getHeadersInFolder(dependencyConfig.folder);\n  if (!isEmpty(headers)) {\n    addToHeaderSearchPaths(\n      project,\n      getHeaderSearchPath(projectConfig.sourceDir, headers)\n    );\n  }\n\n  fs.writeFileSync(\n    projectConfig.pbxprojPath,\n    project.writeSync()\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/addToHeaderSearchPaths.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/addToHeaderSearchPaths.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/addToHeaderSearchPaths.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "addToHeaderSearchPaths.js",
      "sourceFileName": "addToHeaderSearchPaths.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "addToHeaderSearchPaths"
    },
    "ignored": false,
    "code": "'use strict';const mapHeaderSearchPaths = require('./mapHeaderSearchPaths');\n\nmodule.exports = function addToHeaderSearchPaths(project, path) {\n  mapHeaderSearchPaths(project, searchPaths => searchPaths.concat(path));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZFRvSGVhZGVyU2VhcmNoUGF0aHMuanMiXSwibmFtZXMiOlsibWFwSGVhZGVyU2VhcmNoUGF0aHMiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImFkZFRvSGVhZGVyU2VhcmNoUGF0aHMiLCJwcm9qZWN0IiwicGF0aCIsInNlYXJjaFBhdGhzIiwiY29uY2F0Il0sIm1hcHBpbmdzIjoiYUFBQSxNQUFNQSx1QkFBdUJDLFFBQVEsd0JBQVIsQ0FBN0I7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0Msc0JBQVQsQ0FBZ0NDLE9BQWhDLEVBQXlDQyxJQUF6QyxFQUErQztBQUM5RE4sdUJBQXFCSyxPQUFyQixFQUE4QkUsZUFBZUEsWUFBWUMsTUFBWixDQUFtQkYsSUFBbkIsQ0FBN0M7QUFDRCxDQUZEIiwiZmlsZSI6ImFkZFRvSGVhZGVyU2VhcmNoUGF0aHMuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9pb3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtYXBIZWFkZXJTZWFyY2hQYXRocyA9IHJlcXVpcmUoJy4vbWFwSGVhZGVyU2VhcmNoUGF0aHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBhZGRUb0hlYWRlclNlYXJjaFBhdGhzKHByb2plY3QsIHBhdGgpIHtcbiAgbWFwSGVhZGVyU2VhcmNoUGF0aHMocHJvamVjdCwgc2VhcmNoUGF0aHMgPT4gc2VhcmNoUGF0aHMuY29uY2F0KHBhdGgpKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "addToHeaderSearchPaths.js"
      ],
      "names": [
        "mapHeaderSearchPaths",
        "require",
        "module",
        "exports",
        "addToHeaderSearchPaths",
        "project",
        "path",
        "searchPaths",
        "concat"
      ],
      "mappings": "aAAA,MAAMA,uBAAuBC,QAAQ,wBAAR,CAA7B;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,sBAAT,CAAgCC,OAAhC,EAAyCC,IAAzC,EAA+C;AAC9DN,uBAAqBK,OAArB,EAA8BE,eAAeA,YAAYC,MAAZ,CAAmBF,IAAnB,CAA7C;AACD,CAFD",
      "file": "addToHeaderSearchPaths.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const mapHeaderSearchPaths = require('./mapHeaderSearchPaths');\n\nmodule.exports = function addToHeaderSearchPaths(project, path) {\n  mapHeaderSearchPaths(project, searchPaths => searchPaths.concat(path));\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/mapHeaderSearchPaths.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/mapHeaderSearchPaths.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/mapHeaderSearchPaths.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "mapHeaderSearchPaths.js",
      "sourceFileName": "mapHeaderSearchPaths.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "mapHeaderSearchPaths"
    },
    "ignored": false,
    "code": "'use strict'; /**\n               * Given Xcode project and path, iterate over all build configurations\n               * and execute func with HEADER_SEARCH_PATHS from current section\n               *\n               * We cannot use builtin addToHeaderSearchPaths method since react-native init does not\n               * use $(TARGET_NAME) for PRODUCT_NAME, but sets it manually so that method will skip\n               * that target.\n               *\n               * To workaround that issue and make it more bullet-proof for different names,\n               * we iterate over all configurations and look for `lc++` linker flag to detect\n               * React Native target.\n               *\n               * Important: That function mutates `buildSettings` and it's not pure thus you should\n               * not rely on its return value\n               */\nconst defaultHeaderPaths = ['\"$(inherited)\"'];\n\nmodule.exports = function headerSearchPathIter(project, func) {\n  const config = project.pbxXCBuildConfigurationSection();\n\n  Object.\n  keys(config).\n  filter(ref => ref.indexOf('_comment') === -1).\n  forEach(ref => {\n    const buildSettings = config[ref].buildSettings;\n    const shouldVisitBuildSettings = (\n    Array.isArray(buildSettings.OTHER_LDFLAGS) ?\n    buildSettings.OTHER_LDFLAGS :\n    []).\n\n    indexOf('\"-lc++\"') >= 0;\n\n    if (shouldVisitBuildSettings) {\n      const searchPaths = buildSettings.HEADER_SEARCH_PATHS ?\n      [].concat(buildSettings.HEADER_SEARCH_PATHS) :\n      defaultHeaderPaths;\n\n      buildSettings.HEADER_SEARCH_PATHS = func(searchPaths);\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcEhlYWRlclNlYXJjaFBhdGhzLmpzIl0sIm5hbWVzIjpbImRlZmF1bHRIZWFkZXJQYXRocyIsIm1vZHVsZSIsImV4cG9ydHMiLCJoZWFkZXJTZWFyY2hQYXRoSXRlciIsInByb2plY3QiLCJmdW5jIiwiY29uZmlnIiwicGJ4WENCdWlsZENvbmZpZ3VyYXRpb25TZWN0aW9uIiwiT2JqZWN0Iiwia2V5cyIsImZpbHRlciIsInJlZiIsImluZGV4T2YiLCJmb3JFYWNoIiwiYnVpbGRTZXR0aW5ncyIsInNob3VsZFZpc2l0QnVpbGRTZXR0aW5ncyIsIkFycmF5IiwiaXNBcnJheSIsIk9USEVSX0xERkxBR1MiLCJzZWFyY2hQYXRocyIsIkhFQURFUl9TRUFSQ0hfUEFUSFMiLCJjb25jYXQiXSwibWFwcGluZ3MiOiJjQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQSxNQUFNQSxxQkFBcUIsQ0FBQyxnQkFBRCxDQUEzQjs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxvQkFBVCxDQUE4QkMsT0FBOUIsRUFBdUNDLElBQXZDLEVBQTZDO0FBQzVELFFBQU1DLFNBQVNGLFFBQVFHLDhCQUFSLEVBQWY7O0FBRUFDO0FBQ0dDLE1BREgsQ0FDUUgsTUFEUjtBQUVHSSxRQUZILENBRVVDLE9BQU9BLElBQUlDLE9BQUosQ0FBWSxVQUFaLE1BQTRCLENBQUMsQ0FGOUM7QUFHR0MsU0FISCxDQUdXRixPQUFPO0FBQ2QsVUFBTUcsZ0JBQWdCUixPQUFPSyxHQUFQLEVBQVlHLGFBQWxDO0FBQ0EsVUFBTUMsMkJBQTJCO0FBQzdCQyxVQUFNQyxPQUFOLENBQWNILGNBQWNJLGFBQTVCO0FBQ0VKLGtCQUFjSSxhQURoQjtBQUVFLE1BSDJCOztBQUs5Qk4sV0FMOEIsQ0FLdEIsU0FMc0IsS0FLUixDQUx6Qjs7QUFPQSxRQUFJRyx3QkFBSixFQUE4QjtBQUM1QixZQUFNSSxjQUFjTCxjQUFjTSxtQkFBZDtBQUNsQixTQUFHQyxNQUFILENBQVVQLGNBQWNNLG1CQUF4QixDQURrQjtBQUVsQnBCLHdCQUZGOztBQUlBYyxvQkFBY00sbUJBQWQsR0FBb0NmLEtBQUtjLFdBQUwsQ0FBcEM7QUFDRDtBQUNGLEdBbkJIO0FBb0JELENBdkJEIiwiZmlsZSI6Im1hcEhlYWRlclNlYXJjaFBhdGhzLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvaW9zIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHaXZlbiBYY29kZSBwcm9qZWN0IGFuZCBwYXRoLCBpdGVyYXRlIG92ZXIgYWxsIGJ1aWxkIGNvbmZpZ3VyYXRpb25zXG4gKiBhbmQgZXhlY3V0ZSBmdW5jIHdpdGggSEVBREVSX1NFQVJDSF9QQVRIUyBmcm9tIGN1cnJlbnQgc2VjdGlvblxuICpcbiAqIFdlIGNhbm5vdCB1c2UgYnVpbHRpbiBhZGRUb0hlYWRlclNlYXJjaFBhdGhzIG1ldGhvZCBzaW5jZSByZWFjdC1uYXRpdmUgaW5pdCBkb2VzIG5vdFxuICogdXNlICQoVEFSR0VUX05BTUUpIGZvciBQUk9EVUNUX05BTUUsIGJ1dCBzZXRzIGl0IG1hbnVhbGx5IHNvIHRoYXQgbWV0aG9kIHdpbGwgc2tpcFxuICogdGhhdCB0YXJnZXQuXG4gKlxuICogVG8gd29ya2Fyb3VuZCB0aGF0IGlzc3VlIGFuZCBtYWtlIGl0IG1vcmUgYnVsbGV0LXByb29mIGZvciBkaWZmZXJlbnQgbmFtZXMsXG4gKiB3ZSBpdGVyYXRlIG92ZXIgYWxsIGNvbmZpZ3VyYXRpb25zIGFuZCBsb29rIGZvciBgbGMrK2AgbGlua2VyIGZsYWcgdG8gZGV0ZWN0XG4gKiBSZWFjdCBOYXRpdmUgdGFyZ2V0LlxuICpcbiAqIEltcG9ydGFudDogVGhhdCBmdW5jdGlvbiBtdXRhdGVzIGBidWlsZFNldHRpbmdzYCBhbmQgaXQncyBub3QgcHVyZSB0aHVzIHlvdSBzaG91bGRcbiAqIG5vdCByZWx5IG9uIGl0cyByZXR1cm4gdmFsdWVcbiAqL1xuY29uc3QgZGVmYXVsdEhlYWRlclBhdGhzID0gWydcIiQoaW5oZXJpdGVkKVwiJ107XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaGVhZGVyU2VhcmNoUGF0aEl0ZXIocHJvamVjdCwgZnVuYykge1xuICBjb25zdCBjb25maWcgPSBwcm9qZWN0LnBieFhDQnVpbGRDb25maWd1cmF0aW9uU2VjdGlvbigpO1xuXG4gIE9iamVjdFxuICAgIC5rZXlzKGNvbmZpZylcbiAgICAuZmlsdGVyKHJlZiA9PiByZWYuaW5kZXhPZignX2NvbW1lbnQnKSA9PT0gLTEpXG4gICAgLmZvckVhY2gocmVmID0+IHtcbiAgICAgIGNvbnN0IGJ1aWxkU2V0dGluZ3MgPSBjb25maWdbcmVmXS5idWlsZFNldHRpbmdzO1xuICAgICAgY29uc3Qgc2hvdWxkVmlzaXRCdWlsZFNldHRpbmdzID0gKFxuICAgICAgICAgIEFycmF5LmlzQXJyYXkoYnVpbGRTZXR0aW5ncy5PVEhFUl9MREZMQUdTKSA/XG4gICAgICAgICAgICBidWlsZFNldHRpbmdzLk9USEVSX0xERkxBR1MgOlxuICAgICAgICAgICAgW11cbiAgICAgICAgKVxuICAgICAgICAuaW5kZXhPZignXCItbGMrK1wiJykgPj0gMDtcblxuICAgICAgaWYgKHNob3VsZFZpc2l0QnVpbGRTZXR0aW5ncykge1xuICAgICAgICBjb25zdCBzZWFyY2hQYXRocyA9IGJ1aWxkU2V0dGluZ3MuSEVBREVSX1NFQVJDSF9QQVRIUyA/XG4gICAgICAgICAgW10uY29uY2F0KGJ1aWxkU2V0dGluZ3MuSEVBREVSX1NFQVJDSF9QQVRIUykgOlxuICAgICAgICAgIGRlZmF1bHRIZWFkZXJQYXRocztcblxuICAgICAgICBidWlsZFNldHRpbmdzLkhFQURFUl9TRUFSQ0hfUEFUSFMgPSBmdW5jKHNlYXJjaFBhdGhzKTtcbiAgICAgIH1cbiAgICB9KTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "mapHeaderSearchPaths.js"
      ],
      "names": [
        "defaultHeaderPaths",
        "module",
        "exports",
        "headerSearchPathIter",
        "project",
        "func",
        "config",
        "pbxXCBuildConfigurationSection",
        "Object",
        "keys",
        "filter",
        "ref",
        "indexOf",
        "forEach",
        "buildSettings",
        "shouldVisitBuildSettings",
        "Array",
        "isArray",
        "OTHER_LDFLAGS",
        "searchPaths",
        "HEADER_SEARCH_PATHS",
        "concat"
      ],
      "mappings": "cAAA;;;;;;;;;;;;;;;AAeA,MAAMA,qBAAqB,CAAC,gBAAD,CAA3B;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,oBAAT,CAA8BC,OAA9B,EAAuCC,IAAvC,EAA6C;AAC5D,QAAMC,SAASF,QAAQG,8BAAR,EAAf;;AAEAC;AACGC,MADH,CACQH,MADR;AAEGI,QAFH,CAEUC,OAAOA,IAAIC,OAAJ,CAAY,UAAZ,MAA4B,CAAC,CAF9C;AAGGC,SAHH,CAGWF,OAAO;AACd,UAAMG,gBAAgBR,OAAOK,GAAP,EAAYG,aAAlC;AACA,UAAMC,2BAA2B;AAC7BC,UAAMC,OAAN,CAAcH,cAAcI,aAA5B;AACEJ,kBAAcI,aADhB;AAEE,MAH2B;;AAK9BN,WAL8B,CAKtB,SALsB,KAKR,CALzB;;AAOA,QAAIG,wBAAJ,EAA8B;AAC5B,YAAMI,cAAcL,cAAcM,mBAAd;AAClB,SAAGC,MAAH,CAAUP,cAAcM,mBAAxB,CADkB;AAElBpB,wBAFF;;AAIAc,oBAAcM,mBAAd,GAAoCf,KAAKc,WAAL,CAApC;AACD;AACF,GAnBH;AAoBD,CAvBD",
      "file": "mapHeaderSearchPaths.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "/**\n * Given Xcode project and path, iterate over all build configurations\n * and execute func with HEADER_SEARCH_PATHS from current section\n *\n * We cannot use builtin addToHeaderSearchPaths method since react-native init does not\n * use $(TARGET_NAME) for PRODUCT_NAME, but sets it manually so that method will skip\n * that target.\n *\n * To workaround that issue and make it more bullet-proof for different names,\n * we iterate over all configurations and look for `lc++` linker flag to detect\n * React Native target.\n *\n * Important: That function mutates `buildSettings` and it's not pure thus you should\n * not rely on its return value\n */\nconst defaultHeaderPaths = ['\"$(inherited)\"'];\n\nmodule.exports = function headerSearchPathIter(project, func) {\n  const config = project.pbxXCBuildConfigurationSection();\n\n  Object\n    .keys(config)\n    .filter(ref => ref.indexOf('_comment') === -1)\n    .forEach(ref => {\n      const buildSettings = config[ref].buildSettings;\n      const shouldVisitBuildSettings = (\n          Array.isArray(buildSettings.OTHER_LDFLAGS) ?\n            buildSettings.OTHER_LDFLAGS :\n            []\n        )\n        .indexOf('\"-lc++\"') >= 0;\n\n      if (shouldVisitBuildSettings) {\n        const searchPaths = buildSettings.HEADER_SEARCH_PATHS ?\n          [].concat(buildSettings.HEADER_SEARCH_PATHS) :\n          defaultHeaderPaths;\n\n        buildSettings.HEADER_SEARCH_PATHS = func(searchPaths);\n      }\n    });\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getHeadersInFolder.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getHeadersInFolder.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getHeadersInFolder.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "getHeadersInFolder.js",
      "sourceFileName": "getHeadersInFolder.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "getHeadersInFolder"
    },
    "ignored": false,
    "code": "'use strict';const glob = require('glob');\nconst path = require('path');\n\nconst GLOB_EXCLUDE_PATTERN = ['node_modules/**', 'Pods/**', 'Examples/**', 'examples/**'];\n\n/**\n                                                                                            * Given folder, it returns an array of all header files\n                                                                                            * inside it, ignoring node_modules and examples\n                                                                                            */\nmodule.exports = function getHeadersInFolder(folder) {\n  return glob.\n  sync('**/*.h', {\n    cwd: folder,\n    nodir: true,\n    ignore: GLOB_EXCLUDE_PATTERN }).\n\n  map(file => path.join(folder, file));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldEhlYWRlcnNJbkZvbGRlci5qcyJdLCJuYW1lcyI6WyJnbG9iIiwicmVxdWlyZSIsInBhdGgiLCJHTE9CX0VYQ0xVREVfUEFUVEVSTiIsIm1vZHVsZSIsImV4cG9ydHMiLCJnZXRIZWFkZXJzSW5Gb2xkZXIiLCJmb2xkZXIiLCJzeW5jIiwiY3dkIiwibm9kaXIiLCJpZ25vcmUiLCJtYXAiLCJmaWxlIiwiam9pbiJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsT0FBT0MsUUFBUSxNQUFSLENBQWI7QUFDQSxNQUFNQyxPQUFPRCxRQUFRLE1BQVIsQ0FBYjs7QUFFQSxNQUFNRSx1QkFBdUIsQ0FBQyxpQkFBRCxFQUFvQixTQUFwQixFQUErQixhQUEvQixFQUE4QyxhQUE5QyxDQUE3Qjs7QUFFQTs7OztBQUlBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLGtCQUFULENBQTRCQyxNQUE1QixFQUFvQztBQUNuRCxTQUFPUDtBQUNKUSxNQURJLENBQ0MsUUFERCxFQUNXO0FBQ2RDLFNBQUtGLE1BRFM7QUFFZEcsV0FBTyxJQUZPO0FBR2RDLFlBQVFSLG9CQUhNLEVBRFg7O0FBTUpTLEtBTkksQ0FNQUMsUUFBUVgsS0FBS1ksSUFBTCxDQUFVUCxNQUFWLEVBQWtCTSxJQUFsQixDQU5SLENBQVA7QUFPRCxDQVJEIiwiZmlsZSI6ImdldEhlYWRlcnNJbkZvbGRlci5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL2lvcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdsb2IgPSByZXF1aXJlKCdnbG9iJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG5jb25zdCBHTE9CX0VYQ0xVREVfUEFUVEVSTiA9IFsnbm9kZV9tb2R1bGVzLyoqJywgJ1BvZHMvKionLCAnRXhhbXBsZXMvKionLCAnZXhhbXBsZXMvKionXTtcblxuLyoqXG4gKiBHaXZlbiBmb2xkZXIsIGl0IHJldHVybnMgYW4gYXJyYXkgb2YgYWxsIGhlYWRlciBmaWxlc1xuICogaW5zaWRlIGl0LCBpZ25vcmluZyBub2RlX21vZHVsZXMgYW5kIGV4YW1wbGVzXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2V0SGVhZGVyc0luRm9sZGVyKGZvbGRlcikge1xuICByZXR1cm4gZ2xvYlxuICAgIC5zeW5jKCcqKi8qLmgnLCB7XG4gICAgICBjd2Q6IGZvbGRlcixcbiAgICAgIG5vZGlyOiB0cnVlLFxuICAgICAgaWdub3JlOiBHTE9CX0VYQ0xVREVfUEFUVEVSTixcbiAgICB9KVxuICAgIC5tYXAoZmlsZSA9PiBwYXRoLmpvaW4oZm9sZGVyLCBmaWxlKSk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "getHeadersInFolder.js"
      ],
      "names": [
        "glob",
        "require",
        "path",
        "GLOB_EXCLUDE_PATTERN",
        "module",
        "exports",
        "getHeadersInFolder",
        "folder",
        "sync",
        "cwd",
        "nodir",
        "ignore",
        "map",
        "file",
        "join"
      ],
      "mappings": "aAAA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA,MAAME,uBAAuB,CAAC,iBAAD,EAAoB,SAApB,EAA+B,aAA/B,EAA8C,aAA9C,CAA7B;;AAEA;;;;AAIAC,OAAOC,OAAP,GAAiB,SAASC,kBAAT,CAA4BC,MAA5B,EAAoC;AACnD,SAAOP;AACJQ,MADI,CACC,QADD,EACW;AACdC,SAAKF,MADS;AAEdG,WAAO,IAFO;AAGdC,YAAQR,oBAHM,EADX;;AAMJS,KANI,CAMAC,QAAQX,KAAKY,IAAL,CAAUP,MAAV,EAAkBM,IAAlB,CANR,CAAP;AAOD,CARD",
      "file": "getHeadersInFolder.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const glob = require('glob');\nconst path = require('path');\n\nconst GLOB_EXCLUDE_PATTERN = ['node_modules/**', 'Pods/**', 'Examples/**', 'examples/**'];\n\n/**\n * Given folder, it returns an array of all header files\n * inside it, ignoring node_modules and examples\n */\nmodule.exports = function getHeadersInFolder(folder) {\n  return glob\n    .sync('**/*.h', {\n      cwd: folder,\n      nodir: true,\n      ignore: GLOB_EXCLUDE_PATTERN,\n    })\n    .map(file => path.join(folder, file));\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getHeaderSearchPath.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getHeaderSearchPath.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getHeaderSearchPath.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "getHeaderSearchPath.js",
      "sourceFileName": "getHeaderSearchPath.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "getHeaderSearchPath"
    },
    "ignored": false,
    "code": "'use strict';const path = require('path');\nconst union = require('lodash').union;\nconst last = require('lodash').last;\n\n/**\n                                      * Given an array of directories, it returns the one that contains\n                                      * all the other directories in a given array inside it.\n                                      *\n                                      * Example:\n                                      * Given an array of directories: ['/Users/Kureev/a', '/Users/Kureev/b']\n                                      * the returned folder is `/Users/Kureev`\n                                      *\n                                      * Check `getHeaderSearchPath.spec.js` for more use-cases.\n                                      */\nconst getOuterDirectory = directories =>\ndirectories.reduce((topDir, currentDir) => {\n  const currentFolders = currentDir.split(path.sep);\n  const topMostFolders = topDir.split(path.sep);\n\n  if (currentFolders.length === topMostFolders.length &&\n  last(currentFolders) !== last(topMostFolders)) {\n    return currentFolders.slice(0, -1).join(path.sep);\n  }\n\n  return currentFolders.length < topMostFolders.length ?\n  currentDir :\n  topDir;\n});\n\n/**\n     * Given an array of headers it returns search path so Xcode can resolve\n     * headers when referenced like below:\n     * ```\n     * #import \"CodePush.h\"\n     * ```\n     * If all files are located in one directory (directories.length === 1),\n     * we simply return a relative path to that location.\n     *\n     * Otherwise, we loop through them all to find the outer one that contains\n     * all the headers inside. That location is then returned with /** appended at\n     * the end so Xcode marks that location as `recursive` and will look inside\n     * every folder of it to locate correct headers.\n     */\nmodule.exports = function getHeaderSearchPath(sourceDir, headers) {\n  const directories = union(\n  headers.map(path.dirname));\n\n\n  return directories.length === 1 ?\n  `\"$(SRCROOT)${path.sep}${path.relative(sourceDir, directories[0])}\"` :\n  `\"$(SRCROOT)${path.sep}${path.relative(sourceDir, getOuterDirectory(directories))}/**\"`;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldEhlYWRlclNlYXJjaFBhdGguanMiXSwibmFtZXMiOlsicGF0aCIsInJlcXVpcmUiLCJ1bmlvbiIsImxhc3QiLCJnZXRPdXRlckRpcmVjdG9yeSIsImRpcmVjdG9yaWVzIiwicmVkdWNlIiwidG9wRGlyIiwiY3VycmVudERpciIsImN1cnJlbnRGb2xkZXJzIiwic3BsaXQiLCJzZXAiLCJ0b3BNb3N0Rm9sZGVycyIsImxlbmd0aCIsInNsaWNlIiwiam9pbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJnZXRIZWFkZXJTZWFyY2hQYXRoIiwic291cmNlRGlyIiwiaGVhZGVycyIsIm1hcCIsImRpcm5hbWUiLCJyZWxhdGl2ZSJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsT0FBT0MsUUFBUSxNQUFSLENBQWI7QUFDQSxNQUFNQyxRQUFRRCxRQUFRLFFBQVIsRUFBa0JDLEtBQWhDO0FBQ0EsTUFBTUMsT0FBT0YsUUFBUSxRQUFSLEVBQWtCRSxJQUEvQjs7QUFFQTs7Ozs7Ozs7OztBQVVBLE1BQU1DLG9CQUFxQkMsV0FBRDtBQUN4QkEsWUFBWUMsTUFBWixDQUFtQixDQUFDQyxNQUFELEVBQVNDLFVBQVQsS0FBd0I7QUFDekMsUUFBTUMsaUJBQWlCRCxXQUFXRSxLQUFYLENBQWlCVixLQUFLVyxHQUF0QixDQUF2QjtBQUNBLFFBQU1DLGlCQUFpQkwsT0FBT0csS0FBUCxDQUFhVixLQUFLVyxHQUFsQixDQUF2Qjs7QUFFQSxNQUFJRixlQUFlSSxNQUFmLEtBQTBCRCxlQUFlQyxNQUF6QztBQUNDVixPQUFLTSxjQUFMLE1BQXlCTixLQUFLUyxjQUFMLENBRDlCLEVBQ29EO0FBQ2xELFdBQU9ILGVBQWVLLEtBQWYsQ0FBcUIsQ0FBckIsRUFBd0IsQ0FBQyxDQUF6QixFQUE0QkMsSUFBNUIsQ0FBaUNmLEtBQUtXLEdBQXRDLENBQVA7QUFDRDs7QUFFRCxTQUFPRixlQUFlSSxNQUFmLEdBQXdCRCxlQUFlQyxNQUF2QztBQUNITCxZQURHO0FBRUhELFFBRko7QUFHRCxDQVpELENBREY7O0FBZUE7Ozs7Ozs7Ozs7Ozs7O0FBY0FTLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsbUJBQVQsQ0FBNkJDLFNBQTdCLEVBQXdDQyxPQUF4QyxFQUFpRDtBQUNoRSxRQUFNZixjQUFjSDtBQUNsQmtCLFVBQVFDLEdBQVIsQ0FBWXJCLEtBQUtzQixPQUFqQixDQURrQixDQUFwQjs7O0FBSUEsU0FBT2pCLFlBQVlRLE1BQVosS0FBdUIsQ0FBdkI7QUFDRixnQkFBYWIsS0FBS1csR0FBSSxHQUFFWCxLQUFLdUIsUUFBTCxDQUFjSixTQUFkLEVBQXlCZCxZQUFZLENBQVosQ0FBekIsQ0FBeUMsR0FEL0Q7QUFFRixnQkFBYUwsS0FBS1csR0FBSSxHQUFFWCxLQUFLdUIsUUFBTCxDQUFjSixTQUFkLEVBQXlCZixrQkFBa0JDLFdBQWxCLENBQXpCLENBQXlELE1BRnRGO0FBR0QsQ0FSRCIsImZpbGUiOiJnZXRIZWFkZXJTZWFyY2hQYXRoLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvaW9zIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IHVuaW9uID0gcmVxdWlyZSgnbG9kYXNoJykudW5pb247XG5jb25zdCBsYXN0ID0gcmVxdWlyZSgnbG9kYXNoJykubGFzdDtcblxuLyoqXG4gKiBHaXZlbiBhbiBhcnJheSBvZiBkaXJlY3RvcmllcywgaXQgcmV0dXJucyB0aGUgb25lIHRoYXQgY29udGFpbnNcbiAqIGFsbCB0aGUgb3RoZXIgZGlyZWN0b3JpZXMgaW4gYSBnaXZlbiBhcnJheSBpbnNpZGUgaXQuXG4gKlxuICogRXhhbXBsZTpcbiAqIEdpdmVuIGFuIGFycmF5IG9mIGRpcmVjdG9yaWVzOiBbJy9Vc2Vycy9LdXJlZXYvYScsICcvVXNlcnMvS3VyZWV2L2InXVxuICogdGhlIHJldHVybmVkIGZvbGRlciBpcyBgL1VzZXJzL0t1cmVldmBcbiAqXG4gKiBDaGVjayBgZ2V0SGVhZGVyU2VhcmNoUGF0aC5zcGVjLmpzYCBmb3IgbW9yZSB1c2UtY2FzZXMuXG4gKi9cbmNvbnN0IGdldE91dGVyRGlyZWN0b3J5ID0gKGRpcmVjdG9yaWVzKSA9PlxuICBkaXJlY3Rvcmllcy5yZWR1Y2UoKHRvcERpciwgY3VycmVudERpcikgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnRGb2xkZXJzID0gY3VycmVudERpci5zcGxpdChwYXRoLnNlcCk7XG4gICAgY29uc3QgdG9wTW9zdEZvbGRlcnMgPSB0b3BEaXIuc3BsaXQocGF0aC5zZXApO1xuXG4gICAgaWYgKGN1cnJlbnRGb2xkZXJzLmxlbmd0aCA9PT0gdG9wTW9zdEZvbGRlcnMubGVuZ3RoXG4gICAgICAmJiBsYXN0KGN1cnJlbnRGb2xkZXJzKSAhPT0gbGFzdCh0b3BNb3N0Rm9sZGVycykpIHtcbiAgICAgIHJldHVybiBjdXJyZW50Rm9sZGVycy5zbGljZSgwLCAtMSkuam9pbihwYXRoLnNlcCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGN1cnJlbnRGb2xkZXJzLmxlbmd0aCA8IHRvcE1vc3RGb2xkZXJzLmxlbmd0aFxuICAgICAgPyBjdXJyZW50RGlyXG4gICAgICA6IHRvcERpcjtcbiAgfSk7XG5cbi8qKlxuICogR2l2ZW4gYW4gYXJyYXkgb2YgaGVhZGVycyBpdCByZXR1cm5zIHNlYXJjaCBwYXRoIHNvIFhjb2RlIGNhbiByZXNvbHZlXG4gKiBoZWFkZXJzIHdoZW4gcmVmZXJlbmNlZCBsaWtlIGJlbG93OlxuICogYGBgXG4gKiAjaW1wb3J0IFwiQ29kZVB1c2guaFwiXG4gKiBgYGBcbiAqIElmIGFsbCBmaWxlcyBhcmUgbG9jYXRlZCBpbiBvbmUgZGlyZWN0b3J5IChkaXJlY3Rvcmllcy5sZW5ndGggPT09IDEpLFxuICogd2Ugc2ltcGx5IHJldHVybiBhIHJlbGF0aXZlIHBhdGggdG8gdGhhdCBsb2NhdGlvbi5cbiAqXG4gKiBPdGhlcndpc2UsIHdlIGxvb3AgdGhyb3VnaCB0aGVtIGFsbCB0byBmaW5kIHRoZSBvdXRlciBvbmUgdGhhdCBjb250YWluc1xuICogYWxsIHRoZSBoZWFkZXJzIGluc2lkZS4gVGhhdCBsb2NhdGlvbiBpcyB0aGVuIHJldHVybmVkIHdpdGggLyoqIGFwcGVuZGVkIGF0XG4gKiB0aGUgZW5kIHNvIFhjb2RlIG1hcmtzIHRoYXQgbG9jYXRpb24gYXMgYHJlY3Vyc2l2ZWAgYW5kIHdpbGwgbG9vayBpbnNpZGVcbiAqIGV2ZXJ5IGZvbGRlciBvZiBpdCB0byBsb2NhdGUgY29ycmVjdCBoZWFkZXJzLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdldEhlYWRlclNlYXJjaFBhdGgoc291cmNlRGlyLCBoZWFkZXJzKSB7XG4gIGNvbnN0IGRpcmVjdG9yaWVzID0gdW5pb24oXG4gICAgaGVhZGVycy5tYXAocGF0aC5kaXJuYW1lKVxuICApO1xuXG4gIHJldHVybiBkaXJlY3Rvcmllcy5sZW5ndGggPT09IDFcbiAgICA/IGBcIiQoU1JDUk9PVCkke3BhdGguc2VwfSR7cGF0aC5yZWxhdGl2ZShzb3VyY2VEaXIsIGRpcmVjdG9yaWVzWzBdKX1cImBcbiAgICA6IGBcIiQoU1JDUk9PVCkke3BhdGguc2VwfSR7cGF0aC5yZWxhdGl2ZShzb3VyY2VEaXIsIGdldE91dGVyRGlyZWN0b3J5KGRpcmVjdG9yaWVzKSl9LyoqXCJgO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "getHeaderSearchPath.js"
      ],
      "names": [
        "path",
        "require",
        "union",
        "last",
        "getOuterDirectory",
        "directories",
        "reduce",
        "topDir",
        "currentDir",
        "currentFolders",
        "split",
        "sep",
        "topMostFolders",
        "length",
        "slice",
        "join",
        "module",
        "exports",
        "getHeaderSearchPath",
        "sourceDir",
        "headers",
        "map",
        "dirname",
        "relative"
      ],
      "mappings": "aAAA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,MAAMC,QAAQD,QAAQ,QAAR,EAAkBC,KAAhC;AACA,MAAMC,OAAOF,QAAQ,QAAR,EAAkBE,IAA/B;;AAEA;;;;;;;;;;AAUA,MAAMC,oBAAqBC,WAAD;AACxBA,YAAYC,MAAZ,CAAmB,CAACC,MAAD,EAASC,UAAT,KAAwB;AACzC,QAAMC,iBAAiBD,WAAWE,KAAX,CAAiBV,KAAKW,GAAtB,CAAvB;AACA,QAAMC,iBAAiBL,OAAOG,KAAP,CAAaV,KAAKW,GAAlB,CAAvB;;AAEA,MAAIF,eAAeI,MAAf,KAA0BD,eAAeC,MAAzC;AACCV,OAAKM,cAAL,MAAyBN,KAAKS,cAAL,CAD9B,EACoD;AAClD,WAAOH,eAAeK,KAAf,CAAqB,CAArB,EAAwB,CAAC,CAAzB,EAA4BC,IAA5B,CAAiCf,KAAKW,GAAtC,CAAP;AACD;;AAED,SAAOF,eAAeI,MAAf,GAAwBD,eAAeC,MAAvC;AACHL,YADG;AAEHD,QAFJ;AAGD,CAZD,CADF;;AAeA;;;;;;;;;;;;;;AAcAS,OAAOC,OAAP,GAAiB,SAASC,mBAAT,CAA6BC,SAA7B,EAAwCC,OAAxC,EAAiD;AAChE,QAAMf,cAAcH;AAClBkB,UAAQC,GAAR,CAAYrB,KAAKsB,OAAjB,CADkB,CAApB;;;AAIA,SAAOjB,YAAYQ,MAAZ,KAAuB,CAAvB;AACF,gBAAab,KAAKW,GAAI,GAAEX,KAAKuB,QAAL,CAAcJ,SAAd,EAAyBd,YAAY,CAAZ,CAAzB,CAAyC,GAD/D;AAEF,gBAAaL,KAAKW,GAAI,GAAEX,KAAKuB,QAAL,CAAcJ,SAAd,EAAyBf,kBAAkBC,WAAlB,CAAzB,CAAyD,MAFtF;AAGD,CARD",
      "file": "getHeaderSearchPath.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const path = require('path');\nconst union = require('lodash').union;\nconst last = require('lodash').last;\n\n/**\n * Given an array of directories, it returns the one that contains\n * all the other directories in a given array inside it.\n *\n * Example:\n * Given an array of directories: ['/Users/Kureev/a', '/Users/Kureev/b']\n * the returned folder is `/Users/Kureev`\n *\n * Check `getHeaderSearchPath.spec.js` for more use-cases.\n */\nconst getOuterDirectory = (directories) =>\n  directories.reduce((topDir, currentDir) => {\n    const currentFolders = currentDir.split(path.sep);\n    const topMostFolders = topDir.split(path.sep);\n\n    if (currentFolders.length === topMostFolders.length\n      && last(currentFolders) !== last(topMostFolders)) {\n      return currentFolders.slice(0, -1).join(path.sep);\n    }\n\n    return currentFolders.length < topMostFolders.length\n      ? currentDir\n      : topDir;\n  });\n\n/**\n * Given an array of headers it returns search path so Xcode can resolve\n * headers when referenced like below:\n * ```\n * #import \"CodePush.h\"\n * ```\n * If all files are located in one directory (directories.length === 1),\n * we simply return a relative path to that location.\n *\n * Otherwise, we loop through them all to find the outer one that contains\n * all the headers inside. That location is then returned with /** appended at\n * the end so Xcode marks that location as `recursive` and will look inside\n * every folder of it to locate correct headers.\n */\nmodule.exports = function getHeaderSearchPath(sourceDir, headers) {\n  const directories = union(\n    headers.map(path.dirname)\n  );\n\n  return directories.length === 1\n    ? `\"$(SRCROOT)${path.sep}${path.relative(sourceDir, directories[0])}\"`\n    : `\"$(SRCROOT)${path.sep}${path.relative(sourceDir, getOuterDirectory(directories))}/**\"`;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getProducts.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getProducts.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getProducts.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "getProducts.js",
      "sourceFileName": "getProducts.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "getProducts"
    },
    "ignored": false,
    "code": "'use strict'; /**\n               * Given xcodeproj it returns list of products ending with\n               * .a extension, so that we know what elements add to target\n               * project static library\n               */\nmodule.exports = function getProducts(project) {\n  return project.\n  pbxGroupByName('Products').\n  children.\n  map(c => c.comment).\n  filter(c => c.indexOf('.a') > -1);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldFByb2R1Y3RzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJnZXRQcm9kdWN0cyIsInByb2plY3QiLCJwYnhHcm91cEJ5TmFtZSIsImNoaWxkcmVuIiwibWFwIiwiYyIsImNvbW1lbnQiLCJmaWx0ZXIiLCJpbmRleE9mIl0sIm1hcHBpbmdzIjoiY0FBQTs7Ozs7QUFLQUEsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxXQUFULENBQXFCQyxPQUFyQixFQUE4QjtBQUM3QyxTQUFPQTtBQUNKQyxnQkFESSxDQUNXLFVBRFg7QUFFSkMsVUFGSTtBQUdKQyxLQUhJLENBR0FDLEtBQUtBLEVBQUVDLE9BSFA7QUFJSkMsUUFKSSxDQUlHRixLQUFLQSxFQUFFRyxPQUFGLENBQVUsSUFBVixJQUFrQixDQUFDLENBSjNCLENBQVA7QUFLRCxDQU5EIiwiZmlsZSI6ImdldFByb2R1Y3RzLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvaW9zIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHaXZlbiB4Y29kZXByb2ogaXQgcmV0dXJucyBsaXN0IG9mIHByb2R1Y3RzIGVuZGluZyB3aXRoXG4gKiAuYSBleHRlbnNpb24sIHNvIHRoYXQgd2Uga25vdyB3aGF0IGVsZW1lbnRzIGFkZCB0byB0YXJnZXRcbiAqIHByb2plY3Qgc3RhdGljIGxpYnJhcnlcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXRQcm9kdWN0cyhwcm9qZWN0KSB7XG4gIHJldHVybiBwcm9qZWN0XG4gICAgLnBieEdyb3VwQnlOYW1lKCdQcm9kdWN0cycpXG4gICAgLmNoaWxkcmVuXG4gICAgLm1hcChjID0+IGMuY29tbWVudClcbiAgICAuZmlsdGVyKGMgPT4gYy5pbmRleE9mKCcuYScpID4gLTEpO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "getProducts.js"
      ],
      "names": [
        "module",
        "exports",
        "getProducts",
        "project",
        "pbxGroupByName",
        "children",
        "map",
        "c",
        "comment",
        "filter",
        "indexOf"
      ],
      "mappings": "cAAA;;;;;AAKAA,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,OAArB,EAA8B;AAC7C,SAAOA;AACJC,gBADI,CACW,UADX;AAEJC,UAFI;AAGJC,KAHI,CAGAC,KAAKA,EAAEC,OAHP;AAIJC,QAJI,CAIGF,KAAKA,EAAEG,OAAF,CAAU,IAAV,IAAkB,CAAC,CAJ3B,CAAP;AAKD,CAND",
      "file": "getProducts.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "/**\n * Given xcodeproj it returns list of products ending with\n * .a extension, so that we know what elements add to target\n * project static library\n */\nmodule.exports = function getProducts(project) {\n  return project\n    .pbxGroupByName('Products')\n    .children\n    .map(c => c.comment)\n    .filter(c => c.indexOf('.a') > -1);\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/createGroupWithMessage.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/createGroupWithMessage.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/createGroupWithMessage.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "createGroupWithMessage.js",
      "sourceFileName": "createGroupWithMessage.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "createGroupWithMessage"
    },
    "ignored": false,
    "code": "'use strict';const log = require('npmlog');\n\nconst createGroup = require('./createGroup');\nconst getGroup = require('./getGroup');\n\n/**\n                                         * Given project and path of the group, it checks if a group exists at that path,\n                                         * and deeply creates a group for that path if its does not already exist.\n                                         *\n                                         * Returns the existing or newly created group\n                                         */\nmodule.exports = function createGroupWithMessage(project, path) {\n  var group = getGroup(project, path);\n\n  if (!group) {\n    group = createGroup(project, path);\n\n    log.warn(\n    'ERRGROUP',\n    `Group '${path}' does not exist in your Xcode project. We have created it automatically for you.`);\n\n  }\n\n  return group;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZUdyb3VwV2l0aE1lc3NhZ2UuanMiXSwibmFtZXMiOlsibG9nIiwicmVxdWlyZSIsImNyZWF0ZUdyb3VwIiwiZ2V0R3JvdXAiLCJtb2R1bGUiLCJleHBvcnRzIiwiY3JlYXRlR3JvdXBXaXRoTWVzc2FnZSIsInByb2plY3QiLCJwYXRoIiwiZ3JvdXAiLCJ3YXJuIl0sIm1hcHBpbmdzIjoiYUFBQSxNQUFNQSxNQUFNQyxRQUFRLFFBQVIsQ0FBWjs7QUFFQSxNQUFNQyxjQUFjRCxRQUFRLGVBQVIsQ0FBcEI7QUFDQSxNQUFNRSxXQUFXRixRQUFRLFlBQVIsQ0FBakI7O0FBRUE7Ozs7OztBQU1BRyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLHNCQUFULENBQWdDQyxPQUFoQyxFQUF5Q0MsSUFBekMsRUFBK0M7QUFDOUQsTUFBSUMsUUFBUU4sU0FBU0ksT0FBVCxFQUFrQkMsSUFBbEIsQ0FBWjs7QUFFQSxNQUFJLENBQUNDLEtBQUwsRUFBWTtBQUNWQSxZQUFRUCxZQUFZSyxPQUFaLEVBQXFCQyxJQUFyQixDQUFSOztBQUVBUixRQUFJVSxJQUFKO0FBQ0UsY0FERjtBQUVHLGNBQVNGLElBQUssbUZBRmpCOztBQUlEOztBQUVELFNBQU9DLEtBQVA7QUFDRCxDQWJEIiwiZmlsZSI6ImNyZWF0ZUdyb3VwV2l0aE1lc3NhZ2UuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9pb3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBsb2cgPSByZXF1aXJlKCducG1sb2cnKTtcblxuY29uc3QgY3JlYXRlR3JvdXAgPSByZXF1aXJlKCcuL2NyZWF0ZUdyb3VwJyk7XG5jb25zdCBnZXRHcm91cCA9IHJlcXVpcmUoJy4vZ2V0R3JvdXAnKTtcblxuLyoqXG4gKiBHaXZlbiBwcm9qZWN0IGFuZCBwYXRoIG9mIHRoZSBncm91cCwgaXQgY2hlY2tzIGlmIGEgZ3JvdXAgZXhpc3RzIGF0IHRoYXQgcGF0aCxcbiAqIGFuZCBkZWVwbHkgY3JlYXRlcyBhIGdyb3VwIGZvciB0aGF0IHBhdGggaWYgaXRzIGRvZXMgbm90IGFscmVhZHkgZXhpc3QuXG4gKlxuICogUmV0dXJucyB0aGUgZXhpc3Rpbmcgb3IgbmV3bHkgY3JlYXRlZCBncm91cFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNyZWF0ZUdyb3VwV2l0aE1lc3NhZ2UocHJvamVjdCwgcGF0aCkge1xuICB2YXIgZ3JvdXAgPSBnZXRHcm91cChwcm9qZWN0LCBwYXRoKTtcblxuICBpZiAoIWdyb3VwKSB7XG4gICAgZ3JvdXAgPSBjcmVhdGVHcm91cChwcm9qZWN0LCBwYXRoKTtcblxuICAgIGxvZy53YXJuKFxuICAgICAgJ0VSUkdST1VQJyxcbiAgICAgIGBHcm91cCAnJHtwYXRofScgZG9lcyBub3QgZXhpc3QgaW4geW91ciBYY29kZSBwcm9qZWN0LiBXZSBoYXZlIGNyZWF0ZWQgaXQgYXV0b21hdGljYWxseSBmb3IgeW91LmBcbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIGdyb3VwO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "createGroupWithMessage.js"
      ],
      "names": [
        "log",
        "require",
        "createGroup",
        "getGroup",
        "module",
        "exports",
        "createGroupWithMessage",
        "project",
        "path",
        "group",
        "warn"
      ],
      "mappings": "aAAA,MAAMA,MAAMC,QAAQ,QAAR,CAAZ;;AAEA,MAAMC,cAAcD,QAAQ,eAAR,CAApB;AACA,MAAME,WAAWF,QAAQ,YAAR,CAAjB;;AAEA;;;;;;AAMAG,OAAOC,OAAP,GAAiB,SAASC,sBAAT,CAAgCC,OAAhC,EAAyCC,IAAzC,EAA+C;AAC9D,MAAIC,QAAQN,SAASI,OAAT,EAAkBC,IAAlB,CAAZ;;AAEA,MAAI,CAACC,KAAL,EAAY;AACVA,YAAQP,YAAYK,OAAZ,EAAqBC,IAArB,CAAR;;AAEAR,QAAIU,IAAJ;AACE,cADF;AAEG,cAASF,IAAK,mFAFjB;;AAID;;AAED,SAAOC,KAAP;AACD,CAbD",
      "file": "createGroupWithMessage.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const log = require('npmlog');\n\nconst createGroup = require('./createGroup');\nconst getGroup = require('./getGroup');\n\n/**\n * Given project and path of the group, it checks if a group exists at that path,\n * and deeply creates a group for that path if its does not already exist.\n *\n * Returns the existing or newly created group\n */\nmodule.exports = function createGroupWithMessage(project, path) {\n  var group = getGroup(project, path);\n\n  if (!group) {\n    group = createGroup(project, path);\n\n    log.warn(\n      'ERRGROUP',\n      `Group '${path}' does not exist in your Xcode project. We have created it automatically for you.`\n    );\n  }\n\n  return group;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/createGroup.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/createGroup.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/createGroup.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "createGroup.js",
      "sourceFileName": "createGroup.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "createGroup"
    },
    "ignored": false,
    "code": "'use strict';const getGroup = require('./getGroup');\n\nconst hasGroup = (pbxGroup, name) => pbxGroup.children.find(group => group.comment === name);\n\n/**\n                                                                                               * Given project and path of the group, it deeply creates a given group\n                                                                                               * making all outer groups if neccessary\n                                                                                               *\n                                                                                               * Returns newly created group\n                                                                                               */\nmodule.exports = function createGroup(project, path) {\n  return path.split('/').reduce(\n  (group, name) => {\n    if (!hasGroup(group, name)) {\n      const uuid = project.pbxCreateGroup(name, '\"\"');\n\n      group.children.push({\n        value: uuid,\n        comment: name });\n\n    }\n\n    return project.pbxGroupByName(name);\n  },\n  getGroup(project));\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZUdyb3VwLmpzIl0sIm5hbWVzIjpbImdldEdyb3VwIiwicmVxdWlyZSIsImhhc0dyb3VwIiwicGJ4R3JvdXAiLCJuYW1lIiwiY2hpbGRyZW4iLCJmaW5kIiwiZ3JvdXAiLCJjb21tZW50IiwibW9kdWxlIiwiZXhwb3J0cyIsImNyZWF0ZUdyb3VwIiwicHJvamVjdCIsInBhdGgiLCJzcGxpdCIsInJlZHVjZSIsInV1aWQiLCJwYnhDcmVhdGVHcm91cCIsInB1c2giLCJ2YWx1ZSIsInBieEdyb3VwQnlOYW1lIl0sIm1hcHBpbmdzIjoiYUFBQSxNQUFNQSxXQUFXQyxRQUFRLFlBQVIsQ0FBakI7O0FBRUEsTUFBTUMsV0FBVyxDQUFDQyxRQUFELEVBQVdDLElBQVgsS0FBb0JELFNBQVNFLFFBQVQsQ0FBa0JDLElBQWxCLENBQXVCQyxTQUFTQSxNQUFNQyxPQUFOLEtBQWtCSixJQUFsRCxDQUFyQzs7QUFFQTs7Ozs7O0FBTUFLLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsV0FBVCxDQUFxQkMsT0FBckIsRUFBOEJDLElBQTlCLEVBQW9DO0FBQ25ELFNBQU9BLEtBQUtDLEtBQUwsQ0FBVyxHQUFYLEVBQWdCQyxNQUFoQjtBQUNMLEdBQUNSLEtBQUQsRUFBUUgsSUFBUixLQUFpQjtBQUNmLFFBQUksQ0FBQ0YsU0FBU0ssS0FBVCxFQUFnQkgsSUFBaEIsQ0FBTCxFQUE0QjtBQUMxQixZQUFNWSxPQUFPSixRQUFRSyxjQUFSLENBQXVCYixJQUF2QixFQUE2QixJQUE3QixDQUFiOztBQUVBRyxZQUFNRixRQUFOLENBQWVhLElBQWYsQ0FBb0I7QUFDbEJDLGVBQU9ILElBRFc7QUFFbEJSLGlCQUFTSixJQUZTLEVBQXBCOztBQUlEOztBQUVELFdBQU9RLFFBQVFRLGNBQVIsQ0FBdUJoQixJQUF2QixDQUFQO0FBQ0QsR0FaSTtBQWFMSixXQUFTWSxPQUFULENBYkssQ0FBUDs7QUFlRCxDQWhCRCIsImZpbGUiOiJjcmVhdGVHcm91cC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL2lvcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdldEdyb3VwID0gcmVxdWlyZSgnLi9nZXRHcm91cCcpO1xuXG5jb25zdCBoYXNHcm91cCA9IChwYnhHcm91cCwgbmFtZSkgPT4gcGJ4R3JvdXAuY2hpbGRyZW4uZmluZChncm91cCA9PiBncm91cC5jb21tZW50ID09PSBuYW1lKTtcblxuLyoqXG4gKiBHaXZlbiBwcm9qZWN0IGFuZCBwYXRoIG9mIHRoZSBncm91cCwgaXQgZGVlcGx5IGNyZWF0ZXMgYSBnaXZlbiBncm91cFxuICogbWFraW5nIGFsbCBvdXRlciBncm91cHMgaWYgbmVjY2Vzc2FyeVxuICpcbiAqIFJldHVybnMgbmV3bHkgY3JlYXRlZCBncm91cFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNyZWF0ZUdyb3VwKHByb2plY3QsIHBhdGgpIHtcbiAgcmV0dXJuIHBhdGguc3BsaXQoJy8nKS5yZWR1Y2UoXG4gICAgKGdyb3VwLCBuYW1lKSA9PiB7XG4gICAgICBpZiAoIWhhc0dyb3VwKGdyb3VwLCBuYW1lKSkge1xuICAgICAgICBjb25zdCB1dWlkID0gcHJvamVjdC5wYnhDcmVhdGVHcm91cChuYW1lLCAnXCJcIicpO1xuXG4gICAgICAgIGdyb3VwLmNoaWxkcmVuLnB1c2goe1xuICAgICAgICAgIHZhbHVlOiB1dWlkLFxuICAgICAgICAgIGNvbW1lbnQ6IG5hbWUsXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcHJvamVjdC5wYnhHcm91cEJ5TmFtZShuYW1lKTtcbiAgICB9LFxuICAgIGdldEdyb3VwKHByb2plY3QpXG4gICk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "createGroup.js"
      ],
      "names": [
        "getGroup",
        "require",
        "hasGroup",
        "pbxGroup",
        "name",
        "children",
        "find",
        "group",
        "comment",
        "module",
        "exports",
        "createGroup",
        "project",
        "path",
        "split",
        "reduce",
        "uuid",
        "pbxCreateGroup",
        "push",
        "value",
        "pbxGroupByName"
      ],
      "mappings": "aAAA,MAAMA,WAAWC,QAAQ,YAAR,CAAjB;;AAEA,MAAMC,WAAW,CAACC,QAAD,EAAWC,IAAX,KAAoBD,SAASE,QAAT,CAAkBC,IAAlB,CAAuBC,SAASA,MAAMC,OAAN,KAAkBJ,IAAlD,CAArC;;AAEA;;;;;;AAMAK,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,OAArB,EAA8BC,IAA9B,EAAoC;AACnD,SAAOA,KAAKC,KAAL,CAAW,GAAX,EAAgBC,MAAhB;AACL,GAACR,KAAD,EAAQH,IAAR,KAAiB;AACf,QAAI,CAACF,SAASK,KAAT,EAAgBH,IAAhB,CAAL,EAA4B;AAC1B,YAAMY,OAAOJ,QAAQK,cAAR,CAAuBb,IAAvB,EAA6B,IAA7B,CAAb;;AAEAG,YAAMF,QAAN,CAAea,IAAf,CAAoB;AAClBC,eAAOH,IADW;AAElBR,iBAASJ,IAFS,EAApB;;AAID;;AAED,WAAOQ,QAAQQ,cAAR,CAAuBhB,IAAvB,CAAP;AACD,GAZI;AAaLJ,WAASY,OAAT,CAbK,CAAP;;AAeD,CAhBD",
      "file": "createGroup.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const getGroup = require('./getGroup');\n\nconst hasGroup = (pbxGroup, name) => pbxGroup.children.find(group => group.comment === name);\n\n/**\n * Given project and path of the group, it deeply creates a given group\n * making all outer groups if neccessary\n *\n * Returns newly created group\n */\nmodule.exports = function createGroup(project, path) {\n  return path.split('/').reduce(\n    (group, name) => {\n      if (!hasGroup(group, name)) {\n        const uuid = project.pbxCreateGroup(name, '\"\"');\n\n        group.children.push({\n          value: uuid,\n          comment: name,\n        });\n      }\n\n      return project.pbxGroupByName(name);\n    },\n    getGroup(project)\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getGroup.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getGroup.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getGroup.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "getGroup.js",
      "sourceFileName": "getGroup.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "getGroup"
    },
    "ignored": false,
    "code": "'use strict';const getFirstProject = project => project.getFirstProject().firstProject;\n\nconst findGroup = (group, name) => group.children.find(group => group.comment === name);\n\n/**\n                                                                                          * Returns group from .xcodeproj if one exists, null otherwise\n                                                                                          *\n                                                                                          * Unlike node-xcode `pbxGroupByName` - it does not return `first-matching`\n                                                                                          * group if multiple groups with the same name exist\n                                                                                          *\n                                                                                          * If path is not provided, it returns top-level group\n                                                                                          */\nmodule.exports = function getGroup(project, path) {\n  const firstProject = getFirstProject(project);\n\n  var group = project.getPBXGroupByKey(firstProject.mainGroup);\n\n  if (!path) {\n    return group;\n  }\n\n  for (var name of path.split('/')) {\n    var foundGroup = findGroup(group, name);\n\n    if (foundGroup) {\n      group = project.getPBXGroupByKey(foundGroup.value);\n    } else {\n      group = null;\n      break;\n    }\n  }\n\n  return group;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldEdyb3VwLmpzIl0sIm5hbWVzIjpbImdldEZpcnN0UHJvamVjdCIsInByb2plY3QiLCJmaXJzdFByb2plY3QiLCJmaW5kR3JvdXAiLCJncm91cCIsIm5hbWUiLCJjaGlsZHJlbiIsImZpbmQiLCJjb21tZW50IiwibW9kdWxlIiwiZXhwb3J0cyIsImdldEdyb3VwIiwicGF0aCIsImdldFBCWEdyb3VwQnlLZXkiLCJtYWluR3JvdXAiLCJzcGxpdCIsImZvdW5kR3JvdXAiLCJ2YWx1ZSJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsa0JBQW1CQyxPQUFELElBQWFBLFFBQVFELGVBQVIsR0FBMEJFLFlBQS9EOztBQUVBLE1BQU1DLFlBQVksQ0FBQ0MsS0FBRCxFQUFRQyxJQUFSLEtBQWlCRCxNQUFNRSxRQUFOLENBQWVDLElBQWYsQ0FBb0JILFNBQVNBLE1BQU1JLE9BQU4sS0FBa0JILElBQS9DLENBQW5DOztBQUVBOzs7Ozs7OztBQVFBSSxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLFFBQVQsQ0FBa0JWLE9BQWxCLEVBQTJCVyxJQUEzQixFQUFpQztBQUNoRCxRQUFNVixlQUFlRixnQkFBZ0JDLE9BQWhCLENBQXJCOztBQUVBLE1BQUlHLFFBQVFILFFBQVFZLGdCQUFSLENBQXlCWCxhQUFhWSxTQUF0QyxDQUFaOztBQUVBLE1BQUksQ0FBQ0YsSUFBTCxFQUFXO0FBQ1QsV0FBT1IsS0FBUDtBQUNEOztBQUVELE9BQUssSUFBSUMsSUFBVCxJQUFpQk8sS0FBS0csS0FBTCxDQUFXLEdBQVgsQ0FBakIsRUFBa0M7QUFDaEMsUUFBSUMsYUFBYWIsVUFBVUMsS0FBVixFQUFpQkMsSUFBakIsQ0FBakI7O0FBRUEsUUFBSVcsVUFBSixFQUFnQjtBQUNkWixjQUFRSCxRQUFRWSxnQkFBUixDQUF5QkcsV0FBV0MsS0FBcEMsQ0FBUjtBQUNELEtBRkQsTUFFTztBQUNMYixjQUFRLElBQVI7QUFDQTtBQUNEO0FBQ0Y7O0FBRUQsU0FBT0EsS0FBUDtBQUNELENBckJEIiwiZmlsZSI6ImdldEdyb3VwLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvaW9zIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZ2V0Rmlyc3RQcm9qZWN0ID0gKHByb2plY3QpID0+IHByb2plY3QuZ2V0Rmlyc3RQcm9qZWN0KCkuZmlyc3RQcm9qZWN0O1xuXG5jb25zdCBmaW5kR3JvdXAgPSAoZ3JvdXAsIG5hbWUpID0+IGdyb3VwLmNoaWxkcmVuLmZpbmQoZ3JvdXAgPT4gZ3JvdXAuY29tbWVudCA9PT0gbmFtZSk7XG5cbi8qKlxuICogUmV0dXJucyBncm91cCBmcm9tIC54Y29kZXByb2ogaWYgb25lIGV4aXN0cywgbnVsbCBvdGhlcndpc2VcbiAqXG4gKiBVbmxpa2Ugbm9kZS14Y29kZSBgcGJ4R3JvdXBCeU5hbWVgIC0gaXQgZG9lcyBub3QgcmV0dXJuIGBmaXJzdC1tYXRjaGluZ2BcbiAqIGdyb3VwIGlmIG11bHRpcGxlIGdyb3VwcyB3aXRoIHRoZSBzYW1lIG5hbWUgZXhpc3RcbiAqXG4gKiBJZiBwYXRoIGlzIG5vdCBwcm92aWRlZCwgaXQgcmV0dXJucyB0b3AtbGV2ZWwgZ3JvdXBcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXRHcm91cChwcm9qZWN0LCBwYXRoKSB7XG4gIGNvbnN0IGZpcnN0UHJvamVjdCA9IGdldEZpcnN0UHJvamVjdChwcm9qZWN0KTtcblxuICB2YXIgZ3JvdXAgPSBwcm9qZWN0LmdldFBCWEdyb3VwQnlLZXkoZmlyc3RQcm9qZWN0Lm1haW5Hcm91cCk7XG5cbiAgaWYgKCFwYXRoKSB7XG4gICAgcmV0dXJuIGdyb3VwO1xuICB9XG5cbiAgZm9yICh2YXIgbmFtZSBvZiBwYXRoLnNwbGl0KCcvJykpIHtcbiAgICB2YXIgZm91bmRHcm91cCA9IGZpbmRHcm91cChncm91cCwgbmFtZSk7XG5cbiAgICBpZiAoZm91bmRHcm91cCkge1xuICAgICAgZ3JvdXAgPSBwcm9qZWN0LmdldFBCWEdyb3VwQnlLZXkoZm91bmRHcm91cC52YWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdyb3VwID0gbnVsbDtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBncm91cDtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "getGroup.js"
      ],
      "names": [
        "getFirstProject",
        "project",
        "firstProject",
        "findGroup",
        "group",
        "name",
        "children",
        "find",
        "comment",
        "module",
        "exports",
        "getGroup",
        "path",
        "getPBXGroupByKey",
        "mainGroup",
        "split",
        "foundGroup",
        "value"
      ],
      "mappings": "aAAA,MAAMA,kBAAmBC,OAAD,IAAaA,QAAQD,eAAR,GAA0BE,YAA/D;;AAEA,MAAMC,YAAY,CAACC,KAAD,EAAQC,IAAR,KAAiBD,MAAME,QAAN,CAAeC,IAAf,CAAoBH,SAASA,MAAMI,OAAN,KAAkBH,IAA/C,CAAnC;;AAEA;;;;;;;;AAQAI,OAAOC,OAAP,GAAiB,SAASC,QAAT,CAAkBV,OAAlB,EAA2BW,IAA3B,EAAiC;AAChD,QAAMV,eAAeF,gBAAgBC,OAAhB,CAArB;;AAEA,MAAIG,QAAQH,QAAQY,gBAAR,CAAyBX,aAAaY,SAAtC,CAAZ;;AAEA,MAAI,CAACF,IAAL,EAAW;AACT,WAAOR,KAAP;AACD;;AAED,OAAK,IAAIC,IAAT,IAAiBO,KAAKG,KAAL,CAAW,GAAX,CAAjB,EAAkC;AAChC,QAAIC,aAAab,UAAUC,KAAV,EAAiBC,IAAjB,CAAjB;;AAEA,QAAIW,UAAJ,EAAgB;AACdZ,cAAQH,QAAQY,gBAAR,CAAyBG,WAAWC,KAApC,CAAR;AACD,KAFD,MAEO;AACLb,cAAQ,IAAR;AACA;AACD;AACF;;AAED,SAAOA,KAAP;AACD,CArBD",
      "file": "getGroup.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const getFirstProject = (project) => project.getFirstProject().firstProject;\n\nconst findGroup = (group, name) => group.children.find(group => group.comment === name);\n\n/**\n * Returns group from .xcodeproj if one exists, null otherwise\n *\n * Unlike node-xcode `pbxGroupByName` - it does not return `first-matching`\n * group if multiple groups with the same name exist\n *\n * If path is not provided, it returns top-level group\n */\nmodule.exports = function getGroup(project, path) {\n  const firstProject = getFirstProject(project);\n\n  var group = project.getPBXGroupByKey(firstProject.mainGroup);\n\n  if (!path) {\n    return group;\n  }\n\n  for (var name of path.split('/')) {\n    var foundGroup = findGroup(group, name);\n\n    if (foundGroup) {\n      group = project.getPBXGroupByKey(foundGroup.value);\n    } else {\n      group = null;\n      break;\n    }\n  }\n\n  return group;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/addFileToProject.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/addFileToProject.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/addFileToProject.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "addFileToProject.js",
      "sourceFileName": "addFileToProject.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "addFileToProject"
    },
    "ignored": false,
    "code": "'use strict';const PbxFile = require('xcode/lib/pbxFile');\n\n/**\n                                                            * Given xcodeproj and filePath, it creates new file\n                                                            * from path provided, adds it to the project\n                                                            * and returns newly created instance of a file\n                                                            */\nmodule.exports = function addFileToProject(project, filePath) {\n  const file = new PbxFile(filePath);\n  file.uuid = project.generateUuid();\n  file.fileRef = project.generateUuid();\n  project.addToPbxFileReferenceSection(file);\n  return file;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZEZpbGVUb1Byb2plY3QuanMiXSwibmFtZXMiOlsiUGJ4RmlsZSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiYWRkRmlsZVRvUHJvamVjdCIsInByb2plY3QiLCJmaWxlUGF0aCIsImZpbGUiLCJ1dWlkIiwiZ2VuZXJhdGVVdWlkIiwiZmlsZVJlZiIsImFkZFRvUGJ4RmlsZVJlZmVyZW5jZVNlY3Rpb24iXSwibWFwcGluZ3MiOiJhQUFBLE1BQU1BLFVBQVVDLFFBQVEsbUJBQVIsQ0FBaEI7O0FBRUE7Ozs7O0FBS0FDLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsZ0JBQVQsQ0FBMEJDLE9BQTFCLEVBQW1DQyxRQUFuQyxFQUE2QztBQUM1RCxRQUFNQyxPQUFPLElBQUlQLE9BQUosQ0FBWU0sUUFBWixDQUFiO0FBQ0FDLE9BQUtDLElBQUwsR0FBWUgsUUFBUUksWUFBUixFQUFaO0FBQ0FGLE9BQUtHLE9BQUwsR0FBZUwsUUFBUUksWUFBUixFQUFmO0FBQ0FKLFVBQVFNLDRCQUFSLENBQXFDSixJQUFyQztBQUNBLFNBQU9BLElBQVA7QUFDRCxDQU5EIiwiZmlsZSI6ImFkZEZpbGVUb1Byb2plY3QuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9pb3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQYnhGaWxlID0gcmVxdWlyZSgneGNvZGUvbGliL3BieEZpbGUnKTtcblxuLyoqXG4gKiBHaXZlbiB4Y29kZXByb2ogYW5kIGZpbGVQYXRoLCBpdCBjcmVhdGVzIG5ldyBmaWxlXG4gKiBmcm9tIHBhdGggcHJvdmlkZWQsIGFkZHMgaXQgdG8gdGhlIHByb2plY3RcbiAqIGFuZCByZXR1cm5zIG5ld2x5IGNyZWF0ZWQgaW5zdGFuY2Ugb2YgYSBmaWxlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYWRkRmlsZVRvUHJvamVjdChwcm9qZWN0LCBmaWxlUGF0aCkge1xuICBjb25zdCBmaWxlID0gbmV3IFBieEZpbGUoZmlsZVBhdGgpO1xuICBmaWxlLnV1aWQgPSBwcm9qZWN0LmdlbmVyYXRlVXVpZCgpO1xuICBmaWxlLmZpbGVSZWYgPSBwcm9qZWN0LmdlbmVyYXRlVXVpZCgpO1xuICBwcm9qZWN0LmFkZFRvUGJ4RmlsZVJlZmVyZW5jZVNlY3Rpb24oZmlsZSk7XG4gIHJldHVybiBmaWxlO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "addFileToProject.js"
      ],
      "names": [
        "PbxFile",
        "require",
        "module",
        "exports",
        "addFileToProject",
        "project",
        "filePath",
        "file",
        "uuid",
        "generateUuid",
        "fileRef",
        "addToPbxFileReferenceSection"
      ],
      "mappings": "aAAA,MAAMA,UAAUC,QAAQ,mBAAR,CAAhB;;AAEA;;;;;AAKAC,OAAOC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,OAA1B,EAAmCC,QAAnC,EAA6C;AAC5D,QAAMC,OAAO,IAAIP,OAAJ,CAAYM,QAAZ,CAAb;AACAC,OAAKC,IAAL,GAAYH,QAAQI,YAAR,EAAZ;AACAF,OAAKG,OAAL,GAAeL,QAAQI,YAAR,EAAf;AACAJ,UAAQM,4BAAR,CAAqCJ,IAArC;AACA,SAAOA,IAAP;AACD,CAND",
      "file": "addFileToProject.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const PbxFile = require('xcode/lib/pbxFile');\n\n/**\n * Given xcodeproj and filePath, it creates new file\n * from path provided, adds it to the project\n * and returns newly created instance of a file\n */\nmodule.exports = function addFileToProject(project, filePath) {\n  const file = new PbxFile(filePath);\n  file.uuid = project.generateUuid();\n  file.fileRef = project.generateUuid();\n  project.addToPbxFileReferenceSection(file);\n  return file;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/addProjectToLibraries.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/addProjectToLibraries.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/addProjectToLibraries.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "addProjectToLibraries.js",
      "sourceFileName": "addProjectToLibraries.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "addProjectToLibraries"
    },
    "ignored": false,
    "code": "\"use strict\"; /**\n               * Given an array of xcodeproj libraries and pbxFile,\n               * it appends it to that group\n               *\n               * Important: That function mutates `libraries` and it's not pure.\n               * It's mainly due to limitations of `xcode` library.\n               */\nmodule.exports = function addProjectToLibraries(libraries, file) {\n  return libraries.children.push({\n    value: file.fileRef,\n    comment: file.basename });\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZFByb2plY3RUb0xpYnJhcmllcy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYWRkUHJvamVjdFRvTGlicmFyaWVzIiwibGlicmFyaWVzIiwiZmlsZSIsImNoaWxkcmVuIiwicHVzaCIsInZhbHVlIiwiZmlsZVJlZiIsImNvbW1lbnQiLCJiYXNlbmFtZSJdLCJtYXBwaW5ncyI6ImNBQUE7Ozs7Ozs7QUFPQUEsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxxQkFBVCxDQUErQkMsU0FBL0IsRUFBMENDLElBQTFDLEVBQWdEO0FBQy9ELFNBQU9ELFVBQVVFLFFBQVYsQ0FBbUJDLElBQW5CLENBQXdCO0FBQzdCQyxXQUFPSCxLQUFLSSxPQURpQjtBQUU3QkMsYUFBU0wsS0FBS00sUUFGZSxFQUF4QixDQUFQOztBQUlELENBTEQiLCJmaWxlIjoiYWRkUHJvamVjdFRvTGlicmFyaWVzLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvaW9zIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHaXZlbiBhbiBhcnJheSBvZiB4Y29kZXByb2ogbGlicmFyaWVzIGFuZCBwYnhGaWxlLFxuICogaXQgYXBwZW5kcyBpdCB0byB0aGF0IGdyb3VwXG4gKlxuICogSW1wb3J0YW50OiBUaGF0IGZ1bmN0aW9uIG11dGF0ZXMgYGxpYnJhcmllc2AgYW5kIGl0J3Mgbm90IHB1cmUuXG4gKiBJdCdzIG1haW5seSBkdWUgdG8gbGltaXRhdGlvbnMgb2YgYHhjb2RlYCBsaWJyYXJ5LlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGFkZFByb2plY3RUb0xpYnJhcmllcyhsaWJyYXJpZXMsIGZpbGUpIHtcbiAgcmV0dXJuIGxpYnJhcmllcy5jaGlsZHJlbi5wdXNoKHtcbiAgICB2YWx1ZTogZmlsZS5maWxlUmVmLFxuICAgIGNvbW1lbnQ6IGZpbGUuYmFzZW5hbWUsXG4gIH0pO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "addProjectToLibraries.js"
      ],
      "names": [
        "module",
        "exports",
        "addProjectToLibraries",
        "libraries",
        "file",
        "children",
        "push",
        "value",
        "fileRef",
        "comment",
        "basename"
      ],
      "mappings": "cAAA;;;;;;;AAOAA,OAAOC,OAAP,GAAiB,SAASC,qBAAT,CAA+BC,SAA/B,EAA0CC,IAA1C,EAAgD;AAC/D,SAAOD,UAAUE,QAAV,CAAmBC,IAAnB,CAAwB;AAC7BC,WAAOH,KAAKI,OADiB;AAE7BC,aAASL,KAAKM,QAFe,EAAxB,CAAP;;AAID,CALD",
      "file": "addProjectToLibraries.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "/**\n * Given an array of xcodeproj libraries and pbxFile,\n * it appends it to that group\n *\n * Important: That function mutates `libraries` and it's not pure.\n * It's mainly due to limitations of `xcode` library.\n */\nmodule.exports = function addProjectToLibraries(libraries, file) {\n  return libraries.children.push({\n    value: file.fileRef,\n    comment: file.basename,\n  });\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/addSharedLibraries.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/addSharedLibraries.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/addSharedLibraries.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "addSharedLibraries.js",
      "sourceFileName": "addSharedLibraries.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "addSharedLibraries"
    },
    "ignored": false,
    "code": "'use strict';const createGroupWithMessage = require('./createGroupWithMessage');\n\nmodule.exports = function addSharedLibraries(project, libraries) {\n  if (!libraries.length) {\n    return;\n  }\n\n  // Create a Frameworks group if necessary.\n  createGroupWithMessage(project, 'Frameworks');\n\n  const target = project.getFirstTarget().uuid;\n\n  for (var name of libraries) {\n    project.addFramework(name, { target });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZFNoYXJlZExpYnJhcmllcy5qcyJdLCJuYW1lcyI6WyJjcmVhdGVHcm91cFdpdGhNZXNzYWdlIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJhZGRTaGFyZWRMaWJyYXJpZXMiLCJwcm9qZWN0IiwibGlicmFyaWVzIiwibGVuZ3RoIiwidGFyZ2V0IiwiZ2V0Rmlyc3RUYXJnZXQiLCJ1dWlkIiwibmFtZSIsImFkZEZyYW1ld29yayJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEseUJBQXlCQyxRQUFRLDBCQUFSLENBQS9COztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLGtCQUFULENBQTRCQyxPQUE1QixFQUFxQ0MsU0FBckMsRUFBZ0Q7QUFDL0QsTUFBSSxDQUFDQSxVQUFVQyxNQUFmLEVBQXVCO0FBQ3JCO0FBQ0Q7O0FBRUQ7QUFDQVAseUJBQXVCSyxPQUF2QixFQUFnQyxZQUFoQzs7QUFFQSxRQUFNRyxTQUFTSCxRQUFRSSxjQUFSLEdBQXlCQyxJQUF4Qzs7QUFFQSxPQUFLLElBQUlDLElBQVQsSUFBaUJMLFNBQWpCLEVBQTRCO0FBQzFCRCxZQUFRTyxZQUFSLENBQXFCRCxJQUFyQixFQUEyQixFQUFFSCxNQUFGLEVBQTNCO0FBQ0Q7QUFDRixDQWJEIiwiZmlsZSI6ImFkZFNoYXJlZExpYnJhcmllcy5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL2lvcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNyZWF0ZUdyb3VwV2l0aE1lc3NhZ2UgPSByZXF1aXJlKCcuL2NyZWF0ZUdyb3VwV2l0aE1lc3NhZ2UnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBhZGRTaGFyZWRMaWJyYXJpZXMocHJvamVjdCwgbGlicmFyaWVzKSB7XG4gIGlmICghbGlicmFyaWVzLmxlbmd0aCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIENyZWF0ZSBhIEZyYW1ld29ya3MgZ3JvdXAgaWYgbmVjZXNzYXJ5LlxuICBjcmVhdGVHcm91cFdpdGhNZXNzYWdlKHByb2plY3QsICdGcmFtZXdvcmtzJyk7XG5cbiAgY29uc3QgdGFyZ2V0ID0gcHJvamVjdC5nZXRGaXJzdFRhcmdldCgpLnV1aWQ7XG5cbiAgZm9yICh2YXIgbmFtZSBvZiBsaWJyYXJpZXMpIHtcbiAgICBwcm9qZWN0LmFkZEZyYW1ld29yayhuYW1lLCB7IHRhcmdldCB9KTtcbiAgfVxufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "addSharedLibraries.js"
      ],
      "names": [
        "createGroupWithMessage",
        "require",
        "module",
        "exports",
        "addSharedLibraries",
        "project",
        "libraries",
        "length",
        "target",
        "getFirstTarget",
        "uuid",
        "name",
        "addFramework"
      ],
      "mappings": "aAAA,MAAMA,yBAAyBC,QAAQ,0BAAR,CAA/B;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,kBAAT,CAA4BC,OAA5B,EAAqCC,SAArC,EAAgD;AAC/D,MAAI,CAACA,UAAUC,MAAf,EAAuB;AACrB;AACD;;AAED;AACAP,yBAAuBK,OAAvB,EAAgC,YAAhC;;AAEA,QAAMG,SAASH,QAAQI,cAAR,GAAyBC,IAAxC;;AAEA,OAAK,IAAIC,IAAT,IAAiBL,SAAjB,EAA4B;AAC1BD,YAAQO,YAAR,CAAqBD,IAArB,EAA2B,EAAEH,MAAF,EAA3B;AACD;AACF,CAbD",
      "file": "addSharedLibraries.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const createGroupWithMessage = require('./createGroupWithMessage');\n\nmodule.exports = function addSharedLibraries(project, libraries) {\n  if (!libraries.length) {\n    return;\n  }\n\n  // Create a Frameworks group if necessary.\n  createGroupWithMessage(project, 'Frameworks');\n\n  const target = project.getFirstTarget().uuid;\n\n  for (var name of libraries) {\n    project.addFramework(name, { target });\n  }\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/registerNativeModule.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/registerNativeModule.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/registerNativeModule.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "registerNativeModule.js",
      "sourceFileName": "registerNativeModule.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "registerNativeModule"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst readPodfile = require('./readPodfile');\nconst findPodTargetLine = require('./findPodTargetLine');\nconst findLineToAddPod = require('./findLineToAddPod');\nconst findMarkedLinesInPodfile = require('./findMarkedLinesInPodfile');\nconst addPodEntry = require('./addPodEntry');\nconst savePodFile = require('./savePodFile');\n\nmodule.exports = function registerNativeModulePods(dependency, iOSProject) {\n  const podLines = readPodfile(iOSProject.podfile);\n  const linesToAddEntry = getLinesToAddEntry(podLines, iOSProject);\n  addPodEntry(podLines, linesToAddEntry, dependency.config.ios.podspec, dependency.name);\n  savePodFile(iOSProject.podfile, podLines);\n};\n\nfunction getLinesToAddEntry(podLines, { projectName }) {\n  const linesToAddPodWithMarker = findMarkedLinesInPodfile(podLines);\n  if (linesToAddPodWithMarker.length > 0) {\n    return linesToAddPodWithMarker;\n  } else {\n    const firstTargetLined = findPodTargetLine(podLines, projectName);\n    return findLineToAddPod(podLines, firstTargetLined);\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyTmF0aXZlTW9kdWxlLmpzIl0sIm5hbWVzIjpbInJlYWRQb2RmaWxlIiwicmVxdWlyZSIsImZpbmRQb2RUYXJnZXRMaW5lIiwiZmluZExpbmVUb0FkZFBvZCIsImZpbmRNYXJrZWRMaW5lc0luUG9kZmlsZSIsImFkZFBvZEVudHJ5Iiwic2F2ZVBvZEZpbGUiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVnaXN0ZXJOYXRpdmVNb2R1bGVQb2RzIiwiZGVwZW5kZW5jeSIsImlPU1Byb2plY3QiLCJwb2RMaW5lcyIsInBvZGZpbGUiLCJsaW5lc1RvQWRkRW50cnkiLCJnZXRMaW5lc1RvQWRkRW50cnkiLCJjb25maWciLCJpb3MiLCJwb2RzcGVjIiwibmFtZSIsInByb2plY3ROYW1lIiwibGluZXNUb0FkZFBvZFdpdGhNYXJrZXIiLCJsZW5ndGgiLCJmaXJzdFRhcmdldExpbmVkIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxNQUFNQSxjQUFjQyxRQUFRLGVBQVIsQ0FBcEI7QUFDQSxNQUFNQyxvQkFBb0JELFFBQVEscUJBQVIsQ0FBMUI7QUFDQSxNQUFNRSxtQkFBbUJGLFFBQVEsb0JBQVIsQ0FBekI7QUFDQSxNQUFNRywyQkFBMkJILFFBQVEsNEJBQVIsQ0FBakM7QUFDQSxNQUFNSSxjQUFjSixRQUFRLGVBQVIsQ0FBcEI7QUFDQSxNQUFNSyxjQUFjTCxRQUFRLGVBQVIsQ0FBcEI7O0FBRUFNLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0Msd0JBQVQsQ0FBa0NDLFVBQWxDLEVBQThDQyxVQUE5QyxFQUEwRDtBQUN6RSxRQUFNQyxXQUFXWixZQUFZVyxXQUFXRSxPQUF2QixDQUFqQjtBQUNBLFFBQU1DLGtCQUFrQkMsbUJBQW1CSCxRQUFuQixFQUE2QkQsVUFBN0IsQ0FBeEI7QUFDQU4sY0FBWU8sUUFBWixFQUFzQkUsZUFBdEIsRUFBdUNKLFdBQVdNLE1BQVgsQ0FBa0JDLEdBQWxCLENBQXNCQyxPQUE3RCxFQUFzRVIsV0FBV1MsSUFBakY7QUFDQWIsY0FBWUssV0FBV0UsT0FBdkIsRUFBZ0NELFFBQWhDO0FBQ0QsQ0FMRDs7QUFPQSxTQUFTRyxrQkFBVCxDQUE0QkgsUUFBNUIsRUFBc0MsRUFBRVEsV0FBRixFQUF0QyxFQUF1RDtBQUNyRCxRQUFNQywwQkFBMEJqQix5QkFBeUJRLFFBQXpCLENBQWhDO0FBQ0EsTUFBSVMsd0JBQXdCQyxNQUF4QixHQUFpQyxDQUFyQyxFQUF3QztBQUN0QyxXQUFPRCx1QkFBUDtBQUNELEdBRkQsTUFFTztBQUNMLFVBQU1FLG1CQUFtQnJCLGtCQUFrQlUsUUFBbEIsRUFBNEJRLFdBQTVCLENBQXpCO0FBQ0EsV0FBT2pCLGlCQUFpQlMsUUFBakIsRUFBMkJXLGdCQUEzQixDQUFQO0FBQ0Q7QUFDRiIsImZpbGUiOiJyZWdpc3Rlck5hdGl2ZU1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL3BvZHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHJlYWRQb2RmaWxlID0gcmVxdWlyZSgnLi9yZWFkUG9kZmlsZScpO1xuY29uc3QgZmluZFBvZFRhcmdldExpbmUgPSByZXF1aXJlKCcuL2ZpbmRQb2RUYXJnZXRMaW5lJyk7XG5jb25zdCBmaW5kTGluZVRvQWRkUG9kID0gcmVxdWlyZSgnLi9maW5kTGluZVRvQWRkUG9kJyk7XG5jb25zdCBmaW5kTWFya2VkTGluZXNJblBvZGZpbGUgPSByZXF1aXJlKCcuL2ZpbmRNYXJrZWRMaW5lc0luUG9kZmlsZScpO1xuY29uc3QgYWRkUG9kRW50cnkgPSByZXF1aXJlKCcuL2FkZFBvZEVudHJ5Jyk7XG5jb25zdCBzYXZlUG9kRmlsZSA9IHJlcXVpcmUoJy4vc2F2ZVBvZEZpbGUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiByZWdpc3Rlck5hdGl2ZU1vZHVsZVBvZHMoZGVwZW5kZW5jeSwgaU9TUHJvamVjdCkge1xuICBjb25zdCBwb2RMaW5lcyA9IHJlYWRQb2RmaWxlKGlPU1Byb2plY3QucG9kZmlsZSk7XG4gIGNvbnN0IGxpbmVzVG9BZGRFbnRyeSA9IGdldExpbmVzVG9BZGRFbnRyeShwb2RMaW5lcywgaU9TUHJvamVjdCk7XG4gIGFkZFBvZEVudHJ5KHBvZExpbmVzLCBsaW5lc1RvQWRkRW50cnksIGRlcGVuZGVuY3kuY29uZmlnLmlvcy5wb2RzcGVjLCBkZXBlbmRlbmN5Lm5hbWUpO1xuICBzYXZlUG9kRmlsZShpT1NQcm9qZWN0LnBvZGZpbGUsIHBvZExpbmVzKTtcbn07XG5cbmZ1bmN0aW9uIGdldExpbmVzVG9BZGRFbnRyeShwb2RMaW5lcywgeyBwcm9qZWN0TmFtZSB9KSB7XG4gIGNvbnN0IGxpbmVzVG9BZGRQb2RXaXRoTWFya2VyID0gZmluZE1hcmtlZExpbmVzSW5Qb2RmaWxlKHBvZExpbmVzKTtcbiAgaWYgKGxpbmVzVG9BZGRQb2RXaXRoTWFya2VyLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gbGluZXNUb0FkZFBvZFdpdGhNYXJrZXI7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgZmlyc3RUYXJnZXRMaW5lZCA9IGZpbmRQb2RUYXJnZXRMaW5lKHBvZExpbmVzLCBwcm9qZWN0TmFtZSk7XG4gICAgcmV0dXJuIGZpbmRMaW5lVG9BZGRQb2QocG9kTGluZXMsIGZpcnN0VGFyZ2V0TGluZWQpO1xuICB9XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "registerNativeModule.js"
      ],
      "names": [
        "readPodfile",
        "require",
        "findPodTargetLine",
        "findLineToAddPod",
        "findMarkedLinesInPodfile",
        "addPodEntry",
        "savePodFile",
        "module",
        "exports",
        "registerNativeModulePods",
        "dependency",
        "iOSProject",
        "podLines",
        "podfile",
        "linesToAddEntry",
        "getLinesToAddEntry",
        "config",
        "ios",
        "podspec",
        "name",
        "projectName",
        "linesToAddPodWithMarker",
        "length",
        "firstTargetLined"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,cAAcC,QAAQ,eAAR,CAApB;AACA,MAAMC,oBAAoBD,QAAQ,qBAAR,CAA1B;AACA,MAAME,mBAAmBF,QAAQ,oBAAR,CAAzB;AACA,MAAMG,2BAA2BH,QAAQ,4BAAR,CAAjC;AACA,MAAMI,cAAcJ,QAAQ,eAAR,CAApB;AACA,MAAMK,cAAcL,QAAQ,eAAR,CAApB;;AAEAM,OAAOC,OAAP,GAAiB,SAASC,wBAAT,CAAkCC,UAAlC,EAA8CC,UAA9C,EAA0D;AACzE,QAAMC,WAAWZ,YAAYW,WAAWE,OAAvB,CAAjB;AACA,QAAMC,kBAAkBC,mBAAmBH,QAAnB,EAA6BD,UAA7B,CAAxB;AACAN,cAAYO,QAAZ,EAAsBE,eAAtB,EAAuCJ,WAAWM,MAAX,CAAkBC,GAAlB,CAAsBC,OAA7D,EAAsER,WAAWS,IAAjF;AACAb,cAAYK,WAAWE,OAAvB,EAAgCD,QAAhC;AACD,CALD;;AAOA,SAASG,kBAAT,CAA4BH,QAA5B,EAAsC,EAAEQ,WAAF,EAAtC,EAAuD;AACrD,QAAMC,0BAA0BjB,yBAAyBQ,QAAzB,CAAhC;AACA,MAAIS,wBAAwBC,MAAxB,GAAiC,CAArC,EAAwC;AACtC,WAAOD,uBAAP;AACD,GAFD,MAEO;AACL,UAAME,mBAAmBrB,kBAAkBU,QAAlB,EAA4BQ,WAA5B,CAAzB;AACA,WAAOjB,iBAAiBS,QAAjB,EAA2BW,gBAA3B,CAAP;AACD;AACF",
      "file": "registerNativeModule.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "sourcesContent": [
        "'use strict';\n\nconst readPodfile = require('./readPodfile');\nconst findPodTargetLine = require('./findPodTargetLine');\nconst findLineToAddPod = require('./findLineToAddPod');\nconst findMarkedLinesInPodfile = require('./findMarkedLinesInPodfile');\nconst addPodEntry = require('./addPodEntry');\nconst savePodFile = require('./savePodFile');\n\nmodule.exports = function registerNativeModulePods(dependency, iOSProject) {\n  const podLines = readPodfile(iOSProject.podfile);\n  const linesToAddEntry = getLinesToAddEntry(podLines, iOSProject);\n  addPodEntry(podLines, linesToAddEntry, dependency.config.ios.podspec, dependency.name);\n  savePodFile(iOSProject.podfile, podLines);\n};\n\nfunction getLinesToAddEntry(podLines, { projectName }) {\n  const linesToAddPodWithMarker = findMarkedLinesInPodfile(podLines);\n  if (linesToAddPodWithMarker.length > 0) {\n    return linesToAddPodWithMarker;\n  } else {\n    const firstTargetLined = findPodTargetLine(podLines, projectName);\n    return findLineToAddPod(podLines, firstTargetLined);\n  }\n}\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/readPodfile.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/readPodfile.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/readPodfile.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "readPodfile.js",
      "sourceFileName": "readPodfile.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "readPodfile"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst fs = require('fs');\n\nmodule.exports = function readPodfile(podfilePath) {\n  const podContent = fs.readFileSync(podfilePath, 'utf8');\n  return podContent.split(/\\r?\\n/g);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWRQb2RmaWxlLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZWFkUG9kZmlsZSIsInBvZGZpbGVQYXRoIiwicG9kQ29udGVudCIsInJlYWRGaWxlU3luYyIsInNwbGl0Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxNQUFNQSxLQUFLQyxRQUFRLElBQVIsQ0FBWDs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxXQUFULENBQXFCQyxXQUFyQixFQUFrQztBQUNqRCxRQUFNQyxhQUFhTixHQUFHTyxZQUFILENBQWdCRixXQUFoQixFQUE2QixNQUE3QixDQUFuQjtBQUNBLFNBQU9DLFdBQVdFLEtBQVgsQ0FBaUIsUUFBakIsQ0FBUDtBQUNELENBSEQiLCJmaWxlIjoicmVhZFBvZGZpbGUuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9wb2RzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcmVhZFBvZGZpbGUocG9kZmlsZVBhdGgpIHtcbiAgY29uc3QgcG9kQ29udGVudCA9IGZzLnJlYWRGaWxlU3luYyhwb2RmaWxlUGF0aCwgJ3V0ZjgnKTtcbiAgcmV0dXJuIHBvZENvbnRlbnQuc3BsaXQoL1xccj9cXG4vZyk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "readPodfile.js"
      ],
      "names": [
        "fs",
        "require",
        "module",
        "exports",
        "readPodfile",
        "podfilePath",
        "podContent",
        "readFileSync",
        "split"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,WAArB,EAAkC;AACjD,QAAMC,aAAaN,GAAGO,YAAH,CAAgBF,WAAhB,EAA6B,MAA7B,CAAnB;AACA,SAAOC,WAAWE,KAAX,CAAiB,QAAjB,CAAP;AACD,CAHD",
      "file": "readPodfile.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "sourcesContent": [
        "'use strict';\n\nconst fs = require('fs');\n\nmodule.exports = function readPodfile(podfilePath) {\n  const podContent = fs.readFileSync(podfilePath, 'utf8');\n  return podContent.split(/\\r?\\n/g);\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/findPodTargetLine.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/findPodTargetLine.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/findPodTargetLine.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findPodTargetLine.js",
      "sourceFileName": "findPodTargetLine.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findPodTargetLine"
    },
    "ignored": false,
    "code": "'use strict';\n\nmodule.exports = function findPodTargetLine(podLines, projectName) {\n  const targetName = projectName.replace('.xcodeproj', '');\n  //match first target definition in file: target 'target_name' do\n  const targetRegex = new RegExp('target (\\'|\\\")' + targetName + '(\\'|\\\") do', 'g');\n  for (let i = 0, len = podLines.length; i < len; i++) {\n    const match = podLines[i].match(targetRegex);\n    if (match) {\n      return i + 1;\n    }\n  }\n  return null;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRQb2RUYXJnZXRMaW5lLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJmaW5kUG9kVGFyZ2V0TGluZSIsInBvZExpbmVzIiwicHJvamVjdE5hbWUiLCJ0YXJnZXROYW1lIiwicmVwbGFjZSIsInRhcmdldFJlZ2V4IiwiUmVnRXhwIiwiaSIsImxlbiIsImxlbmd0aCIsIm1hdGNoIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQUEsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxpQkFBVCxDQUEyQkMsUUFBM0IsRUFBcUNDLFdBQXJDLEVBQWtEO0FBQ2pFLFFBQU1DLGFBQWFELFlBQVlFLE9BQVosQ0FBb0IsWUFBcEIsRUFBa0MsRUFBbEMsQ0FBbkI7QUFDQTtBQUNBLFFBQU1DLGNBQWMsSUFBSUMsTUFBSixDQUFXLG1CQUFtQkgsVUFBbkIsR0FBZ0MsWUFBM0MsRUFBeUQsR0FBekQsQ0FBcEI7QUFDQSxPQUFLLElBQUlJLElBQUksQ0FBUixFQUFXQyxNQUFNUCxTQUFTUSxNQUEvQixFQUF1Q0YsSUFBSUMsR0FBM0MsRUFBZ0RELEdBQWhELEVBQXFEO0FBQ25ELFVBQU1HLFFBQVFULFNBQVNNLENBQVQsRUFBWUcsS0FBWixDQUFrQkwsV0FBbEIsQ0FBZDtBQUNBLFFBQUlLLEtBQUosRUFBVztBQUNULGFBQU9ILElBQUksQ0FBWDtBQUNEO0FBQ0Y7QUFDRCxTQUFPLElBQVA7QUFDRCxDQVhEIiwiZmlsZSI6ImZpbmRQb2RUYXJnZXRMaW5lLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvcG9kcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBmaW5kUG9kVGFyZ2V0TGluZShwb2RMaW5lcywgcHJvamVjdE5hbWUpIHtcbiAgY29uc3QgdGFyZ2V0TmFtZSA9IHByb2plY3ROYW1lLnJlcGxhY2UoJy54Y29kZXByb2onLCAnJyk7XG4gIC8vbWF0Y2ggZmlyc3QgdGFyZ2V0IGRlZmluaXRpb24gaW4gZmlsZTogdGFyZ2V0ICd0YXJnZXRfbmFtZScgZG9cbiAgY29uc3QgdGFyZ2V0UmVnZXggPSBuZXcgUmVnRXhwKCd0YXJnZXQgKFxcJ3xcXFwiKScgKyB0YXJnZXROYW1lICsgJyhcXCd8XFxcIikgZG8nLCAnZycpO1xuICBmb3IgKGxldCBpID0gMCwgbGVuID0gcG9kTGluZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBjb25zdCBtYXRjaCA9IHBvZExpbmVzW2ldLm1hdGNoKHRhcmdldFJlZ2V4KTtcbiAgICBpZiAobWF0Y2gpIHtcbiAgICAgIHJldHVybiBpICsgMTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findPodTargetLine.js"
      ],
      "names": [
        "module",
        "exports",
        "findPodTargetLine",
        "podLines",
        "projectName",
        "targetName",
        "replace",
        "targetRegex",
        "RegExp",
        "i",
        "len",
        "length",
        "match"
      ],
      "mappings": "AAAA;;AAEAA,OAAOC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,QAA3B,EAAqCC,WAArC,EAAkD;AACjE,QAAMC,aAAaD,YAAYE,OAAZ,CAAoB,YAApB,EAAkC,EAAlC,CAAnB;AACA;AACA,QAAMC,cAAc,IAAIC,MAAJ,CAAW,mBAAmBH,UAAnB,GAAgC,YAA3C,EAAyD,GAAzD,CAApB;AACA,OAAK,IAAII,IAAI,CAAR,EAAWC,MAAMP,SAASQ,MAA/B,EAAuCF,IAAIC,GAA3C,EAAgDD,GAAhD,EAAqD;AACnD,UAAMG,QAAQT,SAASM,CAAT,EAAYG,KAAZ,CAAkBL,WAAlB,CAAd;AACA,QAAIK,KAAJ,EAAW;AACT,aAAOH,IAAI,CAAX;AACD;AACF;AACD,SAAO,IAAP;AACD,CAXD",
      "file": "findPodTargetLine.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "sourcesContent": [
        "'use strict';\n\nmodule.exports = function findPodTargetLine(podLines, projectName) {\n  const targetName = projectName.replace('.xcodeproj', '');\n  //match first target definition in file: target 'target_name' do\n  const targetRegex = new RegExp('target (\\'|\\\")' + targetName + '(\\'|\\\") do', 'g');\n  for (let i = 0, len = podLines.length; i < len; i++) {\n    const match = podLines[i].match(targetRegex);\n    if (match) {\n      return i + 1;\n    }\n  }\n  return null;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/findLineToAddPod.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/findLineToAddPod.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/findLineToAddPod.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findLineToAddPod.js",
      "sourceFileName": "findLineToAddPod.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findLineToAddPod"
    },
    "ignored": false,
    "code": "'use strict';\n\nmodule.exports = function findLineToAddPod(podLines, firstTargetLine) {\n  // match line with new target: target 'project_name' do (most likely target inside podfile main target)\n  const nextTarget = /target (\\'|\\\")\\w+(\\'|\\\") do/g;\n  // match line that has only 'end' (if we don't catch new target or function, this would mean this is end of current target)\n  const endOfCurrentTarget = /^\\s*end\\s*$/g;\n  // match function definition, like: post_install do |installer| (some Podfiles have function defined inside main target\n  const functionDefinition = /^\\s*[a-z_]+\\s+do(\\s+\\|[a-z]+\\|)?/g;\n\n  for (let i = firstTargetLine, len = podLines.length; i < len; i++) {\n    const matchNextConstruct = podLines[i].match(nextTarget) || podLines[i].match(functionDefinition);\n    const matchEnd = podLines[i].match(endOfCurrentTarget);\n\n    if (matchNextConstruct || matchEnd) {\n      const firstNonSpaceCharacter = podLines[i].search(/\\S/);\n      return {\n        indentation: firstNonSpaceCharacter + (matchEnd ? 2 : 0),\n        line: i };\n\n    }\n  }\n  return null;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRMaW5lVG9BZGRQb2QuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImZpbmRMaW5lVG9BZGRQb2QiLCJwb2RMaW5lcyIsImZpcnN0VGFyZ2V0TGluZSIsIm5leHRUYXJnZXQiLCJlbmRPZkN1cnJlbnRUYXJnZXQiLCJmdW5jdGlvbkRlZmluaXRpb24iLCJpIiwibGVuIiwibGVuZ3RoIiwibWF0Y2hOZXh0Q29uc3RydWN0IiwibWF0Y2giLCJtYXRjaEVuZCIsImZpcnN0Tm9uU3BhY2VDaGFyYWN0ZXIiLCJzZWFyY2giLCJpbmRlbnRhdGlvbiIsImxpbmUiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLGdCQUFULENBQTBCQyxRQUExQixFQUFvQ0MsZUFBcEMsRUFBcUQ7QUFDcEU7QUFDQSxRQUFNQyxhQUFhLDhCQUFuQjtBQUNBO0FBQ0EsUUFBTUMscUJBQXFCLGNBQTNCO0FBQ0E7QUFDQSxRQUFNQyxxQkFBcUIsbUNBQTNCOztBQUVBLE9BQUssSUFBSUMsSUFBSUosZUFBUixFQUF5QkssTUFBTU4sU0FBU08sTUFBN0MsRUFBcURGLElBQUlDLEdBQXpELEVBQThERCxHQUE5RCxFQUFtRTtBQUNqRSxVQUFNRyxxQkFBcUJSLFNBQVNLLENBQVQsRUFBWUksS0FBWixDQUFrQlAsVUFBbEIsS0FBaUNGLFNBQVNLLENBQVQsRUFBWUksS0FBWixDQUFrQkwsa0JBQWxCLENBQTVEO0FBQ0EsVUFBTU0sV0FBV1YsU0FBU0ssQ0FBVCxFQUFZSSxLQUFaLENBQWtCTixrQkFBbEIsQ0FBakI7O0FBRUEsUUFBSUssc0JBQXNCRSxRQUExQixFQUFvQztBQUNsQyxZQUFNQyx5QkFBeUJYLFNBQVNLLENBQVQsRUFBWU8sTUFBWixDQUFtQixJQUFuQixDQUEvQjtBQUNBLGFBQU87QUFDTEMscUJBQWFGLDBCQUEwQkQsV0FBVyxDQUFYLEdBQWUsQ0FBekMsQ0FEUjtBQUVMSSxjQUFNVCxDQUZELEVBQVA7O0FBSUQ7QUFDRjtBQUNELFNBQU8sSUFBUDtBQUNELENBckJEIiwiZmlsZSI6ImZpbmRMaW5lVG9BZGRQb2QuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9wb2RzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGZpbmRMaW5lVG9BZGRQb2QocG9kTGluZXMsIGZpcnN0VGFyZ2V0TGluZSkge1xuICAvLyBtYXRjaCBsaW5lIHdpdGggbmV3IHRhcmdldDogdGFyZ2V0ICdwcm9qZWN0X25hbWUnIGRvIChtb3N0IGxpa2VseSB0YXJnZXQgaW5zaWRlIHBvZGZpbGUgbWFpbiB0YXJnZXQpXG4gIGNvbnN0IG5leHRUYXJnZXQgPSAvdGFyZ2V0IChcXCd8XFxcIilcXHcrKFxcJ3xcXFwiKSBkby9nO1xuICAvLyBtYXRjaCBsaW5lIHRoYXQgaGFzIG9ubHkgJ2VuZCcgKGlmIHdlIGRvbid0IGNhdGNoIG5ldyB0YXJnZXQgb3IgZnVuY3Rpb24sIHRoaXMgd291bGQgbWVhbiB0aGlzIGlzIGVuZCBvZiBjdXJyZW50IHRhcmdldClcbiAgY29uc3QgZW5kT2ZDdXJyZW50VGFyZ2V0ID0gL15cXHMqZW5kXFxzKiQvZztcbiAgLy8gbWF0Y2ggZnVuY3Rpb24gZGVmaW5pdGlvbiwgbGlrZTogcG9zdF9pbnN0YWxsIGRvIHxpbnN0YWxsZXJ8IChzb21lIFBvZGZpbGVzIGhhdmUgZnVuY3Rpb24gZGVmaW5lZCBpbnNpZGUgbWFpbiB0YXJnZXRcbiAgY29uc3QgZnVuY3Rpb25EZWZpbml0aW9uID0gL15cXHMqW2Etel9dK1xccytkbyhcXHMrXFx8W2Etel0rXFx8KT8vZztcblxuICBmb3IgKGxldCBpID0gZmlyc3RUYXJnZXRMaW5lLCBsZW4gPSBwb2RMaW5lcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIGNvbnN0IG1hdGNoTmV4dENvbnN0cnVjdCA9IHBvZExpbmVzW2ldLm1hdGNoKG5leHRUYXJnZXQpIHx8IHBvZExpbmVzW2ldLm1hdGNoKGZ1bmN0aW9uRGVmaW5pdGlvbik7XG4gICAgY29uc3QgbWF0Y2hFbmQgPSBwb2RMaW5lc1tpXS5tYXRjaChlbmRPZkN1cnJlbnRUYXJnZXQpO1xuXG4gICAgaWYgKG1hdGNoTmV4dENvbnN0cnVjdCB8fCBtYXRjaEVuZCkge1xuICAgICAgY29uc3QgZmlyc3ROb25TcGFjZUNoYXJhY3RlciA9IHBvZExpbmVzW2ldLnNlYXJjaCgvXFxTLyk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBpbmRlbnRhdGlvbjogZmlyc3ROb25TcGFjZUNoYXJhY3RlciArIChtYXRjaEVuZCA/IDIgOiAwKSxcbiAgICAgICAgbGluZTogaVxuICAgICAgfTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findLineToAddPod.js"
      ],
      "names": [
        "module",
        "exports",
        "findLineToAddPod",
        "podLines",
        "firstTargetLine",
        "nextTarget",
        "endOfCurrentTarget",
        "functionDefinition",
        "i",
        "len",
        "length",
        "matchNextConstruct",
        "match",
        "matchEnd",
        "firstNonSpaceCharacter",
        "search",
        "indentation",
        "line"
      ],
      "mappings": "AAAA;;AAEAA,OAAOC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,QAA1B,EAAoCC,eAApC,EAAqD;AACpE;AACA,QAAMC,aAAa,8BAAnB;AACA;AACA,QAAMC,qBAAqB,cAA3B;AACA;AACA,QAAMC,qBAAqB,mCAA3B;;AAEA,OAAK,IAAIC,IAAIJ,eAAR,EAAyBK,MAAMN,SAASO,MAA7C,EAAqDF,IAAIC,GAAzD,EAA8DD,GAA9D,EAAmE;AACjE,UAAMG,qBAAqBR,SAASK,CAAT,EAAYI,KAAZ,CAAkBP,UAAlB,KAAiCF,SAASK,CAAT,EAAYI,KAAZ,CAAkBL,kBAAlB,CAA5D;AACA,UAAMM,WAAWV,SAASK,CAAT,EAAYI,KAAZ,CAAkBN,kBAAlB,CAAjB;;AAEA,QAAIK,sBAAsBE,QAA1B,EAAoC;AAClC,YAAMC,yBAAyBX,SAASK,CAAT,EAAYO,MAAZ,CAAmB,IAAnB,CAA/B;AACA,aAAO;AACLC,qBAAaF,0BAA0BD,WAAW,CAAX,GAAe,CAAzC,CADR;AAELI,cAAMT,CAFD,EAAP;;AAID;AACF;AACD,SAAO,IAAP;AACD,CArBD",
      "file": "findLineToAddPod.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "sourcesContent": [
        "'use strict';\n\nmodule.exports = function findLineToAddPod(podLines, firstTargetLine) {\n  // match line with new target: target 'project_name' do (most likely target inside podfile main target)\n  const nextTarget = /target (\\'|\\\")\\w+(\\'|\\\") do/g;\n  // match line that has only 'end' (if we don't catch new target or function, this would mean this is end of current target)\n  const endOfCurrentTarget = /^\\s*end\\s*$/g;\n  // match function definition, like: post_install do |installer| (some Podfiles have function defined inside main target\n  const functionDefinition = /^\\s*[a-z_]+\\s+do(\\s+\\|[a-z]+\\|)?/g;\n\n  for (let i = firstTargetLine, len = podLines.length; i < len; i++) {\n    const matchNextConstruct = podLines[i].match(nextTarget) || podLines[i].match(functionDefinition);\n    const matchEnd = podLines[i].match(endOfCurrentTarget);\n\n    if (matchNextConstruct || matchEnd) {\n      const firstNonSpaceCharacter = podLines[i].search(/\\S/);\n      return {\n        indentation: firstNonSpaceCharacter + (matchEnd ? 2 : 0),\n        line: i\n      };\n    }\n  }\n  return null;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/findMarkedLinesInPodfile.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/findMarkedLinesInPodfile.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/findMarkedLinesInPodfile.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "findMarkedLinesInPodfile.js",
      "sourceFileName": "findMarkedLinesInPodfile.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "findMarkedLinesInPodfile"
    },
    "ignored": false,
    "code": "'use strict';\nconst MARKER_TEXT = '# Add new pods below this line';\n\nmodule.exports = function findMarkedLinesInPodfile(podLines) {\n  const result = [];\n  for (let i = 0, len = podLines.length; i < len; i++) {\n    if (podLines[i].includes(MARKER_TEXT)) {\n      result.push({ line: i + 1, indentation: podLines[i].indexOf('#') });\n    }\n  }\n  return result;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmRNYXJrZWRMaW5lc0luUG9kZmlsZS5qcyJdLCJuYW1lcyI6WyJNQVJLRVJfVEVYVCIsIm1vZHVsZSIsImV4cG9ydHMiLCJmaW5kTWFya2VkTGluZXNJblBvZGZpbGUiLCJwb2RMaW5lcyIsInJlc3VsdCIsImkiLCJsZW4iLCJsZW5ndGgiLCJpbmNsdWRlcyIsInB1c2giLCJsaW5lIiwiaW5kZW50YXRpb24iLCJpbmRleE9mIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLE1BQU1BLGNBQWMsZ0NBQXBCOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLHdCQUFULENBQWtDQyxRQUFsQyxFQUE0QztBQUMzRCxRQUFNQyxTQUFTLEVBQWY7QUFDQSxPQUFLLElBQUlDLElBQUksQ0FBUixFQUFXQyxNQUFNSCxTQUFTSSxNQUEvQixFQUF1Q0YsSUFBSUMsR0FBM0MsRUFBZ0RELEdBQWhELEVBQXFEO0FBQ25ELFFBQUlGLFNBQVNFLENBQVQsRUFBWUcsUUFBWixDQUFxQlQsV0FBckIsQ0FBSixFQUF1QztBQUNyQ0ssYUFBT0ssSUFBUCxDQUFZLEVBQUVDLE1BQU1MLElBQUksQ0FBWixFQUFlTSxhQUFhUixTQUFTRSxDQUFULEVBQVlPLE9BQVosQ0FBb0IsR0FBcEIsQ0FBNUIsRUFBWjtBQUNEO0FBQ0Y7QUFDRCxTQUFPUixNQUFQO0FBQ0QsQ0FSRCIsImZpbGUiOiJmaW5kTWFya2VkTGluZXNJblBvZGZpbGUuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9wb2RzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgTUFSS0VSX1RFWFQgPSAnIyBBZGQgbmV3IHBvZHMgYmVsb3cgdGhpcyBsaW5lJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBmaW5kTWFya2VkTGluZXNJblBvZGZpbGUocG9kTGluZXMpIHtcbiAgY29uc3QgcmVzdWx0ID0gW107XG4gIGZvciAobGV0IGkgPSAwLCBsZW4gPSBwb2RMaW5lcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIGlmIChwb2RMaW5lc1tpXS5pbmNsdWRlcyhNQVJLRVJfVEVYVCkpIHtcbiAgICAgIHJlc3VsdC5wdXNoKHsgbGluZTogaSArIDEsIGluZGVudGF0aW9uOiBwb2RMaW5lc1tpXS5pbmRleE9mKCcjJykgfSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "findMarkedLinesInPodfile.js"
      ],
      "names": [
        "MARKER_TEXT",
        "module",
        "exports",
        "findMarkedLinesInPodfile",
        "podLines",
        "result",
        "i",
        "len",
        "length",
        "includes",
        "push",
        "line",
        "indentation",
        "indexOf"
      ],
      "mappings": "AAAA;AACA,MAAMA,cAAc,gCAApB;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,wBAAT,CAAkCC,QAAlC,EAA4C;AAC3D,QAAMC,SAAS,EAAf;AACA,OAAK,IAAIC,IAAI,CAAR,EAAWC,MAAMH,SAASI,MAA/B,EAAuCF,IAAIC,GAA3C,EAAgDD,GAAhD,EAAqD;AACnD,QAAIF,SAASE,CAAT,EAAYG,QAAZ,CAAqBT,WAArB,CAAJ,EAAuC;AACrCK,aAAOK,IAAP,CAAY,EAAEC,MAAML,IAAI,CAAZ,EAAeM,aAAaR,SAASE,CAAT,EAAYO,OAAZ,CAAoB,GAApB,CAA5B,EAAZ;AACD;AACF;AACD,SAAOR,MAAP;AACD,CARD",
      "file": "findMarkedLinesInPodfile.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "sourcesContent": [
        "'use strict';\nconst MARKER_TEXT = '# Add new pods below this line';\n\nmodule.exports = function findMarkedLinesInPodfile(podLines) {\n  const result = [];\n  for (let i = 0, len = podLines.length; i < len; i++) {\n    if (podLines[i].includes(MARKER_TEXT)) {\n      result.push({ line: i + 1, indentation: podLines[i].indexOf('#') });\n    }\n  }\n  return result;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/addPodEntry.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/addPodEntry.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/addPodEntry.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "addPodEntry.js",
      "sourceFileName": "addPodEntry.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "addPodEntry"
    },
    "ignored": false,
    "code": "'use strict';\n\nmodule.exports = function addPodEntry(podLines, linesToAddEntry, podName, nodePath) {\n  const newEntry = `pod '${podName}', :path => '../node_modules/${nodePath}'\\n`;\n\n  if (!linesToAddEntry) {\n    return;\n  } else if (Array.isArray(linesToAddEntry)) {\n    linesToAddEntry.map(({ line, indentation }, idx) =>\n    podLines.splice(line + idx, 0, getLineToAdd(newEntry, indentation)));\n\n  } else {\n    const { line, indentation } = linesToAddEntry;\n    podLines.splice(line, 0, getLineToAdd(newEntry, indentation));\n  }\n};\n\nfunction getLineToAdd(newEntry, indentation) {\n  const spaces = Array(indentation + 1).join(' ');\n  return spaces + newEntry;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZFBvZEVudHJ5LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhZGRQb2RFbnRyeSIsInBvZExpbmVzIiwibGluZXNUb0FkZEVudHJ5IiwicG9kTmFtZSIsIm5vZGVQYXRoIiwibmV3RW50cnkiLCJBcnJheSIsImlzQXJyYXkiLCJtYXAiLCJsaW5lIiwiaW5kZW50YXRpb24iLCJpZHgiLCJzcGxpY2UiLCJnZXRMaW5lVG9BZGQiLCJzcGFjZXMiLCJqb2luIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQUEsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxXQUFULENBQXFCQyxRQUFyQixFQUErQkMsZUFBL0IsRUFBZ0RDLE9BQWhELEVBQXlEQyxRQUF6RCxFQUFtRTtBQUNsRixRQUFNQyxXQUFZLFFBQU9GLE9BQVEsZ0NBQStCQyxRQUFTLEtBQXpFOztBQUVBLE1BQUksQ0FBQ0YsZUFBTCxFQUFzQjtBQUNwQjtBQUNELEdBRkQsTUFFTyxJQUFJSSxNQUFNQyxPQUFOLENBQWNMLGVBQWQsQ0FBSixFQUFvQztBQUN6Q0Esb0JBQWdCTSxHQUFoQixDQUFvQixDQUFDLEVBQUVDLElBQUYsRUFBUUMsV0FBUixFQUFELEVBQXdCQyxHQUF4QjtBQUNsQlYsYUFBU1csTUFBVCxDQUFnQkgsT0FBT0UsR0FBdkIsRUFBNEIsQ0FBNUIsRUFBK0JFLGFBQWFSLFFBQWIsRUFBdUJLLFdBQXZCLENBQS9CLENBREY7O0FBR0QsR0FKTSxNQUlBO0FBQ0wsVUFBTSxFQUFFRCxJQUFGLEVBQVFDLFdBQVIsS0FBd0JSLGVBQTlCO0FBQ0FELGFBQVNXLE1BQVQsQ0FBZ0JILElBQWhCLEVBQXNCLENBQXRCLEVBQXlCSSxhQUFhUixRQUFiLEVBQXVCSyxXQUF2QixDQUF6QjtBQUNEO0FBQ0YsQ0FiRDs7QUFlQSxTQUFTRyxZQUFULENBQXNCUixRQUF0QixFQUFnQ0ssV0FBaEMsRUFBNkM7QUFDM0MsUUFBTUksU0FBU1IsTUFBTUksY0FBYyxDQUFwQixFQUF1QkssSUFBdkIsQ0FBNEIsR0FBNUIsQ0FBZjtBQUNBLFNBQU9ELFNBQVNULFFBQWhCO0FBQ0QiLCJmaWxlIjoiYWRkUG9kRW50cnkuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9wb2RzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGFkZFBvZEVudHJ5KHBvZExpbmVzLCBsaW5lc1RvQWRkRW50cnksIHBvZE5hbWUsIG5vZGVQYXRoKSB7XG4gIGNvbnN0IG5ld0VudHJ5ID0gYHBvZCAnJHtwb2ROYW1lfScsIDpwYXRoID0+ICcuLi9ub2RlX21vZHVsZXMvJHtub2RlUGF0aH0nXFxuYDtcblxuICBpZiAoIWxpbmVzVG9BZGRFbnRyeSkge1xuICAgIHJldHVybjtcbiAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGxpbmVzVG9BZGRFbnRyeSkpIHtcbiAgICBsaW5lc1RvQWRkRW50cnkubWFwKCh7IGxpbmUsIGluZGVudGF0aW9uIH0sIGlkeCkgPT5cbiAgICAgIHBvZExpbmVzLnNwbGljZShsaW5lICsgaWR4LCAwLCBnZXRMaW5lVG9BZGQobmV3RW50cnksIGluZGVudGF0aW9uKSlcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IHsgbGluZSwgaW5kZW50YXRpb24gfSA9IGxpbmVzVG9BZGRFbnRyeTtcbiAgICBwb2RMaW5lcy5zcGxpY2UobGluZSwgMCwgZ2V0TGluZVRvQWRkKG5ld0VudHJ5LCBpbmRlbnRhdGlvbikpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBnZXRMaW5lVG9BZGQobmV3RW50cnksIGluZGVudGF0aW9uKSB7XG4gIGNvbnN0IHNwYWNlcyA9IEFycmF5KGluZGVudGF0aW9uICsgMSkuam9pbignICcpO1xuICByZXR1cm4gc3BhY2VzICsgbmV3RW50cnk7XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "addPodEntry.js"
      ],
      "names": [
        "module",
        "exports",
        "addPodEntry",
        "podLines",
        "linesToAddEntry",
        "podName",
        "nodePath",
        "newEntry",
        "Array",
        "isArray",
        "map",
        "line",
        "indentation",
        "idx",
        "splice",
        "getLineToAdd",
        "spaces",
        "join"
      ],
      "mappings": "AAAA;;AAEAA,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,eAA/B,EAAgDC,OAAhD,EAAyDC,QAAzD,EAAmE;AAClF,QAAMC,WAAY,QAAOF,OAAQ,gCAA+BC,QAAS,KAAzE;;AAEA,MAAI,CAACF,eAAL,EAAsB;AACpB;AACD,GAFD,MAEO,IAAII,MAAMC,OAAN,CAAcL,eAAd,CAAJ,EAAoC;AACzCA,oBAAgBM,GAAhB,CAAoB,CAAC,EAAEC,IAAF,EAAQC,WAAR,EAAD,EAAwBC,GAAxB;AAClBV,aAASW,MAAT,CAAgBH,OAAOE,GAAvB,EAA4B,CAA5B,EAA+BE,aAAaR,QAAb,EAAuBK,WAAvB,CAA/B,CADF;;AAGD,GAJM,MAIA;AACL,UAAM,EAAED,IAAF,EAAQC,WAAR,KAAwBR,eAA9B;AACAD,aAASW,MAAT,CAAgBH,IAAhB,EAAsB,CAAtB,EAAyBI,aAAaR,QAAb,EAAuBK,WAAvB,CAAzB;AACD;AACF,CAbD;;AAeA,SAASG,YAAT,CAAsBR,QAAtB,EAAgCK,WAAhC,EAA6C;AAC3C,QAAMI,SAASR,MAAMI,cAAc,CAApB,EAAuBK,IAAvB,CAA4B,GAA5B,CAAf;AACA,SAAOD,SAAST,QAAhB;AACD",
      "file": "addPodEntry.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "sourcesContent": [
        "'use strict';\n\nmodule.exports = function addPodEntry(podLines, linesToAddEntry, podName, nodePath) {\n  const newEntry = `pod '${podName}', :path => '../node_modules/${nodePath}'\\n`;\n\n  if (!linesToAddEntry) {\n    return;\n  } else if (Array.isArray(linesToAddEntry)) {\n    linesToAddEntry.map(({ line, indentation }, idx) =>\n      podLines.splice(line + idx, 0, getLineToAdd(newEntry, indentation))\n    );\n  } else {\n    const { line, indentation } = linesToAddEntry;\n    podLines.splice(line, 0, getLineToAdd(newEntry, indentation));\n  }\n};\n\nfunction getLineToAdd(newEntry, indentation) {\n  const spaces = Array(indentation + 1).join(' ');\n  return spaces + newEntry;\n}\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/savePodFile.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/savePodFile.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/savePodFile.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "savePodFile.js",
      "sourceFileName": "savePodFile.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "savePodFile"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst fs = require('fs');\n\nmodule.exports = function savePodFile(podfilePath, podLines) {\n  const newPodfile = podLines.join('\\n');\n  fs.writeFileSync(podfilePath, newPodfile);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhdmVQb2RGaWxlLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzYXZlUG9kRmlsZSIsInBvZGZpbGVQYXRoIiwicG9kTGluZXMiLCJuZXdQb2RmaWxlIiwiam9pbiIsIndyaXRlRmlsZVN5bmMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLEtBQUtDLFFBQVEsSUFBUixDQUFYOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLFdBQVQsQ0FBcUJDLFdBQXJCLEVBQWtDQyxRQUFsQyxFQUE0QztBQUMzRCxRQUFNQyxhQUFhRCxTQUFTRSxJQUFULENBQWMsSUFBZCxDQUFuQjtBQUNBUixLQUFHUyxhQUFILENBQWlCSixXQUFqQixFQUE4QkUsVUFBOUI7QUFDRCxDQUhEIiwiZmlsZSI6InNhdmVQb2RGaWxlLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvcG9kcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNhdmVQb2RGaWxlKHBvZGZpbGVQYXRoLCBwb2RMaW5lcykge1xuICBjb25zdCBuZXdQb2RmaWxlID0gcG9kTGluZXMuam9pbignXFxuJyk7XG4gIGZzLndyaXRlRmlsZVN5bmMocG9kZmlsZVBhdGgsIG5ld1BvZGZpbGUpO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "savePodFile.js"
      ],
      "names": [
        "fs",
        "require",
        "module",
        "exports",
        "savePodFile",
        "podfilePath",
        "podLines",
        "newPodfile",
        "join",
        "writeFileSync"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,WAArB,EAAkCC,QAAlC,EAA4C;AAC3D,QAAMC,aAAaD,SAASE,IAAT,CAAc,IAAd,CAAnB;AACAR,KAAGS,aAAH,CAAiBJ,WAAjB,EAA8BE,UAA9B;AACD,CAHD",
      "file": "savePodFile.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "sourcesContent": [
        "'use strict';\n\nconst fs = require('fs');\n\nmodule.exports = function savePodFile(podfilePath, podLines) {\n  const newPodfile = podLines.join('\\n');\n  fs.writeFileSync(podfilePath, newPodfile);\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/isInstalled.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/isInstalled.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/isInstalled.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "isInstalled.js",
      "sourceFileName": "isInstalled.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "isInstalled"
    },
    "ignored": false,
    "code": "'use strict';const fs = require('fs');\nconst makeBuildPatch = require('./patches/makeBuildPatch');\n\nmodule.exports = function isInstalled(config, name) {\n  const buildGradle = fs.readFileSync(config.buildGradlePath);\n  return makeBuildPatch(name).installPattern.test(buildGradle);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzSW5zdGFsbGVkLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsIm1ha2VCdWlsZFBhdGNoIiwibW9kdWxlIiwiZXhwb3J0cyIsImlzSW5zdGFsbGVkIiwiY29uZmlnIiwibmFtZSIsImJ1aWxkR3JhZGxlIiwicmVhZEZpbGVTeW5jIiwiYnVpbGRHcmFkbGVQYXRoIiwiaW5zdGFsbFBhdHRlcm4iLCJ0ZXN0Il0sIm1hcHBpbmdzIjoiYUFBQSxNQUFNQSxLQUFLQyxRQUFRLElBQVIsQ0FBWDtBQUNBLE1BQU1DLGlCQUFpQkQsUUFBUSwwQkFBUixDQUF2Qjs7QUFFQUUsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxXQUFULENBQXFCQyxNQUFyQixFQUE2QkMsSUFBN0IsRUFBbUM7QUFDbEQsUUFBTUMsY0FBY1IsR0FBR1MsWUFBSCxDQUFnQkgsT0FBT0ksZUFBdkIsQ0FBcEI7QUFDQSxTQUFPUixlQUFlSyxJQUFmLEVBQXFCSSxjQUFyQixDQUFvQ0MsSUFBcEMsQ0FBeUNKLFdBQXpDLENBQVA7QUFDRCxDQUhEIiwiZmlsZSI6ImlzSW5zdGFsbGVkLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvYW5kcm9pZCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IG1ha2VCdWlsZFBhdGNoID0gcmVxdWlyZSgnLi9wYXRjaGVzL21ha2VCdWlsZFBhdGNoJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNJbnN0YWxsZWQoY29uZmlnLCBuYW1lKSB7XG4gIGNvbnN0IGJ1aWxkR3JhZGxlID0gZnMucmVhZEZpbGVTeW5jKGNvbmZpZy5idWlsZEdyYWRsZVBhdGgpO1xuICByZXR1cm4gbWFrZUJ1aWxkUGF0Y2gobmFtZSkuaW5zdGFsbFBhdHRlcm4udGVzdChidWlsZEdyYWRsZSk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "isInstalled.js"
      ],
      "names": [
        "fs",
        "require",
        "makeBuildPatch",
        "module",
        "exports",
        "isInstalled",
        "config",
        "name",
        "buildGradle",
        "readFileSync",
        "buildGradlePath",
        "installPattern",
        "test"
      ],
      "mappings": "aAAA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,iBAAiBD,QAAQ,0BAAR,CAAvB;;AAEAE,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,IAA7B,EAAmC;AAClD,QAAMC,cAAcR,GAAGS,YAAH,CAAgBH,OAAOI,eAAvB,CAApB;AACA,SAAOR,eAAeK,IAAf,EAAqBI,cAArB,CAAoCC,IAApC,CAAyCJ,WAAzC,CAAP;AACD,CAHD",
      "file": "isInstalled.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android",
      "sourcesContent": [
        "const fs = require('fs');\nconst makeBuildPatch = require('./patches/makeBuildPatch');\n\nmodule.exports = function isInstalled(config, name) {\n  const buildGradle = fs.readFileSync(config.buildGradlePath);\n  return makeBuildPatch(name).installPattern.test(buildGradle);\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/isInstalled.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/isInstalled.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/isInstalled.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "isInstalled.js",
      "sourceFileName": "isInstalled.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "isInstalled"
    },
    "ignored": false,
    "code": "'use strict';const fs = require('fs');\nconst makeUsingPatch = require('./patches/makeUsingPatch');\n\nmodule.exports = function isInstalled(config, dependencyConfig) {\n  return fs.\n  readFileSync(config.mainPage).\n  indexOf(makeUsingPatch(dependencyConfig.packageUsingPath).patch) > -1;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzSW5zdGFsbGVkLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsIm1ha2VVc2luZ1BhdGNoIiwibW9kdWxlIiwiZXhwb3J0cyIsImlzSW5zdGFsbGVkIiwiY29uZmlnIiwiZGVwZW5kZW5jeUNvbmZpZyIsInJlYWRGaWxlU3luYyIsIm1haW5QYWdlIiwiaW5kZXhPZiIsInBhY2thZ2VVc2luZ1BhdGgiLCJwYXRjaCJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsS0FBS0MsUUFBUSxJQUFSLENBQVg7QUFDQSxNQUFNQyxpQkFBaUJELFFBQVEsMEJBQVIsQ0FBdkI7O0FBRUFFLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsV0FBVCxDQUFxQkMsTUFBckIsRUFBNkJDLGdCQUE3QixFQUErQztBQUM5RCxTQUFPUDtBQUNKUSxjQURJLENBQ1NGLE9BQU9HLFFBRGhCO0FBRUpDLFNBRkksQ0FFSVIsZUFBZUssaUJBQWlCSSxnQkFBaEMsRUFBa0RDLEtBRnRELElBRStELENBQUMsQ0FGdkU7QUFHRCxDQUpEIiwiZmlsZSI6ImlzSW5zdGFsbGVkLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvd2luZG93cyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IG1ha2VVc2luZ1BhdGNoID0gcmVxdWlyZSgnLi9wYXRjaGVzL21ha2VVc2luZ1BhdGNoJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNJbnN0YWxsZWQoY29uZmlnLCBkZXBlbmRlbmN5Q29uZmlnKSB7XG4gIHJldHVybiBmc1xuICAgIC5yZWFkRmlsZVN5bmMoY29uZmlnLm1haW5QYWdlKVxuICAgIC5pbmRleE9mKG1ha2VVc2luZ1BhdGNoKGRlcGVuZGVuY3lDb25maWcucGFja2FnZVVzaW5nUGF0aCkucGF0Y2gpID4gLTE7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "isInstalled.js"
      ],
      "names": [
        "fs",
        "require",
        "makeUsingPatch",
        "module",
        "exports",
        "isInstalled",
        "config",
        "dependencyConfig",
        "readFileSync",
        "mainPage",
        "indexOf",
        "packageUsingPath",
        "patch"
      ],
      "mappings": "aAAA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,iBAAiBD,QAAQ,0BAAR,CAAvB;;AAEAE,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,gBAA7B,EAA+C;AAC9D,SAAOP;AACJQ,cADI,CACSF,OAAOG,QADhB;AAEJC,SAFI,CAEIR,eAAeK,iBAAiBI,gBAAhC,EAAkDC,KAFtD,IAE+D,CAAC,CAFvE;AAGD,CAJD",
      "file": "isInstalled.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows",
      "sourcesContent": [
        "const fs = require('fs');\nconst makeUsingPatch = require('./patches/makeUsingPatch');\n\nmodule.exports = function isInstalled(config, dependencyConfig) {\n  return fs\n    .readFileSync(config.mainPage)\n    .indexOf(makeUsingPatch(dependencyConfig.packageUsingPath).patch) > -1;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/isInstalled.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/isInstalled.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/isInstalled.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "isInstalled.js",
      "sourceFileName": "isInstalled.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "isInstalled"
    },
    "ignored": false,
    "code": "'use strict';const xcode = require('xcode');\nconst getGroup = require('./getGroup');\nconst hasLibraryImported = require('./hasLibraryImported');\n\n/**\n                                                             * Returns true if `xcodeproj` specified by dependencyConfig is present\n                                                             * in a top level `libraryFolder`\n                                                             */\nmodule.exports = function isInstalled(projectConfig, dependencyConfig) {\n  const project = xcode.project(projectConfig.pbxprojPath).parseSync();\n  const libraries = getGroup(project, projectConfig.libraryFolder);\n\n  if (!libraries) {\n    return false;\n  }\n\n  return hasLibraryImported(libraries, dependencyConfig.projectName);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzSW5zdGFsbGVkLmpzIl0sIm5hbWVzIjpbInhjb2RlIiwicmVxdWlyZSIsImdldEdyb3VwIiwiaGFzTGlicmFyeUltcG9ydGVkIiwibW9kdWxlIiwiZXhwb3J0cyIsImlzSW5zdGFsbGVkIiwicHJvamVjdENvbmZpZyIsImRlcGVuZGVuY3lDb25maWciLCJwcm9qZWN0IiwicGJ4cHJvalBhdGgiLCJwYXJzZVN5bmMiLCJsaWJyYXJpZXMiLCJsaWJyYXJ5Rm9sZGVyIiwicHJvamVjdE5hbWUiXSwibWFwcGluZ3MiOiJhQUFBLE1BQU1BLFFBQVFDLFFBQVEsT0FBUixDQUFkO0FBQ0EsTUFBTUMsV0FBV0QsUUFBUSxZQUFSLENBQWpCO0FBQ0EsTUFBTUUscUJBQXFCRixRQUFRLHNCQUFSLENBQTNCOztBQUVBOzs7O0FBSUFHLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsV0FBVCxDQUFxQkMsYUFBckIsRUFBb0NDLGdCQUFwQyxFQUFzRDtBQUNyRSxRQUFNQyxVQUFVVCxNQUFNUyxPQUFOLENBQWNGLGNBQWNHLFdBQTVCLEVBQXlDQyxTQUF6QyxFQUFoQjtBQUNBLFFBQU1DLFlBQVlWLFNBQVNPLE9BQVQsRUFBa0JGLGNBQWNNLGFBQWhDLENBQWxCOztBQUVBLE1BQUksQ0FBQ0QsU0FBTCxFQUFnQjtBQUNkLFdBQU8sS0FBUDtBQUNEOztBQUVELFNBQU9ULG1CQUFtQlMsU0FBbkIsRUFBOEJKLGlCQUFpQk0sV0FBL0MsQ0FBUDtBQUNELENBVEQiLCJmaWxlIjoiaXNJbnN0YWxsZWQuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9pb3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB4Y29kZSA9IHJlcXVpcmUoJ3hjb2RlJyk7XG5jb25zdCBnZXRHcm91cCA9IHJlcXVpcmUoJy4vZ2V0R3JvdXAnKTtcbmNvbnN0IGhhc0xpYnJhcnlJbXBvcnRlZCA9IHJlcXVpcmUoJy4vaGFzTGlicmFyeUltcG9ydGVkJyk7XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGB4Y29kZXByb2pgIHNwZWNpZmllZCBieSBkZXBlbmRlbmN5Q29uZmlnIGlzIHByZXNlbnRcbiAqIGluIGEgdG9wIGxldmVsIGBsaWJyYXJ5Rm9sZGVyYFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzSW5zdGFsbGVkKHByb2plY3RDb25maWcsIGRlcGVuZGVuY3lDb25maWcpIHtcbiAgY29uc3QgcHJvamVjdCA9IHhjb2RlLnByb2plY3QocHJvamVjdENvbmZpZy5wYnhwcm9qUGF0aCkucGFyc2VTeW5jKCk7XG4gIGNvbnN0IGxpYnJhcmllcyA9IGdldEdyb3VwKHByb2plY3QsIHByb2plY3RDb25maWcubGlicmFyeUZvbGRlcik7XG5cbiAgaWYgKCFsaWJyYXJpZXMpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gaGFzTGlicmFyeUltcG9ydGVkKGxpYnJhcmllcywgZGVwZW5kZW5jeUNvbmZpZy5wcm9qZWN0TmFtZSk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "isInstalled.js"
      ],
      "names": [
        "xcode",
        "require",
        "getGroup",
        "hasLibraryImported",
        "module",
        "exports",
        "isInstalled",
        "projectConfig",
        "dependencyConfig",
        "project",
        "pbxprojPath",
        "parseSync",
        "libraries",
        "libraryFolder",
        "projectName"
      ],
      "mappings": "aAAA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,MAAMC,WAAWD,QAAQ,YAAR,CAAjB;AACA,MAAME,qBAAqBF,QAAQ,sBAAR,CAA3B;;AAEA;;;;AAIAG,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,aAArB,EAAoCC,gBAApC,EAAsD;AACrE,QAAMC,UAAUT,MAAMS,OAAN,CAAcF,cAAcG,WAA5B,EAAyCC,SAAzC,EAAhB;AACA,QAAMC,YAAYV,SAASO,OAAT,EAAkBF,cAAcM,aAAhC,CAAlB;;AAEA,MAAI,CAACD,SAAL,EAAgB;AACd,WAAO,KAAP;AACD;;AAED,SAAOT,mBAAmBS,SAAnB,EAA8BJ,iBAAiBM,WAA/C,CAAP;AACD,CATD",
      "file": "isInstalled.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const xcode = require('xcode');\nconst getGroup = require('./getGroup');\nconst hasLibraryImported = require('./hasLibraryImported');\n\n/**\n * Returns true if `xcodeproj` specified by dependencyConfig is present\n * in a top level `libraryFolder`\n */\nmodule.exports = function isInstalled(projectConfig, dependencyConfig) {\n  const project = xcode.project(projectConfig.pbxprojPath).parseSync();\n  const libraries = getGroup(project, projectConfig.libraryFolder);\n\n  if (!libraries) {\n    return false;\n  }\n\n  return hasLibraryImported(libraries, dependencyConfig.projectName);\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/hasLibraryImported.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/hasLibraryImported.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/hasLibraryImported.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "hasLibraryImported.js",
      "sourceFileName": "hasLibraryImported.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "hasLibraryImported"
    },
    "ignored": false,
    "code": "\"use strict\"; /**\n               * Given an array of libraries already imported and packageName that will be\n               * added, returns true or false depending on whether the library is already linked\n               * or not\n               */\nmodule.exports = function hasLibraryImported(libraries, packageName) {\n  return libraries.children.\n  filter(library => library.comment === packageName).\n  length > 0;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhc0xpYnJhcnlJbXBvcnRlZC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiaGFzTGlicmFyeUltcG9ydGVkIiwibGlicmFyaWVzIiwicGFja2FnZU5hbWUiLCJjaGlsZHJlbiIsImZpbHRlciIsImxpYnJhcnkiLCJjb21tZW50IiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiY0FBQTs7Ozs7QUFLQUEsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxrQkFBVCxDQUE0QkMsU0FBNUIsRUFBdUNDLFdBQXZDLEVBQW9EO0FBQ25FLFNBQU9ELFVBQVVFLFFBQVY7QUFDSkMsUUFESSxDQUNHQyxXQUFXQSxRQUFRQyxPQUFSLEtBQW9CSixXQURsQztBQUVKSyxRQUZJLEdBRUssQ0FGWjtBQUdELENBSkQiLCJmaWxlIjoiaGFzTGlicmFyeUltcG9ydGVkLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvaW9zIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHaXZlbiBhbiBhcnJheSBvZiBsaWJyYXJpZXMgYWxyZWFkeSBpbXBvcnRlZCBhbmQgcGFja2FnZU5hbWUgdGhhdCB3aWxsIGJlXG4gKiBhZGRlZCwgcmV0dXJucyB0cnVlIG9yIGZhbHNlIGRlcGVuZGluZyBvbiB3aGV0aGVyIHRoZSBsaWJyYXJ5IGlzIGFscmVhZHkgbGlua2VkXG4gKiBvciBub3RcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBoYXNMaWJyYXJ5SW1wb3J0ZWQobGlicmFyaWVzLCBwYWNrYWdlTmFtZSkge1xuICByZXR1cm4gbGlicmFyaWVzLmNoaWxkcmVuXG4gICAgLmZpbHRlcihsaWJyYXJ5ID0+IGxpYnJhcnkuY29tbWVudCA9PT0gcGFja2FnZU5hbWUpXG4gICAgLmxlbmd0aCA+IDA7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "hasLibraryImported.js"
      ],
      "names": [
        "module",
        "exports",
        "hasLibraryImported",
        "libraries",
        "packageName",
        "children",
        "filter",
        "library",
        "comment",
        "length"
      ],
      "mappings": "cAAA;;;;;AAKAA,OAAOC,OAAP,GAAiB,SAASC,kBAAT,CAA4BC,SAA5B,EAAuCC,WAAvC,EAAoD;AACnE,SAAOD,UAAUE,QAAV;AACJC,QADI,CACGC,WAAWA,QAAQC,OAAR,KAAoBJ,WADlC;AAEJK,QAFI,GAEK,CAFZ;AAGD,CAJD",
      "file": "hasLibraryImported.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "/**\n * Given an array of libraries already imported and packageName that will be\n * added, returns true or false depending on whether the library is already linked\n * or not\n */\nmodule.exports = function hasLibraryImported(libraries, packageName) {\n  return libraries.children\n    .filter(library => library.comment === packageName)\n    .length > 0;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/isInstalled.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/isInstalled.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/isInstalled.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "isInstalled.js",
      "sourceFileName": "isInstalled.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "isInstalled"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst readPodfile = require('./readPodfile');\n\nmodule.exports = function isInstalled(iOSProject, dependencyConfig) {\n  if (!iOSProject.podfile) {\n    return false;\n  }\n  // match line with pod declaration: pod 'dependencyPodName' (other possible parameters of pod are ignored)\n  const dependencyRegExp = new RegExp('pod\\\\s+(\\'|\\\")' + dependencyConfig.podspec + '(\\'|\\\")', 'g');\n  const podLines = readPodfile(iOSProject.podfile);\n  for (let i = 0, len = podLines.length; i < len; i++) {\n    const match = podLines[i].match(dependencyRegExp);\n    if (match) {\n      return true;\n    }\n  }\n  return false;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzSW5zdGFsbGVkLmpzIl0sIm5hbWVzIjpbInJlYWRQb2RmaWxlIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJpc0luc3RhbGxlZCIsImlPU1Byb2plY3QiLCJkZXBlbmRlbmN5Q29uZmlnIiwicG9kZmlsZSIsImRlcGVuZGVuY3lSZWdFeHAiLCJSZWdFeHAiLCJwb2RzcGVjIiwicG9kTGluZXMiLCJpIiwibGVuIiwibGVuZ3RoIiwibWF0Y2giXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLGNBQWNDLFFBQVEsZUFBUixDQUFwQjs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxXQUFULENBQXFCQyxVQUFyQixFQUFpQ0MsZ0JBQWpDLEVBQW1EO0FBQ2xFLE1BQUksQ0FBQ0QsV0FBV0UsT0FBaEIsRUFBeUI7QUFDdkIsV0FBTyxLQUFQO0FBQ0Q7QUFDRDtBQUNBLFFBQU1DLG1CQUFtQixJQUFJQyxNQUFKLENBQVcsbUJBQW1CSCxpQkFBaUJJLE9BQXBDLEdBQThDLFNBQXpELEVBQW9FLEdBQXBFLENBQXpCO0FBQ0EsUUFBTUMsV0FBV1gsWUFBWUssV0FBV0UsT0FBdkIsQ0FBakI7QUFDQSxPQUFLLElBQUlLLElBQUksQ0FBUixFQUFXQyxNQUFNRixTQUFTRyxNQUEvQixFQUF1Q0YsSUFBSUMsR0FBM0MsRUFBZ0RELEdBQWhELEVBQXFEO0FBQ25ELFVBQU1HLFFBQVFKLFNBQVNDLENBQVQsRUFBWUcsS0FBWixDQUFrQlAsZ0JBQWxCLENBQWQ7QUFDQSxRQUFJTyxLQUFKLEVBQVc7QUFDVCxhQUFPLElBQVA7QUFDRDtBQUNGO0FBQ0QsU0FBTyxLQUFQO0FBQ0QsQ0FkRCIsImZpbGUiOiJpc0luc3RhbGxlZC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL3BvZHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IHJlYWRQb2RmaWxlID0gcmVxdWlyZSgnLi9yZWFkUG9kZmlsZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzSW5zdGFsbGVkKGlPU1Byb2plY3QsIGRlcGVuZGVuY3lDb25maWcpIHtcbiAgaWYgKCFpT1NQcm9qZWN0LnBvZGZpbGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLy8gbWF0Y2ggbGluZSB3aXRoIHBvZCBkZWNsYXJhdGlvbjogcG9kICdkZXBlbmRlbmN5UG9kTmFtZScgKG90aGVyIHBvc3NpYmxlIHBhcmFtZXRlcnMgb2YgcG9kIGFyZSBpZ25vcmVkKVxuICBjb25zdCBkZXBlbmRlbmN5UmVnRXhwID0gbmV3IFJlZ0V4cCgncG9kXFxcXHMrKFxcJ3xcXFwiKScgKyBkZXBlbmRlbmN5Q29uZmlnLnBvZHNwZWMgKyAnKFxcJ3xcXFwiKScsICdnJyk7XG4gIGNvbnN0IHBvZExpbmVzID0gcmVhZFBvZGZpbGUoaU9TUHJvamVjdC5wb2RmaWxlKTtcbiAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IHBvZExpbmVzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgY29uc3QgbWF0Y2ggPSBwb2RMaW5lc1tpXS5tYXRjaChkZXBlbmRlbmN5UmVnRXhwKTtcbiAgICBpZiAobWF0Y2gpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "isInstalled.js"
      ],
      "names": [
        "readPodfile",
        "require",
        "module",
        "exports",
        "isInstalled",
        "iOSProject",
        "dependencyConfig",
        "podfile",
        "dependencyRegExp",
        "RegExp",
        "podspec",
        "podLines",
        "i",
        "len",
        "length",
        "match"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,cAAcC,QAAQ,eAAR,CAApB;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,UAArB,EAAiCC,gBAAjC,EAAmD;AAClE,MAAI,CAACD,WAAWE,OAAhB,EAAyB;AACvB,WAAO,KAAP;AACD;AACD;AACA,QAAMC,mBAAmB,IAAIC,MAAJ,CAAW,mBAAmBH,iBAAiBI,OAApC,GAA8C,SAAzD,EAAoE,GAApE,CAAzB;AACA,QAAMC,WAAWX,YAAYK,WAAWE,OAAvB,CAAjB;AACA,OAAK,IAAIK,IAAI,CAAR,EAAWC,MAAMF,SAASG,MAA/B,EAAuCF,IAAIC,GAA3C,EAAgDD,GAAhD,EAAqD;AACnD,UAAMG,QAAQJ,SAASC,CAAT,EAAYG,KAAZ,CAAkBP,gBAAlB,CAAd;AACA,QAAIO,KAAJ,EAAW;AACT,aAAO,IAAP;AACD;AACF;AACD,SAAO,KAAP;AACD,CAdD",
      "file": "isInstalled.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "sourcesContent": [
        "'use strict';\n\nconst readPodfile = require('./readPodfile');\n\nmodule.exports = function isInstalled(iOSProject, dependencyConfig) {\n  if (!iOSProject.podfile) {\n    return false;\n  }\n  // match line with pod declaration: pod 'dependencyPodName' (other possible parameters of pod are ignored)\n  const dependencyRegExp = new RegExp('pod\\\\s+(\\'|\\\")' + dependencyConfig.podspec + '(\\'|\\\")', 'g');\n  const podLines = readPodfile(iOSProject.podfile);\n  for (let i = 0, len = podLines.length; i < len; i++) {\n    const match = podLines[i].match(dependencyRegExp);\n    if (match) {\n      return true;\n    }\n  }\n  return false;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/copyAssets.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/copyAssets.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/copyAssets.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "copyAssets.js",
      "sourceFileName": "copyAssets.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "copyAssets"
    },
    "ignored": false,
    "code": "'use strict';const fs = require('fs-extra');\nconst path = require('path');\nconst groupFilesByType = require('../groupFilesByType');\n\n/**\n                                                          * Copies each file from an array of assets provided to targetPath directory\n                                                          *\n                                                          * For now, the only types of files that are handled are:\n                                                          * - Fonts (otf, ttf) - copied to targetPath/fonts under original name\n                                                          */\nmodule.exports = function copyAssetsAndroid(files, targetPath) {\n  const assets = groupFilesByType(files);\n\n  (assets.font || []).forEach(asset =>\n  fs.copySync(asset, path.join(targetPath, 'fonts', path.basename(asset))));\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcHlBc3NldHMuanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwicGF0aCIsImdyb3VwRmlsZXNCeVR5cGUiLCJtb2R1bGUiLCJleHBvcnRzIiwiY29weUFzc2V0c0FuZHJvaWQiLCJmaWxlcyIsInRhcmdldFBhdGgiLCJhc3NldHMiLCJmb250IiwiZm9yRWFjaCIsImFzc2V0IiwiY29weVN5bmMiLCJqb2luIiwiYmFzZW5hbWUiXSwibWFwcGluZ3MiOiJhQUFBLE1BQU1BLEtBQUtDLFFBQVEsVUFBUixDQUFYO0FBQ0EsTUFBTUMsT0FBT0QsUUFBUSxNQUFSLENBQWI7QUFDQSxNQUFNRSxtQkFBbUJGLFFBQVEscUJBQVIsQ0FBekI7O0FBRUE7Ozs7OztBQU1BRyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLGlCQUFULENBQTJCQyxLQUEzQixFQUFrQ0MsVUFBbEMsRUFBOEM7QUFDN0QsUUFBTUMsU0FBU04saUJBQWlCSSxLQUFqQixDQUFmOztBQUVBLEdBQUNFLE9BQU9DLElBQVAsSUFBZSxFQUFoQixFQUFvQkMsT0FBcEIsQ0FBNEJDO0FBQzFCWixLQUFHYSxRQUFILENBQVlELEtBQVosRUFBbUJWLEtBQUtZLElBQUwsQ0FBVU4sVUFBVixFQUFzQixPQUF0QixFQUErQk4sS0FBS2EsUUFBTCxDQUFjSCxLQUFkLENBQS9CLENBQW5CLENBREY7O0FBR0QsQ0FORCIsImZpbGUiOiJjb3B5QXNzZXRzLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvYW5kcm9pZCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZzID0gcmVxdWlyZSgnZnMtZXh0cmEnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBncm91cEZpbGVzQnlUeXBlID0gcmVxdWlyZSgnLi4vZ3JvdXBGaWxlc0J5VHlwZScpO1xuXG4vKipcbiAqIENvcGllcyBlYWNoIGZpbGUgZnJvbSBhbiBhcnJheSBvZiBhc3NldHMgcHJvdmlkZWQgdG8gdGFyZ2V0UGF0aCBkaXJlY3RvcnlcbiAqXG4gKiBGb3Igbm93LCB0aGUgb25seSB0eXBlcyBvZiBmaWxlcyB0aGF0IGFyZSBoYW5kbGVkIGFyZTpcbiAqIC0gRm9udHMgKG90ZiwgdHRmKSAtIGNvcGllZCB0byB0YXJnZXRQYXRoL2ZvbnRzIHVuZGVyIG9yaWdpbmFsIG5hbWVcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjb3B5QXNzZXRzQW5kcm9pZChmaWxlcywgdGFyZ2V0UGF0aCkge1xuICBjb25zdCBhc3NldHMgPSBncm91cEZpbGVzQnlUeXBlKGZpbGVzKTtcblxuICAoYXNzZXRzLmZvbnQgfHwgW10pLmZvckVhY2goYXNzZXQgPT5cbiAgICBmcy5jb3B5U3luYyhhc3NldCwgcGF0aC5qb2luKHRhcmdldFBhdGgsICdmb250cycsIHBhdGguYmFzZW5hbWUoYXNzZXQpKSlcbiAgKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "copyAssets.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "groupFilesByType",
        "module",
        "exports",
        "copyAssetsAndroid",
        "files",
        "targetPath",
        "assets",
        "font",
        "forEach",
        "asset",
        "copySync",
        "join",
        "basename"
      ],
      "mappings": "aAAA,MAAMA,KAAKC,QAAQ,UAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,mBAAmBF,QAAQ,qBAAR,CAAzB;;AAEA;;;;;;AAMAG,OAAOC,OAAP,GAAiB,SAASC,iBAAT,CAA2BC,KAA3B,EAAkCC,UAAlC,EAA8C;AAC7D,QAAMC,SAASN,iBAAiBI,KAAjB,CAAf;;AAEA,GAACE,OAAOC,IAAP,IAAe,EAAhB,EAAoBC,OAApB,CAA4BC;AAC1BZ,KAAGa,QAAH,CAAYD,KAAZ,EAAmBV,KAAKY,IAAL,CAAUN,UAAV,EAAsB,OAAtB,EAA+BN,KAAKa,QAAL,CAAcH,KAAd,CAA/B,CAAnB,CADF;;AAGD,CAND",
      "file": "copyAssets.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android",
      "sourcesContent": [
        "const fs = require('fs-extra');\nconst path = require('path');\nconst groupFilesByType = require('../groupFilesByType');\n\n/**\n * Copies each file from an array of assets provided to targetPath directory\n *\n * For now, the only types of files that are handled are:\n * - Fonts (otf, ttf) - copied to targetPath/fonts under original name\n */\nmodule.exports = function copyAssetsAndroid(files, targetPath) {\n  const assets = groupFilesByType(files);\n\n  (assets.font || []).forEach(asset =>\n    fs.copySync(asset, path.join(targetPath, 'fonts', path.basename(asset)))\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/groupFilesByType.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/groupFilesByType.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/groupFilesByType.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "groupFilesByType.js",
      "sourceFileName": "groupFilesByType.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "groupFilesByType"
    },
    "ignored": false,
    "code": "'use strict';const groupBy = require('lodash').groupBy;\nconst mime = require('mime');\n\n/**\n                               * Since there are no officially registered MIME types\n                               * for ttf/otf yet http://www.iana.org/assignments/media-types/media-types.xhtml,\n                               * we define two non-standard ones for the sake of parsing\n                               */\nmime.define({\n  'font/opentype': ['otf'],\n  'font/truetype': ['ttf'] });\n\n\n/**\n                                * Given an array of files, it groups it by it's type.\n                                * Type of the file is inferred from it's mimetype based on the extension\n                                * file ends up with. The returned value is an object with properties that\n                                * correspond to the first part of the mimetype, e.g. images will be grouped\n                                * under `image` key since the mimetype for them is `image/jpg` etc.\n                                *\n                                * Example:\n                                * Given an array ['fonts/a.ttf', 'images/b.jpg'],\n                                * the returned object will be: {font: ['fonts/a.ttf'], image: ['images/b.jpg']}\n                                */\nmodule.exports = function groupFilesByType(assets) {\n  return groupBy(assets, type => mime.lookup(type).split('/')[0]);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdyb3VwRmlsZXNCeVR5cGUuanMiXSwibmFtZXMiOlsiZ3JvdXBCeSIsInJlcXVpcmUiLCJtaW1lIiwiZGVmaW5lIiwibW9kdWxlIiwiZXhwb3J0cyIsImdyb3VwRmlsZXNCeVR5cGUiLCJhc3NldHMiLCJ0eXBlIiwibG9va3VwIiwic3BsaXQiXSwibWFwcGluZ3MiOiJhQUFBLE1BQU1BLFVBQVVDLFFBQVEsUUFBUixFQUFrQkQsT0FBbEM7QUFDQSxNQUFNRSxPQUFPRCxRQUFRLE1BQVIsQ0FBYjs7QUFFQTs7Ozs7QUFLQUMsS0FBS0MsTUFBTCxDQUFZO0FBQ1YsbUJBQWlCLENBQUMsS0FBRCxDQURQO0FBRVYsbUJBQWlCLENBQUMsS0FBRCxDQUZQLEVBQVo7OztBQUtBOzs7Ozs7Ozs7OztBQVdBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLGdCQUFULENBQTBCQyxNQUExQixFQUFrQztBQUNqRCxTQUFPUCxRQUFRTyxNQUFSLEVBQWdCQyxRQUFRTixLQUFLTyxNQUFMLENBQVlELElBQVosRUFBa0JFLEtBQWxCLENBQXdCLEdBQXhCLEVBQTZCLENBQTdCLENBQXhCLENBQVA7QUFDRCxDQUZEIiwiZmlsZSI6Imdyb3VwRmlsZXNCeVR5cGUuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluayIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdyb3VwQnkgPSByZXF1aXJlKCdsb2Rhc2gnKS5ncm91cEJ5O1xuY29uc3QgbWltZSA9IHJlcXVpcmUoJ21pbWUnKTtcblxuLyoqXG4gKiBTaW5jZSB0aGVyZSBhcmUgbm8gb2ZmaWNpYWxseSByZWdpc3RlcmVkIE1JTUUgdHlwZXNcbiAqIGZvciB0dGYvb3RmIHlldCBodHRwOi8vd3d3LmlhbmEub3JnL2Fzc2lnbm1lbnRzL21lZGlhLXR5cGVzL21lZGlhLXR5cGVzLnhodG1sLFxuICogd2UgZGVmaW5lIHR3byBub24tc3RhbmRhcmQgb25lcyBmb3IgdGhlIHNha2Ugb2YgcGFyc2luZ1xuICovXG5taW1lLmRlZmluZSh7XG4gICdmb250L29wZW50eXBlJzogWydvdGYnXSxcbiAgJ2ZvbnQvdHJ1ZXR5cGUnOiBbJ3R0ZiddLFxufSk7XG5cbi8qKlxuICogR2l2ZW4gYW4gYXJyYXkgb2YgZmlsZXMsIGl0IGdyb3VwcyBpdCBieSBpdCdzIHR5cGUuXG4gKiBUeXBlIG9mIHRoZSBmaWxlIGlzIGluZmVycmVkIGZyb20gaXQncyBtaW1ldHlwZSBiYXNlZCBvbiB0aGUgZXh0ZW5zaW9uXG4gKiBmaWxlIGVuZHMgdXAgd2l0aC4gVGhlIHJldHVybmVkIHZhbHVlIGlzIGFuIG9iamVjdCB3aXRoIHByb3BlcnRpZXMgdGhhdFxuICogY29ycmVzcG9uZCB0byB0aGUgZmlyc3QgcGFydCBvZiB0aGUgbWltZXR5cGUsIGUuZy4gaW1hZ2VzIHdpbGwgYmUgZ3JvdXBlZFxuICogdW5kZXIgYGltYWdlYCBrZXkgc2luY2UgdGhlIG1pbWV0eXBlIGZvciB0aGVtIGlzIGBpbWFnZS9qcGdgIGV0Yy5cbiAqXG4gKiBFeGFtcGxlOlxuICogR2l2ZW4gYW4gYXJyYXkgWydmb250cy9hLnR0ZicsICdpbWFnZXMvYi5qcGcnXSxcbiAqIHRoZSByZXR1cm5lZCBvYmplY3Qgd2lsbCBiZToge2ZvbnQ6IFsnZm9udHMvYS50dGYnXSwgaW1hZ2U6IFsnaW1hZ2VzL2IuanBnJ119XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ3JvdXBGaWxlc0J5VHlwZShhc3NldHMpIHtcbiAgcmV0dXJuIGdyb3VwQnkoYXNzZXRzLCB0eXBlID0+IG1pbWUubG9va3VwKHR5cGUpLnNwbGl0KCcvJylbMF0pO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "groupFilesByType.js"
      ],
      "names": [
        "groupBy",
        "require",
        "mime",
        "define",
        "module",
        "exports",
        "groupFilesByType",
        "assets",
        "type",
        "lookup",
        "split"
      ],
      "mappings": "aAAA,MAAMA,UAAUC,QAAQ,QAAR,EAAkBD,OAAlC;AACA,MAAME,OAAOD,QAAQ,MAAR,CAAb;;AAEA;;;;;AAKAC,KAAKC,MAAL,CAAY;AACV,mBAAiB,CAAC,KAAD,CADP;AAEV,mBAAiB,CAAC,KAAD,CAFP,EAAZ;;;AAKA;;;;;;;;;;;AAWAC,OAAOC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,MAA1B,EAAkC;AACjD,SAAOP,QAAQO,MAAR,EAAgBC,QAAQN,KAAKO,MAAL,CAAYD,IAAZ,EAAkBE,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAxB,CAAP;AACD,CAFD",
      "file": "groupFilesByType.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "sourcesContent": [
        "const groupBy = require('lodash').groupBy;\nconst mime = require('mime');\n\n/**\n * Since there are no officially registered MIME types\n * for ttf/otf yet http://www.iana.org/assignments/media-types/media-types.xhtml,\n * we define two non-standard ones for the sake of parsing\n */\nmime.define({\n  'font/opentype': ['otf'],\n  'font/truetype': ['ttf'],\n});\n\n/**\n * Given an array of files, it groups it by it's type.\n * Type of the file is inferred from it's mimetype based on the extension\n * file ends up with. The returned value is an object with properties that\n * correspond to the first part of the mimetype, e.g. images will be grouped\n * under `image` key since the mimetype for them is `image/jpg` etc.\n *\n * Example:\n * Given an array ['fonts/a.ttf', 'images/b.jpg'],\n * the returned object will be: {font: ['fonts/a.ttf'], image: ['images/b.jpg']}\n */\nmodule.exports = function groupFilesByType(assets) {\n  return groupBy(assets, type => mime.lookup(type).split('/')[0]);\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/copyAssets.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/copyAssets.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/copyAssets.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "copyAssets.js",
      "sourceFileName": "copyAssets.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "copyAssets"
    },
    "ignored": false,
    "code": "'use strict';const fs = require('fs-extra');\nconst path = require('path');\nconst xcode = require('xcode');\nconst log = require('npmlog');\nconst groupFilesByType = require('../groupFilesByType');\nconst createGroupWithMessage = require('./createGroupWithMessage');\nconst getPlist = require('./getPlist');\nconst writePlist = require('./writePlist');\n\n/**\n                                             * This function works in a similar manner to its Android version,\n                                             * except it does not copy fonts but creates Xcode Group references\n                                             */\nmodule.exports = function linkAssetsIOS(files, projectConfig) {\n  const project = xcode.project(projectConfig.pbxprojPath).parseSync();\n  const assets = groupFilesByType(files);\n  const plist = getPlist(project, projectConfig.sourceDir);\n\n  createGroupWithMessage(project, 'Resources');\n\n  function addResourceFile(f) {\n    return (f || []).\n    map(asset =>\n    project.addResourceFile(\n    path.relative(projectConfig.sourceDir, asset),\n    { target: project.getFirstTarget().uuid })).\n\n\n    filter(file => file) // xcode returns false if file is already there\n    .map(file => file.basename);\n  }\n\n  addResourceFile(assets.image);\n\n  const fonts = addResourceFile(assets.font);\n\n  const existingFonts = plist.UIAppFonts || [];\n  const allFonts = [...existingFonts, ...fonts];\n  plist.UIAppFonts = Array.from(new Set(allFonts)); // use Set to dedupe w/existing\n\n  fs.writeFileSync(\n  projectConfig.pbxprojPath,\n  project.writeSync());\n\n\n  writePlist(project, projectConfig.sourceDir, plist);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcHlBc3NldHMuanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwicGF0aCIsInhjb2RlIiwibG9nIiwiZ3JvdXBGaWxlc0J5VHlwZSIsImNyZWF0ZUdyb3VwV2l0aE1lc3NhZ2UiLCJnZXRQbGlzdCIsIndyaXRlUGxpc3QiLCJtb2R1bGUiLCJleHBvcnRzIiwibGlua0Fzc2V0c0lPUyIsImZpbGVzIiwicHJvamVjdENvbmZpZyIsInByb2plY3QiLCJwYnhwcm9qUGF0aCIsInBhcnNlU3luYyIsImFzc2V0cyIsInBsaXN0Iiwic291cmNlRGlyIiwiYWRkUmVzb3VyY2VGaWxlIiwiZiIsIm1hcCIsImFzc2V0IiwicmVsYXRpdmUiLCJ0YXJnZXQiLCJnZXRGaXJzdFRhcmdldCIsInV1aWQiLCJmaWx0ZXIiLCJmaWxlIiwiYmFzZW5hbWUiLCJpbWFnZSIsImZvbnRzIiwiZm9udCIsImV4aXN0aW5nRm9udHMiLCJVSUFwcEZvbnRzIiwiYWxsRm9udHMiLCJBcnJheSIsImZyb20iLCJTZXQiLCJ3cml0ZUZpbGVTeW5jIiwid3JpdGVTeW5jIl0sIm1hcHBpbmdzIjoiYUFBQSxNQUFNQSxLQUFLQyxRQUFRLFVBQVIsQ0FBWDtBQUNBLE1BQU1DLE9BQU9ELFFBQVEsTUFBUixDQUFiO0FBQ0EsTUFBTUUsUUFBUUYsUUFBUSxPQUFSLENBQWQ7QUFDQSxNQUFNRyxNQUFNSCxRQUFRLFFBQVIsQ0FBWjtBQUNBLE1BQU1JLG1CQUFtQkosUUFBUSxxQkFBUixDQUF6QjtBQUNBLE1BQU1LLHlCQUF5QkwsUUFBUSwwQkFBUixDQUEvQjtBQUNBLE1BQU1NLFdBQVdOLFFBQVEsWUFBUixDQUFqQjtBQUNBLE1BQU1PLGFBQWFQLFFBQVEsY0FBUixDQUFuQjs7QUFFQTs7OztBQUlBUSxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLGFBQVQsQ0FBdUJDLEtBQXZCLEVBQThCQyxhQUE5QixFQUE2QztBQUM1RCxRQUFNQyxVQUFVWCxNQUFNVyxPQUFOLENBQWNELGNBQWNFLFdBQTVCLEVBQXlDQyxTQUF6QyxFQUFoQjtBQUNBLFFBQU1DLFNBQVNaLGlCQUFpQk8sS0FBakIsQ0FBZjtBQUNBLFFBQU1NLFFBQVFYLFNBQVNPLE9BQVQsRUFBa0JELGNBQWNNLFNBQWhDLENBQWQ7O0FBRUFiLHlCQUF1QlEsT0FBdkIsRUFBZ0MsV0FBaEM7O0FBRUEsV0FBU00sZUFBVCxDQUF5QkMsQ0FBekIsRUFBNEI7QUFDMUIsV0FBTyxDQUFDQSxLQUFLLEVBQU47QUFDSkMsT0FESSxDQUNBQztBQUNIVCxZQUFRTSxlQUFSO0FBQ0VsQixTQUFLc0IsUUFBTCxDQUFjWCxjQUFjTSxTQUE1QixFQUF1Q0ksS0FBdkMsQ0FERjtBQUVFLE1BQUVFLFFBQVFYLFFBQVFZLGNBQVIsR0FBeUJDLElBQW5DLEVBRkYsQ0FGRzs7O0FBT0pDLFVBUEksQ0FPR0MsUUFBUUEsSUFQWCxFQU9tQjtBQVBuQixLQVFKUCxHQVJJLENBUUFPLFFBQVFBLEtBQUtDLFFBUmIsQ0FBUDtBQVNEOztBQUVEVixrQkFBZ0JILE9BQU9jLEtBQXZCOztBQUVBLFFBQU1DLFFBQVFaLGdCQUFnQkgsT0FBT2dCLElBQXZCLENBQWQ7O0FBRUEsUUFBTUMsZ0JBQWlCaEIsTUFBTWlCLFVBQU4sSUFBb0IsRUFBM0M7QUFDQSxRQUFNQyxXQUFXLENBQUMsR0FBR0YsYUFBSixFQUFtQixHQUFHRixLQUF0QixDQUFqQjtBQUNBZCxRQUFNaUIsVUFBTixHQUFtQkUsTUFBTUMsSUFBTixDQUFXLElBQUlDLEdBQUosQ0FBUUgsUUFBUixDQUFYLENBQW5CLENBekI0RCxDQXlCVjs7QUFFbERwQyxLQUFHd0MsYUFBSDtBQUNFM0IsZ0JBQWNFLFdBRGhCO0FBRUVELFVBQVEyQixTQUFSLEVBRkY7OztBQUtBakMsYUFBV00sT0FBWCxFQUFvQkQsY0FBY00sU0FBbEMsRUFBNkNELEtBQTdDO0FBQ0QsQ0FqQ0QiLCJmaWxlIjoiY29weUFzc2V0cy5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL2lvcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZzID0gcmVxdWlyZSgnZnMtZXh0cmEnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCB4Y29kZSA9IHJlcXVpcmUoJ3hjb2RlJyk7XG5jb25zdCBsb2cgPSByZXF1aXJlKCducG1sb2cnKTtcbmNvbnN0IGdyb3VwRmlsZXNCeVR5cGUgPSByZXF1aXJlKCcuLi9ncm91cEZpbGVzQnlUeXBlJyk7XG5jb25zdCBjcmVhdGVHcm91cFdpdGhNZXNzYWdlID0gcmVxdWlyZSgnLi9jcmVhdGVHcm91cFdpdGhNZXNzYWdlJyk7XG5jb25zdCBnZXRQbGlzdCA9IHJlcXVpcmUoJy4vZ2V0UGxpc3QnKTtcbmNvbnN0IHdyaXRlUGxpc3QgPSByZXF1aXJlKCcuL3dyaXRlUGxpc3QnKTtcblxuLyoqXG4gKiBUaGlzIGZ1bmN0aW9uIHdvcmtzIGluIGEgc2ltaWxhciBtYW5uZXIgdG8gaXRzIEFuZHJvaWQgdmVyc2lvbixcbiAqIGV4Y2VwdCBpdCBkb2VzIG5vdCBjb3B5IGZvbnRzIGJ1dCBjcmVhdGVzIFhjb2RlIEdyb3VwIHJlZmVyZW5jZXNcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBsaW5rQXNzZXRzSU9TKGZpbGVzLCBwcm9qZWN0Q29uZmlnKSB7XG4gIGNvbnN0IHByb2plY3QgPSB4Y29kZS5wcm9qZWN0KHByb2plY3RDb25maWcucGJ4cHJvalBhdGgpLnBhcnNlU3luYygpO1xuICBjb25zdCBhc3NldHMgPSBncm91cEZpbGVzQnlUeXBlKGZpbGVzKTtcbiAgY29uc3QgcGxpc3QgPSBnZXRQbGlzdChwcm9qZWN0LCBwcm9qZWN0Q29uZmlnLnNvdXJjZURpcik7XG5cbiAgY3JlYXRlR3JvdXBXaXRoTWVzc2FnZShwcm9qZWN0LCAnUmVzb3VyY2VzJyk7XG5cbiAgZnVuY3Rpb24gYWRkUmVzb3VyY2VGaWxlKGYpIHtcbiAgICByZXR1cm4gKGYgfHwgW10pXG4gICAgICAubWFwKGFzc2V0ID0+XG4gICAgICAgIHByb2plY3QuYWRkUmVzb3VyY2VGaWxlKFxuICAgICAgICAgIHBhdGgucmVsYXRpdmUocHJvamVjdENvbmZpZy5zb3VyY2VEaXIsIGFzc2V0KSxcbiAgICAgICAgICB7IHRhcmdldDogcHJvamVjdC5nZXRGaXJzdFRhcmdldCgpLnV1aWQgfVxuICAgICAgICApXG4gICAgICApXG4gICAgICAuZmlsdGVyKGZpbGUgPT4gZmlsZSkgICAvLyB4Y29kZSByZXR1cm5zIGZhbHNlIGlmIGZpbGUgaXMgYWxyZWFkeSB0aGVyZVxuICAgICAgLm1hcChmaWxlID0+IGZpbGUuYmFzZW5hbWUpO1xuICB9XG5cbiAgYWRkUmVzb3VyY2VGaWxlKGFzc2V0cy5pbWFnZSk7XG5cbiAgY29uc3QgZm9udHMgPSBhZGRSZXNvdXJjZUZpbGUoYXNzZXRzLmZvbnQpO1xuXG4gIGNvbnN0IGV4aXN0aW5nRm9udHMgPSAocGxpc3QuVUlBcHBGb250cyB8fCBbXSk7XG4gIGNvbnN0IGFsbEZvbnRzID0gWy4uLmV4aXN0aW5nRm9udHMsIC4uLmZvbnRzXTtcbiAgcGxpc3QuVUlBcHBGb250cyA9IEFycmF5LmZyb20obmV3IFNldChhbGxGb250cykpOyAvLyB1c2UgU2V0IHRvIGRlZHVwZSB3L2V4aXN0aW5nXG5cbiAgZnMud3JpdGVGaWxlU3luYyhcbiAgICBwcm9qZWN0Q29uZmlnLnBieHByb2pQYXRoLFxuICAgIHByb2plY3Qud3JpdGVTeW5jKClcbiAgKTtcblxuICB3cml0ZVBsaXN0KHByb2plY3QsIHByb2plY3RDb25maWcuc291cmNlRGlyLCBwbGlzdCk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "copyAssets.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "xcode",
        "log",
        "groupFilesByType",
        "createGroupWithMessage",
        "getPlist",
        "writePlist",
        "module",
        "exports",
        "linkAssetsIOS",
        "files",
        "projectConfig",
        "project",
        "pbxprojPath",
        "parseSync",
        "assets",
        "plist",
        "sourceDir",
        "addResourceFile",
        "f",
        "map",
        "asset",
        "relative",
        "target",
        "getFirstTarget",
        "uuid",
        "filter",
        "file",
        "basename",
        "image",
        "fonts",
        "font",
        "existingFonts",
        "UIAppFonts",
        "allFonts",
        "Array",
        "from",
        "Set",
        "writeFileSync",
        "writeSync"
      ],
      "mappings": "aAAA,MAAMA,KAAKC,QAAQ,UAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,QAAQF,QAAQ,OAAR,CAAd;AACA,MAAMG,MAAMH,QAAQ,QAAR,CAAZ;AACA,MAAMI,mBAAmBJ,QAAQ,qBAAR,CAAzB;AACA,MAAMK,yBAAyBL,QAAQ,0BAAR,CAA/B;AACA,MAAMM,WAAWN,QAAQ,YAAR,CAAjB;AACA,MAAMO,aAAaP,QAAQ,cAAR,CAAnB;;AAEA;;;;AAIAQ,OAAOC,OAAP,GAAiB,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,aAA9B,EAA6C;AAC5D,QAAMC,UAAUX,MAAMW,OAAN,CAAcD,cAAcE,WAA5B,EAAyCC,SAAzC,EAAhB;AACA,QAAMC,SAASZ,iBAAiBO,KAAjB,CAAf;AACA,QAAMM,QAAQX,SAASO,OAAT,EAAkBD,cAAcM,SAAhC,CAAd;;AAEAb,yBAAuBQ,OAAvB,EAAgC,WAAhC;;AAEA,WAASM,eAAT,CAAyBC,CAAzB,EAA4B;AAC1B,WAAO,CAACA,KAAK,EAAN;AACJC,OADI,CACAC;AACHT,YAAQM,eAAR;AACElB,SAAKsB,QAAL,CAAcX,cAAcM,SAA5B,EAAuCI,KAAvC,CADF;AAEE,MAAEE,QAAQX,QAAQY,cAAR,GAAyBC,IAAnC,EAFF,CAFG;;;AAOJC,UAPI,CAOGC,QAAQA,IAPX,EAOmB;AAPnB,KAQJP,GARI,CAQAO,QAAQA,KAAKC,QARb,CAAP;AASD;;AAEDV,kBAAgBH,OAAOc,KAAvB;;AAEA,QAAMC,QAAQZ,gBAAgBH,OAAOgB,IAAvB,CAAd;;AAEA,QAAMC,gBAAiBhB,MAAMiB,UAAN,IAAoB,EAA3C;AACA,QAAMC,WAAW,CAAC,GAAGF,aAAJ,EAAmB,GAAGF,KAAtB,CAAjB;AACAd,QAAMiB,UAAN,GAAmBE,MAAMC,IAAN,CAAW,IAAIC,GAAJ,CAAQH,QAAR,CAAX,CAAnB,CAzB4D,CAyBV;;AAElDpC,KAAGwC,aAAH;AACE3B,gBAAcE,WADhB;AAEED,UAAQ2B,SAAR,EAFF;;;AAKAjC,aAAWM,OAAX,EAAoBD,cAAcM,SAAlC,EAA6CD,KAA7C;AACD,CAjCD",
      "file": "copyAssets.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const fs = require('fs-extra');\nconst path = require('path');\nconst xcode = require('xcode');\nconst log = require('npmlog');\nconst groupFilesByType = require('../groupFilesByType');\nconst createGroupWithMessage = require('./createGroupWithMessage');\nconst getPlist = require('./getPlist');\nconst writePlist = require('./writePlist');\n\n/**\n * This function works in a similar manner to its Android version,\n * except it does not copy fonts but creates Xcode Group references\n */\nmodule.exports = function linkAssetsIOS(files, projectConfig) {\n  const project = xcode.project(projectConfig.pbxprojPath).parseSync();\n  const assets = groupFilesByType(files);\n  const plist = getPlist(project, projectConfig.sourceDir);\n\n  createGroupWithMessage(project, 'Resources');\n\n  function addResourceFile(f) {\n    return (f || [])\n      .map(asset =>\n        project.addResourceFile(\n          path.relative(projectConfig.sourceDir, asset),\n          { target: project.getFirstTarget().uuid }\n        )\n      )\n      .filter(file => file)   // xcode returns false if file is already there\n      .map(file => file.basename);\n  }\n\n  addResourceFile(assets.image);\n\n  const fonts = addResourceFile(assets.font);\n\n  const existingFonts = (plist.UIAppFonts || []);\n  const allFonts = [...existingFonts, ...fonts];\n  plist.UIAppFonts = Array.from(new Set(allFonts)); // use Set to dedupe w/existing\n\n  fs.writeFileSync(\n    projectConfig.pbxprojPath,\n    project.writeSync()\n  );\n\n  writePlist(project, projectConfig.sourceDir, plist);\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getPlist.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getPlist.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getPlist.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "getPlist.js",
      "sourceFileName": "getPlist.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "getPlist"
    },
    "ignored": false,
    "code": "'use strict';const plistParser = require('plist');\nconst getPlistPath = require('./getPlistPath');\nconst fs = require('fs');\n\n/**\n                           * Returns Info.plist located in the iOS project\n                           *\n                           * Returns `null` if INFOPLIST_FILE is not specified.\n                           */\nmodule.exports = function getPlist(project, sourceDir) {\n  const plistPath = getPlistPath(project, sourceDir);\n\n  if (!plistPath || !fs.existsSync(plistPath)) {\n    return null;\n  }\n\n  return plistParser.parse(\n  fs.readFileSync(plistPath, 'utf-8'));\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldFBsaXN0LmpzIl0sIm5hbWVzIjpbInBsaXN0UGFyc2VyIiwicmVxdWlyZSIsImdldFBsaXN0UGF0aCIsImZzIiwibW9kdWxlIiwiZXhwb3J0cyIsImdldFBsaXN0IiwicHJvamVjdCIsInNvdXJjZURpciIsInBsaXN0UGF0aCIsImV4aXN0c1N5bmMiLCJwYXJzZSIsInJlYWRGaWxlU3luYyJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsY0FBY0MsUUFBUSxPQUFSLENBQXBCO0FBQ0EsTUFBTUMsZUFBZUQsUUFBUSxnQkFBUixDQUFyQjtBQUNBLE1BQU1FLEtBQUtGLFFBQVEsSUFBUixDQUFYOztBQUVBOzs7OztBQUtBRyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLFFBQVQsQ0FBa0JDLE9BQWxCLEVBQTJCQyxTQUEzQixFQUFzQztBQUNyRCxRQUFNQyxZQUFZUCxhQUFhSyxPQUFiLEVBQXNCQyxTQUF0QixDQUFsQjs7QUFFQSxNQUFJLENBQUNDLFNBQUQsSUFBYyxDQUFDTixHQUFHTyxVQUFILENBQWNELFNBQWQsQ0FBbkIsRUFBNkM7QUFDM0MsV0FBTyxJQUFQO0FBQ0Q7O0FBRUQsU0FBT1QsWUFBWVcsS0FBWjtBQUNMUixLQUFHUyxZQUFILENBQWdCSCxTQUFoQixFQUEyQixPQUEzQixDQURLLENBQVA7O0FBR0QsQ0FWRCIsImZpbGUiOiJnZXRQbGlzdC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL2lvcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBsaXN0UGFyc2VyID0gcmVxdWlyZSgncGxpc3QnKTtcbmNvbnN0IGdldFBsaXN0UGF0aCA9IHJlcXVpcmUoJy4vZ2V0UGxpc3RQYXRoJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5cbi8qKlxuICogUmV0dXJucyBJbmZvLnBsaXN0IGxvY2F0ZWQgaW4gdGhlIGlPUyBwcm9qZWN0XG4gKlxuICogUmV0dXJucyBgbnVsbGAgaWYgSU5GT1BMSVNUX0ZJTEUgaXMgbm90IHNwZWNpZmllZC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXRQbGlzdChwcm9qZWN0LCBzb3VyY2VEaXIpIHtcbiAgY29uc3QgcGxpc3RQYXRoID0gZ2V0UGxpc3RQYXRoKHByb2plY3QsIHNvdXJjZURpcik7XG5cbiAgaWYgKCFwbGlzdFBhdGggfHwgIWZzLmV4aXN0c1N5bmMocGxpc3RQYXRoKSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHBsaXN0UGFyc2VyLnBhcnNlKFxuICAgIGZzLnJlYWRGaWxlU3luYyhwbGlzdFBhdGgsICd1dGYtOCcpXG4gICk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "getPlist.js"
      ],
      "names": [
        "plistParser",
        "require",
        "getPlistPath",
        "fs",
        "module",
        "exports",
        "getPlist",
        "project",
        "sourceDir",
        "plistPath",
        "existsSync",
        "parse",
        "readFileSync"
      ],
      "mappings": "aAAA,MAAMA,cAAcC,QAAQ,OAAR,CAApB;AACA,MAAMC,eAAeD,QAAQ,gBAAR,CAArB;AACA,MAAME,KAAKF,QAAQ,IAAR,CAAX;;AAEA;;;;;AAKAG,OAAOC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,OAAlB,EAA2BC,SAA3B,EAAsC;AACrD,QAAMC,YAAYP,aAAaK,OAAb,EAAsBC,SAAtB,CAAlB;;AAEA,MAAI,CAACC,SAAD,IAAc,CAACN,GAAGO,UAAH,CAAcD,SAAd,CAAnB,EAA6C;AAC3C,WAAO,IAAP;AACD;;AAED,SAAOT,YAAYW,KAAZ;AACLR,KAAGS,YAAH,CAAgBH,SAAhB,EAA2B,OAA3B,CADK,CAAP;;AAGD,CAVD",
      "file": "getPlist.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const plistParser = require('plist');\nconst getPlistPath = require('./getPlistPath');\nconst fs = require('fs');\n\n/**\n * Returns Info.plist located in the iOS project\n *\n * Returns `null` if INFOPLIST_FILE is not specified.\n */\nmodule.exports = function getPlist(project, sourceDir) {\n  const plistPath = getPlistPath(project, sourceDir);\n\n  if (!plistPath || !fs.existsSync(plistPath)) {\n    return null;\n  }\n\n  return plistParser.parse(\n    fs.readFileSync(plistPath, 'utf-8')\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getPlistPath.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getPlistPath.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getPlistPath.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "getPlistPath.js",
      "sourceFileName": "getPlistPath.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "getPlistPath"
    },
    "ignored": false,
    "code": "'use strict';const path = require('path');\nconst getBuildProperty = require('./getBuildProperty');\n\nmodule.exports = function getPlistPath(project, sourceDir) {\n  const plistFile = getBuildProperty(project, 'INFOPLIST_FILE');\n\n  if (!plistFile) {\n    return null;\n  }\n\n  return path.join(\n  sourceDir,\n  plistFile.replace(/\"/g, '').replace('$(SRCROOT)', ''));\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldFBsaXN0UGF0aC5qcyJdLCJuYW1lcyI6WyJwYXRoIiwicmVxdWlyZSIsImdldEJ1aWxkUHJvcGVydHkiLCJtb2R1bGUiLCJleHBvcnRzIiwiZ2V0UGxpc3RQYXRoIiwicHJvamVjdCIsInNvdXJjZURpciIsInBsaXN0RmlsZSIsImpvaW4iLCJyZXBsYWNlIl0sIm1hcHBpbmdzIjoiYUFBQSxNQUFNQSxPQUFPQyxRQUFRLE1BQVIsQ0FBYjtBQUNBLE1BQU1DLG1CQUFtQkQsUUFBUSxvQkFBUixDQUF6Qjs7QUFFQUUsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxZQUFULENBQXNCQyxPQUF0QixFQUErQkMsU0FBL0IsRUFBMEM7QUFDekQsUUFBTUMsWUFBWU4saUJBQWlCSSxPQUFqQixFQUEwQixnQkFBMUIsQ0FBbEI7O0FBRUEsTUFBSSxDQUFDRSxTQUFMLEVBQWdCO0FBQ2QsV0FBTyxJQUFQO0FBQ0Q7O0FBRUQsU0FBT1IsS0FBS1MsSUFBTDtBQUNMRixXQURLO0FBRUxDLFlBQVVFLE9BQVYsQ0FBa0IsSUFBbEIsRUFBd0IsRUFBeEIsRUFBNEJBLE9BQTVCLENBQW9DLFlBQXBDLEVBQWtELEVBQWxELENBRkssQ0FBUDs7QUFJRCxDQVhEIiwiZmlsZSI6ImdldFBsaXN0UGF0aC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL2lvcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBnZXRCdWlsZFByb3BlcnR5ID0gcmVxdWlyZSgnLi9nZXRCdWlsZFByb3BlcnR5Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2V0UGxpc3RQYXRoKHByb2plY3QsIHNvdXJjZURpcikge1xuICBjb25zdCBwbGlzdEZpbGUgPSBnZXRCdWlsZFByb3BlcnR5KHByb2plY3QsICdJTkZPUExJU1RfRklMRScpO1xuXG4gIGlmICghcGxpc3RGaWxlKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gcGF0aC5qb2luKFxuICAgIHNvdXJjZURpcixcbiAgICBwbGlzdEZpbGUucmVwbGFjZSgvXCIvZywgJycpLnJlcGxhY2UoJyQoU1JDUk9PVCknLCAnJylcbiAgKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "getPlistPath.js"
      ],
      "names": [
        "path",
        "require",
        "getBuildProperty",
        "module",
        "exports",
        "getPlistPath",
        "project",
        "sourceDir",
        "plistFile",
        "join",
        "replace"
      ],
      "mappings": "aAAA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,MAAMC,mBAAmBD,QAAQ,oBAAR,CAAzB;;AAEAE,OAAOC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,OAAtB,EAA+BC,SAA/B,EAA0C;AACzD,QAAMC,YAAYN,iBAAiBI,OAAjB,EAA0B,gBAA1B,CAAlB;;AAEA,MAAI,CAACE,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,SAAOR,KAAKS,IAAL;AACLF,WADK;AAELC,YAAUE,OAAV,CAAkB,IAAlB,EAAwB,EAAxB,EAA4BA,OAA5B,CAAoC,YAApC,EAAkD,EAAlD,CAFK,CAAP;;AAID,CAXD",
      "file": "getPlistPath.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const path = require('path');\nconst getBuildProperty = require('./getBuildProperty');\n\nmodule.exports = function getPlistPath(project, sourceDir) {\n  const plistFile = getBuildProperty(project, 'INFOPLIST_FILE');\n\n  if (!plistFile) {\n    return null;\n  }\n\n  return path.join(\n    sourceDir,\n    plistFile.replace(/\"/g, '').replace('$(SRCROOT)', '')\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getBuildProperty.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getBuildProperty.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/getBuildProperty.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "getBuildProperty.js",
      "sourceFileName": "getBuildProperty.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "getBuildProperty"
    },
    "ignored": false,
    "code": "\"use strict\"; /**\n               * Gets build property from the main target build section\n               *\n               * It differs from the project.getBuildProperty exposed by xcode in the way that:\n               * - it only checks for build property in the main target `Debug` section\n               * - `xcode` library iterates over all build sections and because it misses\n               * an early return when property is found, it will return undefined/wrong value\n               * when there's another build section typically after the one you want to access\n               * without the property defined (e.g. CocoaPods sections appended to project\n               * miss INFOPLIST_FILE), see: https://github.com/alunny/node-xcode/blob/master/lib/pbxProject.js#L1765\n               */\nmodule.exports = function getBuildProperty(project, prop) {\n  const target = project.getFirstTarget().firstTarget;\n  const config = project.pbxXCConfigurationList()[target.buildConfigurationList];\n  const buildSection = project.pbxXCBuildConfigurationSection()[config.buildConfigurations[0].value];\n\n  return buildSection.buildSettings[prop];\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldEJ1aWxkUHJvcGVydHkuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImdldEJ1aWxkUHJvcGVydHkiLCJwcm9qZWN0IiwicHJvcCIsInRhcmdldCIsImdldEZpcnN0VGFyZ2V0IiwiZmlyc3RUYXJnZXQiLCJjb25maWciLCJwYnhYQ0NvbmZpZ3VyYXRpb25MaXN0IiwiYnVpbGRDb25maWd1cmF0aW9uTGlzdCIsImJ1aWxkU2VjdGlvbiIsInBieFhDQnVpbGRDb25maWd1cmF0aW9uU2VjdGlvbiIsImJ1aWxkQ29uZmlndXJhdGlvbnMiLCJ2YWx1ZSIsImJ1aWxkU2V0dGluZ3MiXSwibWFwcGluZ3MiOiJjQUFBOzs7Ozs7Ozs7OztBQVdBQSxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLGdCQUFULENBQTBCQyxPQUExQixFQUFtQ0MsSUFBbkMsRUFBeUM7QUFDeEQsUUFBTUMsU0FBU0YsUUFBUUcsY0FBUixHQUF5QkMsV0FBeEM7QUFDQSxRQUFNQyxTQUFTTCxRQUFRTSxzQkFBUixHQUFpQ0osT0FBT0ssc0JBQXhDLENBQWY7QUFDQSxRQUFNQyxlQUFlUixRQUFRUyw4QkFBUixHQUF5Q0osT0FBT0ssbUJBQVAsQ0FBMkIsQ0FBM0IsRUFBOEJDLEtBQXZFLENBQXJCOztBQUVBLFNBQU9ILGFBQWFJLGFBQWIsQ0FBMkJYLElBQTNCLENBQVA7QUFDRCxDQU5EIiwiZmlsZSI6ImdldEJ1aWxkUHJvcGVydHkuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9pb3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdldHMgYnVpbGQgcHJvcGVydHkgZnJvbSB0aGUgbWFpbiB0YXJnZXQgYnVpbGQgc2VjdGlvblxuICpcbiAqIEl0IGRpZmZlcnMgZnJvbSB0aGUgcHJvamVjdC5nZXRCdWlsZFByb3BlcnR5IGV4cG9zZWQgYnkgeGNvZGUgaW4gdGhlIHdheSB0aGF0OlxuICogLSBpdCBvbmx5IGNoZWNrcyBmb3IgYnVpbGQgcHJvcGVydHkgaW4gdGhlIG1haW4gdGFyZ2V0IGBEZWJ1Z2Agc2VjdGlvblxuICogLSBgeGNvZGVgIGxpYnJhcnkgaXRlcmF0ZXMgb3ZlciBhbGwgYnVpbGQgc2VjdGlvbnMgYW5kIGJlY2F1c2UgaXQgbWlzc2VzXG4gKiBhbiBlYXJseSByZXR1cm4gd2hlbiBwcm9wZXJ0eSBpcyBmb3VuZCwgaXQgd2lsbCByZXR1cm4gdW5kZWZpbmVkL3dyb25nIHZhbHVlXG4gKiB3aGVuIHRoZXJlJ3MgYW5vdGhlciBidWlsZCBzZWN0aW9uIHR5cGljYWxseSBhZnRlciB0aGUgb25lIHlvdSB3YW50IHRvIGFjY2Vzc1xuICogd2l0aG91dCB0aGUgcHJvcGVydHkgZGVmaW5lZCAoZS5nLiBDb2NvYVBvZHMgc2VjdGlvbnMgYXBwZW5kZWQgdG8gcHJvamVjdFxuICogbWlzcyBJTkZPUExJU1RfRklMRSksIHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2FsdW5ueS9ub2RlLXhjb2RlL2Jsb2IvbWFzdGVyL2xpYi9wYnhQcm9qZWN0LmpzI0wxNzY1XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2V0QnVpbGRQcm9wZXJ0eShwcm9qZWN0LCBwcm9wKSB7XG4gIGNvbnN0IHRhcmdldCA9IHByb2plY3QuZ2V0Rmlyc3RUYXJnZXQoKS5maXJzdFRhcmdldDtcbiAgY29uc3QgY29uZmlnID0gcHJvamVjdC5wYnhYQ0NvbmZpZ3VyYXRpb25MaXN0KClbdGFyZ2V0LmJ1aWxkQ29uZmlndXJhdGlvbkxpc3RdO1xuICBjb25zdCBidWlsZFNlY3Rpb24gPSBwcm9qZWN0LnBieFhDQnVpbGRDb25maWd1cmF0aW9uU2VjdGlvbigpW2NvbmZpZy5idWlsZENvbmZpZ3VyYXRpb25zWzBdLnZhbHVlXTtcblxuICByZXR1cm4gYnVpbGRTZWN0aW9uLmJ1aWxkU2V0dGluZ3NbcHJvcF07XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "getBuildProperty.js"
      ],
      "names": [
        "module",
        "exports",
        "getBuildProperty",
        "project",
        "prop",
        "target",
        "getFirstTarget",
        "firstTarget",
        "config",
        "pbxXCConfigurationList",
        "buildConfigurationList",
        "buildSection",
        "pbxXCBuildConfigurationSection",
        "buildConfigurations",
        "value",
        "buildSettings"
      ],
      "mappings": "cAAA;;;;;;;;;;;AAWAA,OAAOC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,OAA1B,EAAmCC,IAAnC,EAAyC;AACxD,QAAMC,SAASF,QAAQG,cAAR,GAAyBC,WAAxC;AACA,QAAMC,SAASL,QAAQM,sBAAR,GAAiCJ,OAAOK,sBAAxC,CAAf;AACA,QAAMC,eAAeR,QAAQS,8BAAR,GAAyCJ,OAAOK,mBAAP,CAA2B,CAA3B,EAA8BC,KAAvE,CAArB;;AAEA,SAAOH,aAAaI,aAAb,CAA2BX,IAA3B,CAAP;AACD,CAND",
      "file": "getBuildProperty.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "/**\n * Gets build property from the main target build section\n *\n * It differs from the project.getBuildProperty exposed by xcode in the way that:\n * - it only checks for build property in the main target `Debug` section\n * - `xcode` library iterates over all build sections and because it misses\n * an early return when property is found, it will return undefined/wrong value\n * when there's another build section typically after the one you want to access\n * without the property defined (e.g. CocoaPods sections appended to project\n * miss INFOPLIST_FILE), see: https://github.com/alunny/node-xcode/blob/master/lib/pbxProject.js#L1765\n */\nmodule.exports = function getBuildProperty(project, prop) {\n  const target = project.getFirstTarget().firstTarget;\n  const config = project.pbxXCConfigurationList()[target.buildConfigurationList];\n  const buildSection = project.pbxXCBuildConfigurationSection()[config.buildConfigurations[0].value];\n\n  return buildSection.buildSettings[prop];\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/writePlist.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/writePlist.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/writePlist.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "writePlist.js",
      "sourceFileName": "writePlist.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "writePlist"
    },
    "ignored": false,
    "code": "'use strict';const plistParser = require('plist');\nconst getPlistPath = require('./getPlistPath');\nconst fs = require('fs');\n\n/**\n                           * Writes to Info.plist located in the iOS project\n                           *\n                           * Returns `null` if INFOPLIST_FILE is not specified or file is non-existent.\n                           */\nmodule.exports = function writePlist(project, sourceDir, plist) {\n  const plistPath = getPlistPath(project, sourceDir);\n\n  if (!plistPath) {\n    return null;\n  }\n\n  // We start with an offset of -1, because Xcode maintains a custom\n  // indentation of the plist.\n  // Ref: https://github.com/facebook/react-native/issues/11668\n  return fs.writeFileSync(\n  plistPath,\n  plistParser.build(plist, { indent: '\\t', offset: -1 }) + '\\n');\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndyaXRlUGxpc3QuanMiXSwibmFtZXMiOlsicGxpc3RQYXJzZXIiLCJyZXF1aXJlIiwiZ2V0UGxpc3RQYXRoIiwiZnMiLCJtb2R1bGUiLCJleHBvcnRzIiwid3JpdGVQbGlzdCIsInByb2plY3QiLCJzb3VyY2VEaXIiLCJwbGlzdCIsInBsaXN0UGF0aCIsIndyaXRlRmlsZVN5bmMiLCJidWlsZCIsImluZGVudCIsIm9mZnNldCJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsY0FBY0MsUUFBUSxPQUFSLENBQXBCO0FBQ0EsTUFBTUMsZUFBZUQsUUFBUSxnQkFBUixDQUFyQjtBQUNBLE1BQU1FLEtBQUtGLFFBQVEsSUFBUixDQUFYOztBQUVBOzs7OztBQUtBRyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLFVBQVQsQ0FBb0JDLE9BQXBCLEVBQTZCQyxTQUE3QixFQUF3Q0MsS0FBeEMsRUFBK0M7QUFDOUQsUUFBTUMsWUFBWVIsYUFBYUssT0FBYixFQUFzQkMsU0FBdEIsQ0FBbEI7O0FBRUEsTUFBSSxDQUFDRSxTQUFMLEVBQWdCO0FBQ2QsV0FBTyxJQUFQO0FBQ0Q7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsU0FBT1AsR0FBR1EsYUFBSDtBQUNMRCxXQURLO0FBRUxWLGNBQVlZLEtBQVosQ0FBa0JILEtBQWxCLEVBQXlCLEVBQUVJLFFBQVEsSUFBVixFQUFnQkMsUUFBUSxDQUFDLENBQXpCLEVBQXpCLElBQXlELElBRnBELENBQVA7O0FBSUQsQ0FkRCIsImZpbGUiOiJ3cml0ZVBsaXN0LmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvaW9zIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGxpc3RQYXJzZXIgPSByZXF1aXJlKCdwbGlzdCcpO1xuY29uc3QgZ2V0UGxpc3RQYXRoID0gcmVxdWlyZSgnLi9nZXRQbGlzdFBhdGgnKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcblxuLyoqXG4gKiBXcml0ZXMgdG8gSW5mby5wbGlzdCBsb2NhdGVkIGluIHRoZSBpT1MgcHJvamVjdFxuICpcbiAqIFJldHVybnMgYG51bGxgIGlmIElORk9QTElTVF9GSUxFIGlzIG5vdCBzcGVjaWZpZWQgb3IgZmlsZSBpcyBub24tZXhpc3RlbnQuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gd3JpdGVQbGlzdChwcm9qZWN0LCBzb3VyY2VEaXIsIHBsaXN0KSB7XG4gIGNvbnN0IHBsaXN0UGF0aCA9IGdldFBsaXN0UGF0aChwcm9qZWN0LCBzb3VyY2VEaXIpO1xuXG4gIGlmICghcGxpc3RQYXRoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICAvLyBXZSBzdGFydCB3aXRoIGFuIG9mZnNldCBvZiAtMSwgYmVjYXVzZSBYY29kZSBtYWludGFpbnMgYSBjdXN0b21cbiAgLy8gaW5kZW50YXRpb24gb2YgdGhlIHBsaXN0LlxuICAvLyBSZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC1uYXRpdmUvaXNzdWVzLzExNjY4XG4gIHJldHVybiBmcy53cml0ZUZpbGVTeW5jKFxuICAgIHBsaXN0UGF0aCxcbiAgICBwbGlzdFBhcnNlci5idWlsZChwbGlzdCwgeyBpbmRlbnQ6ICdcXHQnLCBvZmZzZXQ6IC0xIH0pICsgJ1xcbidcbiAgKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "writePlist.js"
      ],
      "names": [
        "plistParser",
        "require",
        "getPlistPath",
        "fs",
        "module",
        "exports",
        "writePlist",
        "project",
        "sourceDir",
        "plist",
        "plistPath",
        "writeFileSync",
        "build",
        "indent",
        "offset"
      ],
      "mappings": "aAAA,MAAMA,cAAcC,QAAQ,OAAR,CAApB;AACA,MAAMC,eAAeD,QAAQ,gBAAR,CAArB;AACA,MAAME,KAAKF,QAAQ,IAAR,CAAX;;AAEA;;;;;AAKAG,OAAOC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,SAA7B,EAAwCC,KAAxC,EAA+C;AAC9D,QAAMC,YAAYR,aAAaK,OAAb,EAAsBC,SAAtB,CAAlB;;AAEA,MAAI,CAACE,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED;AACA;AACA;AACA,SAAOP,GAAGQ,aAAH;AACLD,WADK;AAELV,cAAYY,KAAZ,CAAkBH,KAAlB,EAAyB,EAAEI,QAAQ,IAAV,EAAgBC,QAAQ,CAAC,CAAzB,EAAzB,IAAyD,IAFpD,CAAP;;AAID,CAdD",
      "file": "writePlist.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const plistParser = require('plist');\nconst getPlistPath = require('./getPlistPath');\nconst fs = require('fs');\n\n/**\n * Writes to Info.plist located in the iOS project\n *\n * Returns `null` if INFOPLIST_FILE is not specified or file is non-existent.\n */\nmodule.exports = function writePlist(project, sourceDir, plist) {\n  const plistPath = getPlistPath(project, sourceDir);\n\n  if (!plistPath) {\n    return null;\n  }\n\n  // We start with an offset of -1, because Xcode maintains a custom\n  // indentation of the plist.\n  // Ref: https://github.com/facebook/react-native/issues/11668\n  return fs.writeFileSync(\n    plistPath,\n    plistParser.build(plist, { indent: '\\t', offset: -1 }) + '\\n'\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/getProjectDependencies.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/getProjectDependencies.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/getProjectDependencies.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "getProjectDependencies.js",
      "sourceFileName": "getProjectDependencies.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "getProjectDependencies"
    },
    "ignored": false,
    "code": "'use strict';const path = require('path');\n\n/**\n                                            * Returns an array of dependencies that should be linked/checked.\n                                            */\nmodule.exports = function getProjectDependencies() {\n  const pjson = require(path.join(process.cwd(), './package.json'));\n  return Object.keys(pjson.dependencies || {}).filter(name => name !== 'react-native');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldFByb2plY3REZXBlbmRlbmNpZXMuanMiXSwibmFtZXMiOlsicGF0aCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiZ2V0UHJvamVjdERlcGVuZGVuY2llcyIsInBqc29uIiwiam9pbiIsInByb2Nlc3MiLCJjd2QiLCJPYmplY3QiLCJrZXlzIiwiZGVwZW5kZW5jaWVzIiwiZmlsdGVyIiwibmFtZSJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsT0FBT0MsUUFBUSxNQUFSLENBQWI7O0FBRUE7OztBQUdBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLHNCQUFULEdBQWtDO0FBQ2pELFFBQU1DLFFBQVFKLFFBQVFELEtBQUtNLElBQUwsQ0FBVUMsUUFBUUMsR0FBUixFQUFWLEVBQXlCLGdCQUF6QixDQUFSLENBQWQ7QUFDQSxTQUFPQyxPQUFPQyxJQUFQLENBQVlMLE1BQU1NLFlBQU4sSUFBc0IsRUFBbEMsRUFBc0NDLE1BQXRDLENBQTZDQyxRQUFRQSxTQUFTLGNBQTlELENBQVA7QUFDRCxDQUhEIiwiZmlsZSI6ImdldFByb2plY3REZXBlbmRlbmNpZXMuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluayIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5cbi8qKlxuICogUmV0dXJucyBhbiBhcnJheSBvZiBkZXBlbmRlbmNpZXMgdGhhdCBzaG91bGQgYmUgbGlua2VkL2NoZWNrZWQuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2V0UHJvamVjdERlcGVuZGVuY2llcygpIHtcbiAgY29uc3QgcGpzb24gPSByZXF1aXJlKHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCAnLi9wYWNrYWdlLmpzb24nKSk7XG4gIHJldHVybiBPYmplY3Qua2V5cyhwanNvbi5kZXBlbmRlbmNpZXMgfHwge30pLmZpbHRlcihuYW1lID0+IG5hbWUgIT09ICdyZWFjdC1uYXRpdmUnKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "getProjectDependencies.js"
      ],
      "names": [
        "path",
        "require",
        "module",
        "exports",
        "getProjectDependencies",
        "pjson",
        "join",
        "process",
        "cwd",
        "Object",
        "keys",
        "dependencies",
        "filter",
        "name"
      ],
      "mappings": "aAAA,MAAMA,OAAOC,QAAQ,MAAR,CAAb;;AAEA;;;AAGAC,OAAOC,OAAP,GAAiB,SAASC,sBAAT,GAAkC;AACjD,QAAMC,QAAQJ,QAAQD,KAAKM,IAAL,CAAUC,QAAQC,GAAR,EAAV,EAAyB,gBAAzB,CAAR,CAAd;AACA,SAAOC,OAAOC,IAAP,CAAYL,MAAMM,YAAN,IAAsB,EAAlC,EAAsCC,MAAtC,CAA6CC,QAAQA,SAAS,cAA9D,CAAP;AACD,CAHD",
      "file": "getProjectDependencies.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "sourcesContent": [
        "const path = require('path');\n\n/**\n * Returns an array of dependencies that should be linked/checked.\n */\nmodule.exports = function getProjectDependencies() {\n  const pjson = require(path.join(process.cwd(), './package.json'));\n  return Object.keys(pjson.dependencies || {}).filter(name => name !== 'react-native');\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/getDependencyConfig.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/getDependencyConfig.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/getDependencyConfig.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "getDependencyConfig.js",
      "sourceFileName": "getDependencyConfig.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "getDependencyConfig"
    },
    "ignored": false,
    "code": "\"use strict\"; /**\n               * Given an array of dependencies - it returns their RNPM config\n               * if they were valid.\n               */\nmodule.exports = function getDependencyConfig(config, deps) {\n  return deps.reduce((acc, name) => {\n    try {\n      return acc.concat({\n        config: config.getDependencyConfig(name),\n        name });\n\n    } catch (err) {\n      console.log(err);\n      return acc;\n    }\n  }, []);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldERlcGVuZGVuY3lDb25maWcuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImdldERlcGVuZGVuY3lDb25maWciLCJjb25maWciLCJkZXBzIiwicmVkdWNlIiwiYWNjIiwibmFtZSIsImNvbmNhdCIsImVyciIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJjQUFBOzs7O0FBSUFBLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsbUJBQVQsQ0FBNkJDLE1BQTdCLEVBQXFDQyxJQUFyQyxFQUEyQztBQUMxRCxTQUFPQSxLQUFLQyxNQUFMLENBQVksQ0FBQ0MsR0FBRCxFQUFNQyxJQUFOLEtBQWU7QUFDaEMsUUFBSTtBQUNGLGFBQU9ELElBQUlFLE1BQUosQ0FBVztBQUNoQkwsZ0JBQVFBLE9BQU9ELG1CQUFQLENBQTJCSyxJQUEzQixDQURRO0FBRWhCQSxZQUZnQixFQUFYLENBQVA7O0FBSUQsS0FMRCxDQUtFLE9BQU9FLEdBQVAsRUFBWTtBQUNaQyxjQUFRQyxHQUFSLENBQVlGLEdBQVo7QUFDQSxhQUFPSCxHQUFQO0FBQ0Q7QUFDRixHQVZNLEVBVUosRUFWSSxDQUFQO0FBV0QsQ0FaRCIsImZpbGUiOiJnZXREZXBlbmRlbmN5Q29uZmlnLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdpdmVuIGFuIGFycmF5IG9mIGRlcGVuZGVuY2llcyAtIGl0IHJldHVybnMgdGhlaXIgUk5QTSBjb25maWdcbiAqIGlmIHRoZXkgd2VyZSB2YWxpZC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXREZXBlbmRlbmN5Q29uZmlnKGNvbmZpZywgZGVwcykge1xuICByZXR1cm4gZGVwcy5yZWR1Y2UoKGFjYywgbmFtZSkgPT4ge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gYWNjLmNvbmNhdCh7XG4gICAgICAgIGNvbmZpZzogY29uZmlnLmdldERlcGVuZGVuY3lDb25maWcobmFtZSksXG4gICAgICAgIG5hbWUsXG4gICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICByZXR1cm4gYWNjO1xuICAgIH1cbiAgfSwgW10pO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "getDependencyConfig.js"
      ],
      "names": [
        "module",
        "exports",
        "getDependencyConfig",
        "config",
        "deps",
        "reduce",
        "acc",
        "name",
        "concat",
        "err",
        "console",
        "log"
      ],
      "mappings": "cAAA;;;;AAIAA,OAAOC,OAAP,GAAiB,SAASC,mBAAT,CAA6BC,MAA7B,EAAqCC,IAArC,EAA2C;AAC1D,SAAOA,KAAKC,MAAL,CAAY,CAACC,GAAD,EAAMC,IAAN,KAAe;AAChC,QAAI;AACF,aAAOD,IAAIE,MAAJ,CAAW;AAChBL,gBAAQA,OAAOD,mBAAP,CAA2BK,IAA3B,CADQ;AAEhBA,YAFgB,EAAX,CAAP;;AAID,KALD,CAKE,OAAOE,GAAP,EAAY;AACZC,cAAQC,GAAR,CAAYF,GAAZ;AACA,aAAOH,GAAP;AACD;AACF,GAVM,EAUJ,EAVI,CAAP;AAWD,CAZD",
      "file": "getDependencyConfig.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "sourcesContent": [
        "/**\n * Given an array of dependencies - it returns their RNPM config\n * if they were valid.\n */\nmodule.exports = function getDependencyConfig(config, deps) {\n  return deps.reduce((acc, name) => {\n    try {\n      return acc.concat({\n        config: config.getDependencyConfig(name),\n        name,\n      });\n    } catch (err) {\n      console.log(err);\n      return acc;\n    }\n  }, []);\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pollParams.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pollParams.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pollParams.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "pollParams.js",
      "sourceFileName": "pollParams.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "pollParams"
    },
    "ignored": false,
    "code": "'use strict';var inquirer = require('inquirer');\n\nmodule.exports = questions => new Promise((resolve, reject) => {\n  if (!questions) {\n    return resolve({});\n  }\n\n  inquirer.prompt(questions).then(resolve, reject);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvbGxQYXJhbXMuanMiXSwibmFtZXMiOlsiaW5xdWlyZXIiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInF1ZXN0aW9ucyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicHJvbXB0IiwidGhlbiJdLCJtYXBwaW5ncyI6ImFBQUEsSUFBSUEsV0FBV0MsUUFBUSxVQUFSLENBQWY7O0FBRUFDLE9BQU9DLE9BQVAsR0FBa0JDLFNBQUQsSUFBZSxJQUFJQyxPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQy9ELE1BQUksQ0FBQ0gsU0FBTCxFQUFnQjtBQUNkLFdBQU9FLFFBQVEsRUFBUixDQUFQO0FBQ0Q7O0FBRUROLFdBQVNRLE1BQVQsQ0FBZ0JKLFNBQWhCLEVBQTJCSyxJQUEzQixDQUFnQ0gsT0FBaEMsRUFBeUNDLE1BQXpDO0FBQ0QsQ0FOK0IsQ0FBaEMiLCJmaWxlIjoicG9sbFBhcmFtcy5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGlucXVpcmVyID0gcmVxdWlyZSgnaW5xdWlyZXInKTtcblxubW9kdWxlLmV4cG9ydHMgPSAocXVlc3Rpb25zKSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gIGlmICghcXVlc3Rpb25zKSB7XG4gICAgcmV0dXJuIHJlc29sdmUoe30pO1xuICB9XG5cbiAgaW5xdWlyZXIucHJvbXB0KHF1ZXN0aW9ucykudGhlbihyZXNvbHZlLCByZWplY3QpO1xufSk7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "pollParams.js"
      ],
      "names": [
        "inquirer",
        "require",
        "module",
        "exports",
        "questions",
        "Promise",
        "resolve",
        "reject",
        "prompt",
        "then"
      ],
      "mappings": "aAAA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;;AAEAC,OAAOC,OAAP,GAAkBC,SAAD,IAAe,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/D,MAAI,CAACH,SAAL,EAAgB;AACd,WAAOE,QAAQ,EAAR,CAAP;AACD;;AAEDN,WAASQ,MAAT,CAAgBJ,SAAhB,EAA2BK,IAA3B,CAAgCH,OAAhC,EAAyCC,MAAzC;AACD,CAN+B,CAAhC",
      "file": "pollParams.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "sourcesContent": [
        "var inquirer = require('inquirer');\n\nmodule.exports = (questions) => new Promise((resolve, reject) => {\n  if (!questions) {\n    return resolve({});\n  }\n\n  inquirer.prompt(questions).then(resolve, reject);\n});\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/commandStub.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/commandStub.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/commandStub.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "commandStub.js",
      "sourceFileName": "commandStub.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "commandStub"
    },
    "ignored": false,
    "code": "\"use strict\";module.exports = cb => cb();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1hbmRTdHViLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjYiJdLCJtYXBwaW5ncyI6ImFBQUFBLE9BQU9DLE9BQVAsR0FBa0JDLEVBQUQsSUFBUUEsSUFBekIiLCJmaWxlIjoiY29tbWFuZFN0dWIuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluayIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKGNiKSA9PiBjYigpO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "commandStub.js"
      ],
      "names": [
        "module",
        "exports",
        "cb"
      ],
      "mappings": "aAAAA,OAAOC,OAAP,GAAkBC,EAAD,IAAQA,IAAzB",
      "file": "commandStub.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "sourcesContent": [
        "module.exports = (cb) => cb();\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/promisify.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/promisify.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/promisify.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "promisify.js",
      "sourceFileName": "promisify.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "promisify"
    },
    "ignored": false,
    "code": "\"use strict\";module.exports = func => new Promise((resolve, reject) =>\nfunc((err, res) => err ? reject(err) : resolve(res)));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21pc2lmeS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZnVuYyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiZXJyIiwicmVzIl0sIm1hcHBpbmdzIjoiYUFBQUEsT0FBT0MsT0FBUCxHQUFrQkMsSUFBRCxJQUFVLElBQUlDLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVY7QUFDckNILEtBQUssQ0FBQ0ksR0FBRCxFQUFNQyxHQUFOLEtBQWNELE1BQU1ELE9BQU9DLEdBQVAsQ0FBTixHQUFvQkYsUUFBUUcsR0FBUixDQUF2QyxDQUR5QixDQUEzQiIsImZpbGUiOiJwcm9taXNpZnkuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluayIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKGZ1bmMpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+XG4gIGZ1bmMoKGVyciwgcmVzKSA9PiBlcnIgPyByZWplY3QoZXJyKSA6IHJlc29sdmUocmVzKSlcbik7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "promisify.js"
      ],
      "names": [
        "module",
        "exports",
        "func",
        "Promise",
        "resolve",
        "reject",
        "err",
        "res"
      ],
      "mappings": "aAAAA,OAAOC,OAAP,GAAkBC,IAAD,IAAU,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV;AACrCH,KAAK,CAACI,GAAD,EAAMC,GAAN,KAAcD,MAAMD,OAAOC,GAAP,CAAN,GAAoBF,QAAQG,GAAR,CAAvC,CADyB,CAA3B",
      "file": "promisify.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "sourcesContent": [
        "module.exports = (func) => new Promise((resolve, reject) =>\n  func((err, res) => err ? reject(err) : resolve(res))\n);\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/unlink.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/unlink.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/unlink.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "unlink.js",
      "sourceFileName": "unlink.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "unlink"
    },
    "ignored": false,
    "code": "'use strict';const log = require('npmlog');\n\nconst getProjectDependencies = require('./getProjectDependencies');\nconst unregisterDependencyAndroid = require('./android/unregisterNativeModule');\nconst unregisterDependencyWindows = require('./windows/unregisterNativeModule');\nconst unregisterDependencyIOS = require('./ios/unregisterNativeModule');\nconst unregisterDependencyPods = require('./pods/unregisterNativeModule');\nconst isInstalledAndroid = require('./android/isInstalled');\nconst isInstalledWindows = require('./windows/isInstalled');\nconst isInstalledIOS = require('./ios/isInstalled');\nconst isInstalledPods = require('./pods/isInstalled');\nconst unlinkAssetsAndroid = require('./android/unlinkAssets');\nconst unlinkAssetsIOS = require('./ios/unlinkAssets');\nconst getDependencyConfig = require('./getDependencyConfig');\nconst compact = require('lodash').compact;\nconst difference = require('lodash').difference;\nconst filter = require('lodash').filter;\nconst flatten = require('lodash').flatten;\nconst isEmpty = require('lodash').isEmpty;\nconst promiseWaterfall = require('./promiseWaterfall');\nconst commandStub = require('./commandStub');\nconst promisify = require('./promisify');\n\nlog.heading = 'rnpm-link';\n\nconst unlinkDependencyAndroid = (androidProject, dependency, packageName) => {\n  if (!androidProject || !dependency.android) {\n    return;\n  }\n\n  const isInstalled = isInstalledAndroid(androidProject, packageName);\n\n  if (!isInstalled) {\n    log.info(`Android module ${packageName} is not installed`);\n    return;\n  }\n\n  log.info(`Unlinking ${packageName} android dependency`);\n\n  unregisterDependencyAndroid(packageName, dependency.android, androidProject);\n\n  log.info(`Android module ${packageName} has been successfully unlinked`);\n};\n\nconst unlinkDependencyWindows = (windowsProject, dependency, packageName) => {\n  if (!windowsProject || !dependency.windows) {\n    return;\n  }\n\n  const isInstalled = isInstalledWindows(windowsProject, dependency.windows);\n\n  if (!isInstalled) {\n    log.info(`Windows module ${packageName} is not installed`);\n    return;\n  }\n\n  log.info(`Unlinking ${packageName} windows dependency`);\n\n  unregisterDependencyWindows(packageName, dependency.windows, windowsProject);\n\n  log.info(`Windows module ${packageName} has been successfully unlinked`);\n};\n\nconst unlinkDependencyIOS = (iOSProject, dependency, packageName, iOSDependencies) => {\n  if (!iOSProject || !dependency.ios) {\n    return;\n  }\n\n  const isIosInstalled = isInstalledIOS(iOSProject, dependency.ios);\n  const isPodInstalled = isInstalledPods(iOSProject, dependency.ios);\n  if (!isIosInstalled && !isPodInstalled) {\n    log.info(`iOS module ${packageName} is not installed`);\n    return;\n  }\n\n  log.info(`Unlinking ${packageName} ios dependency`);\n\n  if (isIosInstalled) {\n    unregisterDependencyIOS(dependency.ios, iOSProject, iOSDependencies);\n  } else\n  if (isPodInstalled) {\n    unregisterDependencyPods(dependency.ios, iOSProject);\n  }\n\n  log.info(`iOS module ${packageName} has been successfully unlinked`);\n};\n\n/**\n    * Updates project and unlink specific dependency\n    *\n    * If optional argument [packageName] is provided, it's the only one\n    * that's checked\n    */\nfunction unlink(args, config) {\n  const packageName = args[0];\n\n  var project;\n  var dependency;\n\n  try {\n    project = config.getProjectConfig();\n  } catch (err) {\n    log.error(\n    'ERRPACKAGEJSON',\n    'No package found. Are you sure it\\'s a React Native project?');\n\n    return Promise.reject(err);\n  }\n\n  try {\n    dependency = config.getDependencyConfig(packageName);\n  } catch (err) {\n    log.warn(\n    'ERRINVALIDPROJ',\n    `Project ${packageName} is not a react-native library`);\n\n    return Promise.reject(err);\n  }\n\n  const allDependencies = getDependencyConfig(config, getProjectDependencies());\n  const otherDependencies = filter(allDependencies, d => d.name !== packageName);\n  const iOSDependencies = compact(otherDependencies.map(d => d.config.ios));\n\n  const tasks = [\n  () => promisify(dependency.commands.preunlink || commandStub),\n  () => unlinkDependencyAndroid(project.android, dependency, packageName),\n  () => unlinkDependencyIOS(project.ios, dependency, packageName, iOSDependencies),\n  () => unlinkDependencyWindows(project.windows, dependency, packageName),\n  () => promisify(dependency.commands.postunlink || commandStub)];\n\n\n  return promiseWaterfall(tasks).\n  then(() => {\n    // @todo move all these to `tasks` array, just like in\n    // link\n    const assets = difference(\n    dependency.assets,\n    flatten(allDependencies, d => d.assets));\n\n\n    if (isEmpty(assets)) {\n      return Promise.resolve();\n    }\n\n    if (project.ios) {\n      log.info('Unlinking assets from ios project');\n      unlinkAssetsIOS(assets, project.ios);\n    }\n\n    if (project.android) {\n      log.info('Unlinking assets from android project');\n      unlinkAssetsAndroid(assets, project.android.assetsPath);\n    }\n\n    log.info(\n    `${packageName} assets has been successfully unlinked from your project`);\n\n  }).\n  catch(err => {\n    log.error(\n    `It seems something went wrong while unlinking. Error: ${err.message}`);\n\n    throw err;\n  });\n}\n\nmodule.exports = {\n  func: unlink,\n  description: 'unlink native dependency',\n  name: 'unlink <packageName>' };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "unlink.js"
      ],
      "names": [
        "log",
        "require",
        "getProjectDependencies",
        "unregisterDependencyAndroid",
        "unregisterDependencyWindows",
        "unregisterDependencyIOS",
        "unregisterDependencyPods",
        "isInstalledAndroid",
        "isInstalledWindows",
        "isInstalledIOS",
        "isInstalledPods",
        "unlinkAssetsAndroid",
        "unlinkAssetsIOS",
        "getDependencyConfig",
        "compact",
        "difference",
        "filter",
        "flatten",
        "isEmpty",
        "promiseWaterfall",
        "commandStub",
        "promisify",
        "heading",
        "unlinkDependencyAndroid",
        "androidProject",
        "dependency",
        "packageName",
        "android",
        "isInstalled",
        "info",
        "unlinkDependencyWindows",
        "windowsProject",
        "windows",
        "unlinkDependencyIOS",
        "iOSProject",
        "iOSDependencies",
        "ios",
        "isIosInstalled",
        "isPodInstalled",
        "unlink",
        "args",
        "config",
        "project",
        "getProjectConfig",
        "err",
        "error",
        "Promise",
        "reject",
        "warn",
        "allDependencies",
        "otherDependencies",
        "d",
        "name",
        "map",
        "tasks",
        "commands",
        "preunlink",
        "postunlink",
        "then",
        "assets",
        "resolve",
        "assetsPath",
        "catch",
        "message",
        "module",
        "exports",
        "func",
        "description"
      ],
      "mappings": "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",
      "file": "unlink.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link",
      "sourcesContent": [
        "const log = require('npmlog');\n\nconst getProjectDependencies = require('./getProjectDependencies');\nconst unregisterDependencyAndroid = require('./android/unregisterNativeModule');\nconst unregisterDependencyWindows = require('./windows/unregisterNativeModule');\nconst unregisterDependencyIOS = require('./ios/unregisterNativeModule');\nconst unregisterDependencyPods = require('./pods/unregisterNativeModule');\nconst isInstalledAndroid = require('./android/isInstalled');\nconst isInstalledWindows = require('./windows/isInstalled');\nconst isInstalledIOS = require('./ios/isInstalled');\nconst isInstalledPods = require('./pods/isInstalled');\nconst unlinkAssetsAndroid = require('./android/unlinkAssets');\nconst unlinkAssetsIOS = require('./ios/unlinkAssets');\nconst getDependencyConfig = require('./getDependencyConfig');\nconst compact = require('lodash').compact;\nconst difference = require('lodash').difference;\nconst filter = require('lodash').filter;\nconst flatten = require('lodash').flatten;\nconst isEmpty = require('lodash').isEmpty;\nconst promiseWaterfall = require('./promiseWaterfall');\nconst commandStub = require('./commandStub');\nconst promisify = require('./promisify');\n\nlog.heading = 'rnpm-link';\n\nconst unlinkDependencyAndroid = (androidProject, dependency, packageName) => {\n  if (!androidProject || !dependency.android) {\n    return;\n  }\n\n  const isInstalled = isInstalledAndroid(androidProject, packageName);\n\n  if (!isInstalled) {\n    log.info(`Android module ${packageName} is not installed`);\n    return;\n  }\n\n  log.info(`Unlinking ${packageName} android dependency`);\n\n  unregisterDependencyAndroid(packageName, dependency.android, androidProject);\n\n  log.info(`Android module ${packageName} has been successfully unlinked`);\n};\n\nconst unlinkDependencyWindows = (windowsProject, dependency, packageName) => {\n  if (!windowsProject || !dependency.windows) {\n    return;\n  }\n\n  const isInstalled = isInstalledWindows(windowsProject, dependency.windows);\n\n  if (!isInstalled) {\n    log.info(`Windows module ${packageName} is not installed`);\n    return;\n  }\n\n  log.info(`Unlinking ${packageName} windows dependency`);\n\n  unregisterDependencyWindows(packageName, dependency.windows, windowsProject);\n\n  log.info(`Windows module ${packageName} has been successfully unlinked`);\n};\n\nconst unlinkDependencyIOS = (iOSProject, dependency, packageName, iOSDependencies) => {\n  if (!iOSProject || !dependency.ios) {\n    return;\n  }\n\n  const isIosInstalled = isInstalledIOS(iOSProject, dependency.ios);\n  const isPodInstalled = isInstalledPods(iOSProject, dependency.ios);\n  if (!isIosInstalled && !isPodInstalled) {\n    log.info(`iOS module ${packageName} is not installed`);\n    return;\n  }\n\n  log.info(`Unlinking ${packageName} ios dependency`);\n\n  if (isIosInstalled) {\n    unregisterDependencyIOS(dependency.ios, iOSProject, iOSDependencies);\n  }\n  else if (isPodInstalled) {\n    unregisterDependencyPods(dependency.ios, iOSProject);\n  }\n\n  log.info(`iOS module ${packageName} has been successfully unlinked`);\n};\n\n/**\n * Updates project and unlink specific dependency\n *\n * If optional argument [packageName] is provided, it's the only one\n * that's checked\n */\nfunction unlink(args, config) {\n  const packageName = args[0];\n\n  var project;\n  var dependency;\n\n  try {\n    project = config.getProjectConfig();\n  } catch (err) {\n    log.error(\n      'ERRPACKAGEJSON',\n      'No package found. Are you sure it\\'s a React Native project?'\n    );\n    return Promise.reject(err);\n  }\n\n  try {\n    dependency = config.getDependencyConfig(packageName);\n  } catch (err) {\n    log.warn(\n      'ERRINVALIDPROJ',\n      `Project ${packageName} is not a react-native library`\n    );\n    return Promise.reject(err);\n  }\n\n  const allDependencies = getDependencyConfig(config, getProjectDependencies());\n  const otherDependencies = filter(allDependencies, d => d.name !== packageName);\n  const iOSDependencies = compact(otherDependencies.map(d => d.config.ios));\n\n  const tasks = [\n    () => promisify(dependency.commands.preunlink || commandStub),\n    () => unlinkDependencyAndroid(project.android, dependency, packageName),\n    () => unlinkDependencyIOS(project.ios, dependency, packageName, iOSDependencies),\n    () => unlinkDependencyWindows(project.windows, dependency, packageName),\n    () => promisify(dependency.commands.postunlink || commandStub)\n  ];\n\n  return promiseWaterfall(tasks)\n    .then(() => {\n      // @todo move all these to `tasks` array, just like in\n      // link\n      const assets = difference(\n        dependency.assets,\n        flatten(allDependencies, d => d.assets)\n      );\n\n      if (isEmpty(assets)) {\n        return Promise.resolve();\n      }\n\n      if (project.ios) {\n        log.info('Unlinking assets from ios project');\n        unlinkAssetsIOS(assets, project.ios);\n      }\n\n      if (project.android) {\n        log.info('Unlinking assets from android project');\n        unlinkAssetsAndroid(assets, project.android.assetsPath);\n      }\n\n      log.info(\n        `${packageName} assets has been successfully unlinked from your project`\n      );\n    })\n    .catch(err => {\n      log.error(\n        `It seems something went wrong while unlinking. Error: ${err.message}`\n      );\n      throw err;\n    });\n}\n\nmodule.exports = {\n  func: unlink,\n  description: 'unlink native dependency',\n  name: 'unlink <packageName>',\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/unregisterNativeModule.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/unregisterNativeModule.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/unregisterNativeModule.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "unregisterNativeModule.js",
      "sourceFileName": "unregisterNativeModule.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "unregisterNativeModule"
    },
    "ignored": false,
    "code": "'use strict';const fs = require('fs');\nconst toCamelCase = require('lodash').camelCase;\n\nconst revokePatch = require('./patches/revokePatch');\nconst makeSettingsPatch = require('./patches/makeSettingsPatch');\nconst makeBuildPatch = require('./patches/makeBuildPatch');\nconst makeStringsPatch = require('./patches/makeStringsPatch');\nconst makeImportPatch = require('./patches/makeImportPatch');\nconst makePackagePatch = require('./patches/makePackagePatch');\n\nmodule.exports = function unregisterNativeAndroidModule(\nname,\nandroidConfig,\nprojectConfig)\n{\n  const buildPatch = makeBuildPatch(name);\n  const strings = fs.readFileSync(projectConfig.stringsPath, 'utf8');\n  var params = {};\n\n  strings.replace(\n  /moduleConfig=\"true\" name=\"(\\w+)\">(.*)</g,\n  (_, param, value) => {\n    params[param.slice(toCamelCase(name).length + 1)] = value;\n  });\n\n\n  revokePatch(\n  projectConfig.settingsGradlePath,\n  makeSettingsPatch(name, androidConfig, projectConfig));\n\n\n  revokePatch(projectConfig.buildGradlePath, buildPatch);\n  revokePatch(projectConfig.stringsPath, makeStringsPatch(params, name));\n\n  revokePatch(\n  projectConfig.mainFilePath,\n  makePackagePatch(androidConfig.packageInstance, params, name));\n\n\n  revokePatch(\n  projectConfig.mainFilePath,\n  makeImportPatch(androidConfig.packageImportPath));\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVucmVnaXN0ZXJOYXRpdmVNb2R1bGUuanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwidG9DYW1lbENhc2UiLCJjYW1lbENhc2UiLCJyZXZva2VQYXRjaCIsIm1ha2VTZXR0aW5nc1BhdGNoIiwibWFrZUJ1aWxkUGF0Y2giLCJtYWtlU3RyaW5nc1BhdGNoIiwibWFrZUltcG9ydFBhdGNoIiwibWFrZVBhY2thZ2VQYXRjaCIsIm1vZHVsZSIsImV4cG9ydHMiLCJ1bnJlZ2lzdGVyTmF0aXZlQW5kcm9pZE1vZHVsZSIsIm5hbWUiLCJhbmRyb2lkQ29uZmlnIiwicHJvamVjdENvbmZpZyIsImJ1aWxkUGF0Y2giLCJzdHJpbmdzIiwicmVhZEZpbGVTeW5jIiwic3RyaW5nc1BhdGgiLCJwYXJhbXMiLCJyZXBsYWNlIiwiXyIsInBhcmFtIiwidmFsdWUiLCJzbGljZSIsImxlbmd0aCIsInNldHRpbmdzR3JhZGxlUGF0aCIsImJ1aWxkR3JhZGxlUGF0aCIsIm1haW5GaWxlUGF0aCIsInBhY2thZ2VJbnN0YW5jZSIsInBhY2thZ2VJbXBvcnRQYXRoIl0sIm1hcHBpbmdzIjoiYUFBQSxNQUFNQSxLQUFLQyxRQUFRLElBQVIsQ0FBWDtBQUNBLE1BQU1DLGNBQWNELFFBQVEsUUFBUixFQUFrQkUsU0FBdEM7O0FBRUEsTUFBTUMsY0FBY0gsUUFBUSx1QkFBUixDQUFwQjtBQUNBLE1BQU1JLG9CQUFvQkosUUFBUSw2QkFBUixDQUExQjtBQUNBLE1BQU1LLGlCQUFpQkwsUUFBUSwwQkFBUixDQUF2QjtBQUNBLE1BQU1NLG1CQUFtQk4sUUFBUSw0QkFBUixDQUF6QjtBQUNBLE1BQU1PLGtCQUFrQlAsUUFBUSwyQkFBUixDQUF4QjtBQUNBLE1BQU1RLG1CQUFtQlIsUUFBUSw0QkFBUixDQUF6Qjs7QUFFQVMsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyw2QkFBVDtBQUNmQyxJQURlO0FBRWZDLGFBRmU7QUFHZkMsYUFIZTtBQUlmO0FBQ0EsUUFBTUMsYUFBYVYsZUFBZU8sSUFBZixDQUFuQjtBQUNBLFFBQU1JLFVBQVVqQixHQUFHa0IsWUFBSCxDQUFnQkgsY0FBY0ksV0FBOUIsRUFBMkMsTUFBM0MsQ0FBaEI7QUFDQSxNQUFJQyxTQUFTLEVBQWI7O0FBRUFILFVBQVFJLE9BQVI7QUFDRSwyQ0FERjtBQUVFLEdBQUNDLENBQUQsRUFBSUMsS0FBSixFQUFXQyxLQUFYLEtBQXFCO0FBQ25CSixXQUFPRyxNQUFNRSxLQUFOLENBQVl2QixZQUFZVyxJQUFaLEVBQWtCYSxNQUFsQixHQUEyQixDQUF2QyxDQUFQLElBQW9ERixLQUFwRDtBQUNELEdBSkg7OztBQU9BcEI7QUFDRVcsZ0JBQWNZLGtCQURoQjtBQUVFdEIsb0JBQWtCUSxJQUFsQixFQUF3QkMsYUFBeEIsRUFBdUNDLGFBQXZDLENBRkY7OztBQUtBWCxjQUFZVyxjQUFjYSxlQUExQixFQUEyQ1osVUFBM0M7QUFDQVosY0FBWVcsY0FBY0ksV0FBMUIsRUFBdUNaLGlCQUFpQmEsTUFBakIsRUFBeUJQLElBQXpCLENBQXZDOztBQUVBVDtBQUNFVyxnQkFBY2MsWUFEaEI7QUFFRXBCLG1CQUFpQkssY0FBY2dCLGVBQS9CLEVBQWdEVixNQUFoRCxFQUF3RFAsSUFBeEQsQ0FGRjs7O0FBS0FUO0FBQ0VXLGdCQUFjYyxZQURoQjtBQUVFckIsa0JBQWdCTSxjQUFjaUIsaUJBQTlCLENBRkY7O0FBSUQsQ0FqQ0QiLCJmaWxlIjoidW5yZWdpc3Rlck5hdGl2ZU1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL2FuZHJvaWQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCB0b0NhbWVsQ2FzZSA9IHJlcXVpcmUoJ2xvZGFzaCcpLmNhbWVsQ2FzZTtcblxuY29uc3QgcmV2b2tlUGF0Y2ggPSByZXF1aXJlKCcuL3BhdGNoZXMvcmV2b2tlUGF0Y2gnKTtcbmNvbnN0IG1ha2VTZXR0aW5nc1BhdGNoID0gcmVxdWlyZSgnLi9wYXRjaGVzL21ha2VTZXR0aW5nc1BhdGNoJyk7XG5jb25zdCBtYWtlQnVpbGRQYXRjaCA9IHJlcXVpcmUoJy4vcGF0Y2hlcy9tYWtlQnVpbGRQYXRjaCcpO1xuY29uc3QgbWFrZVN0cmluZ3NQYXRjaCA9IHJlcXVpcmUoJy4vcGF0Y2hlcy9tYWtlU3RyaW5nc1BhdGNoJyk7XG5jb25zdCBtYWtlSW1wb3J0UGF0Y2ggPSByZXF1aXJlKCcuL3BhdGNoZXMvbWFrZUltcG9ydFBhdGNoJyk7XG5jb25zdCBtYWtlUGFja2FnZVBhdGNoID0gcmVxdWlyZSgnLi9wYXRjaGVzL21ha2VQYWNrYWdlUGF0Y2gnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB1bnJlZ2lzdGVyTmF0aXZlQW5kcm9pZE1vZHVsZShcbiAgbmFtZSxcbiAgYW5kcm9pZENvbmZpZyxcbiAgcHJvamVjdENvbmZpZ1xuKSB7XG4gIGNvbnN0IGJ1aWxkUGF0Y2ggPSBtYWtlQnVpbGRQYXRjaChuYW1lKTtcbiAgY29uc3Qgc3RyaW5ncyA9IGZzLnJlYWRGaWxlU3luYyhwcm9qZWN0Q29uZmlnLnN0cmluZ3NQYXRoLCAndXRmOCcpO1xuICB2YXIgcGFyYW1zID0ge307XG5cbiAgc3RyaW5ncy5yZXBsYWNlKFxuICAgIC9tb2R1bGVDb25maWc9XCJ0cnVlXCIgbmFtZT1cIihcXHcrKVwiPiguKik8L2csXG4gICAgKF8sIHBhcmFtLCB2YWx1ZSkgPT4ge1xuICAgICAgcGFyYW1zW3BhcmFtLnNsaWNlKHRvQ2FtZWxDYXNlKG5hbWUpLmxlbmd0aCArIDEpXSA9IHZhbHVlO1xuICAgIH1cbiAgKTtcblxuICByZXZva2VQYXRjaChcbiAgICBwcm9qZWN0Q29uZmlnLnNldHRpbmdzR3JhZGxlUGF0aCxcbiAgICBtYWtlU2V0dGluZ3NQYXRjaChuYW1lLCBhbmRyb2lkQ29uZmlnLCBwcm9qZWN0Q29uZmlnKVxuICApO1xuXG4gIHJldm9rZVBhdGNoKHByb2plY3RDb25maWcuYnVpbGRHcmFkbGVQYXRoLCBidWlsZFBhdGNoKTtcbiAgcmV2b2tlUGF0Y2gocHJvamVjdENvbmZpZy5zdHJpbmdzUGF0aCwgbWFrZVN0cmluZ3NQYXRjaChwYXJhbXMsIG5hbWUpKTtcblxuICByZXZva2VQYXRjaChcbiAgICBwcm9qZWN0Q29uZmlnLm1haW5GaWxlUGF0aCxcbiAgICBtYWtlUGFja2FnZVBhdGNoKGFuZHJvaWRDb25maWcucGFja2FnZUluc3RhbmNlLCBwYXJhbXMsIG5hbWUpXG4gICk7XG5cbiAgcmV2b2tlUGF0Y2goXG4gICAgcHJvamVjdENvbmZpZy5tYWluRmlsZVBhdGgsXG4gICAgbWFrZUltcG9ydFBhdGNoKGFuZHJvaWRDb25maWcucGFja2FnZUltcG9ydFBhdGgpXG4gICk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "unregisterNativeModule.js"
      ],
      "names": [
        "fs",
        "require",
        "toCamelCase",
        "camelCase",
        "revokePatch",
        "makeSettingsPatch",
        "makeBuildPatch",
        "makeStringsPatch",
        "makeImportPatch",
        "makePackagePatch",
        "module",
        "exports",
        "unregisterNativeAndroidModule",
        "name",
        "androidConfig",
        "projectConfig",
        "buildPatch",
        "strings",
        "readFileSync",
        "stringsPath",
        "params",
        "replace",
        "_",
        "param",
        "value",
        "slice",
        "length",
        "settingsGradlePath",
        "buildGradlePath",
        "mainFilePath",
        "packageInstance",
        "packageImportPath"
      ],
      "mappings": "aAAA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,cAAcD,QAAQ,QAAR,EAAkBE,SAAtC;;AAEA,MAAMC,cAAcH,QAAQ,uBAAR,CAApB;AACA,MAAMI,oBAAoBJ,QAAQ,6BAAR,CAA1B;AACA,MAAMK,iBAAiBL,QAAQ,0BAAR,CAAvB;AACA,MAAMM,mBAAmBN,QAAQ,4BAAR,CAAzB;AACA,MAAMO,kBAAkBP,QAAQ,2BAAR,CAAxB;AACA,MAAMQ,mBAAmBR,QAAQ,4BAAR,CAAzB;;AAEAS,OAAOC,OAAP,GAAiB,SAASC,6BAAT;AACfC,IADe;AAEfC,aAFe;AAGfC,aAHe;AAIf;AACA,QAAMC,aAAaV,eAAeO,IAAf,CAAnB;AACA,QAAMI,UAAUjB,GAAGkB,YAAH,CAAgBH,cAAcI,WAA9B,EAA2C,MAA3C,CAAhB;AACA,MAAIC,SAAS,EAAb;;AAEAH,UAAQI,OAAR;AACE,2CADF;AAEE,GAACC,CAAD,EAAIC,KAAJ,EAAWC,KAAX,KAAqB;AACnBJ,WAAOG,MAAME,KAAN,CAAYvB,YAAYW,IAAZ,EAAkBa,MAAlB,GAA2B,CAAvC,CAAP,IAAoDF,KAApD;AACD,GAJH;;;AAOApB;AACEW,gBAAcY,kBADhB;AAEEtB,oBAAkBQ,IAAlB,EAAwBC,aAAxB,EAAuCC,aAAvC,CAFF;;;AAKAX,cAAYW,cAAca,eAA1B,EAA2CZ,UAA3C;AACAZ,cAAYW,cAAcI,WAA1B,EAAuCZ,iBAAiBa,MAAjB,EAAyBP,IAAzB,CAAvC;;AAEAT;AACEW,gBAAcc,YADhB;AAEEpB,mBAAiBK,cAAcgB,eAA/B,EAAgDV,MAAhD,EAAwDP,IAAxD,CAFF;;;AAKAT;AACEW,gBAAcc,YADhB;AAEErB,kBAAgBM,cAAciB,iBAA9B,CAFF;;AAID,CAjCD",
      "file": "unregisterNativeModule.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android",
      "sourcesContent": [
        "const fs = require('fs');\nconst toCamelCase = require('lodash').camelCase;\n\nconst revokePatch = require('./patches/revokePatch');\nconst makeSettingsPatch = require('./patches/makeSettingsPatch');\nconst makeBuildPatch = require('./patches/makeBuildPatch');\nconst makeStringsPatch = require('./patches/makeStringsPatch');\nconst makeImportPatch = require('./patches/makeImportPatch');\nconst makePackagePatch = require('./patches/makePackagePatch');\n\nmodule.exports = function unregisterNativeAndroidModule(\n  name,\n  androidConfig,\n  projectConfig\n) {\n  const buildPatch = makeBuildPatch(name);\n  const strings = fs.readFileSync(projectConfig.stringsPath, 'utf8');\n  var params = {};\n\n  strings.replace(\n    /moduleConfig=\"true\" name=\"(\\w+)\">(.*)</g,\n    (_, param, value) => {\n      params[param.slice(toCamelCase(name).length + 1)] = value;\n    }\n  );\n\n  revokePatch(\n    projectConfig.settingsGradlePath,\n    makeSettingsPatch(name, androidConfig, projectConfig)\n  );\n\n  revokePatch(projectConfig.buildGradlePath, buildPatch);\n  revokePatch(projectConfig.stringsPath, makeStringsPatch(params, name));\n\n  revokePatch(\n    projectConfig.mainFilePath,\n    makePackagePatch(androidConfig.packageInstance, params, name)\n  );\n\n  revokePatch(\n    projectConfig.mainFilePath,\n    makeImportPatch(androidConfig.packageImportPath)\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/revokePatch.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/revokePatch.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches/revokePatch.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "revokePatch.js",
      "sourceFileName": "revokePatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "revokePatch"
    },
    "ignored": false,
    "code": "'use strict';const fs = require('fs');\n\nmodule.exports = function revokePatch(file, patch) {\n  fs.writeFileSync(file, fs.\n  readFileSync(file, 'utf8').\n  replace(patch.patch, ''));\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJldm9rZVBhdGNoLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXZva2VQYXRjaCIsImZpbGUiLCJwYXRjaCIsIndyaXRlRmlsZVN5bmMiLCJyZWFkRmlsZVN5bmMiLCJyZXBsYWNlIl0sIm1hcHBpbmdzIjoiYUFBQSxNQUFNQSxLQUFLQyxRQUFRLElBQVIsQ0FBWDs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxXQUFULENBQXFCQyxJQUFyQixFQUEyQkMsS0FBM0IsRUFBa0M7QUFDakROLEtBQUdPLGFBQUgsQ0FBaUJGLElBQWpCLEVBQXVCTDtBQUNwQlEsY0FEb0IsQ0FDUEgsSUFETyxFQUNELE1BREM7QUFFcEJJLFNBRm9CLENBRVpILE1BQU1BLEtBRk0sRUFFQyxFQUZELENBQXZCOztBQUlELENBTEQiLCJmaWxlIjoicmV2b2tlUGF0Y2guanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9hbmRyb2lkL3BhdGNoZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcmV2b2tlUGF0Y2goZmlsZSwgcGF0Y2gpIHtcbiAgZnMud3JpdGVGaWxlU3luYyhmaWxlLCBmc1xuICAgIC5yZWFkRmlsZVN5bmMoZmlsZSwgJ3V0ZjgnKVxuICAgIC5yZXBsYWNlKHBhdGNoLnBhdGNoLCAnJylcbiAgKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "revokePatch.js"
      ],
      "names": [
        "fs",
        "require",
        "module",
        "exports",
        "revokePatch",
        "file",
        "patch",
        "writeFileSync",
        "readFileSync",
        "replace"
      ],
      "mappings": "aAAA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,KAA3B,EAAkC;AACjDN,KAAGO,aAAH,CAAiBF,IAAjB,EAAuBL;AACpBQ,cADoB,CACPH,IADO,EACD,MADC;AAEpBI,SAFoB,CAEZH,MAAMA,KAFM,EAEC,EAFD,CAAvB;;AAID,CALD",
      "file": "revokePatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/patches",
      "sourcesContent": [
        "const fs = require('fs');\n\nmodule.exports = function revokePatch(file, patch) {\n  fs.writeFileSync(file, fs\n    .readFileSync(file, 'utf8')\n    .replace(patch.patch, '')\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/unregisterNativeModule.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/unregisterNativeModule.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/unregisterNativeModule.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "unregisterNativeModule.js",
      "sourceFileName": "unregisterNativeModule.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "unregisterNativeModule"
    },
    "ignored": false,
    "code": "'use strict';const fs = require('fs');\nconst toCamelCase = require('lodash').camelCase;\n\nconst revokePatch = require('./patches/revokePatch');\nconst makeProjectPatch = require('./patches/makeProjectPatch');\nconst makeSolutionPatch = require('./patches/makeSolutionPatch');\nconst makeUsingPatch = require('./patches/makeUsingPatch');\nconst makePackagePatch = require('./patches/makePackagePatch');\n\nmodule.exports = function unregisterNativeWindowsModule(\nname,\nwindowsConfig,\nprojectConfig)\n{\n  revokePatch(projectConfig.projectPath, makeProjectPatch(windowsConfig));\n  revokePatch(projectConfig.solutionPath, makeSolutionPatch(windowsConfig));\n\n  revokePatch(\n  projectConfig.mainPage,\n  makePackagePatch(windowsConfig.packageInstance, {}, name));\n\n\n  revokePatch(\n  projectConfig.mainPage,\n  makeUsingPatch(windowsConfig.packageUsingPath));\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVucmVnaXN0ZXJOYXRpdmVNb2R1bGUuanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwidG9DYW1lbENhc2UiLCJjYW1lbENhc2UiLCJyZXZva2VQYXRjaCIsIm1ha2VQcm9qZWN0UGF0Y2giLCJtYWtlU29sdXRpb25QYXRjaCIsIm1ha2VVc2luZ1BhdGNoIiwibWFrZVBhY2thZ2VQYXRjaCIsIm1vZHVsZSIsImV4cG9ydHMiLCJ1bnJlZ2lzdGVyTmF0aXZlV2luZG93c01vZHVsZSIsIm5hbWUiLCJ3aW5kb3dzQ29uZmlnIiwicHJvamVjdENvbmZpZyIsInByb2plY3RQYXRoIiwic29sdXRpb25QYXRoIiwibWFpblBhZ2UiLCJwYWNrYWdlSW5zdGFuY2UiLCJwYWNrYWdlVXNpbmdQYXRoIl0sIm1hcHBpbmdzIjoiYUFBQSxNQUFNQSxLQUFLQyxRQUFRLElBQVIsQ0FBWDtBQUNBLE1BQU1DLGNBQWNELFFBQVEsUUFBUixFQUFrQkUsU0FBdEM7O0FBRUEsTUFBTUMsY0FBY0gsUUFBUSx1QkFBUixDQUFwQjtBQUNBLE1BQU1JLG1CQUFtQkosUUFBUSw0QkFBUixDQUF6QjtBQUNBLE1BQU1LLG9CQUFvQkwsUUFBUSw2QkFBUixDQUExQjtBQUNBLE1BQU1NLGlCQUFpQk4sUUFBUSwwQkFBUixDQUF2QjtBQUNBLE1BQU1PLG1CQUFtQlAsUUFBUSw0QkFBUixDQUF6Qjs7QUFFQVEsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyw2QkFBVDtBQUNmQyxJQURlO0FBRWZDLGFBRmU7QUFHZkMsYUFIZTtBQUlmO0FBQ0FWLGNBQVlVLGNBQWNDLFdBQTFCLEVBQXVDVixpQkFBaUJRLGFBQWpCLENBQXZDO0FBQ0FULGNBQVlVLGNBQWNFLFlBQTFCLEVBQXdDVixrQkFBa0JPLGFBQWxCLENBQXhDOztBQUVBVDtBQUNFVSxnQkFBY0csUUFEaEI7QUFFRVQsbUJBQWlCSyxjQUFjSyxlQUEvQixFQUFnRCxFQUFoRCxFQUFvRE4sSUFBcEQsQ0FGRjs7O0FBS0FSO0FBQ0VVLGdCQUFjRyxRQURoQjtBQUVFVixpQkFBZU0sY0FBY00sZ0JBQTdCLENBRkY7O0FBSUQsQ0FqQkQiLCJmaWxlIjoidW5yZWdpc3Rlck5hdGl2ZU1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL3dpbmRvd3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCB0b0NhbWVsQ2FzZSA9IHJlcXVpcmUoJ2xvZGFzaCcpLmNhbWVsQ2FzZTtcblxuY29uc3QgcmV2b2tlUGF0Y2ggPSByZXF1aXJlKCcuL3BhdGNoZXMvcmV2b2tlUGF0Y2gnKTtcbmNvbnN0IG1ha2VQcm9qZWN0UGF0Y2ggPSByZXF1aXJlKCcuL3BhdGNoZXMvbWFrZVByb2plY3RQYXRjaCcpO1xuY29uc3QgbWFrZVNvbHV0aW9uUGF0Y2ggPSByZXF1aXJlKCcuL3BhdGNoZXMvbWFrZVNvbHV0aW9uUGF0Y2gnKTtcbmNvbnN0IG1ha2VVc2luZ1BhdGNoID0gcmVxdWlyZSgnLi9wYXRjaGVzL21ha2VVc2luZ1BhdGNoJyk7XG5jb25zdCBtYWtlUGFja2FnZVBhdGNoID0gcmVxdWlyZSgnLi9wYXRjaGVzL21ha2VQYWNrYWdlUGF0Y2gnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB1bnJlZ2lzdGVyTmF0aXZlV2luZG93c01vZHVsZShcbiAgbmFtZSxcbiAgd2luZG93c0NvbmZpZyxcbiAgcHJvamVjdENvbmZpZ1xuKSB7XG4gIHJldm9rZVBhdGNoKHByb2plY3RDb25maWcucHJvamVjdFBhdGgsIG1ha2VQcm9qZWN0UGF0Y2god2luZG93c0NvbmZpZykpO1xuICByZXZva2VQYXRjaChwcm9qZWN0Q29uZmlnLnNvbHV0aW9uUGF0aCwgbWFrZVNvbHV0aW9uUGF0Y2god2luZG93c0NvbmZpZykpO1xuXG4gIHJldm9rZVBhdGNoKFxuICAgIHByb2plY3RDb25maWcubWFpblBhZ2UsXG4gICAgbWFrZVBhY2thZ2VQYXRjaCh3aW5kb3dzQ29uZmlnLnBhY2thZ2VJbnN0YW5jZSwge30sIG5hbWUpXG4gICk7XG5cbiAgcmV2b2tlUGF0Y2goXG4gICAgcHJvamVjdENvbmZpZy5tYWluUGFnZSxcbiAgICBtYWtlVXNpbmdQYXRjaCh3aW5kb3dzQ29uZmlnLnBhY2thZ2VVc2luZ1BhdGgpXG4gICk7XG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "unregisterNativeModule.js"
      ],
      "names": [
        "fs",
        "require",
        "toCamelCase",
        "camelCase",
        "revokePatch",
        "makeProjectPatch",
        "makeSolutionPatch",
        "makeUsingPatch",
        "makePackagePatch",
        "module",
        "exports",
        "unregisterNativeWindowsModule",
        "name",
        "windowsConfig",
        "projectConfig",
        "projectPath",
        "solutionPath",
        "mainPage",
        "packageInstance",
        "packageUsingPath"
      ],
      "mappings": "aAAA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,cAAcD,QAAQ,QAAR,EAAkBE,SAAtC;;AAEA,MAAMC,cAAcH,QAAQ,uBAAR,CAApB;AACA,MAAMI,mBAAmBJ,QAAQ,4BAAR,CAAzB;AACA,MAAMK,oBAAoBL,QAAQ,6BAAR,CAA1B;AACA,MAAMM,iBAAiBN,QAAQ,0BAAR,CAAvB;AACA,MAAMO,mBAAmBP,QAAQ,4BAAR,CAAzB;;AAEAQ,OAAOC,OAAP,GAAiB,SAASC,6BAAT;AACfC,IADe;AAEfC,aAFe;AAGfC,aAHe;AAIf;AACAV,cAAYU,cAAcC,WAA1B,EAAuCV,iBAAiBQ,aAAjB,CAAvC;AACAT,cAAYU,cAAcE,YAA1B,EAAwCV,kBAAkBO,aAAlB,CAAxC;;AAEAT;AACEU,gBAAcG,QADhB;AAEET,mBAAiBK,cAAcK,eAA/B,EAAgD,EAAhD,EAAoDN,IAApD,CAFF;;;AAKAR;AACEU,gBAAcG,QADhB;AAEEV,iBAAeM,cAAcM,gBAA7B,CAFF;;AAID,CAjBD",
      "file": "unregisterNativeModule.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows",
      "sourcesContent": [
        "const fs = require('fs');\nconst toCamelCase = require('lodash').camelCase;\n\nconst revokePatch = require('./patches/revokePatch');\nconst makeProjectPatch = require('./patches/makeProjectPatch');\nconst makeSolutionPatch = require('./patches/makeSolutionPatch');\nconst makeUsingPatch = require('./patches/makeUsingPatch');\nconst makePackagePatch = require('./patches/makePackagePatch');\n\nmodule.exports = function unregisterNativeWindowsModule(\n  name,\n  windowsConfig,\n  projectConfig\n) {\n  revokePatch(projectConfig.projectPath, makeProjectPatch(windowsConfig));\n  revokePatch(projectConfig.solutionPath, makeSolutionPatch(windowsConfig));\n\n  revokePatch(\n    projectConfig.mainPage,\n    makePackagePatch(windowsConfig.packageInstance, {}, name)\n  );\n\n  revokePatch(\n    projectConfig.mainPage,\n    makeUsingPatch(windowsConfig.packageUsingPath)\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/revokePatch.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/revokePatch.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches/revokePatch.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "revokePatch.js",
      "sourceFileName": "revokePatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "revokePatch"
    },
    "ignored": false,
    "code": "'use strict';const fs = require('fs');\n\nmodule.exports = function revokePatch(file, patch) {\n  const unpatch = patch.unpatch || patch.patch;\n  fs.writeFileSync(file, fs.\n  readFileSync(file, 'utf8').\n  replace(unpatch, ''));\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJldm9rZVBhdGNoLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXZva2VQYXRjaCIsImZpbGUiLCJwYXRjaCIsInVucGF0Y2giLCJ3cml0ZUZpbGVTeW5jIiwicmVhZEZpbGVTeW5jIiwicmVwbGFjZSJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsS0FBS0MsUUFBUSxJQUFSLENBQVg7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsV0FBVCxDQUFxQkMsSUFBckIsRUFBMkJDLEtBQTNCLEVBQWtDO0FBQ2pELFFBQU1DLFVBQVVELE1BQU1DLE9BQU4sSUFBaUJELE1BQU1BLEtBQXZDO0FBQ0FOLEtBQUdRLGFBQUgsQ0FBaUJILElBQWpCLEVBQXVCTDtBQUNwQlMsY0FEb0IsQ0FDUEosSUFETyxFQUNELE1BREM7QUFFcEJLLFNBRm9CLENBRVpILE9BRlksRUFFSCxFQUZHLENBQXZCOztBQUlELENBTkQiLCJmaWxlIjoicmV2b2tlUGF0Y2guanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay93aW5kb3dzL3BhdGNoZXMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcmV2b2tlUGF0Y2goZmlsZSwgcGF0Y2gpIHtcbiAgY29uc3QgdW5wYXRjaCA9IHBhdGNoLnVucGF0Y2ggfHwgcGF0Y2gucGF0Y2g7XG4gIGZzLndyaXRlRmlsZVN5bmMoZmlsZSwgZnNcbiAgICAucmVhZEZpbGVTeW5jKGZpbGUsICd1dGY4JylcbiAgICAucmVwbGFjZSh1bnBhdGNoLCAnJylcbiAgKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "revokePatch.js"
      ],
      "names": [
        "fs",
        "require",
        "module",
        "exports",
        "revokePatch",
        "file",
        "patch",
        "unpatch",
        "writeFileSync",
        "readFileSync",
        "replace"
      ],
      "mappings": "aAAA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;;AAEAC,OAAOC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,KAA3B,EAAkC;AACjD,QAAMC,UAAUD,MAAMC,OAAN,IAAiBD,MAAMA,KAAvC;AACAN,KAAGQ,aAAH,CAAiBH,IAAjB,EAAuBL;AACpBS,cADoB,CACPJ,IADO,EACD,MADC;AAEpBK,SAFoB,CAEZH,OAFY,EAEH,EAFG,CAAvB;;AAID,CAND",
      "file": "revokePatch.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/windows/patches",
      "sourcesContent": [
        "const fs = require('fs');\n\nmodule.exports = function revokePatch(file, patch) {\n  const unpatch = patch.unpatch || patch.patch;\n  fs.writeFileSync(file, fs\n    .readFileSync(file, 'utf8')\n    .replace(unpatch, '')\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/unregisterNativeModule.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/unregisterNativeModule.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/unregisterNativeModule.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "unregisterNativeModule.js",
      "sourceFileName": "unregisterNativeModule.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "unregisterNativeModule"
    },
    "ignored": false,
    "code": "'use strict';const xcode = require('xcode');\nconst path = require('path');\nconst fs = require('fs');\nconst difference = require('lodash').difference;\nconst isEmpty = require('lodash').isEmpty;\n\nconst getGroup = require('./getGroup');\nconst getProducts = require('./getProducts');\nconst getHeadersInFolder = require('./getHeadersInFolder');\nconst getHeaderSearchPath = require('./getHeaderSearchPath');\nconst removeProjectFromProject = require('./removeProjectFromProject');\nconst removeProjectFromLibraries = require('./removeProjectFromLibraries');\nconst removeFromStaticLibraries = require('./removeFromStaticLibraries');\nconst removeFromHeaderSearchPaths = require('./removeFromHeaderSearchPaths');\nconst removeSharedLibraries = require('./removeSharedLibraries');\n\n/**\n                                                                   * Unregister native module IOS\n                                                                   *\n                                                                   * If library is already unlinked, this action is a no-op.\n                                                                   */\nmodule.exports = function unregisterNativeModule(dependencyConfig, projectConfig, iOSDependencies) {\n  const project = xcode.project(projectConfig.pbxprojPath).parseSync();\n  const dependencyProject = xcode.project(dependencyConfig.pbxprojPath).parseSync();\n\n  const libraries = getGroup(project, projectConfig.libraryFolder);\n\n  const file = removeProjectFromProject(\n  project,\n  path.relative(projectConfig.sourceDir, dependencyConfig.projectPath));\n\n\n  removeProjectFromLibraries(libraries, file);\n\n  getProducts(dependencyProject).forEach(product => {\n    removeFromStaticLibraries(project, product, {\n      target: project.getFirstTarget().uuid });\n\n  });\n\n  const sharedLibraries = difference(\n  dependencyConfig.sharedLibraries,\n  iOSDependencies.reduce(\n  (libs, dependency) => libs.concat(dependency.sharedLibraries),\n  projectConfig.sharedLibraries));\n\n\n\n  removeSharedLibraries(project, sharedLibraries);\n\n  const headers = getHeadersInFolder(dependencyConfig.folder);\n  if (!isEmpty(headers)) {\n    removeFromHeaderSearchPaths(\n    project,\n    getHeaderSearchPath(projectConfig.sourceDir, headers));\n\n  }\n\n  fs.writeFileSync(\n  projectConfig.pbxprojPath,\n  project.writeSync());\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVucmVnaXN0ZXJOYXRpdmVNb2R1bGUuanMiXSwibmFtZXMiOlsieGNvZGUiLCJyZXF1aXJlIiwicGF0aCIsImZzIiwiZGlmZmVyZW5jZSIsImlzRW1wdHkiLCJnZXRHcm91cCIsImdldFByb2R1Y3RzIiwiZ2V0SGVhZGVyc0luRm9sZGVyIiwiZ2V0SGVhZGVyU2VhcmNoUGF0aCIsInJlbW92ZVByb2plY3RGcm9tUHJvamVjdCIsInJlbW92ZVByb2plY3RGcm9tTGlicmFyaWVzIiwicmVtb3ZlRnJvbVN0YXRpY0xpYnJhcmllcyIsInJlbW92ZUZyb21IZWFkZXJTZWFyY2hQYXRocyIsInJlbW92ZVNoYXJlZExpYnJhcmllcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJ1bnJlZ2lzdGVyTmF0aXZlTW9kdWxlIiwiZGVwZW5kZW5jeUNvbmZpZyIsInByb2plY3RDb25maWciLCJpT1NEZXBlbmRlbmNpZXMiLCJwcm9qZWN0IiwicGJ4cHJvalBhdGgiLCJwYXJzZVN5bmMiLCJkZXBlbmRlbmN5UHJvamVjdCIsImxpYnJhcmllcyIsImxpYnJhcnlGb2xkZXIiLCJmaWxlIiwicmVsYXRpdmUiLCJzb3VyY2VEaXIiLCJwcm9qZWN0UGF0aCIsImZvckVhY2giLCJwcm9kdWN0IiwidGFyZ2V0IiwiZ2V0Rmlyc3RUYXJnZXQiLCJ1dWlkIiwic2hhcmVkTGlicmFyaWVzIiwicmVkdWNlIiwibGlicyIsImRlcGVuZGVuY3kiLCJjb25jYXQiLCJoZWFkZXJzIiwiZm9sZGVyIiwid3JpdGVGaWxlU3luYyIsIndyaXRlU3luYyJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsUUFBUUMsUUFBUSxPQUFSLENBQWQ7QUFDQSxNQUFNQyxPQUFPRCxRQUFRLE1BQVIsQ0FBYjtBQUNBLE1BQU1FLEtBQUtGLFFBQVEsSUFBUixDQUFYO0FBQ0EsTUFBTUcsYUFBYUgsUUFBUSxRQUFSLEVBQWtCRyxVQUFyQztBQUNBLE1BQU1DLFVBQVVKLFFBQVEsUUFBUixFQUFrQkksT0FBbEM7O0FBRUEsTUFBTUMsV0FBV0wsUUFBUSxZQUFSLENBQWpCO0FBQ0EsTUFBTU0sY0FBY04sUUFBUSxlQUFSLENBQXBCO0FBQ0EsTUFBTU8scUJBQXFCUCxRQUFRLHNCQUFSLENBQTNCO0FBQ0EsTUFBTVEsc0JBQXNCUixRQUFRLHVCQUFSLENBQTVCO0FBQ0EsTUFBTVMsMkJBQTJCVCxRQUFRLDRCQUFSLENBQWpDO0FBQ0EsTUFBTVUsNkJBQTZCVixRQUFRLDhCQUFSLENBQW5DO0FBQ0EsTUFBTVcsNEJBQTRCWCxRQUFRLDZCQUFSLENBQWxDO0FBQ0EsTUFBTVksOEJBQThCWixRQUFRLCtCQUFSLENBQXBDO0FBQ0EsTUFBTWEsd0JBQXdCYixRQUFRLHlCQUFSLENBQTlCOztBQUVBOzs7OztBQUtBYyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLHNCQUFULENBQWdDQyxnQkFBaEMsRUFBa0RDLGFBQWxELEVBQWlFQyxlQUFqRSxFQUFrRjtBQUNqRyxRQUFNQyxVQUFVckIsTUFBTXFCLE9BQU4sQ0FBY0YsY0FBY0csV0FBNUIsRUFBeUNDLFNBQXpDLEVBQWhCO0FBQ0EsUUFBTUMsb0JBQW9CeEIsTUFBTXFCLE9BQU4sQ0FBY0gsaUJBQWlCSSxXQUEvQixFQUE0Q0MsU0FBNUMsRUFBMUI7O0FBRUEsUUFBTUUsWUFBWW5CLFNBQVNlLE9BQVQsRUFBa0JGLGNBQWNPLGFBQWhDLENBQWxCOztBQUVBLFFBQU1DLE9BQU9qQjtBQUNYVyxTQURXO0FBRVhuQixPQUFLMEIsUUFBTCxDQUFjVCxjQUFjVSxTQUE1QixFQUF1Q1gsaUJBQWlCWSxXQUF4RCxDQUZXLENBQWI7OztBQUtBbkIsNkJBQTJCYyxTQUEzQixFQUFzQ0UsSUFBdEM7O0FBRUFwQixjQUFZaUIsaUJBQVosRUFBK0JPLE9BQS9CLENBQXVDQyxXQUFXO0FBQ2hEcEIsOEJBQTBCUyxPQUExQixFQUFtQ1csT0FBbkMsRUFBNEM7QUFDMUNDLGNBQVFaLFFBQVFhLGNBQVIsR0FBeUJDLElBRFMsRUFBNUM7O0FBR0QsR0FKRDs7QUFNQSxRQUFNQyxrQkFBa0JoQztBQUN0QmMsbUJBQWlCa0IsZUFESztBQUV0QmhCLGtCQUFnQmlCLE1BQWhCO0FBQ0UsR0FBQ0MsSUFBRCxFQUFPQyxVQUFQLEtBQXNCRCxLQUFLRSxNQUFMLENBQVlELFdBQVdILGVBQXZCLENBRHhCO0FBRUVqQixnQkFBY2lCLGVBRmhCLENBRnNCLENBQXhCOzs7O0FBUUF0Qix3QkFBc0JPLE9BQXRCLEVBQStCZSxlQUEvQjs7QUFFQSxRQUFNSyxVQUFVakMsbUJBQW1CVSxpQkFBaUJ3QixNQUFwQyxDQUFoQjtBQUNBLE1BQUksQ0FBQ3JDLFFBQVFvQyxPQUFSLENBQUwsRUFBdUI7QUFDckI1QjtBQUNFUSxXQURGO0FBRUVaLHdCQUFvQlUsY0FBY1UsU0FBbEMsRUFBNkNZLE9BQTdDLENBRkY7O0FBSUQ7O0FBRUR0QyxLQUFHd0MsYUFBSDtBQUNFeEIsZ0JBQWNHLFdBRGhCO0FBRUVELFVBQVF1QixTQUFSLEVBRkY7O0FBSUQsQ0F6Q0QiLCJmaWxlIjoidW5yZWdpc3Rlck5hdGl2ZU1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL2lvcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHhjb2RlID0gcmVxdWlyZSgneGNvZGUnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBkaWZmZXJlbmNlID0gcmVxdWlyZSgnbG9kYXNoJykuZGlmZmVyZW5jZTtcbmNvbnN0IGlzRW1wdHkgPSByZXF1aXJlKCdsb2Rhc2gnKS5pc0VtcHR5O1xuXG5jb25zdCBnZXRHcm91cCA9IHJlcXVpcmUoJy4vZ2V0R3JvdXAnKTtcbmNvbnN0IGdldFByb2R1Y3RzID0gcmVxdWlyZSgnLi9nZXRQcm9kdWN0cycpO1xuY29uc3QgZ2V0SGVhZGVyc0luRm9sZGVyID0gcmVxdWlyZSgnLi9nZXRIZWFkZXJzSW5Gb2xkZXInKTtcbmNvbnN0IGdldEhlYWRlclNlYXJjaFBhdGggPSByZXF1aXJlKCcuL2dldEhlYWRlclNlYXJjaFBhdGgnKTtcbmNvbnN0IHJlbW92ZVByb2plY3RGcm9tUHJvamVjdCA9IHJlcXVpcmUoJy4vcmVtb3ZlUHJvamVjdEZyb21Qcm9qZWN0Jyk7XG5jb25zdCByZW1vdmVQcm9qZWN0RnJvbUxpYnJhcmllcyA9IHJlcXVpcmUoJy4vcmVtb3ZlUHJvamVjdEZyb21MaWJyYXJpZXMnKTtcbmNvbnN0IHJlbW92ZUZyb21TdGF0aWNMaWJyYXJpZXMgPSByZXF1aXJlKCcuL3JlbW92ZUZyb21TdGF0aWNMaWJyYXJpZXMnKTtcbmNvbnN0IHJlbW92ZUZyb21IZWFkZXJTZWFyY2hQYXRocyA9IHJlcXVpcmUoJy4vcmVtb3ZlRnJvbUhlYWRlclNlYXJjaFBhdGhzJyk7XG5jb25zdCByZW1vdmVTaGFyZWRMaWJyYXJpZXMgPSByZXF1aXJlKCcuL3JlbW92ZVNoYXJlZExpYnJhcmllcycpO1xuXG4vKipcbiAqIFVucmVnaXN0ZXIgbmF0aXZlIG1vZHVsZSBJT1NcbiAqXG4gKiBJZiBsaWJyYXJ5IGlzIGFscmVhZHkgdW5saW5rZWQsIHRoaXMgYWN0aW9uIGlzIGEgbm8tb3AuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gdW5yZWdpc3Rlck5hdGl2ZU1vZHVsZShkZXBlbmRlbmN5Q29uZmlnLCBwcm9qZWN0Q29uZmlnLCBpT1NEZXBlbmRlbmNpZXMpIHtcbiAgY29uc3QgcHJvamVjdCA9IHhjb2RlLnByb2plY3QocHJvamVjdENvbmZpZy5wYnhwcm9qUGF0aCkucGFyc2VTeW5jKCk7XG4gIGNvbnN0IGRlcGVuZGVuY3lQcm9qZWN0ID0geGNvZGUucHJvamVjdChkZXBlbmRlbmN5Q29uZmlnLnBieHByb2pQYXRoKS5wYXJzZVN5bmMoKTtcblxuICBjb25zdCBsaWJyYXJpZXMgPSBnZXRHcm91cChwcm9qZWN0LCBwcm9qZWN0Q29uZmlnLmxpYnJhcnlGb2xkZXIpO1xuXG4gIGNvbnN0IGZpbGUgPSByZW1vdmVQcm9qZWN0RnJvbVByb2plY3QoXG4gICAgcHJvamVjdCxcbiAgICBwYXRoLnJlbGF0aXZlKHByb2plY3RDb25maWcuc291cmNlRGlyLCBkZXBlbmRlbmN5Q29uZmlnLnByb2plY3RQYXRoKVxuICApO1xuXG4gIHJlbW92ZVByb2plY3RGcm9tTGlicmFyaWVzKGxpYnJhcmllcywgZmlsZSk7XG5cbiAgZ2V0UHJvZHVjdHMoZGVwZW5kZW5jeVByb2plY3QpLmZvckVhY2gocHJvZHVjdCA9PiB7XG4gICAgcmVtb3ZlRnJvbVN0YXRpY0xpYnJhcmllcyhwcm9qZWN0LCBwcm9kdWN0LCB7XG4gICAgICB0YXJnZXQ6IHByb2plY3QuZ2V0Rmlyc3RUYXJnZXQoKS51dWlkLFxuICAgIH0pO1xuICB9KTtcblxuICBjb25zdCBzaGFyZWRMaWJyYXJpZXMgPSBkaWZmZXJlbmNlKFxuICAgIGRlcGVuZGVuY3lDb25maWcuc2hhcmVkTGlicmFyaWVzLFxuICAgIGlPU0RlcGVuZGVuY2llcy5yZWR1Y2UoXG4gICAgICAobGlicywgZGVwZW5kZW5jeSkgPT4gbGlicy5jb25jYXQoZGVwZW5kZW5jeS5zaGFyZWRMaWJyYXJpZXMpLFxuICAgICAgcHJvamVjdENvbmZpZy5zaGFyZWRMaWJyYXJpZXNcbiAgICApXG4gICk7XG5cbiAgcmVtb3ZlU2hhcmVkTGlicmFyaWVzKHByb2plY3QsIHNoYXJlZExpYnJhcmllcyk7XG5cbiAgY29uc3QgaGVhZGVycyA9IGdldEhlYWRlcnNJbkZvbGRlcihkZXBlbmRlbmN5Q29uZmlnLmZvbGRlcik7XG4gIGlmICghaXNFbXB0eShoZWFkZXJzKSkge1xuICAgIHJlbW92ZUZyb21IZWFkZXJTZWFyY2hQYXRocyhcbiAgICAgIHByb2plY3QsXG4gICAgICBnZXRIZWFkZXJTZWFyY2hQYXRoKHByb2plY3RDb25maWcuc291cmNlRGlyLCBoZWFkZXJzKVxuICAgICk7XG4gIH1cblxuICBmcy53cml0ZUZpbGVTeW5jKFxuICAgIHByb2plY3RDb25maWcucGJ4cHJvalBhdGgsXG4gICAgcHJvamVjdC53cml0ZVN5bmMoKVxuICApO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "unregisterNativeModule.js"
      ],
      "names": [
        "xcode",
        "require",
        "path",
        "fs",
        "difference",
        "isEmpty",
        "getGroup",
        "getProducts",
        "getHeadersInFolder",
        "getHeaderSearchPath",
        "removeProjectFromProject",
        "removeProjectFromLibraries",
        "removeFromStaticLibraries",
        "removeFromHeaderSearchPaths",
        "removeSharedLibraries",
        "module",
        "exports",
        "unregisterNativeModule",
        "dependencyConfig",
        "projectConfig",
        "iOSDependencies",
        "project",
        "pbxprojPath",
        "parseSync",
        "dependencyProject",
        "libraries",
        "libraryFolder",
        "file",
        "relative",
        "sourceDir",
        "projectPath",
        "forEach",
        "product",
        "target",
        "getFirstTarget",
        "uuid",
        "sharedLibraries",
        "reduce",
        "libs",
        "dependency",
        "concat",
        "headers",
        "folder",
        "writeFileSync",
        "writeSync"
      ],
      "mappings": "aAAA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,KAAKF,QAAQ,IAAR,CAAX;AACA,MAAMG,aAAaH,QAAQ,QAAR,EAAkBG,UAArC;AACA,MAAMC,UAAUJ,QAAQ,QAAR,EAAkBI,OAAlC;;AAEA,MAAMC,WAAWL,QAAQ,YAAR,CAAjB;AACA,MAAMM,cAAcN,QAAQ,eAAR,CAApB;AACA,MAAMO,qBAAqBP,QAAQ,sBAAR,CAA3B;AACA,MAAMQ,sBAAsBR,QAAQ,uBAAR,CAA5B;AACA,MAAMS,2BAA2BT,QAAQ,4BAAR,CAAjC;AACA,MAAMU,6BAA6BV,QAAQ,8BAAR,CAAnC;AACA,MAAMW,4BAA4BX,QAAQ,6BAAR,CAAlC;AACA,MAAMY,8BAA8BZ,QAAQ,+BAAR,CAApC;AACA,MAAMa,wBAAwBb,QAAQ,yBAAR,CAA9B;;AAEA;;;;;AAKAc,OAAOC,OAAP,GAAiB,SAASC,sBAAT,CAAgCC,gBAAhC,EAAkDC,aAAlD,EAAiEC,eAAjE,EAAkF;AACjG,QAAMC,UAAUrB,MAAMqB,OAAN,CAAcF,cAAcG,WAA5B,EAAyCC,SAAzC,EAAhB;AACA,QAAMC,oBAAoBxB,MAAMqB,OAAN,CAAcH,iBAAiBI,WAA/B,EAA4CC,SAA5C,EAA1B;;AAEA,QAAME,YAAYnB,SAASe,OAAT,EAAkBF,cAAcO,aAAhC,CAAlB;;AAEA,QAAMC,OAAOjB;AACXW,SADW;AAEXnB,OAAK0B,QAAL,CAAcT,cAAcU,SAA5B,EAAuCX,iBAAiBY,WAAxD,CAFW,CAAb;;;AAKAnB,6BAA2Bc,SAA3B,EAAsCE,IAAtC;;AAEApB,cAAYiB,iBAAZ,EAA+BO,OAA/B,CAAuCC,WAAW;AAChDpB,8BAA0BS,OAA1B,EAAmCW,OAAnC,EAA4C;AAC1CC,cAAQZ,QAAQa,cAAR,GAAyBC,IADS,EAA5C;;AAGD,GAJD;;AAMA,QAAMC,kBAAkBhC;AACtBc,mBAAiBkB,eADK;AAEtBhB,kBAAgBiB,MAAhB;AACE,GAACC,IAAD,EAAOC,UAAP,KAAsBD,KAAKE,MAAL,CAAYD,WAAWH,eAAvB,CADxB;AAEEjB,gBAAciB,eAFhB,CAFsB,CAAxB;;;;AAQAtB,wBAAsBO,OAAtB,EAA+Be,eAA/B;;AAEA,QAAMK,UAAUjC,mBAAmBU,iBAAiBwB,MAApC,CAAhB;AACA,MAAI,CAACrC,QAAQoC,OAAR,CAAL,EAAuB;AACrB5B;AACEQ,WADF;AAEEZ,wBAAoBU,cAAcU,SAAlC,EAA6CY,OAA7C,CAFF;;AAID;;AAEDtC,KAAGwC,aAAH;AACExB,gBAAcG,WADhB;AAEED,UAAQuB,SAAR,EAFF;;AAID,CAzCD",
      "file": "unregisterNativeModule.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const xcode = require('xcode');\nconst path = require('path');\nconst fs = require('fs');\nconst difference = require('lodash').difference;\nconst isEmpty = require('lodash').isEmpty;\n\nconst getGroup = require('./getGroup');\nconst getProducts = require('./getProducts');\nconst getHeadersInFolder = require('./getHeadersInFolder');\nconst getHeaderSearchPath = require('./getHeaderSearchPath');\nconst removeProjectFromProject = require('./removeProjectFromProject');\nconst removeProjectFromLibraries = require('./removeProjectFromLibraries');\nconst removeFromStaticLibraries = require('./removeFromStaticLibraries');\nconst removeFromHeaderSearchPaths = require('./removeFromHeaderSearchPaths');\nconst removeSharedLibraries = require('./removeSharedLibraries');\n\n/**\n * Unregister native module IOS\n *\n * If library is already unlinked, this action is a no-op.\n */\nmodule.exports = function unregisterNativeModule(dependencyConfig, projectConfig, iOSDependencies) {\n  const project = xcode.project(projectConfig.pbxprojPath).parseSync();\n  const dependencyProject = xcode.project(dependencyConfig.pbxprojPath).parseSync();\n\n  const libraries = getGroup(project, projectConfig.libraryFolder);\n\n  const file = removeProjectFromProject(\n    project,\n    path.relative(projectConfig.sourceDir, dependencyConfig.projectPath)\n  );\n\n  removeProjectFromLibraries(libraries, file);\n\n  getProducts(dependencyProject).forEach(product => {\n    removeFromStaticLibraries(project, product, {\n      target: project.getFirstTarget().uuid,\n    });\n  });\n\n  const sharedLibraries = difference(\n    dependencyConfig.sharedLibraries,\n    iOSDependencies.reduce(\n      (libs, dependency) => libs.concat(dependency.sharedLibraries),\n      projectConfig.sharedLibraries\n    )\n  );\n\n  removeSharedLibraries(project, sharedLibraries);\n\n  const headers = getHeadersInFolder(dependencyConfig.folder);\n  if (!isEmpty(headers)) {\n    removeFromHeaderSearchPaths(\n      project,\n      getHeaderSearchPath(projectConfig.sourceDir, headers)\n    );\n  }\n\n  fs.writeFileSync(\n    projectConfig.pbxprojPath,\n    project.writeSync()\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeProjectFromProject.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeProjectFromProject.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeProjectFromProject.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "removeProjectFromProject.js",
      "sourceFileName": "removeProjectFromProject.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "removeProjectFromProject"
    },
    "ignored": false,
    "code": "'use strict';const PbxFile = require('xcode/lib/pbxFile');\nconst removeFromPbxItemContainerProxySection = require('./removeFromPbxItemContainerProxySection');\nconst removeFromProjectReferences = require('./removeFromProjectReferences');\nconst removeProductGroup = require('./removeProductGroup');\n\n/**\n                                                             * Given xcodeproj and filePath, it creates new file\n                                                             * from path provided and removes it. That operation is required since\n                                                             * underlying method requires PbxFile instance to be passed (it does not\n                                                             * have to have uuid or fileRef defined since it will do equality check\n                                                             * by path)\n                                                             *\n                                                             * Returns removed file (that one will have UUID)\n                                                             */\nmodule.exports = function removeProjectFromProject(project, filePath) {\n  const file = project.removeFromPbxFileReferenceSection(new PbxFile(filePath));\n  const projectRef = removeFromProjectReferences(project, file);\n\n  if (projectRef) {\n    removeProductGroup(project, projectRef.ProductGroup);\n  }\n\n  removeFromPbxItemContainerProxySection(project, file);\n\n  return file;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbW92ZVByb2plY3RGcm9tUHJvamVjdC5qcyJdLCJuYW1lcyI6WyJQYnhGaWxlIiwicmVxdWlyZSIsInJlbW92ZUZyb21QYnhJdGVtQ29udGFpbmVyUHJveHlTZWN0aW9uIiwicmVtb3ZlRnJvbVByb2plY3RSZWZlcmVuY2VzIiwicmVtb3ZlUHJvZHVjdEdyb3VwIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlbW92ZVByb2plY3RGcm9tUHJvamVjdCIsInByb2plY3QiLCJmaWxlUGF0aCIsImZpbGUiLCJyZW1vdmVGcm9tUGJ4RmlsZVJlZmVyZW5jZVNlY3Rpb24iLCJwcm9qZWN0UmVmIiwiUHJvZHVjdEdyb3VwIl0sIm1hcHBpbmdzIjoiYUFBQSxNQUFNQSxVQUFVQyxRQUFRLG1CQUFSLENBQWhCO0FBQ0EsTUFBTUMseUNBQXlDRCxRQUFRLDBDQUFSLENBQS9DO0FBQ0EsTUFBTUUsOEJBQThCRixRQUFRLCtCQUFSLENBQXBDO0FBQ0EsTUFBTUcscUJBQXFCSCxRQUFRLHNCQUFSLENBQTNCOztBQUVBOzs7Ozs7Ozs7QUFTQUksT0FBT0MsT0FBUCxHQUFpQixTQUFTQyx3QkFBVCxDQUFrQ0MsT0FBbEMsRUFBMkNDLFFBQTNDLEVBQXFEO0FBQ3BFLFFBQU1DLE9BQU9GLFFBQVFHLGlDQUFSLENBQTBDLElBQUlYLE9BQUosQ0FBWVMsUUFBWixDQUExQyxDQUFiO0FBQ0EsUUFBTUcsYUFBYVQsNEJBQTRCSyxPQUE1QixFQUFxQ0UsSUFBckMsQ0FBbkI7O0FBRUEsTUFBSUUsVUFBSixFQUFnQjtBQUNkUix1QkFBbUJJLE9BQW5CLEVBQTRCSSxXQUFXQyxZQUF2QztBQUNEOztBQUVEWCx5Q0FBdUNNLE9BQXZDLEVBQWdERSxJQUFoRDs7QUFFQSxTQUFPQSxJQUFQO0FBQ0QsQ0FYRCIsImZpbGUiOiJyZW1vdmVQcm9qZWN0RnJvbVByb2plY3QuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9pb3MiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQYnhGaWxlID0gcmVxdWlyZSgneGNvZGUvbGliL3BieEZpbGUnKTtcbmNvbnN0IHJlbW92ZUZyb21QYnhJdGVtQ29udGFpbmVyUHJveHlTZWN0aW9uID0gcmVxdWlyZSgnLi9yZW1vdmVGcm9tUGJ4SXRlbUNvbnRhaW5lclByb3h5U2VjdGlvbicpO1xuY29uc3QgcmVtb3ZlRnJvbVByb2plY3RSZWZlcmVuY2VzID0gcmVxdWlyZSgnLi9yZW1vdmVGcm9tUHJvamVjdFJlZmVyZW5jZXMnKTtcbmNvbnN0IHJlbW92ZVByb2R1Y3RHcm91cCA9IHJlcXVpcmUoJy4vcmVtb3ZlUHJvZHVjdEdyb3VwJyk7XG5cbi8qKlxuICogR2l2ZW4geGNvZGVwcm9qIGFuZCBmaWxlUGF0aCwgaXQgY3JlYXRlcyBuZXcgZmlsZVxuICogZnJvbSBwYXRoIHByb3ZpZGVkIGFuZCByZW1vdmVzIGl0LiBUaGF0IG9wZXJhdGlvbiBpcyByZXF1aXJlZCBzaW5jZVxuICogdW5kZXJseWluZyBtZXRob2QgcmVxdWlyZXMgUGJ4RmlsZSBpbnN0YW5jZSB0byBiZSBwYXNzZWQgKGl0IGRvZXMgbm90XG4gKiBoYXZlIHRvIGhhdmUgdXVpZCBvciBmaWxlUmVmIGRlZmluZWQgc2luY2UgaXQgd2lsbCBkbyBlcXVhbGl0eSBjaGVja1xuICogYnkgcGF0aClcbiAqXG4gKiBSZXR1cm5zIHJlbW92ZWQgZmlsZSAodGhhdCBvbmUgd2lsbCBoYXZlIFVVSUQpXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcmVtb3ZlUHJvamVjdEZyb21Qcm9qZWN0KHByb2plY3QsIGZpbGVQYXRoKSB7XG4gIGNvbnN0IGZpbGUgPSBwcm9qZWN0LnJlbW92ZUZyb21QYnhGaWxlUmVmZXJlbmNlU2VjdGlvbihuZXcgUGJ4RmlsZShmaWxlUGF0aCkpO1xuICBjb25zdCBwcm9qZWN0UmVmID0gcmVtb3ZlRnJvbVByb2plY3RSZWZlcmVuY2VzKHByb2plY3QsIGZpbGUpO1xuXG4gIGlmIChwcm9qZWN0UmVmKSB7XG4gICAgcmVtb3ZlUHJvZHVjdEdyb3VwKHByb2plY3QsIHByb2plY3RSZWYuUHJvZHVjdEdyb3VwKTtcbiAgfVxuXG4gIHJlbW92ZUZyb21QYnhJdGVtQ29udGFpbmVyUHJveHlTZWN0aW9uKHByb2plY3QsIGZpbGUpO1xuXG4gIHJldHVybiBmaWxlO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "removeProjectFromProject.js"
      ],
      "names": [
        "PbxFile",
        "require",
        "removeFromPbxItemContainerProxySection",
        "removeFromProjectReferences",
        "removeProductGroup",
        "module",
        "exports",
        "removeProjectFromProject",
        "project",
        "filePath",
        "file",
        "removeFromPbxFileReferenceSection",
        "projectRef",
        "ProductGroup"
      ],
      "mappings": "aAAA,MAAMA,UAAUC,QAAQ,mBAAR,CAAhB;AACA,MAAMC,yCAAyCD,QAAQ,0CAAR,CAA/C;AACA,MAAME,8BAA8BF,QAAQ,+BAAR,CAApC;AACA,MAAMG,qBAAqBH,QAAQ,sBAAR,CAA3B;;AAEA;;;;;;;;;AASAI,OAAOC,OAAP,GAAiB,SAASC,wBAAT,CAAkCC,OAAlC,EAA2CC,QAA3C,EAAqD;AACpE,QAAMC,OAAOF,QAAQG,iCAAR,CAA0C,IAAIX,OAAJ,CAAYS,QAAZ,CAA1C,CAAb;AACA,QAAMG,aAAaT,4BAA4BK,OAA5B,EAAqCE,IAArC,CAAnB;;AAEA,MAAIE,UAAJ,EAAgB;AACdR,uBAAmBI,OAAnB,EAA4BI,WAAWC,YAAvC;AACD;;AAEDX,yCAAuCM,OAAvC,EAAgDE,IAAhD;;AAEA,SAAOA,IAAP;AACD,CAXD",
      "file": "removeProjectFromProject.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const PbxFile = require('xcode/lib/pbxFile');\nconst removeFromPbxItemContainerProxySection = require('./removeFromPbxItemContainerProxySection');\nconst removeFromProjectReferences = require('./removeFromProjectReferences');\nconst removeProductGroup = require('./removeProductGroup');\n\n/**\n * Given xcodeproj and filePath, it creates new file\n * from path provided and removes it. That operation is required since\n * underlying method requires PbxFile instance to be passed (it does not\n * have to have uuid or fileRef defined since it will do equality check\n * by path)\n *\n * Returns removed file (that one will have UUID)\n */\nmodule.exports = function removeProjectFromProject(project, filePath) {\n  const file = project.removeFromPbxFileReferenceSection(new PbxFile(filePath));\n  const projectRef = removeFromProjectReferences(project, file);\n\n  if (projectRef) {\n    removeProductGroup(project, projectRef.ProductGroup);\n  }\n\n  removeFromPbxItemContainerProxySection(project, file);\n\n  return file;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeFromPbxItemContainerProxySection.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeFromPbxItemContainerProxySection.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeFromPbxItemContainerProxySection.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "removeFromPbxItemContainerProxySection.js",
      "sourceFileName": "removeFromPbxItemContainerProxySection.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "removeFromPbxItemContainerProxySection"
    },
    "ignored": false,
    "code": "\"use strict\"; /**\n               * For all files that are created and referenced from another `.xcodeproj` -\n               * a new PBXItemContainerProxy is created that contains `containerPortal` value\n               * which equals to xcodeproj file.uuid from PBXFileReference section.\n               */\nmodule.exports = function removeFromPbxItemContainerProxySection(project, file) {\n  const section = project.hash.project.objects.PBXContainerItemProxy;\n\n  for (var key of Object.keys(section)) {\n    if (section[key].containerPortal === file.uuid) {\n      delete section[key];\n    }\n  }\n\n  return;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbW92ZUZyb21QYnhJdGVtQ29udGFpbmVyUHJveHlTZWN0aW9uLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyZW1vdmVGcm9tUGJ4SXRlbUNvbnRhaW5lclByb3h5U2VjdGlvbiIsInByb2plY3QiLCJmaWxlIiwic2VjdGlvbiIsImhhc2giLCJvYmplY3RzIiwiUEJYQ29udGFpbmVySXRlbVByb3h5Iiwia2V5IiwiT2JqZWN0Iiwia2V5cyIsImNvbnRhaW5lclBvcnRhbCIsInV1aWQiXSwibWFwcGluZ3MiOiJjQUFBOzs7OztBQUtBQSxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLHNDQUFULENBQWdEQyxPQUFoRCxFQUF5REMsSUFBekQsRUFBK0Q7QUFDOUUsUUFBTUMsVUFBVUYsUUFBUUcsSUFBUixDQUFhSCxPQUFiLENBQXFCSSxPQUFyQixDQUE2QkMscUJBQTdDOztBQUVBLE9BQUssSUFBSUMsR0FBVCxJQUFnQkMsT0FBT0MsSUFBUCxDQUFZTixPQUFaLENBQWhCLEVBQXNDO0FBQ3BDLFFBQUlBLFFBQVFJLEdBQVIsRUFBYUcsZUFBYixLQUFpQ1IsS0FBS1MsSUFBMUMsRUFBZ0Q7QUFDOUMsYUFBT1IsUUFBUUksR0FBUixDQUFQO0FBQ0Q7QUFDRjs7QUFFRDtBQUNELENBVkQiLCJmaWxlIjoicmVtb3ZlRnJvbVBieEl0ZW1Db250YWluZXJQcm94eVNlY3Rpb24uanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9pb3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZvciBhbGwgZmlsZXMgdGhhdCBhcmUgY3JlYXRlZCBhbmQgcmVmZXJlbmNlZCBmcm9tIGFub3RoZXIgYC54Y29kZXByb2pgIC1cbiAqIGEgbmV3IFBCWEl0ZW1Db250YWluZXJQcm94eSBpcyBjcmVhdGVkIHRoYXQgY29udGFpbnMgYGNvbnRhaW5lclBvcnRhbGAgdmFsdWVcbiAqIHdoaWNoIGVxdWFscyB0byB4Y29kZXByb2ogZmlsZS51dWlkIGZyb20gUEJYRmlsZVJlZmVyZW5jZSBzZWN0aW9uLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJlbW92ZUZyb21QYnhJdGVtQ29udGFpbmVyUHJveHlTZWN0aW9uKHByb2plY3QsIGZpbGUpIHtcbiAgY29uc3Qgc2VjdGlvbiA9IHByb2plY3QuaGFzaC5wcm9qZWN0Lm9iamVjdHMuUEJYQ29udGFpbmVySXRlbVByb3h5O1xuXG4gIGZvciAodmFyIGtleSBvZiBPYmplY3Qua2V5cyhzZWN0aW9uKSkge1xuICAgIGlmIChzZWN0aW9uW2tleV0uY29udGFpbmVyUG9ydGFsID09PSBmaWxlLnV1aWQpIHtcbiAgICAgIGRlbGV0ZSBzZWN0aW9uW2tleV07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "removeFromPbxItemContainerProxySection.js"
      ],
      "names": [
        "module",
        "exports",
        "removeFromPbxItemContainerProxySection",
        "project",
        "file",
        "section",
        "hash",
        "objects",
        "PBXContainerItemProxy",
        "key",
        "Object",
        "keys",
        "containerPortal",
        "uuid"
      ],
      "mappings": "cAAA;;;;;AAKAA,OAAOC,OAAP,GAAiB,SAASC,sCAAT,CAAgDC,OAAhD,EAAyDC,IAAzD,EAA+D;AAC9E,QAAMC,UAAUF,QAAQG,IAAR,CAAaH,OAAb,CAAqBI,OAArB,CAA6BC,qBAA7C;;AAEA,OAAK,IAAIC,GAAT,IAAgBC,OAAOC,IAAP,CAAYN,OAAZ,CAAhB,EAAsC;AACpC,QAAIA,QAAQI,GAAR,EAAaG,eAAb,KAAiCR,KAAKS,IAA1C,EAAgD;AAC9C,aAAOR,QAAQI,GAAR,CAAP;AACD;AACF;;AAED;AACD,CAVD",
      "file": "removeFromPbxItemContainerProxySection.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "/**\n * For all files that are created and referenced from another `.xcodeproj` -\n * a new PBXItemContainerProxy is created that contains `containerPortal` value\n * which equals to xcodeproj file.uuid from PBXFileReference section.\n */\nmodule.exports = function removeFromPbxItemContainerProxySection(project, file) {\n  const section = project.hash.project.objects.PBXContainerItemProxy;\n\n  for (var key of Object.keys(section)) {\n    if (section[key].containerPortal === file.uuid) {\n      delete section[key];\n    }\n  }\n\n  return;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeFromProjectReferences.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeFromProjectReferences.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeFromProjectReferences.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "removeFromProjectReferences.js",
      "sourceFileName": "removeFromProjectReferences.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "removeFromProjectReferences"
    },
    "ignored": false,
    "code": "\"use strict\"; /**\n               * For each file (.xcodeproj), there's an entry in `projectReferences` created\n               * that has two entries - `ProjectRef` - reference to a file.uuid and\n               * `ProductGroup` - uuid of a Products group.\n               *\n               * When projectReference is found - it's deleted and the removed value is returned\n               * so that ProductGroup in PBXGroup section can be removed as well.\n               *\n               * Otherwise returns null\n               */\nmodule.exports = function removeFromProjectReferences(project, file) {\n  const firstProject = project.getFirstProject().firstProject;\n\n  const projectRef = firstProject.projectReferences.find(item => item.ProjectRef === file.uuid);\n\n  if (!projectRef) {\n    return null;\n  }\n\n  firstProject.projectReferences.splice(\n  firstProject.projectReferences.indexOf(projectRef),\n  1);\n\n\n  return projectRef;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbW92ZUZyb21Qcm9qZWN0UmVmZXJlbmNlcy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVtb3ZlRnJvbVByb2plY3RSZWZlcmVuY2VzIiwicHJvamVjdCIsImZpbGUiLCJmaXJzdFByb2plY3QiLCJnZXRGaXJzdFByb2plY3QiLCJwcm9qZWN0UmVmIiwicHJvamVjdFJlZmVyZW5jZXMiLCJmaW5kIiwiaXRlbSIsIlByb2plY3RSZWYiLCJ1dWlkIiwic3BsaWNlIiwiaW5kZXhPZiJdLCJtYXBwaW5ncyI6ImNBQUE7Ozs7Ozs7Ozs7QUFVQUEsT0FBT0MsT0FBUCxHQUFpQixTQUFTQywyQkFBVCxDQUFxQ0MsT0FBckMsRUFBOENDLElBQTlDLEVBQW9EO0FBQ25FLFFBQU1DLGVBQWVGLFFBQVFHLGVBQVIsR0FBMEJELFlBQS9DOztBQUVBLFFBQU1FLGFBQWFGLGFBQWFHLGlCQUFiLENBQStCQyxJQUEvQixDQUFvQ0MsUUFBUUEsS0FBS0MsVUFBTCxLQUFvQlAsS0FBS1EsSUFBckUsQ0FBbkI7O0FBRUEsTUFBSSxDQUFDTCxVQUFMLEVBQWlCO0FBQ2YsV0FBTyxJQUFQO0FBQ0Q7O0FBRURGLGVBQWFHLGlCQUFiLENBQStCSyxNQUEvQjtBQUNFUixlQUFhRyxpQkFBYixDQUErQk0sT0FBL0IsQ0FBdUNQLFVBQXZDLENBREY7QUFFRSxHQUZGOzs7QUFLQSxTQUFPQSxVQUFQO0FBQ0QsQ0FmRCIsImZpbGUiOiJyZW1vdmVGcm9tUHJvamVjdFJlZmVyZW5jZXMuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9pb3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZvciBlYWNoIGZpbGUgKC54Y29kZXByb2opLCB0aGVyZSdzIGFuIGVudHJ5IGluIGBwcm9qZWN0UmVmZXJlbmNlc2AgY3JlYXRlZFxuICogdGhhdCBoYXMgdHdvIGVudHJpZXMgLSBgUHJvamVjdFJlZmAgLSByZWZlcmVuY2UgdG8gYSBmaWxlLnV1aWQgYW5kXG4gKiBgUHJvZHVjdEdyb3VwYCAtIHV1aWQgb2YgYSBQcm9kdWN0cyBncm91cC5cbiAqXG4gKiBXaGVuIHByb2plY3RSZWZlcmVuY2UgaXMgZm91bmQgLSBpdCdzIGRlbGV0ZWQgYW5kIHRoZSByZW1vdmVkIHZhbHVlIGlzIHJldHVybmVkXG4gKiBzbyB0aGF0IFByb2R1Y3RHcm91cCBpbiBQQlhHcm91cCBzZWN0aW9uIGNhbiBiZSByZW1vdmVkIGFzIHdlbGwuXG4gKlxuICogT3RoZXJ3aXNlIHJldHVybnMgbnVsbFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJlbW92ZUZyb21Qcm9qZWN0UmVmZXJlbmNlcyhwcm9qZWN0LCBmaWxlKSB7XG4gIGNvbnN0IGZpcnN0UHJvamVjdCA9IHByb2plY3QuZ2V0Rmlyc3RQcm9qZWN0KCkuZmlyc3RQcm9qZWN0O1xuXG4gIGNvbnN0IHByb2plY3RSZWYgPSBmaXJzdFByb2plY3QucHJvamVjdFJlZmVyZW5jZXMuZmluZChpdGVtID0+IGl0ZW0uUHJvamVjdFJlZiA9PT0gZmlsZS51dWlkKTtcblxuICBpZiAoIXByb2plY3RSZWYpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGZpcnN0UHJvamVjdC5wcm9qZWN0UmVmZXJlbmNlcy5zcGxpY2UoXG4gICAgZmlyc3RQcm9qZWN0LnByb2plY3RSZWZlcmVuY2VzLmluZGV4T2YocHJvamVjdFJlZiksXG4gICAgMVxuICApO1xuXG4gIHJldHVybiBwcm9qZWN0UmVmO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "removeFromProjectReferences.js"
      ],
      "names": [
        "module",
        "exports",
        "removeFromProjectReferences",
        "project",
        "file",
        "firstProject",
        "getFirstProject",
        "projectRef",
        "projectReferences",
        "find",
        "item",
        "ProjectRef",
        "uuid",
        "splice",
        "indexOf"
      ],
      "mappings": "cAAA;;;;;;;;;;AAUAA,OAAOC,OAAP,GAAiB,SAASC,2BAAT,CAAqCC,OAArC,EAA8CC,IAA9C,EAAoD;AACnE,QAAMC,eAAeF,QAAQG,eAAR,GAA0BD,YAA/C;;AAEA,QAAME,aAAaF,aAAaG,iBAAb,CAA+BC,IAA/B,CAAoCC,QAAQA,KAAKC,UAAL,KAAoBP,KAAKQ,IAArE,CAAnB;;AAEA,MAAI,CAACL,UAAL,EAAiB;AACf,WAAO,IAAP;AACD;;AAEDF,eAAaG,iBAAb,CAA+BK,MAA/B;AACER,eAAaG,iBAAb,CAA+BM,OAA/B,CAAuCP,UAAvC,CADF;AAEE,GAFF;;;AAKA,SAAOA,UAAP;AACD,CAfD",
      "file": "removeFromProjectReferences.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "/**\n * For each file (.xcodeproj), there's an entry in `projectReferences` created\n * that has two entries - `ProjectRef` - reference to a file.uuid and\n * `ProductGroup` - uuid of a Products group.\n *\n * When projectReference is found - it's deleted and the removed value is returned\n * so that ProductGroup in PBXGroup section can be removed as well.\n *\n * Otherwise returns null\n */\nmodule.exports = function removeFromProjectReferences(project, file) {\n  const firstProject = project.getFirstProject().firstProject;\n\n  const projectRef = firstProject.projectReferences.find(item => item.ProjectRef === file.uuid);\n\n  if (!projectRef) {\n    return null;\n  }\n\n  firstProject.projectReferences.splice(\n    firstProject.projectReferences.indexOf(projectRef),\n    1\n  );\n\n  return projectRef;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeProductGroup.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeProductGroup.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeProductGroup.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "removeProductGroup.js",
      "sourceFileName": "removeProductGroup.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "removeProductGroup"
    },
    "ignored": false,
    "code": "\"use strict\";module.exports = function removeProductGroup(project, productGroupId) {\n  const section = project.hash.project.objects.PBXGroup;\n\n  for (var key of Object.keys(section)) {\n    if (key === productGroupId) {\n      delete section[key];\n    }\n  }\n\n  return;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbW92ZVByb2R1Y3RHcm91cC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVtb3ZlUHJvZHVjdEdyb3VwIiwicHJvamVjdCIsInByb2R1Y3RHcm91cElkIiwic2VjdGlvbiIsImhhc2giLCJvYmplY3RzIiwiUEJYR3JvdXAiLCJrZXkiLCJPYmplY3QiLCJrZXlzIl0sIm1hcHBpbmdzIjoiYUFBQUEsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxrQkFBVCxDQUE0QkMsT0FBNUIsRUFBcUNDLGNBQXJDLEVBQXFEO0FBQ3BFLFFBQU1DLFVBQVVGLFFBQVFHLElBQVIsQ0FBYUgsT0FBYixDQUFxQkksT0FBckIsQ0FBNkJDLFFBQTdDOztBQUVBLE9BQUssSUFBSUMsR0FBVCxJQUFnQkMsT0FBT0MsSUFBUCxDQUFZTixPQUFaLENBQWhCLEVBQXNDO0FBQ3BDLFFBQUlJLFFBQVFMLGNBQVosRUFBNEI7QUFDMUIsYUFBT0MsUUFBUUksR0FBUixDQUFQO0FBQ0Q7QUFDRjs7QUFFRDtBQUNELENBVkQiLCJmaWxlIjoicmVtb3ZlUHJvZHVjdEdyb3VwLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvaW9zIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiByZW1vdmVQcm9kdWN0R3JvdXAocHJvamVjdCwgcHJvZHVjdEdyb3VwSWQpIHtcbiAgY29uc3Qgc2VjdGlvbiA9IHByb2plY3QuaGFzaC5wcm9qZWN0Lm9iamVjdHMuUEJYR3JvdXA7XG5cbiAgZm9yICh2YXIga2V5IG9mIE9iamVjdC5rZXlzKHNlY3Rpb24pKSB7XG4gICAgaWYgKGtleSA9PT0gcHJvZHVjdEdyb3VwSWQpIHtcbiAgICAgIGRlbGV0ZSBzZWN0aW9uW2tleV07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "removeProductGroup.js"
      ],
      "names": [
        "module",
        "exports",
        "removeProductGroup",
        "project",
        "productGroupId",
        "section",
        "hash",
        "objects",
        "PBXGroup",
        "key",
        "Object",
        "keys"
      ],
      "mappings": "aAAAA,OAAOC,OAAP,GAAiB,SAASC,kBAAT,CAA4BC,OAA5B,EAAqCC,cAArC,EAAqD;AACpE,QAAMC,UAAUF,QAAQG,IAAR,CAAaH,OAAb,CAAqBI,OAArB,CAA6BC,QAA7C;;AAEA,OAAK,IAAIC,GAAT,IAAgBC,OAAOC,IAAP,CAAYN,OAAZ,CAAhB,EAAsC;AACpC,QAAII,QAAQL,cAAZ,EAA4B;AAC1B,aAAOC,QAAQI,GAAR,CAAP;AACD;AACF;;AAED;AACD,CAVD",
      "file": "removeProductGroup.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "module.exports = function removeProductGroup(project, productGroupId) {\n  const section = project.hash.project.objects.PBXGroup;\n\n  for (var key of Object.keys(section)) {\n    if (key === productGroupId) {\n      delete section[key];\n    }\n  }\n\n  return;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeProjectFromLibraries.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeProjectFromLibraries.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeProjectFromLibraries.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "removeProjectFromLibraries.js",
      "sourceFileName": "removeProjectFromLibraries.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "removeProjectFromLibraries"
    },
    "ignored": false,
    "code": "\"use strict\"; /**\n               * Given an array of xcodeproj libraries and pbxFile,\n               * it removes it from that group by comparing basenames\n               *\n               * Important: That function mutates `libraries` and it's not pure.\n               * It's mainly due to limitations of `xcode` library.\n               */\nmodule.exports = function removeProjectFromLibraries(libraries, file) {\n  libraries.children = libraries.children.filter(library =>\n  library.comment !== file.basename);\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbW92ZVByb2plY3RGcm9tTGlicmFyaWVzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyZW1vdmVQcm9qZWN0RnJvbUxpYnJhcmllcyIsImxpYnJhcmllcyIsImZpbGUiLCJjaGlsZHJlbiIsImZpbHRlciIsImxpYnJhcnkiLCJjb21tZW50IiwiYmFzZW5hbWUiXSwibWFwcGluZ3MiOiJjQUFBOzs7Ozs7O0FBT0FBLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsMEJBQVQsQ0FBb0NDLFNBQXBDLEVBQStDQyxJQUEvQyxFQUFxRDtBQUNwRUQsWUFBVUUsUUFBVixHQUFxQkYsVUFBVUUsUUFBVixDQUFtQkMsTUFBbkIsQ0FBMEJDO0FBQzdDQSxVQUFRQyxPQUFSLEtBQW9CSixLQUFLSyxRQUROLENBQXJCOztBQUdELENBSkQiLCJmaWxlIjoicmVtb3ZlUHJvamVjdEZyb21MaWJyYXJpZXMuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9pb3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdpdmVuIGFuIGFycmF5IG9mIHhjb2RlcHJvaiBsaWJyYXJpZXMgYW5kIHBieEZpbGUsXG4gKiBpdCByZW1vdmVzIGl0IGZyb20gdGhhdCBncm91cCBieSBjb21wYXJpbmcgYmFzZW5hbWVzXG4gKlxuICogSW1wb3J0YW50OiBUaGF0IGZ1bmN0aW9uIG11dGF0ZXMgYGxpYnJhcmllc2AgYW5kIGl0J3Mgbm90IHB1cmUuXG4gKiBJdCdzIG1haW5seSBkdWUgdG8gbGltaXRhdGlvbnMgb2YgYHhjb2RlYCBsaWJyYXJ5LlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJlbW92ZVByb2plY3RGcm9tTGlicmFyaWVzKGxpYnJhcmllcywgZmlsZSkge1xuICBsaWJyYXJpZXMuY2hpbGRyZW4gPSBsaWJyYXJpZXMuY2hpbGRyZW4uZmlsdGVyKGxpYnJhcnkgPT5cbiAgICBsaWJyYXJ5LmNvbW1lbnQgIT09IGZpbGUuYmFzZW5hbWVcbiAgKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "removeProjectFromLibraries.js"
      ],
      "names": [
        "module",
        "exports",
        "removeProjectFromLibraries",
        "libraries",
        "file",
        "children",
        "filter",
        "library",
        "comment",
        "basename"
      ],
      "mappings": "cAAA;;;;;;;AAOAA,OAAOC,OAAP,GAAiB,SAASC,0BAAT,CAAoCC,SAApC,EAA+CC,IAA/C,EAAqD;AACpED,YAAUE,QAAV,GAAqBF,UAAUE,QAAV,CAAmBC,MAAnB,CAA0BC;AAC7CA,UAAQC,OAAR,KAAoBJ,KAAKK,QADN,CAArB;;AAGD,CAJD",
      "file": "removeProjectFromLibraries.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "/**\n * Given an array of xcodeproj libraries and pbxFile,\n * it removes it from that group by comparing basenames\n *\n * Important: That function mutates `libraries` and it's not pure.\n * It's mainly due to limitations of `xcode` library.\n */\nmodule.exports = function removeProjectFromLibraries(libraries, file) {\n  libraries.children = libraries.children.filter(library =>\n    library.comment !== file.basename\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeFromStaticLibraries.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeFromStaticLibraries.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeFromStaticLibraries.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "removeFromStaticLibraries.js",
      "sourceFileName": "removeFromStaticLibraries.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "removeFromStaticLibraries"
    },
    "ignored": false,
    "code": "'use strict';const PbxFile = require('xcode/lib/pbxFile');\nconst removeFromPbxReferenceProxySection = require('./removeFromPbxReferenceProxySection');\n\n/**\n                                                                                             * Removes file from static libraries\n                                                                                             *\n                                                                                             * Similar to `node-xcode` addStaticLibrary\n                                                                                             */\nmodule.exports = function removeFromStaticLibraries(project, path, opts) {\n  const file = new PbxFile(path);\n\n  file.target = opts ? opts.target : undefined;\n\n  project.removeFromPbxFileReferenceSection(file);\n  project.removeFromPbxBuildFileSection(file);\n  project.removeFromPbxFrameworksBuildPhase(file);\n  project.removeFromLibrarySearchPaths(file);\n  removeFromPbxReferenceProxySection(project, file);\n\n  return file;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbW92ZUZyb21TdGF0aWNMaWJyYXJpZXMuanMiXSwibmFtZXMiOlsiUGJ4RmlsZSIsInJlcXVpcmUiLCJyZW1vdmVGcm9tUGJ4UmVmZXJlbmNlUHJveHlTZWN0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlbW92ZUZyb21TdGF0aWNMaWJyYXJpZXMiLCJwcm9qZWN0IiwicGF0aCIsIm9wdHMiLCJmaWxlIiwidGFyZ2V0IiwidW5kZWZpbmVkIiwicmVtb3ZlRnJvbVBieEZpbGVSZWZlcmVuY2VTZWN0aW9uIiwicmVtb3ZlRnJvbVBieEJ1aWxkRmlsZVNlY3Rpb24iLCJyZW1vdmVGcm9tUGJ4RnJhbWV3b3Jrc0J1aWxkUGhhc2UiLCJyZW1vdmVGcm9tTGlicmFyeVNlYXJjaFBhdGhzIl0sIm1hcHBpbmdzIjoiYUFBQSxNQUFNQSxVQUFVQyxRQUFRLG1CQUFSLENBQWhCO0FBQ0EsTUFBTUMscUNBQXFDRCxRQUFRLHNDQUFSLENBQTNDOztBQUVBOzs7OztBQUtBRSxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLHlCQUFULENBQW1DQyxPQUFuQyxFQUE0Q0MsSUFBNUMsRUFBa0RDLElBQWxELEVBQXdEO0FBQ3ZFLFFBQU1DLE9BQU8sSUFBSVQsT0FBSixDQUFZTyxJQUFaLENBQWI7O0FBRUFFLE9BQUtDLE1BQUwsR0FBY0YsT0FBT0EsS0FBS0UsTUFBWixHQUFxQkMsU0FBbkM7O0FBRUFMLFVBQVFNLGlDQUFSLENBQTBDSCxJQUExQztBQUNBSCxVQUFRTyw2QkFBUixDQUFzQ0osSUFBdEM7QUFDQUgsVUFBUVEsaUNBQVIsQ0FBMENMLElBQTFDO0FBQ0FILFVBQVFTLDRCQUFSLENBQXFDTixJQUFyQztBQUNBUCxxQ0FBbUNJLE9BQW5DLEVBQTRDRyxJQUE1Qzs7QUFFQSxTQUFPQSxJQUFQO0FBQ0QsQ0FaRCIsImZpbGUiOiJyZW1vdmVGcm9tU3RhdGljTGlicmFyaWVzLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvaW9zIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUGJ4RmlsZSA9IHJlcXVpcmUoJ3hjb2RlL2xpYi9wYnhGaWxlJyk7XG5jb25zdCByZW1vdmVGcm9tUGJ4UmVmZXJlbmNlUHJveHlTZWN0aW9uID0gcmVxdWlyZSgnLi9yZW1vdmVGcm9tUGJ4UmVmZXJlbmNlUHJveHlTZWN0aW9uJyk7XG5cbi8qKlxuICogUmVtb3ZlcyBmaWxlIGZyb20gc3RhdGljIGxpYnJhcmllc1xuICpcbiAqIFNpbWlsYXIgdG8gYG5vZGUteGNvZGVgIGFkZFN0YXRpY0xpYnJhcnlcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiByZW1vdmVGcm9tU3RhdGljTGlicmFyaWVzKHByb2plY3QsIHBhdGgsIG9wdHMpIHtcbiAgY29uc3QgZmlsZSA9IG5ldyBQYnhGaWxlKHBhdGgpO1xuXG4gIGZpbGUudGFyZ2V0ID0gb3B0cyA/IG9wdHMudGFyZ2V0IDogdW5kZWZpbmVkO1xuXG4gIHByb2plY3QucmVtb3ZlRnJvbVBieEZpbGVSZWZlcmVuY2VTZWN0aW9uKGZpbGUpO1xuICBwcm9qZWN0LnJlbW92ZUZyb21QYnhCdWlsZEZpbGVTZWN0aW9uKGZpbGUpO1xuICBwcm9qZWN0LnJlbW92ZUZyb21QYnhGcmFtZXdvcmtzQnVpbGRQaGFzZShmaWxlKTtcbiAgcHJvamVjdC5yZW1vdmVGcm9tTGlicmFyeVNlYXJjaFBhdGhzKGZpbGUpO1xuICByZW1vdmVGcm9tUGJ4UmVmZXJlbmNlUHJveHlTZWN0aW9uKHByb2plY3QsIGZpbGUpO1xuXG4gIHJldHVybiBmaWxlO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "removeFromStaticLibraries.js"
      ],
      "names": [
        "PbxFile",
        "require",
        "removeFromPbxReferenceProxySection",
        "module",
        "exports",
        "removeFromStaticLibraries",
        "project",
        "path",
        "opts",
        "file",
        "target",
        "undefined",
        "removeFromPbxFileReferenceSection",
        "removeFromPbxBuildFileSection",
        "removeFromPbxFrameworksBuildPhase",
        "removeFromLibrarySearchPaths"
      ],
      "mappings": "aAAA,MAAMA,UAAUC,QAAQ,mBAAR,CAAhB;AACA,MAAMC,qCAAqCD,QAAQ,sCAAR,CAA3C;;AAEA;;;;;AAKAE,OAAOC,OAAP,GAAiB,SAASC,yBAAT,CAAmCC,OAAnC,EAA4CC,IAA5C,EAAkDC,IAAlD,EAAwD;AACvE,QAAMC,OAAO,IAAIT,OAAJ,CAAYO,IAAZ,CAAb;;AAEAE,OAAKC,MAAL,GAAcF,OAAOA,KAAKE,MAAZ,GAAqBC,SAAnC;;AAEAL,UAAQM,iCAAR,CAA0CH,IAA1C;AACAH,UAAQO,6BAAR,CAAsCJ,IAAtC;AACAH,UAAQQ,iCAAR,CAA0CL,IAA1C;AACAH,UAAQS,4BAAR,CAAqCN,IAArC;AACAP,qCAAmCI,OAAnC,EAA4CG,IAA5C;;AAEA,SAAOA,IAAP;AACD,CAZD",
      "file": "removeFromStaticLibraries.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const PbxFile = require('xcode/lib/pbxFile');\nconst removeFromPbxReferenceProxySection = require('./removeFromPbxReferenceProxySection');\n\n/**\n * Removes file from static libraries\n *\n * Similar to `node-xcode` addStaticLibrary\n */\nmodule.exports = function removeFromStaticLibraries(project, path, opts) {\n  const file = new PbxFile(path);\n\n  file.target = opts ? opts.target : undefined;\n\n  project.removeFromPbxFileReferenceSection(file);\n  project.removeFromPbxBuildFileSection(file);\n  project.removeFromPbxFrameworksBuildPhase(file);\n  project.removeFromLibrarySearchPaths(file);\n  removeFromPbxReferenceProxySection(project, file);\n\n  return file;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeFromPbxReferenceProxySection.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeFromPbxReferenceProxySection.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeFromPbxReferenceProxySection.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "removeFromPbxReferenceProxySection.js",
      "sourceFileName": "removeFromPbxReferenceProxySection.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "removeFromPbxReferenceProxySection"
    },
    "ignored": false,
    "code": "\"use strict\"; /**\n               * Every file added to the project from another project is attached to\n               * `PBXItemContainerProxy` through `PBXReferenceProxy`.\n               */\nmodule.exports = function removeFromPbxReferenceProxySection(project, file) {\n  const section = project.hash.project.objects.PBXReferenceProxy;\n\n  for (var key of Object.keys(section)) {\n    if (section[key].path === file.basename) {\n      delete section[key];\n    }\n  }\n\n  return;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbW92ZUZyb21QYnhSZWZlcmVuY2VQcm94eVNlY3Rpb24uanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJlbW92ZUZyb21QYnhSZWZlcmVuY2VQcm94eVNlY3Rpb24iLCJwcm9qZWN0IiwiZmlsZSIsInNlY3Rpb24iLCJoYXNoIiwib2JqZWN0cyIsIlBCWFJlZmVyZW5jZVByb3h5Iiwia2V5IiwiT2JqZWN0Iiwia2V5cyIsInBhdGgiLCJiYXNlbmFtZSJdLCJtYXBwaW5ncyI6ImNBQUE7Ozs7QUFJQUEsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxrQ0FBVCxDQUE0Q0MsT0FBNUMsRUFBcURDLElBQXJELEVBQTJEO0FBQzFFLFFBQU1DLFVBQVVGLFFBQVFHLElBQVIsQ0FBYUgsT0FBYixDQUFxQkksT0FBckIsQ0FBNkJDLGlCQUE3Qzs7QUFFQSxPQUFLLElBQUlDLEdBQVQsSUFBZ0JDLE9BQU9DLElBQVAsQ0FBWU4sT0FBWixDQUFoQixFQUFzQztBQUNwQyxRQUFJQSxRQUFRSSxHQUFSLEVBQWFHLElBQWIsS0FBc0JSLEtBQUtTLFFBQS9CLEVBQXlDO0FBQ3ZDLGFBQU9SLFFBQVFJLEdBQVIsQ0FBUDtBQUNEO0FBQ0Y7O0FBRUQ7QUFDRCxDQVZEIiwiZmlsZSI6InJlbW92ZUZyb21QYnhSZWZlcmVuY2VQcm94eVNlY3Rpb24uanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9pb3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV2ZXJ5IGZpbGUgYWRkZWQgdG8gdGhlIHByb2plY3QgZnJvbSBhbm90aGVyIHByb2plY3QgaXMgYXR0YWNoZWQgdG9cbiAqIGBQQlhJdGVtQ29udGFpbmVyUHJveHlgIHRocm91Z2ggYFBCWFJlZmVyZW5jZVByb3h5YC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiByZW1vdmVGcm9tUGJ4UmVmZXJlbmNlUHJveHlTZWN0aW9uKHByb2plY3QsIGZpbGUpIHtcbiAgY29uc3Qgc2VjdGlvbiA9IHByb2plY3QuaGFzaC5wcm9qZWN0Lm9iamVjdHMuUEJYUmVmZXJlbmNlUHJveHk7XG5cbiAgZm9yICh2YXIga2V5IG9mIE9iamVjdC5rZXlzKHNlY3Rpb24pKSB7XG4gICAgaWYgKHNlY3Rpb25ba2V5XS5wYXRoID09PSBmaWxlLmJhc2VuYW1lKSB7XG4gICAgICBkZWxldGUgc2VjdGlvbltrZXldO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybjtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "removeFromPbxReferenceProxySection.js"
      ],
      "names": [
        "module",
        "exports",
        "removeFromPbxReferenceProxySection",
        "project",
        "file",
        "section",
        "hash",
        "objects",
        "PBXReferenceProxy",
        "key",
        "Object",
        "keys",
        "path",
        "basename"
      ],
      "mappings": "cAAA;;;;AAIAA,OAAOC,OAAP,GAAiB,SAASC,kCAAT,CAA4CC,OAA5C,EAAqDC,IAArD,EAA2D;AAC1E,QAAMC,UAAUF,QAAQG,IAAR,CAAaH,OAAb,CAAqBI,OAArB,CAA6BC,iBAA7C;;AAEA,OAAK,IAAIC,GAAT,IAAgBC,OAAOC,IAAP,CAAYN,OAAZ,CAAhB,EAAsC;AACpC,QAAIA,QAAQI,GAAR,EAAaG,IAAb,KAAsBR,KAAKS,QAA/B,EAAyC;AACvC,aAAOR,QAAQI,GAAR,CAAP;AACD;AACF;;AAED;AACD,CAVD",
      "file": "removeFromPbxReferenceProxySection.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "/**\n * Every file added to the project from another project is attached to\n * `PBXItemContainerProxy` through `PBXReferenceProxy`.\n */\nmodule.exports = function removeFromPbxReferenceProxySection(project, file) {\n  const section = project.hash.project.objects.PBXReferenceProxy;\n\n  for (var key of Object.keys(section)) {\n    if (section[key].path === file.basename) {\n      delete section[key];\n    }\n  }\n\n  return;\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeFromHeaderSearchPaths.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeFromHeaderSearchPaths.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeFromHeaderSearchPaths.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "removeFromHeaderSearchPaths.js",
      "sourceFileName": "removeFromHeaderSearchPaths.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "removeFromHeaderSearchPaths"
    },
    "ignored": false,
    "code": "'use strict';const mapHeaderSearchPaths = require('./mapHeaderSearchPaths');\n\n/**\n                                                                              * Given Xcode project and absolute path, it makes sure there are no headers referring to it\n                                                                              */\nmodule.exports = function addToHeaderSearchPaths(project, path) {\n  mapHeaderSearchPaths(project,\n  searchPaths => searchPaths.filter(searchPath => searchPath !== path));\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbW92ZUZyb21IZWFkZXJTZWFyY2hQYXRocy5qcyJdLCJuYW1lcyI6WyJtYXBIZWFkZXJTZWFyY2hQYXRocyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiYWRkVG9IZWFkZXJTZWFyY2hQYXRocyIsInByb2plY3QiLCJwYXRoIiwic2VhcmNoUGF0aHMiLCJmaWx0ZXIiLCJzZWFyY2hQYXRoIl0sIm1hcHBpbmdzIjoiYUFBQSxNQUFNQSx1QkFBdUJDLFFBQVEsd0JBQVIsQ0FBN0I7O0FBRUE7OztBQUdBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLHNCQUFULENBQWdDQyxPQUFoQyxFQUF5Q0MsSUFBekMsRUFBK0M7QUFDOUROLHVCQUFxQkssT0FBckI7QUFDRUUsaUJBQWVBLFlBQVlDLE1BQVosQ0FBbUJDLGNBQWNBLGVBQWVILElBQWhELENBRGpCOztBQUdELENBSkQiLCJmaWxlIjoicmVtb3ZlRnJvbUhlYWRlclNlYXJjaFBhdGhzLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvaW9zIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbWFwSGVhZGVyU2VhcmNoUGF0aHMgPSByZXF1aXJlKCcuL21hcEhlYWRlclNlYXJjaFBhdGhzJyk7XG5cbi8qKlxuICogR2l2ZW4gWGNvZGUgcHJvamVjdCBhbmQgYWJzb2x1dGUgcGF0aCwgaXQgbWFrZXMgc3VyZSB0aGVyZSBhcmUgbm8gaGVhZGVycyByZWZlcnJpbmcgdG8gaXRcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBhZGRUb0hlYWRlclNlYXJjaFBhdGhzKHByb2plY3QsIHBhdGgpIHtcbiAgbWFwSGVhZGVyU2VhcmNoUGF0aHMocHJvamVjdCxcbiAgICBzZWFyY2hQYXRocyA9PiBzZWFyY2hQYXRocy5maWx0ZXIoc2VhcmNoUGF0aCA9PiBzZWFyY2hQYXRoICE9PSBwYXRoKVxuICApO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "removeFromHeaderSearchPaths.js"
      ],
      "names": [
        "mapHeaderSearchPaths",
        "require",
        "module",
        "exports",
        "addToHeaderSearchPaths",
        "project",
        "path",
        "searchPaths",
        "filter",
        "searchPath"
      ],
      "mappings": "aAAA,MAAMA,uBAAuBC,QAAQ,wBAAR,CAA7B;;AAEA;;;AAGAC,OAAOC,OAAP,GAAiB,SAASC,sBAAT,CAAgCC,OAAhC,EAAyCC,IAAzC,EAA+C;AAC9DN,uBAAqBK,OAArB;AACEE,iBAAeA,YAAYC,MAAZ,CAAmBC,cAAcA,eAAeH,IAAhD,CADjB;;AAGD,CAJD",
      "file": "removeFromHeaderSearchPaths.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const mapHeaderSearchPaths = require('./mapHeaderSearchPaths');\n\n/**\n * Given Xcode project and absolute path, it makes sure there are no headers referring to it\n */\nmodule.exports = function addToHeaderSearchPaths(project, path) {\n  mapHeaderSearchPaths(project,\n    searchPaths => searchPaths.filter(searchPath => searchPath !== path)\n  );\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeSharedLibraries.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeSharedLibraries.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/removeSharedLibraries.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "removeSharedLibraries.js",
      "sourceFileName": "removeSharedLibraries.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "removeSharedLibraries"
    },
    "ignored": false,
    "code": "\"use strict\";module.exports = function removeSharedLibraries(project, libraries) {\n  if (!libraries.length) {\n    return;\n  }\n\n  const target = project.getFirstTarget().uuid;\n\n  for (var name of libraries) {\n    project.removeFramework(name, { target });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbW92ZVNoYXJlZExpYnJhcmllcy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVtb3ZlU2hhcmVkTGlicmFyaWVzIiwicHJvamVjdCIsImxpYnJhcmllcyIsImxlbmd0aCIsInRhcmdldCIsImdldEZpcnN0VGFyZ2V0IiwidXVpZCIsIm5hbWUiLCJyZW1vdmVGcmFtZXdvcmsiXSwibWFwcGluZ3MiOiJhQUFBQSxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLHFCQUFULENBQStCQyxPQUEvQixFQUF3Q0MsU0FBeEMsRUFBbUQ7QUFDbEUsTUFBSSxDQUFDQSxVQUFVQyxNQUFmLEVBQXVCO0FBQ3JCO0FBQ0Q7O0FBRUQsUUFBTUMsU0FBU0gsUUFBUUksY0FBUixHQUF5QkMsSUFBeEM7O0FBRUEsT0FBSyxJQUFJQyxJQUFULElBQWlCTCxTQUFqQixFQUE0QjtBQUMxQkQsWUFBUU8sZUFBUixDQUF3QkQsSUFBeEIsRUFBOEIsRUFBRUgsTUFBRixFQUE5QjtBQUNEO0FBQ0YsQ0FWRCIsImZpbGUiOiJyZW1vdmVTaGFyZWRMaWJyYXJpZXMuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9pb3MiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJlbW92ZVNoYXJlZExpYnJhcmllcyhwcm9qZWN0LCBsaWJyYXJpZXMpIHtcbiAgaWYgKCFsaWJyYXJpZXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgdGFyZ2V0ID0gcHJvamVjdC5nZXRGaXJzdFRhcmdldCgpLnV1aWQ7XG5cbiAgZm9yICh2YXIgbmFtZSBvZiBsaWJyYXJpZXMpIHtcbiAgICBwcm9qZWN0LnJlbW92ZUZyYW1ld29yayhuYW1lLCB7IHRhcmdldCB9KTtcbiAgfVxufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "removeSharedLibraries.js"
      ],
      "names": [
        "module",
        "exports",
        "removeSharedLibraries",
        "project",
        "libraries",
        "length",
        "target",
        "getFirstTarget",
        "uuid",
        "name",
        "removeFramework"
      ],
      "mappings": "aAAAA,OAAOC,OAAP,GAAiB,SAASC,qBAAT,CAA+BC,OAA/B,EAAwCC,SAAxC,EAAmD;AAClE,MAAI,CAACA,UAAUC,MAAf,EAAuB;AACrB;AACD;;AAED,QAAMC,SAASH,QAAQI,cAAR,GAAyBC,IAAxC;;AAEA,OAAK,IAAIC,IAAT,IAAiBL,SAAjB,EAA4B;AAC1BD,YAAQO,eAAR,CAAwBD,IAAxB,EAA8B,EAAEH,MAAF,EAA9B;AACD;AACF,CAVD",
      "file": "removeSharedLibraries.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "module.exports = function removeSharedLibraries(project, libraries) {\n  if (!libraries.length) {\n    return;\n  }\n\n  const target = project.getFirstTarget().uuid;\n\n  for (var name of libraries) {\n    project.removeFramework(name, { target });\n  }\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/unregisterNativeModule.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/unregisterNativeModule.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/unregisterNativeModule.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "unregisterNativeModule.js",
      "sourceFileName": "unregisterNativeModule.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "unregisterNativeModule"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst fs = require('fs');\nconst removePodEntry = require('./removePodEntry');\n\n/**\n                                                     * Unregister native module IOS with CocoaPods\n                                                     */\nmodule.exports = function unregisterNativeModule(dependencyConfig, iOSProject) {\n\tconst podContent = fs.readFileSync(iOSProject.podfile, 'utf8');\n\tconst removed = removePodEntry(podContent, dependencyConfig.podspec);\n\tfs.writeFileSync(iOSProject.podfile, removed);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVucmVnaXN0ZXJOYXRpdmVNb2R1bGUuanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwicmVtb3ZlUG9kRW50cnkiLCJtb2R1bGUiLCJleHBvcnRzIiwidW5yZWdpc3Rlck5hdGl2ZU1vZHVsZSIsImRlcGVuZGVuY3lDb25maWciLCJpT1NQcm9qZWN0IiwicG9kQ29udGVudCIsInJlYWRGaWxlU3luYyIsInBvZGZpbGUiLCJyZW1vdmVkIiwicG9kc3BlYyIsIndyaXRlRmlsZVN5bmMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLE1BQU1BLEtBQUtDLFFBQVEsSUFBUixDQUFYO0FBQ0EsTUFBTUMsaUJBQWlCRCxRQUFRLGtCQUFSLENBQXZCOztBQUVBOzs7QUFHQUUsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxzQkFBVCxDQUFnQ0MsZ0JBQWhDLEVBQWtEQyxVQUFsRCxFQUE4RDtBQUM5RSxPQUFNQyxhQUFhUixHQUFHUyxZQUFILENBQWdCRixXQUFXRyxPQUEzQixFQUFvQyxNQUFwQyxDQUFuQjtBQUNBLE9BQU1DLFVBQVVULGVBQWVNLFVBQWYsRUFBMkJGLGlCQUFpQk0sT0FBNUMsQ0FBaEI7QUFDQVosSUFBR2EsYUFBSCxDQUFpQk4sV0FBV0csT0FBNUIsRUFBcUNDLE9BQXJDO0FBQ0EsQ0FKRCIsImZpbGUiOiJ1bnJlZ2lzdGVyTmF0aXZlTW9kdWxlLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2xpbmsvcG9kcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3QgcmVtb3ZlUG9kRW50cnkgPSByZXF1aXJlKCcuL3JlbW92ZVBvZEVudHJ5Jyk7XG5cbi8qKlxuICogVW5yZWdpc3RlciBuYXRpdmUgbW9kdWxlIElPUyB3aXRoIENvY29hUG9kc1xuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHVucmVnaXN0ZXJOYXRpdmVNb2R1bGUoZGVwZW5kZW5jeUNvbmZpZywgaU9TUHJvamVjdCkge1xuXHRjb25zdCBwb2RDb250ZW50ID0gZnMucmVhZEZpbGVTeW5jKGlPU1Byb2plY3QucG9kZmlsZSwgJ3V0ZjgnKTtcblx0Y29uc3QgcmVtb3ZlZCA9IHJlbW92ZVBvZEVudHJ5KHBvZENvbnRlbnQsIGRlcGVuZGVuY3lDb25maWcucG9kc3BlYyk7XG5cdGZzLndyaXRlRmlsZVN5bmMoaU9TUHJvamVjdC5wb2RmaWxlLCByZW1vdmVkKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "unregisterNativeModule.js"
      ],
      "names": [
        "fs",
        "require",
        "removePodEntry",
        "module",
        "exports",
        "unregisterNativeModule",
        "dependencyConfig",
        "iOSProject",
        "podContent",
        "readFileSync",
        "podfile",
        "removed",
        "podspec",
        "writeFileSync"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,iBAAiBD,QAAQ,kBAAR,CAAvB;;AAEA;;;AAGAE,OAAOC,OAAP,GAAiB,SAASC,sBAAT,CAAgCC,gBAAhC,EAAkDC,UAAlD,EAA8D;AAC9E,OAAMC,aAAaR,GAAGS,YAAH,CAAgBF,WAAWG,OAA3B,EAAoC,MAApC,CAAnB;AACA,OAAMC,UAAUT,eAAeM,UAAf,EAA2BF,iBAAiBM,OAA5C,CAAhB;AACAZ,IAAGa,aAAH,CAAiBN,WAAWG,OAA5B,EAAqCC,OAArC;AACA,CAJD",
      "file": "unregisterNativeModule.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "sourcesContent": [
        "'use strict';\n\nconst fs = require('fs');\nconst removePodEntry = require('./removePodEntry');\n\n/**\n * Unregister native module IOS with CocoaPods\n */\nmodule.exports = function unregisterNativeModule(dependencyConfig, iOSProject) {\n\tconst podContent = fs.readFileSync(iOSProject.podfile, 'utf8');\n\tconst removed = removePodEntry(podContent, dependencyConfig.podspec);\n\tfs.writeFileSync(iOSProject.podfile, removed);\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/removePodEntry.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/removePodEntry.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods/removePodEntry.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "removePodEntry.js",
      "sourceFileName": "removePodEntry.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "removePodEntry"
    },
    "ignored": false,
    "code": "'use strict';\n\nmodule.exports = function removePodEntry(podfileContent, podName) {\n  // this regex should catch line(s) with full pod definition, like: pod 'podname', :path => '../node_modules/podname', :subspecs => ['Sub2', 'Sub1']\n  const podRegex = new RegExp(\"\\\\n( |\\\\t)*pod\\\\s+(\\\"|')\" + podName + \"(\\\"|')(,\\\\s*(:[a-z]+\\\\s*=>)?\\\\s*((\\\"|').*?(\\\"|')|\\\\[[\\\\s\\\\S]*?\\\\]))*\\\\n\", 'g');\n  return podfileContent.replace(podRegex, '\\n');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbW92ZVBvZEVudHJ5LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyZW1vdmVQb2RFbnRyeSIsInBvZGZpbGVDb250ZW50IiwicG9kTmFtZSIsInBvZFJlZ2V4IiwiUmVnRXhwIiwicmVwbGFjZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsY0FBVCxDQUF3QkMsY0FBeEIsRUFBd0NDLE9BQXhDLEVBQWlEO0FBQ2hFO0FBQ0EsUUFBTUMsV0FBVyxJQUFJQyxNQUFKLENBQVcsNkJBQTZCRixPQUE3QixHQUF1Qyx5RUFBbEQsRUFBNkgsR0FBN0gsQ0FBakI7QUFDQSxTQUFPRCxlQUFlSSxPQUFmLENBQXVCRixRQUF2QixFQUFpQyxJQUFqQyxDQUFQO0FBQ0QsQ0FKRCIsImZpbGUiOiJyZW1vdmVQb2RFbnRyeS5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL3BvZHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcmVtb3ZlUG9kRW50cnkocG9kZmlsZUNvbnRlbnQsIHBvZE5hbWUpIHtcbiAgLy8gdGhpcyByZWdleCBzaG91bGQgY2F0Y2ggbGluZShzKSB3aXRoIGZ1bGwgcG9kIGRlZmluaXRpb24sIGxpa2U6IHBvZCAncG9kbmFtZScsIDpwYXRoID0+ICcuLi9ub2RlX21vZHVsZXMvcG9kbmFtZScsIDpzdWJzcGVjcyA9PiBbJ1N1YjInLCAnU3ViMSddXG4gIGNvbnN0IHBvZFJlZ2V4ID0gbmV3IFJlZ0V4cChcIlxcXFxuKCB8XFxcXHQpKnBvZFxcXFxzKyhcXFwifCcpXCIgKyBwb2ROYW1lICsgXCIoXFxcInwnKSgsXFxcXHMqKDpbYS16XStcXFxccyo9Pik/XFxcXHMqKChcXFwifCcpLio/KFxcXCJ8Jyl8XFxcXFtbXFxcXHNcXFxcU10qP1xcXFxdKSkqXFxcXG5cIiwgJ2cnKTtcbiAgcmV0dXJuIHBvZGZpbGVDb250ZW50LnJlcGxhY2UocG9kUmVnZXgsICdcXG4nKTtcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "removePodEntry.js"
      ],
      "names": [
        "module",
        "exports",
        "removePodEntry",
        "podfileContent",
        "podName",
        "podRegex",
        "RegExp",
        "replace"
      ],
      "mappings": "AAAA;;AAEAA,OAAOC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,cAAxB,EAAwCC,OAAxC,EAAiD;AAChE;AACA,QAAMC,WAAW,IAAIC,MAAJ,CAAW,6BAA6BF,OAA7B,GAAuC,yEAAlD,EAA6H,GAA7H,CAAjB;AACA,SAAOD,eAAeI,OAAf,CAAuBF,QAAvB,EAAiC,IAAjC,CAAP;AACD,CAJD",
      "file": "removePodEntry.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/pods",
      "sourcesContent": [
        "'use strict';\n\nmodule.exports = function removePodEntry(podfileContent, podName) {\n  // this regex should catch line(s) with full pod definition, like: pod 'podname', :path => '../node_modules/podname', :subspecs => ['Sub2', 'Sub1']\n  const podRegex = new RegExp(\"\\\\n( |\\\\t)*pod\\\\s+(\\\"|')\" + podName + \"(\\\"|')(,\\\\s*(:[a-z]+\\\\s*=>)?\\\\s*((\\\"|').*?(\\\"|')|\\\\[[\\\\s\\\\S]*?\\\\]))*\\\\n\", 'g');\n  return podfileContent.replace(podRegex, '\\n');\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/unlinkAssets.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/unlinkAssets.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android/unlinkAssets.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "unlinkAssets.js",
      "sourceFileName": "unlinkAssets.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "unlinkAssets"
    },
    "ignored": false,
    "code": "'use strict';const fs = require('fs-extra');\nconst path = require('path');\nconst groupFilesByType = require('../groupFilesByType');\n\n/**\n                                                          * Copies each file from an array of assets provided to targetPath directory\n                                                          *\n                                                          * For now, the only types of files that are handled are:\n                                                          * - Fonts (otf, ttf) - copied to targetPath/fonts under original name\n                                                          */\nmodule.exports = function unlinkAssetsAndroid(files, targetPath) {\n  const assets = groupFilesByType(files);\n\n  (assets.font || []).forEach(file => {\n    const filePath = path.join(targetPath, 'fonts', path.basename(file));\n    if (fs.existsSync(filePath)) {\n      fs.unlinkSync(filePath);\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVubGlua0Fzc2V0cy5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJwYXRoIiwiZ3JvdXBGaWxlc0J5VHlwZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ1bmxpbmtBc3NldHNBbmRyb2lkIiwiZmlsZXMiLCJ0YXJnZXRQYXRoIiwiYXNzZXRzIiwiZm9udCIsImZvckVhY2giLCJmaWxlIiwiZmlsZVBhdGgiLCJqb2luIiwiYmFzZW5hbWUiLCJleGlzdHNTeW5jIiwidW5saW5rU3luYyJdLCJtYXBwaW5ncyI6ImFBQUEsTUFBTUEsS0FBS0MsUUFBUSxVQUFSLENBQVg7QUFDQSxNQUFNQyxPQUFPRCxRQUFRLE1BQVIsQ0FBYjtBQUNBLE1BQU1FLG1CQUFtQkYsUUFBUSxxQkFBUixDQUF6Qjs7QUFFQTs7Ozs7O0FBTUFHLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsbUJBQVQsQ0FBNkJDLEtBQTdCLEVBQW9DQyxVQUFwQyxFQUFnRDtBQUMvRCxRQUFNQyxTQUFTTixpQkFBaUJJLEtBQWpCLENBQWY7O0FBRUEsR0FBQ0UsT0FBT0MsSUFBUCxJQUFlLEVBQWhCLEVBQW9CQyxPQUFwQixDQUE2QkMsSUFBRCxJQUFVO0FBQ3BDLFVBQU1DLFdBQVdYLEtBQUtZLElBQUwsQ0FBVU4sVUFBVixFQUFzQixPQUF0QixFQUErQk4sS0FBS2EsUUFBTCxDQUFjSCxJQUFkLENBQS9CLENBQWpCO0FBQ0EsUUFBSVosR0FBR2dCLFVBQUgsQ0FBY0gsUUFBZCxDQUFKLEVBQTZCO0FBQzNCYixTQUFHaUIsVUFBSCxDQUFjSixRQUFkO0FBQ0Q7QUFDRixHQUxEO0FBTUQsQ0FURCIsImZpbGUiOiJ1bmxpbmtBc3NldHMuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbGluay9hbmRyb2lkIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZnMgPSByZXF1aXJlKCdmcy1leHRyYScpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGdyb3VwRmlsZXNCeVR5cGUgPSByZXF1aXJlKCcuLi9ncm91cEZpbGVzQnlUeXBlJyk7XG5cbi8qKlxuICogQ29waWVzIGVhY2ggZmlsZSBmcm9tIGFuIGFycmF5IG9mIGFzc2V0cyBwcm92aWRlZCB0byB0YXJnZXRQYXRoIGRpcmVjdG9yeVxuICpcbiAqIEZvciBub3csIHRoZSBvbmx5IHR5cGVzIG9mIGZpbGVzIHRoYXQgYXJlIGhhbmRsZWQgYXJlOlxuICogLSBGb250cyAob3RmLCB0dGYpIC0gY29waWVkIHRvIHRhcmdldFBhdGgvZm9udHMgdW5kZXIgb3JpZ2luYWwgbmFtZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHVubGlua0Fzc2V0c0FuZHJvaWQoZmlsZXMsIHRhcmdldFBhdGgpIHtcbiAgY29uc3QgYXNzZXRzID0gZ3JvdXBGaWxlc0J5VHlwZShmaWxlcyk7XG5cbiAgKGFzc2V0cy5mb250IHx8IFtdKS5mb3JFYWNoKChmaWxlKSA9PiB7XG4gICAgY29uc3QgZmlsZVBhdGggPSBwYXRoLmpvaW4odGFyZ2V0UGF0aCwgJ2ZvbnRzJywgcGF0aC5iYXNlbmFtZShmaWxlKSk7XG4gICAgaWYgKGZzLmV4aXN0c1N5bmMoZmlsZVBhdGgpKSB7XG4gICAgICBmcy51bmxpbmtTeW5jKGZpbGVQYXRoKTtcbiAgICB9XG4gIH0pO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "unlinkAssets.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "groupFilesByType",
        "module",
        "exports",
        "unlinkAssetsAndroid",
        "files",
        "targetPath",
        "assets",
        "font",
        "forEach",
        "file",
        "filePath",
        "join",
        "basename",
        "existsSync",
        "unlinkSync"
      ],
      "mappings": "aAAA,MAAMA,KAAKC,QAAQ,UAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,mBAAmBF,QAAQ,qBAAR,CAAzB;;AAEA;;;;;;AAMAG,OAAOC,OAAP,GAAiB,SAASC,mBAAT,CAA6BC,KAA7B,EAAoCC,UAApC,EAAgD;AAC/D,QAAMC,SAASN,iBAAiBI,KAAjB,CAAf;;AAEA,GAACE,OAAOC,IAAP,IAAe,EAAhB,EAAoBC,OAApB,CAA6BC,IAAD,IAAU;AACpC,UAAMC,WAAWX,KAAKY,IAAL,CAAUN,UAAV,EAAsB,OAAtB,EAA+BN,KAAKa,QAAL,CAAcH,IAAd,CAA/B,CAAjB;AACA,QAAIZ,GAAGgB,UAAH,CAAcH,QAAd,CAAJ,EAA6B;AAC3Bb,SAAGiB,UAAH,CAAcJ,QAAd;AACD;AACF,GALD;AAMD,CATD",
      "file": "unlinkAssets.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/android",
      "sourcesContent": [
        "const fs = require('fs-extra');\nconst path = require('path');\nconst groupFilesByType = require('../groupFilesByType');\n\n/**\n * Copies each file from an array of assets provided to targetPath directory\n *\n * For now, the only types of files that are handled are:\n * - Fonts (otf, ttf) - copied to targetPath/fonts under original name\n */\nmodule.exports = function unlinkAssetsAndroid(files, targetPath) {\n  const assets = groupFilesByType(files);\n\n  (assets.font || []).forEach((file) => {\n    const filePath = path.join(targetPath, 'fonts', path.basename(file));\n    if (fs.existsSync(filePath)) {\n      fs.unlinkSync(filePath);\n    }\n  });\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/unlinkAssets.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/unlinkAssets.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios/unlinkAssets.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "unlinkAssets.js",
      "sourceFileName": "unlinkAssets.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "unlinkAssets"
    },
    "ignored": false,
    "code": "'use strict';const fs = require('fs-extra');\nconst path = require('path');\nconst xcode = require('xcode');\nconst log = require('npmlog');\nconst groupFilesByType = require('../groupFilesByType');\nconst getPlist = require('./getPlist');\nconst writePlist = require('./writePlist');\nconst difference = require('lodash').difference;\n\n/**\n                                                  * Unlinks assets from iOS project. Removes references for fonts from `Info.plist`\n                                                  * fonts provided by application and from `Resources` group\n                                                  */\nmodule.exports = function unlinkAssetsIOS(files, projectConfig) {\n  const project = xcode.project(projectConfig.pbxprojPath).parseSync();\n  const assets = groupFilesByType(files);\n  const plist = getPlist(project, projectConfig.sourceDir);\n\n  if (!plist) {\n    return log.error(\n    'ERRPLIST',\n    'Could not locate Info.plist file. Check if your project has \\'INFOPLIST_FILE\\' set properly');\n\n  }\n\n  if (!project.pbxGroupByName('Resources')) {\n    return log.error(\n    'ERRGROUP',\n    'Group \\'Resources\\' does not exist in your Xcode project. There is nothing to unlink.');\n\n  }\n\n  const removeResourceFile = function (f) {\n    (f || []).\n    map(asset =>\n    project.removeResourceFile(\n    path.relative(projectConfig.sourceDir, asset),\n    { target: project.getFirstTarget().uuid })).\n\n\n    map(file => file.basename);\n  };\n\n  removeResourceFile(assets.image);\n\n  const fonts = removeResourceFile(assets.font);\n\n  plist.UIAppFonts = difference(plist.UIAppFonts || [], fonts);\n\n  fs.writeFileSync(\n  projectConfig.pbxprojPath,\n  project.writeSync());\n\n\n  writePlist(project, projectConfig.sourceDir, plist);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVubGlua0Fzc2V0cy5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJwYXRoIiwieGNvZGUiLCJsb2ciLCJncm91cEZpbGVzQnlUeXBlIiwiZ2V0UGxpc3QiLCJ3cml0ZVBsaXN0IiwiZGlmZmVyZW5jZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ1bmxpbmtBc3NldHNJT1MiLCJmaWxlcyIsInByb2plY3RDb25maWciLCJwcm9qZWN0IiwicGJ4cHJvalBhdGgiLCJwYXJzZVN5bmMiLCJhc3NldHMiLCJwbGlzdCIsInNvdXJjZURpciIsImVycm9yIiwicGJ4R3JvdXBCeU5hbWUiLCJyZW1vdmVSZXNvdXJjZUZpbGUiLCJmIiwibWFwIiwiYXNzZXQiLCJyZWxhdGl2ZSIsInRhcmdldCIsImdldEZpcnN0VGFyZ2V0IiwidXVpZCIsImZpbGUiLCJiYXNlbmFtZSIsImltYWdlIiwiZm9udHMiLCJmb250IiwiVUlBcHBGb250cyIsIndyaXRlRmlsZVN5bmMiLCJ3cml0ZVN5bmMiXSwibWFwcGluZ3MiOiJhQUFBLE1BQU1BLEtBQUtDLFFBQVEsVUFBUixDQUFYO0FBQ0EsTUFBTUMsT0FBT0QsUUFBUSxNQUFSLENBQWI7QUFDQSxNQUFNRSxRQUFRRixRQUFRLE9BQVIsQ0FBZDtBQUNBLE1BQU1HLE1BQU1ILFFBQVEsUUFBUixDQUFaO0FBQ0EsTUFBTUksbUJBQW1CSixRQUFRLHFCQUFSLENBQXpCO0FBQ0EsTUFBTUssV0FBV0wsUUFBUSxZQUFSLENBQWpCO0FBQ0EsTUFBTU0sYUFBYU4sUUFBUSxjQUFSLENBQW5CO0FBQ0EsTUFBTU8sYUFBYVAsUUFBUSxRQUFSLEVBQWtCTyxVQUFyQzs7QUFFQTs7OztBQUlBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLGVBQVQsQ0FBeUJDLEtBQXpCLEVBQWdDQyxhQUFoQyxFQUErQztBQUM5RCxRQUFNQyxVQUFVWCxNQUFNVyxPQUFOLENBQWNELGNBQWNFLFdBQTVCLEVBQXlDQyxTQUF6QyxFQUFoQjtBQUNBLFFBQU1DLFNBQVNaLGlCQUFpQk8sS0FBakIsQ0FBZjtBQUNBLFFBQU1NLFFBQVFaLFNBQVNRLE9BQVQsRUFBa0JELGNBQWNNLFNBQWhDLENBQWQ7O0FBRUEsTUFBSSxDQUFDRCxLQUFMLEVBQVk7QUFDVixXQUFPZCxJQUFJZ0IsS0FBSjtBQUNMLGNBREs7QUFFTCxpR0FGSyxDQUFQOztBQUlEOztBQUVELE1BQUksQ0FBQ04sUUFBUU8sY0FBUixDQUF1QixXQUF2QixDQUFMLEVBQTBDO0FBQ3hDLFdBQU9qQixJQUFJZ0IsS0FBSjtBQUNMLGNBREs7QUFFTCwyRkFGSyxDQUFQOztBQUlEOztBQUVELFFBQU1FLHFCQUFxQixVQUFVQyxDQUFWLEVBQWE7QUFDdEMsS0FBQ0EsS0FBSyxFQUFOO0FBQ0dDLE9BREgsQ0FDT0M7QUFDSFgsWUFBUVEsa0JBQVI7QUFDRXBCLFNBQUt3QixRQUFMLENBQWNiLGNBQWNNLFNBQTVCLEVBQXVDTSxLQUF2QyxDQURGO0FBRUUsTUFBRUUsUUFBUWIsUUFBUWMsY0FBUixHQUF5QkMsSUFBbkMsRUFGRixDQUZKOzs7QUFPR0wsT0FQSCxDQU9PTSxRQUFRQSxLQUFLQyxRQVBwQjtBQVFELEdBVEQ7O0FBV0FULHFCQUFtQkwsT0FBT2UsS0FBMUI7O0FBRUEsUUFBTUMsUUFBUVgsbUJBQW1CTCxPQUFPaUIsSUFBMUIsQ0FBZDs7QUFFQWhCLFFBQU1pQixVQUFOLEdBQW1CM0IsV0FBV1UsTUFBTWlCLFVBQU4sSUFBb0IsRUFBL0IsRUFBbUNGLEtBQW5DLENBQW5COztBQUVBakMsS0FBR29DLGFBQUg7QUFDRXZCLGdCQUFjRSxXQURoQjtBQUVFRCxVQUFRdUIsU0FBUixFQUZGOzs7QUFLQTlCLGFBQVdPLE9BQVgsRUFBb0JELGNBQWNNLFNBQWxDLEVBQTZDRCxLQUE3QztBQUNELENBMUNEIiwiZmlsZSI6InVubGlua0Fzc2V0cy5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS9saW5rL2lvcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZzID0gcmVxdWlyZSgnZnMtZXh0cmEnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCB4Y29kZSA9IHJlcXVpcmUoJ3hjb2RlJyk7XG5jb25zdCBsb2cgPSByZXF1aXJlKCducG1sb2cnKTtcbmNvbnN0IGdyb3VwRmlsZXNCeVR5cGUgPSByZXF1aXJlKCcuLi9ncm91cEZpbGVzQnlUeXBlJyk7XG5jb25zdCBnZXRQbGlzdCA9IHJlcXVpcmUoJy4vZ2V0UGxpc3QnKTtcbmNvbnN0IHdyaXRlUGxpc3QgPSByZXF1aXJlKCcuL3dyaXRlUGxpc3QnKTtcbmNvbnN0IGRpZmZlcmVuY2UgPSByZXF1aXJlKCdsb2Rhc2gnKS5kaWZmZXJlbmNlO1xuXG4vKipcbiAqIFVubGlua3MgYXNzZXRzIGZyb20gaU9TIHByb2plY3QuIFJlbW92ZXMgcmVmZXJlbmNlcyBmb3IgZm9udHMgZnJvbSBgSW5mby5wbGlzdGBcbiAqIGZvbnRzIHByb3ZpZGVkIGJ5IGFwcGxpY2F0aW9uIGFuZCBmcm9tIGBSZXNvdXJjZXNgIGdyb3VwXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gdW5saW5rQXNzZXRzSU9TKGZpbGVzLCBwcm9qZWN0Q29uZmlnKSB7XG4gIGNvbnN0IHByb2plY3QgPSB4Y29kZS5wcm9qZWN0KHByb2plY3RDb25maWcucGJ4cHJvalBhdGgpLnBhcnNlU3luYygpO1xuICBjb25zdCBhc3NldHMgPSBncm91cEZpbGVzQnlUeXBlKGZpbGVzKTtcbiAgY29uc3QgcGxpc3QgPSBnZXRQbGlzdChwcm9qZWN0LCBwcm9qZWN0Q29uZmlnLnNvdXJjZURpcik7XG5cbiAgaWYgKCFwbGlzdCkge1xuICAgIHJldHVybiBsb2cuZXJyb3IoXG4gICAgICAnRVJSUExJU1QnLFxuICAgICAgJ0NvdWxkIG5vdCBsb2NhdGUgSW5mby5wbGlzdCBmaWxlLiBDaGVjayBpZiB5b3VyIHByb2plY3QgaGFzIFxcJ0lORk9QTElTVF9GSUxFXFwnIHNldCBwcm9wZXJseSdcbiAgICApO1xuICB9XG5cbiAgaWYgKCFwcm9qZWN0LnBieEdyb3VwQnlOYW1lKCdSZXNvdXJjZXMnKSkge1xuICAgIHJldHVybiBsb2cuZXJyb3IoXG4gICAgICAnRVJSR1JPVVAnLFxuICAgICAgJ0dyb3VwIFxcJ1Jlc291cmNlc1xcJyBkb2VzIG5vdCBleGlzdCBpbiB5b3VyIFhjb2RlIHByb2plY3QuIFRoZXJlIGlzIG5vdGhpbmcgdG8gdW5saW5rLidcbiAgICApO1xuICB9XG5cbiAgY29uc3QgcmVtb3ZlUmVzb3VyY2VGaWxlID0gZnVuY3Rpb24gKGYpIHtcbiAgICAoZiB8fCBbXSlcbiAgICAgIC5tYXAoYXNzZXQgPT5cbiAgICAgICAgcHJvamVjdC5yZW1vdmVSZXNvdXJjZUZpbGUoXG4gICAgICAgICAgcGF0aC5yZWxhdGl2ZShwcm9qZWN0Q29uZmlnLnNvdXJjZURpciwgYXNzZXQpLFxuICAgICAgICAgIHsgdGFyZ2V0OiBwcm9qZWN0LmdldEZpcnN0VGFyZ2V0KCkudXVpZCB9XG4gICAgICAgIClcbiAgICAgIClcbiAgICAgIC5tYXAoZmlsZSA9PiBmaWxlLmJhc2VuYW1lKTtcbiAgfTtcblxuICByZW1vdmVSZXNvdXJjZUZpbGUoYXNzZXRzLmltYWdlKTtcblxuICBjb25zdCBmb250cyA9IHJlbW92ZVJlc291cmNlRmlsZShhc3NldHMuZm9udCk7XG5cbiAgcGxpc3QuVUlBcHBGb250cyA9IGRpZmZlcmVuY2UocGxpc3QuVUlBcHBGb250cyB8fCBbXSwgZm9udHMpO1xuXG4gIGZzLndyaXRlRmlsZVN5bmMoXG4gICAgcHJvamVjdENvbmZpZy5wYnhwcm9qUGF0aCxcbiAgICBwcm9qZWN0LndyaXRlU3luYygpXG4gICk7XG5cbiAgd3JpdGVQbGlzdChwcm9qZWN0LCBwcm9qZWN0Q29uZmlnLnNvdXJjZURpciwgcGxpc3QpO1xufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "unlinkAssets.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "xcode",
        "log",
        "groupFilesByType",
        "getPlist",
        "writePlist",
        "difference",
        "module",
        "exports",
        "unlinkAssetsIOS",
        "files",
        "projectConfig",
        "project",
        "pbxprojPath",
        "parseSync",
        "assets",
        "plist",
        "sourceDir",
        "error",
        "pbxGroupByName",
        "removeResourceFile",
        "f",
        "map",
        "asset",
        "relative",
        "target",
        "getFirstTarget",
        "uuid",
        "file",
        "basename",
        "image",
        "fonts",
        "font",
        "UIAppFonts",
        "writeFileSync",
        "writeSync"
      ],
      "mappings": "aAAA,MAAMA,KAAKC,QAAQ,UAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,QAAQF,QAAQ,OAAR,CAAd;AACA,MAAMG,MAAMH,QAAQ,QAAR,CAAZ;AACA,MAAMI,mBAAmBJ,QAAQ,qBAAR,CAAzB;AACA,MAAMK,WAAWL,QAAQ,YAAR,CAAjB;AACA,MAAMM,aAAaN,QAAQ,cAAR,CAAnB;AACA,MAAMO,aAAaP,QAAQ,QAAR,EAAkBO,UAArC;;AAEA;;;;AAIAC,OAAOC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,aAAhC,EAA+C;AAC9D,QAAMC,UAAUX,MAAMW,OAAN,CAAcD,cAAcE,WAA5B,EAAyCC,SAAzC,EAAhB;AACA,QAAMC,SAASZ,iBAAiBO,KAAjB,CAAf;AACA,QAAMM,QAAQZ,SAASQ,OAAT,EAAkBD,cAAcM,SAAhC,CAAd;;AAEA,MAAI,CAACD,KAAL,EAAY;AACV,WAAOd,IAAIgB,KAAJ;AACL,cADK;AAEL,iGAFK,CAAP;;AAID;;AAED,MAAI,CAACN,QAAQO,cAAR,CAAuB,WAAvB,CAAL,EAA0C;AACxC,WAAOjB,IAAIgB,KAAJ;AACL,cADK;AAEL,2FAFK,CAAP;;AAID;;AAED,QAAME,qBAAqB,UAAUC,CAAV,EAAa;AACtC,KAACA,KAAK,EAAN;AACGC,OADH,CACOC;AACHX,YAAQQ,kBAAR;AACEpB,SAAKwB,QAAL,CAAcb,cAAcM,SAA5B,EAAuCM,KAAvC,CADF;AAEE,MAAEE,QAAQb,QAAQc,cAAR,GAAyBC,IAAnC,EAFF,CAFJ;;;AAOGL,OAPH,CAOOM,QAAQA,KAAKC,QAPpB;AAQD,GATD;;AAWAT,qBAAmBL,OAAOe,KAA1B;;AAEA,QAAMC,QAAQX,mBAAmBL,OAAOiB,IAA1B,CAAd;;AAEAhB,QAAMiB,UAAN,GAAmB3B,WAAWU,MAAMiB,UAAN,IAAoB,EAA/B,EAAmCF,KAAnC,CAAnB;;AAEAjC,KAAGoC,aAAH;AACEvB,gBAAcE,WADhB;AAEED,UAAQuB,SAAR,EAFF;;;AAKA9B,aAAWO,OAAX,EAAoBD,cAAcM,SAAlC,EAA6CD,KAA7C;AACD,CA1CD",
      "file": "unlinkAssets.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/link/ios",
      "sourcesContent": [
        "const fs = require('fs-extra');\nconst path = require('path');\nconst xcode = require('xcode');\nconst log = require('npmlog');\nconst groupFilesByType = require('../groupFilesByType');\nconst getPlist = require('./getPlist');\nconst writePlist = require('./writePlist');\nconst difference = require('lodash').difference;\n\n/**\n * Unlinks assets from iOS project. Removes references for fonts from `Info.plist`\n * fonts provided by application and from `Resources` group\n */\nmodule.exports = function unlinkAssetsIOS(files, projectConfig) {\n  const project = xcode.project(projectConfig.pbxprojPath).parseSync();\n  const assets = groupFilesByType(files);\n  const plist = getPlist(project, projectConfig.sourceDir);\n\n  if (!plist) {\n    return log.error(\n      'ERRPLIST',\n      'Could not locate Info.plist file. Check if your project has \\'INFOPLIST_FILE\\' set properly'\n    );\n  }\n\n  if (!project.pbxGroupByName('Resources')) {\n    return log.error(\n      'ERRGROUP',\n      'Group \\'Resources\\' does not exist in your Xcode project. There is nothing to unlink.'\n    );\n  }\n\n  const removeResourceFile = function (f) {\n    (f || [])\n      .map(asset =>\n        project.removeResourceFile(\n          path.relative(projectConfig.sourceDir, asset),\n          { target: project.getFirstTarget().uuid }\n        )\n      )\n      .map(file => file.basename);\n  };\n\n  removeResourceFile(assets.image);\n\n  const fonts = removeResourceFile(assets.font);\n\n  plist.UIAppFonts = difference(plist.UIAppFonts || [], fonts);\n\n  fs.writeFileSync(\n    projectConfig.pbxprojPath,\n    project.writeSync()\n  );\n\n  writePlist(project, projectConfig.sourceDir, plist);\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/install/install.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/install\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/install/install.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/install/install.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "install.js",
      "sourceFileName": "install.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/install",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/install",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "install"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst spawnSync = require('child_process').spawnSync;\nconst log = require('npmlog');\nconst PackageManager = require('../util/PackageManager');\nconst spawnOpts = {\n  stdio: 'inherit',\n  stdin: 'inherit' };\n\n\nlog.heading = 'rnpm-install';\n\nfunction install(args, config) {\n  const name = args[0];\n\n  let res = PackageManager.add(name);\n\n  if (res.status) {\n    process.exit(res.status);\n  }\n\n  res = spawnSync('react-native', ['link', name], spawnOpts);\n\n  if (res.status) {\n    process.exit(res.status);\n  }\n\n  log.info(`Module ${name} has been successfully installed & linked`);\n}\n\nmodule.exports = {\n  func: install,\n  description: 'install and link native dependencies',\n  name: 'install <packageName>' };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluc3RhbGwuanMiXSwibmFtZXMiOlsic3Bhd25TeW5jIiwicmVxdWlyZSIsImxvZyIsIlBhY2thZ2VNYW5hZ2VyIiwic3Bhd25PcHRzIiwic3RkaW8iLCJzdGRpbiIsImhlYWRpbmciLCJpbnN0YWxsIiwiYXJncyIsImNvbmZpZyIsIm5hbWUiLCJyZXMiLCJhZGQiLCJzdGF0dXMiLCJwcm9jZXNzIiwiZXhpdCIsImluZm8iLCJtb2R1bGUiLCJleHBvcnRzIiwiZnVuYyIsImRlc2NyaXB0aW9uIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFRQTs7QUFFQSxNQUFNQSxZQUFZQyxRQUFRLGVBQVIsRUFBeUJELFNBQTNDO0FBQ0EsTUFBTUUsTUFBTUQsUUFBUSxRQUFSLENBQVo7QUFDQSxNQUFNRSxpQkFBaUJGLFFBQVEsd0JBQVIsQ0FBdkI7QUFDQSxNQUFNRyxZQUFZO0FBQ2hCQyxTQUFPLFNBRFM7QUFFaEJDLFNBQU8sU0FGUyxFQUFsQjs7O0FBS0FKLElBQUlLLE9BQUosR0FBYyxjQUFkOztBQUVBLFNBQVNDLE9BQVQsQ0FBaUJDLElBQWpCLEVBQXVCQyxNQUF2QixFQUErQjtBQUM3QixRQUFNQyxPQUFPRixLQUFLLENBQUwsQ0FBYjs7QUFFQSxNQUFJRyxNQUFNVCxlQUFlVSxHQUFmLENBQW1CRixJQUFuQixDQUFWOztBQUVBLE1BQUlDLElBQUlFLE1BQVIsRUFBZ0I7QUFDZEMsWUFBUUMsSUFBUixDQUFhSixJQUFJRSxNQUFqQjtBQUNEOztBQUVERixRQUFNWixVQUFVLGNBQVYsRUFBMEIsQ0FBQyxNQUFELEVBQVNXLElBQVQsQ0FBMUIsRUFBMENQLFNBQTFDLENBQU47O0FBRUEsTUFBSVEsSUFBSUUsTUFBUixFQUFnQjtBQUNkQyxZQUFRQyxJQUFSLENBQWFKLElBQUlFLE1BQWpCO0FBQ0Q7O0FBRURaLE1BQUllLElBQUosQ0FBVSxVQUFTTixJQUFLLDJDQUF4QjtBQUNEOztBQUVETyxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLFFBQU1aLE9BRFM7QUFFZmEsZUFBYSxzQ0FGRTtBQUdmVixRQUFNLHVCQUhTLEVBQWpCIiwiZmlsZSI6Imluc3RhbGwuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvaW5zdGFsbCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBzcGF3blN5bmMgPSByZXF1aXJlKCdjaGlsZF9wcm9jZXNzJykuc3Bhd25TeW5jO1xuY29uc3QgbG9nID0gcmVxdWlyZSgnbnBtbG9nJyk7XG5jb25zdCBQYWNrYWdlTWFuYWdlciA9IHJlcXVpcmUoJy4uL3V0aWwvUGFja2FnZU1hbmFnZXInKTtcbmNvbnN0IHNwYXduT3B0cyA9IHtcbiAgc3RkaW86ICdpbmhlcml0JyxcbiAgc3RkaW46ICdpbmhlcml0Jyxcbn07XG5cbmxvZy5oZWFkaW5nID0gJ3JucG0taW5zdGFsbCc7XG5cbmZ1bmN0aW9uIGluc3RhbGwoYXJncywgY29uZmlnKSB7XG4gIGNvbnN0IG5hbWUgPSBhcmdzWzBdO1xuXG4gIGxldCByZXMgPSBQYWNrYWdlTWFuYWdlci5hZGQobmFtZSk7XG5cbiAgaWYgKHJlcy5zdGF0dXMpIHtcbiAgICBwcm9jZXNzLmV4aXQocmVzLnN0YXR1cyk7XG4gIH1cblxuICByZXMgPSBzcGF3blN5bmMoJ3JlYWN0LW5hdGl2ZScsIFsnbGluaycsIG5hbWVdLCBzcGF3bk9wdHMpO1xuXG4gIGlmIChyZXMuc3RhdHVzKSB7XG4gICAgcHJvY2Vzcy5leGl0KHJlcy5zdGF0dXMpO1xuICB9XG5cbiAgbG9nLmluZm8oYE1vZHVsZSAke25hbWV9IGhhcyBiZWVuIHN1Y2Nlc3NmdWxseSBpbnN0YWxsZWQgJiBsaW5rZWRgKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGZ1bmM6IGluc3RhbGwsXG4gIGRlc2NyaXB0aW9uOiAnaW5zdGFsbCBhbmQgbGluayBuYXRpdmUgZGVwZW5kZW5jaWVzJyxcbiAgbmFtZTogJ2luc3RhbGwgPHBhY2thZ2VOYW1lPicsXG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "install.js"
      ],
      "names": [
        "spawnSync",
        "require",
        "log",
        "PackageManager",
        "spawnOpts",
        "stdio",
        "stdin",
        "heading",
        "install",
        "args",
        "config",
        "name",
        "res",
        "add",
        "status",
        "process",
        "exit",
        "info",
        "module",
        "exports",
        "func",
        "description"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,YAAYC,QAAQ,eAAR,EAAyBD,SAA3C;AACA,MAAME,MAAMD,QAAQ,QAAR,CAAZ;AACA,MAAME,iBAAiBF,QAAQ,wBAAR,CAAvB;AACA,MAAMG,YAAY;AAChBC,SAAO,SADS;AAEhBC,SAAO,SAFS,EAAlB;;;AAKAJ,IAAIK,OAAJ,GAAc,cAAd;;AAEA,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,MAAvB,EAA+B;AAC7B,QAAMC,OAAOF,KAAK,CAAL,CAAb;;AAEA,MAAIG,MAAMT,eAAeU,GAAf,CAAmBF,IAAnB,CAAV;;AAEA,MAAIC,IAAIE,MAAR,EAAgB;AACdC,YAAQC,IAAR,CAAaJ,IAAIE,MAAjB;AACD;;AAEDF,QAAMZ,UAAU,cAAV,EAA0B,CAAC,MAAD,EAASW,IAAT,CAA1B,EAA0CP,SAA1C,CAAN;;AAEA,MAAIQ,IAAIE,MAAR,EAAgB;AACdC,YAAQC,IAAR,CAAaJ,IAAIE,MAAjB;AACD;;AAEDZ,MAAIe,IAAJ,CAAU,UAASN,IAAK,2CAAxB;AACD;;AAEDO,OAAOC,OAAP,GAAiB;AACfC,QAAMZ,OADS;AAEfa,eAAa,sCAFE;AAGfV,QAAM,uBAHS,EAAjB",
      "file": "install.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/install",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst spawnSync = require('child_process').spawnSync;\nconst log = require('npmlog');\nconst PackageManager = require('../util/PackageManager');\nconst spawnOpts = {\n  stdio: 'inherit',\n  stdin: 'inherit',\n};\n\nlog.heading = 'rnpm-install';\n\nfunction install(args, config) {\n  const name = args[0];\n\n  let res = PackageManager.add(name);\n\n  if (res.status) {\n    process.exit(res.status);\n  }\n\n  res = spawnSync('react-native', ['link', name], spawnOpts);\n\n  if (res.status) {\n    process.exit(res.status);\n  }\n\n  log.info(`Module ${name} has been successfully installed & linked`);\n}\n\nmodule.exports = {\n  func: install,\n  description: 'install and link native dependencies',\n  name: 'install <packageName>',\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/PackageManager.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/PackageManager.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/PackageManager.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "PackageManager.js",
      "sourceFileName": "PackageManager.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "PackageManager"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst spawnSync = require('child_process').spawnSync;\nconst yarn = require('../util/yarn');\nconst spawnOpts = {\n  stdio: 'inherit',\n  stdin: 'inherit' };\n\n\n/**\n                       * Execute npm or yarn command\n                       *\n                       * @param  {String} yarnCommand Yarn command to be executed eg. yarn add package\n                       * @param  {String} npmCommand  Npm command to be executed eg. npm install package\n                       * @return {object}             spawnSync's result object\n                       */\nfunction callYarnOrNpm(yarnCommand, npmCommand) {\n  let command;\n\n  const projectDir = process.cwd();\n  const isYarnAvailable =\n  yarn.getYarnVersionIfAvailable() &&\n  yarn.isGlobalCliUsingYarn(projectDir);\n\n  if (isYarnAvailable) {\n    command = yarnCommand;\n  } else {\n    command = npmCommand;\n  }\n\n  const args = command.split(' ');\n  const cmd = args.shift();\n\n  const res = spawnSync(cmd, args, spawnOpts);\n\n  return res;\n}\n\n/**\n   * Install package into project using npm or yarn if available\n   * @param  {[type]} packageName Package to be installed\n   * @return {[type]}             spawnSync's result object\n   */\nfunction add(packageName) {\n  return callYarnOrNpm(\n  `yarn add ${packageName}`,\n  `npm install ${packageName} --save`);\n\n}\n\n/**\n   * Uninstall package from project using npm or yarn if available\n   * @param  {[type]} packageName Package to be uninstalled\n   * @return {Object}             spawnSync's result object\n   */\nfunction remove(packageName) {\n  return callYarnOrNpm(\n  `yarn remove ${packageName}`,\n  `npm uninstall --save ${packageName}`);\n\n}\n\nmodule.exports = {\n  add: add,\n  remove: remove };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBhY2thZ2VNYW5hZ2VyLmpzIl0sIm5hbWVzIjpbInNwYXduU3luYyIsInJlcXVpcmUiLCJ5YXJuIiwic3Bhd25PcHRzIiwic3RkaW8iLCJzdGRpbiIsImNhbGxZYXJuT3JOcG0iLCJ5YXJuQ29tbWFuZCIsIm5wbUNvbW1hbmQiLCJjb21tYW5kIiwicHJvamVjdERpciIsInByb2Nlc3MiLCJjd2QiLCJpc1lhcm5BdmFpbGFibGUiLCJnZXRZYXJuVmVyc2lvbklmQXZhaWxhYmxlIiwiaXNHbG9iYWxDbGlVc2luZ1lhcm4iLCJhcmdzIiwic3BsaXQiLCJjbWQiLCJzaGlmdCIsInJlcyIsImFkZCIsInBhY2thZ2VOYW1lIiwicmVtb3ZlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUEsTUFBTUEsWUFBWUMsUUFBUSxlQUFSLEVBQXlCRCxTQUEzQztBQUNBLE1BQU1FLE9BQU9ELFFBQVEsY0FBUixDQUFiO0FBQ0EsTUFBTUUsWUFBWTtBQUNoQkMsU0FBTyxTQURTO0FBRWhCQyxTQUFPLFNBRlMsRUFBbEI7OztBQUtBOzs7Ozs7O0FBT0EsU0FBU0MsYUFBVCxDQUF1QkMsV0FBdkIsRUFBb0NDLFVBQXBDLEVBQWdEO0FBQzlDLE1BQUlDLE9BQUo7O0FBRUEsUUFBTUMsYUFBYUMsUUFBUUMsR0FBUixFQUFuQjtBQUNBLFFBQU1DO0FBQ0pYLE9BQUtZLHlCQUFMO0FBQ0FaLE9BQUthLG9CQUFMLENBQTBCTCxVQUExQixDQUZGOztBQUlBLE1BQUlHLGVBQUosRUFBcUI7QUFDbkJKLGNBQVVGLFdBQVY7QUFDRCxHQUZELE1BRU87QUFDTEUsY0FBVUQsVUFBVjtBQUNEOztBQUVELFFBQU1RLE9BQU9QLFFBQVFRLEtBQVIsQ0FBYyxHQUFkLENBQWI7QUFDQSxRQUFNQyxNQUFNRixLQUFLRyxLQUFMLEVBQVo7O0FBRUEsUUFBTUMsTUFBTXBCLFVBQVVrQixHQUFWLEVBQWVGLElBQWYsRUFBcUJiLFNBQXJCLENBQVo7O0FBRUEsU0FBT2lCLEdBQVA7QUFDRDs7QUFFRDs7Ozs7QUFLQSxTQUFTQyxHQUFULENBQWFDLFdBQWIsRUFBMEI7QUFDeEIsU0FBT2hCO0FBQ0osY0FBV2dCLFdBQVksRUFEbkI7QUFFSixpQkFBY0EsV0FBWSxTQUZ0QixDQUFQOztBQUlEOztBQUVEOzs7OztBQUtBLFNBQVNDLE1BQVQsQ0FBZ0JELFdBQWhCLEVBQTZCO0FBQzNCLFNBQU9oQjtBQUNKLGlCQUFjZ0IsV0FBWSxFQUR0QjtBQUVKLDBCQUF1QkEsV0FBWSxFQUYvQixDQUFQOztBQUlEOztBQUVERSxPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZKLE9BQUtBLEdBRFU7QUFFZkUsVUFBUUEsTUFGTyxFQUFqQiIsImZpbGUiOiJQYWNrYWdlTWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmlub2RwcmFqYXBhdGkvcmVhY3QtbmF0aXZlLW1vbnRoLXNlbGVjdG9yL2V4YW1wbGUvZXhhbXBsZS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL2xvY2FsLWNsaS91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IHNwYXduU3luYyA9IHJlcXVpcmUoJ2NoaWxkX3Byb2Nlc3MnKS5zcGF3blN5bmM7XG5jb25zdCB5YXJuID0gcmVxdWlyZSgnLi4vdXRpbC95YXJuJyk7XG5jb25zdCBzcGF3bk9wdHMgPSB7XG4gIHN0ZGlvOiAnaW5oZXJpdCcsXG4gIHN0ZGluOiAnaW5oZXJpdCcsXG59O1xuXG4vKipcbiAqIEV4ZWN1dGUgbnBtIG9yIHlhcm4gY29tbWFuZFxuICpcbiAqIEBwYXJhbSAge1N0cmluZ30geWFybkNvbW1hbmQgWWFybiBjb21tYW5kIHRvIGJlIGV4ZWN1dGVkIGVnLiB5YXJuIGFkZCBwYWNrYWdlXG4gKiBAcGFyYW0gIHtTdHJpbmd9IG5wbUNvbW1hbmQgIE5wbSBjb21tYW5kIHRvIGJlIGV4ZWN1dGVkIGVnLiBucG0gaW5zdGFsbCBwYWNrYWdlXG4gKiBAcmV0dXJuIHtvYmplY3R9ICAgICAgICAgICAgIHNwYXduU3luYydzIHJlc3VsdCBvYmplY3RcbiAqL1xuZnVuY3Rpb24gY2FsbFlhcm5Pck5wbSh5YXJuQ29tbWFuZCwgbnBtQ29tbWFuZCkge1xuICBsZXQgY29tbWFuZDtcblxuICBjb25zdCBwcm9qZWN0RGlyID0gcHJvY2Vzcy5jd2QoKTtcbiAgY29uc3QgaXNZYXJuQXZhaWxhYmxlID1cbiAgICB5YXJuLmdldFlhcm5WZXJzaW9uSWZBdmFpbGFibGUoKSAmJlxuICAgIHlhcm4uaXNHbG9iYWxDbGlVc2luZ1lhcm4ocHJvamVjdERpcik7XG5cbiAgaWYgKGlzWWFybkF2YWlsYWJsZSkge1xuICAgIGNvbW1hbmQgPSB5YXJuQ29tbWFuZDtcbiAgfSBlbHNlIHtcbiAgICBjb21tYW5kID0gbnBtQ29tbWFuZDtcbiAgfVxuXG4gIGNvbnN0IGFyZ3MgPSBjb21tYW5kLnNwbGl0KCcgJyk7XG4gIGNvbnN0IGNtZCA9IGFyZ3Muc2hpZnQoKTtcblxuICBjb25zdCByZXMgPSBzcGF3blN5bmMoY21kLCBhcmdzLCBzcGF3bk9wdHMpO1xuXG4gIHJldHVybiByZXM7XG59XG5cbi8qKlxuICogSW5zdGFsbCBwYWNrYWdlIGludG8gcHJvamVjdCB1c2luZyBucG0gb3IgeWFybiBpZiBhdmFpbGFibGVcbiAqIEBwYXJhbSAge1t0eXBlXX0gcGFja2FnZU5hbWUgUGFja2FnZSB0byBiZSBpbnN0YWxsZWRcbiAqIEByZXR1cm4ge1t0eXBlXX0gICAgICAgICAgICAgc3Bhd25TeW5jJ3MgcmVzdWx0IG9iamVjdFxuICovXG5mdW5jdGlvbiBhZGQocGFja2FnZU5hbWUpIHtcbiAgcmV0dXJuIGNhbGxZYXJuT3JOcG0oXG4gICAgYHlhcm4gYWRkICR7cGFja2FnZU5hbWV9YCxcbiAgICBgbnBtIGluc3RhbGwgJHtwYWNrYWdlTmFtZX0gLS1zYXZlYFxuICApO1xufVxuXG4vKipcbiAqIFVuaW5zdGFsbCBwYWNrYWdlIGZyb20gcHJvamVjdCB1c2luZyBucG0gb3IgeWFybiBpZiBhdmFpbGFibGVcbiAqIEBwYXJhbSAge1t0eXBlXX0gcGFja2FnZU5hbWUgUGFja2FnZSB0byBiZSB1bmluc3RhbGxlZFxuICogQHJldHVybiB7T2JqZWN0fSAgICAgICAgICAgICBzcGF3blN5bmMncyByZXN1bHQgb2JqZWN0XG4gKi9cbmZ1bmN0aW9uIHJlbW92ZShwYWNrYWdlTmFtZSkge1xuICByZXR1cm4gY2FsbFlhcm5Pck5wbShcbiAgICBgeWFybiByZW1vdmUgJHtwYWNrYWdlTmFtZX1gLFxuICAgIGBucG0gdW5pbnN0YWxsIC0tc2F2ZSAke3BhY2thZ2VOYW1lfWBcbiAgKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGFkZDogYWRkLFxuICByZW1vdmU6IHJlbW92ZSxcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "PackageManager.js"
      ],
      "names": [
        "spawnSync",
        "require",
        "yarn",
        "spawnOpts",
        "stdio",
        "stdin",
        "callYarnOrNpm",
        "yarnCommand",
        "npmCommand",
        "command",
        "projectDir",
        "process",
        "cwd",
        "isYarnAvailable",
        "getYarnVersionIfAvailable",
        "isGlobalCliUsingYarn",
        "args",
        "split",
        "cmd",
        "shift",
        "res",
        "add",
        "packageName",
        "remove",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,YAAYC,QAAQ,eAAR,EAAyBD,SAA3C;AACA,MAAME,OAAOD,QAAQ,cAAR,CAAb;AACA,MAAME,YAAY;AAChBC,SAAO,SADS;AAEhBC,SAAO,SAFS,EAAlB;;;AAKA;;;;;;;AAOA,SAASC,aAAT,CAAuBC,WAAvB,EAAoCC,UAApC,EAAgD;AAC9C,MAAIC,OAAJ;;AAEA,QAAMC,aAAaC,QAAQC,GAAR,EAAnB;AACA,QAAMC;AACJX,OAAKY,yBAAL;AACAZ,OAAKa,oBAAL,CAA0BL,UAA1B,CAFF;;AAIA,MAAIG,eAAJ,EAAqB;AACnBJ,cAAUF,WAAV;AACD,GAFD,MAEO;AACLE,cAAUD,UAAV;AACD;;AAED,QAAMQ,OAAOP,QAAQQ,KAAR,CAAc,GAAd,CAAb;AACA,QAAMC,MAAMF,KAAKG,KAAL,EAAZ;;AAEA,QAAMC,MAAMpB,UAAUkB,GAAV,EAAeF,IAAf,EAAqBb,SAArB,CAAZ;;AAEA,SAAOiB,GAAP;AACD;;AAED;;;;;AAKA,SAASC,GAAT,CAAaC,WAAb,EAA0B;AACxB,SAAOhB;AACJ,cAAWgB,WAAY,EADnB;AAEJ,iBAAcA,WAAY,SAFtB,CAAP;;AAID;;AAED;;;;;AAKA,SAASC,MAAT,CAAgBD,WAAhB,EAA6B;AAC3B,SAAOhB;AACJ,iBAAcgB,WAAY,EADtB;AAEJ,0BAAuBA,WAAY,EAF/B,CAAP;;AAID;;AAEDE,OAAOC,OAAP,GAAiB;AACfJ,OAAKA,GADU;AAEfE,UAAQA,MAFO,EAAjB",
      "file": "PackageManager.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst spawnSync = require('child_process').spawnSync;\nconst yarn = require('../util/yarn');\nconst spawnOpts = {\n  stdio: 'inherit',\n  stdin: 'inherit',\n};\n\n/**\n * Execute npm or yarn command\n *\n * @param  {String} yarnCommand Yarn command to be executed eg. yarn add package\n * @param  {String} npmCommand  Npm command to be executed eg. npm install package\n * @return {object}             spawnSync's result object\n */\nfunction callYarnOrNpm(yarnCommand, npmCommand) {\n  let command;\n\n  const projectDir = process.cwd();\n  const isYarnAvailable =\n    yarn.getYarnVersionIfAvailable() &&\n    yarn.isGlobalCliUsingYarn(projectDir);\n\n  if (isYarnAvailable) {\n    command = yarnCommand;\n  } else {\n    command = npmCommand;\n  }\n\n  const args = command.split(' ');\n  const cmd = args.shift();\n\n  const res = spawnSync(cmd, args, spawnOpts);\n\n  return res;\n}\n\n/**\n * Install package into project using npm or yarn if available\n * @param  {[type]} packageName Package to be installed\n * @return {[type]}             spawnSync's result object\n */\nfunction add(packageName) {\n  return callYarnOrNpm(\n    `yarn add ${packageName}`,\n    `npm install ${packageName} --save`\n  );\n}\n\n/**\n * Uninstall package from project using npm or yarn if available\n * @param  {[type]} packageName Package to be uninstalled\n * @return {Object}             spawnSync's result object\n */\nfunction remove(packageName) {\n  return callYarnOrNpm(\n    `yarn remove ${packageName}`,\n    `npm uninstall --save ${packageName}`\n  );\n}\n\nmodule.exports = {\n  add: add,\n  remove: remove,\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/yarn.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/yarn.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util/yarn.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "yarn.js",
      "sourceFileName": "yarn.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "yarn"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst execSync = require('child_process').execSync;\nconst fs = require('fs');\nconst path = require('path');\nconst semver = require('semver');\n\n/**\n                                   * Use Yarn if available, it's much faster than the npm client.\n                                   * Return the version of yarn installed on the system, null if yarn is not available.\n                                   */\nfunction getYarnVersionIfAvailable() {\n  let yarnVersion;\n  try {\n    // execSync returns a Buffer -> convert to string\n    yarnVersion = (execSync('yarn --version', {\n      stdio: [0, 'pipe', 'ignore'] }).\n    toString() || '').trim();\n  } catch (error) {\n    return null;\n  }\n  // yarn < 0.16 has a 'missing manifest' bug\n  try {\n    if (semver.gte(yarnVersion, '0.16.0')) {\n      return yarnVersion;\n    } else {\n      return null;\n    }\n  } catch (error) {\n    console.error('Cannot parse yarn version: ' + yarnVersion);\n    return null;\n  }\n}\n\n/**\n   * Check that 'react-native init' itself used yarn to install React Native.\n   * When using an old global react-native-cli@1.0.0 (or older), we don't want\n   * to install React Native with npm, and React + Jest with yarn.\n   * Let's be safe and not mix yarn and npm in a single project.\n   * @param projectDir e.g. /Users/martin/AwesomeApp\n   */\nfunction isGlobalCliUsingYarn(projectDir) {\n  return fs.existsSync(path.join(projectDir, 'yarn.lock'));\n}\n\nmodule.exports = {\n  getYarnVersionIfAvailable: getYarnVersionIfAvailable,\n  isGlobalCliUsingYarn: isGlobalCliUsingYarn };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInlhcm4uanMiXSwibmFtZXMiOlsiZXhlY1N5bmMiLCJyZXF1aXJlIiwiZnMiLCJwYXRoIiwic2VtdmVyIiwiZ2V0WWFyblZlcnNpb25JZkF2YWlsYWJsZSIsInlhcm5WZXJzaW9uIiwic3RkaW8iLCJ0b1N0cmluZyIsInRyaW0iLCJlcnJvciIsImd0ZSIsImNvbnNvbGUiLCJpc0dsb2JhbENsaVVzaW5nWWFybiIsInByb2plY3REaXIiLCJleGlzdHNTeW5jIiwiam9pbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLE1BQU1BLFdBQVdDLFFBQVEsZUFBUixFQUF5QkQsUUFBMUM7QUFDQSxNQUFNRSxLQUFLRCxRQUFRLElBQVIsQ0FBWDtBQUNBLE1BQU1FLE9BQU9GLFFBQVEsTUFBUixDQUFiO0FBQ0EsTUFBTUcsU0FBU0gsUUFBUSxRQUFSLENBQWY7O0FBRUE7Ozs7QUFJQSxTQUFTSSx5QkFBVCxHQUFxQztBQUNuQyxNQUFJQyxXQUFKO0FBQ0EsTUFBSTtBQUNGO0FBQ0FBLGtCQUFjLENBQUNOLFNBQVMsZ0JBQVQsRUFBMkI7QUFDeENPLGFBQU8sQ0FBRSxDQUFGLEVBQUssTUFBTCxFQUFhLFFBQWIsQ0FEaUMsRUFBM0I7QUFFWkMsWUFGWSxNQUVFLEVBRkgsRUFFT0MsSUFGUCxFQUFkO0FBR0QsR0FMRCxDQUtFLE9BQU9DLEtBQVAsRUFBYztBQUNkLFdBQU8sSUFBUDtBQUNEO0FBQ0Q7QUFDQSxNQUFJO0FBQ0YsUUFBSU4sT0FBT08sR0FBUCxDQUFXTCxXQUFYLEVBQXdCLFFBQXhCLENBQUosRUFBdUM7QUFDckMsYUFBT0EsV0FBUDtBQUNELEtBRkQsTUFFTztBQUNMLGFBQU8sSUFBUDtBQUNEO0FBQ0YsR0FORCxDQU1FLE9BQU9JLEtBQVAsRUFBYztBQUNkRSxZQUFRRixLQUFSLENBQWMsZ0NBQWdDSixXQUE5QztBQUNBLFdBQU8sSUFBUDtBQUNEO0FBQ0Y7O0FBRUQ7Ozs7Ozs7QUFPQSxTQUFTTyxvQkFBVCxDQUE4QkMsVUFBOUIsRUFBMEM7QUFDeEMsU0FBT1osR0FBR2EsVUFBSCxDQUFjWixLQUFLYSxJQUFMLENBQVVGLFVBQVYsRUFBc0IsV0FBdEIsQ0FBZCxDQUFQO0FBQ0Q7O0FBRURHLE9BQU9DLE9BQVAsR0FBaUI7QUFDZmIsNkJBQTJCQSx5QkFEWjtBQUVmUSx3QkFBc0JBLG9CQUZQLEVBQWpCIiwiZmlsZSI6Inlhcm4uanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBleGVjU3luYyA9IHJlcXVpcmUoJ2NoaWxkX3Byb2Nlc3MnKS5leGVjU3luYztcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBzZW12ZXIgPSByZXF1aXJlKCdzZW12ZXInKTtcblxuLyoqXG4gKiBVc2UgWWFybiBpZiBhdmFpbGFibGUsIGl0J3MgbXVjaCBmYXN0ZXIgdGhhbiB0aGUgbnBtIGNsaWVudC5cbiAqIFJldHVybiB0aGUgdmVyc2lvbiBvZiB5YXJuIGluc3RhbGxlZCBvbiB0aGUgc3lzdGVtLCBudWxsIGlmIHlhcm4gaXMgbm90IGF2YWlsYWJsZS5cbiAqL1xuZnVuY3Rpb24gZ2V0WWFyblZlcnNpb25JZkF2YWlsYWJsZSgpIHtcbiAgbGV0IHlhcm5WZXJzaW9uO1xuICB0cnkge1xuICAgIC8vIGV4ZWNTeW5jIHJldHVybnMgYSBCdWZmZXIgLT4gY29udmVydCB0byBzdHJpbmdcbiAgICB5YXJuVmVyc2lvbiA9IChleGVjU3luYygneWFybiAtLXZlcnNpb24nLCB7XG4gICAgICBzdGRpbzogWyAwLCAncGlwZScsICdpZ25vcmUnLCBdXG4gICAgfSkudG9TdHJpbmcoKSB8fCAnJykudHJpbSgpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIC8vIHlhcm4gPCAwLjE2IGhhcyBhICdtaXNzaW5nIG1hbmlmZXN0JyBidWdcbiAgdHJ5IHtcbiAgICBpZiAoc2VtdmVyLmd0ZSh5YXJuVmVyc2lvbiwgJzAuMTYuMCcpKSB7XG4gICAgICByZXR1cm4geWFyblZlcnNpb247XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdDYW5ub3QgcGFyc2UgeWFybiB2ZXJzaW9uOiAnICsgeWFyblZlcnNpb24pO1xuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbi8qKlxuICogQ2hlY2sgdGhhdCAncmVhY3QtbmF0aXZlIGluaXQnIGl0c2VsZiB1c2VkIHlhcm4gdG8gaW5zdGFsbCBSZWFjdCBOYXRpdmUuXG4gKiBXaGVuIHVzaW5nIGFuIG9sZCBnbG9iYWwgcmVhY3QtbmF0aXZlLWNsaUAxLjAuMCAob3Igb2xkZXIpLCB3ZSBkb24ndCB3YW50XG4gKiB0byBpbnN0YWxsIFJlYWN0IE5hdGl2ZSB3aXRoIG5wbSwgYW5kIFJlYWN0ICsgSmVzdCB3aXRoIHlhcm4uXG4gKiBMZXQncyBiZSBzYWZlIGFuZCBub3QgbWl4IHlhcm4gYW5kIG5wbSBpbiBhIHNpbmdsZSBwcm9qZWN0LlxuICogQHBhcmFtIHByb2plY3REaXIgZS5nLiAvVXNlcnMvbWFydGluL0F3ZXNvbWVBcHBcbiAqL1xuZnVuY3Rpb24gaXNHbG9iYWxDbGlVc2luZ1lhcm4ocHJvamVjdERpcikge1xuICByZXR1cm4gZnMuZXhpc3RzU3luYyhwYXRoLmpvaW4ocHJvamVjdERpciwgJ3lhcm4ubG9jaycpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldFlhcm5WZXJzaW9uSWZBdmFpbGFibGU6IGdldFlhcm5WZXJzaW9uSWZBdmFpbGFibGUsXG4gIGlzR2xvYmFsQ2xpVXNpbmdZYXJuOiBpc0dsb2JhbENsaVVzaW5nWWFybixcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "yarn.js"
      ],
      "names": [
        "execSync",
        "require",
        "fs",
        "path",
        "semver",
        "getYarnVersionIfAvailable",
        "yarnVersion",
        "stdio",
        "toString",
        "trim",
        "error",
        "gte",
        "console",
        "isGlobalCliUsingYarn",
        "projectDir",
        "existsSync",
        "join",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,WAAWC,QAAQ,eAAR,EAAyBD,QAA1C;AACA,MAAME,KAAKD,QAAQ,IAAR,CAAX;AACA,MAAME,OAAOF,QAAQ,MAAR,CAAb;AACA,MAAMG,SAASH,QAAQ,QAAR,CAAf;;AAEA;;;;AAIA,SAASI,yBAAT,GAAqC;AACnC,MAAIC,WAAJ;AACA,MAAI;AACF;AACAA,kBAAc,CAACN,SAAS,gBAAT,EAA2B;AACxCO,aAAO,CAAE,CAAF,EAAK,MAAL,EAAa,QAAb,CADiC,EAA3B;AAEZC,YAFY,MAEE,EAFH,EAEOC,IAFP,EAAd;AAGD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,WAAO,IAAP;AACD;AACD;AACA,MAAI;AACF,QAAIN,OAAOO,GAAP,CAAWL,WAAX,EAAwB,QAAxB,CAAJ,EAAuC;AACrC,aAAOA,WAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AACF,GAND,CAME,OAAOI,KAAP,EAAc;AACdE,YAAQF,KAAR,CAAc,gCAAgCJ,WAA9C;AACA,WAAO,IAAP;AACD;AACF;;AAED;;;;;;;AAOA,SAASO,oBAAT,CAA8BC,UAA9B,EAA0C;AACxC,SAAOZ,GAAGa,UAAH,CAAcZ,KAAKa,IAAL,CAAUF,UAAV,EAAsB,WAAtB,CAAd,CAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiB;AACfb,6BAA2BA,yBADZ;AAEfQ,wBAAsBA,oBAFP,EAAjB",
      "file": "yarn.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/util",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst execSync = require('child_process').execSync;\nconst fs = require('fs');\nconst path = require('path');\nconst semver = require('semver');\n\n/**\n * Use Yarn if available, it's much faster than the npm client.\n * Return the version of yarn installed on the system, null if yarn is not available.\n */\nfunction getYarnVersionIfAvailable() {\n  let yarnVersion;\n  try {\n    // execSync returns a Buffer -> convert to string\n    yarnVersion = (execSync('yarn --version', {\n      stdio: [ 0, 'pipe', 'ignore', ]\n    }).toString() || '').trim();\n  } catch (error) {\n    return null;\n  }\n  // yarn < 0.16 has a 'missing manifest' bug\n  try {\n    if (semver.gte(yarnVersion, '0.16.0')) {\n      return yarnVersion;\n    } else {\n      return null;\n    }\n  } catch (error) {\n    console.error('Cannot parse yarn version: ' + yarnVersion);\n    return null;\n  }\n}\n\n/**\n * Check that 'react-native init' itself used yarn to install React Native.\n * When using an old global react-native-cli@1.0.0 (or older), we don't want\n * to install React Native with npm, and React + Jest with yarn.\n * Let's be safe and not mix yarn and npm in a single project.\n * @param projectDir e.g. /Users/martin/AwesomeApp\n */\nfunction isGlobalCliUsingYarn(projectDir) {\n  return fs.existsSync(path.join(projectDir, 'yarn.lock'));\n}\n\nmodule.exports = {\n  getYarnVersionIfAvailable: getYarnVersionIfAvailable,\n  isGlobalCliUsingYarn: isGlobalCliUsingYarn,\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/install/uninstall.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/install\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/install/uninstall.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/install/uninstall.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "uninstall.js",
      "sourceFileName": "uninstall.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/install",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/install",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "uninstall"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst spawnSync = require('child_process').spawnSync;\nconst log = require('npmlog');\nconst PackageManager = require('../util/PackageManager');\nconst spawnOpts = {\n  stdio: 'inherit',\n  stdin: 'inherit' };\n\n\nlog.heading = 'rnpm-install';\n\nfunction uninstall(args, config) {\n  const name = args[0];\n\n  var res = spawnSync('react-native', ['unlink', name], spawnOpts);\n\n  if (res.status) {\n    process.exit(res.status);\n  }\n\n  res = PackageManager.remove(name);\n\n  if (res.status) {\n    process.exit(res.status);\n  }\n\n  log.info(`Module ${name} has been successfully uninstalled & unlinked`);\n}\n\nmodule.exports = {\n  func: uninstall,\n  description: 'uninstall and unlink native dependencies',\n  name: 'uninstall <packageName>' };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaW5zdGFsbC5qcyJdLCJuYW1lcyI6WyJzcGF3blN5bmMiLCJyZXF1aXJlIiwibG9nIiwiUGFja2FnZU1hbmFnZXIiLCJzcGF3bk9wdHMiLCJzdGRpbyIsInN0ZGluIiwiaGVhZGluZyIsInVuaW5zdGFsbCIsImFyZ3MiLCJjb25maWciLCJuYW1lIiwicmVzIiwic3RhdHVzIiwicHJvY2VzcyIsImV4aXQiLCJyZW1vdmUiLCJpbmZvIiwibW9kdWxlIiwiZXhwb3J0cyIsImZ1bmMiLCJkZXNjcmlwdGlvbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUEsTUFBTUEsWUFBWUMsUUFBUSxlQUFSLEVBQXlCRCxTQUEzQztBQUNBLE1BQU1FLE1BQU1ELFFBQVEsUUFBUixDQUFaO0FBQ0EsTUFBTUUsaUJBQWlCRixRQUFRLHdCQUFSLENBQXZCO0FBQ0EsTUFBTUcsWUFBWTtBQUNoQkMsU0FBTyxTQURTO0FBRWhCQyxTQUFPLFNBRlMsRUFBbEI7OztBQUtBSixJQUFJSyxPQUFKLEdBQWMsY0FBZDs7QUFFQSxTQUFTQyxTQUFULENBQW1CQyxJQUFuQixFQUF5QkMsTUFBekIsRUFBaUM7QUFDL0IsUUFBTUMsT0FBT0YsS0FBSyxDQUFMLENBQWI7O0FBRUEsTUFBSUcsTUFBTVosVUFBVSxjQUFWLEVBQTBCLENBQUMsUUFBRCxFQUFXVyxJQUFYLENBQTFCLEVBQTRDUCxTQUE1QyxDQUFWOztBQUVBLE1BQUlRLElBQUlDLE1BQVIsRUFBZ0I7QUFDZEMsWUFBUUMsSUFBUixDQUFhSCxJQUFJQyxNQUFqQjtBQUNEOztBQUVERCxRQUFNVCxlQUFlYSxNQUFmLENBQXNCTCxJQUF0QixDQUFOOztBQUVBLE1BQUlDLElBQUlDLE1BQVIsRUFBZ0I7QUFDZEMsWUFBUUMsSUFBUixDQUFhSCxJQUFJQyxNQUFqQjtBQUNEOztBQUVEWCxNQUFJZSxJQUFKLENBQVUsVUFBU04sSUFBSywrQ0FBeEI7QUFDRDs7QUFFRE8sT0FBT0MsT0FBUCxHQUFpQjtBQUNmQyxRQUFNWixTQURTO0FBRWZhLGVBQWEsMENBRkU7QUFHZlYsUUFBTSx5QkFIUyxFQUFqQiIsImZpbGUiOiJ1bmluc3RhbGwuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvaW5zdGFsbCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBzcGF3blN5bmMgPSByZXF1aXJlKCdjaGlsZF9wcm9jZXNzJykuc3Bhd25TeW5jO1xuY29uc3QgbG9nID0gcmVxdWlyZSgnbnBtbG9nJyk7XG5jb25zdCBQYWNrYWdlTWFuYWdlciA9IHJlcXVpcmUoJy4uL3V0aWwvUGFja2FnZU1hbmFnZXInKTtcbmNvbnN0IHNwYXduT3B0cyA9IHtcbiAgc3RkaW86ICdpbmhlcml0JyxcbiAgc3RkaW46ICdpbmhlcml0Jyxcbn07XG5cbmxvZy5oZWFkaW5nID0gJ3JucG0taW5zdGFsbCc7XG5cbmZ1bmN0aW9uIHVuaW5zdGFsbChhcmdzLCBjb25maWcpIHtcbiAgY29uc3QgbmFtZSA9IGFyZ3NbMF07XG5cbiAgdmFyIHJlcyA9IHNwYXduU3luYygncmVhY3QtbmF0aXZlJywgWyd1bmxpbmsnLCBuYW1lXSwgc3Bhd25PcHRzKTtcblxuICBpZiAocmVzLnN0YXR1cykge1xuICAgIHByb2Nlc3MuZXhpdChyZXMuc3RhdHVzKTtcbiAgfVxuXG4gIHJlcyA9IFBhY2thZ2VNYW5hZ2VyLnJlbW92ZShuYW1lKTtcblxuICBpZiAocmVzLnN0YXR1cykge1xuICAgIHByb2Nlc3MuZXhpdChyZXMuc3RhdHVzKTtcbiAgfVxuXG4gIGxvZy5pbmZvKGBNb2R1bGUgJHtuYW1lfSBoYXMgYmVlbiBzdWNjZXNzZnVsbHkgdW5pbnN0YWxsZWQgJiB1bmxpbmtlZGApO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZnVuYzogdW5pbnN0YWxsLFxuICBkZXNjcmlwdGlvbjogJ3VuaW5zdGFsbCBhbmQgdW5saW5rIG5hdGl2ZSBkZXBlbmRlbmNpZXMnLFxuICBuYW1lOiAndW5pbnN0YWxsIDxwYWNrYWdlTmFtZT4nLFxufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "uninstall.js"
      ],
      "names": [
        "spawnSync",
        "require",
        "log",
        "PackageManager",
        "spawnOpts",
        "stdio",
        "stdin",
        "heading",
        "uninstall",
        "args",
        "config",
        "name",
        "res",
        "status",
        "process",
        "exit",
        "remove",
        "info",
        "module",
        "exports",
        "func",
        "description"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,YAAYC,QAAQ,eAAR,EAAyBD,SAA3C;AACA,MAAME,MAAMD,QAAQ,QAAR,CAAZ;AACA,MAAME,iBAAiBF,QAAQ,wBAAR,CAAvB;AACA,MAAMG,YAAY;AAChBC,SAAO,SADS;AAEhBC,SAAO,SAFS,EAAlB;;;AAKAJ,IAAIK,OAAJ,GAAc,cAAd;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,MAAzB,EAAiC;AAC/B,QAAMC,OAAOF,KAAK,CAAL,CAAb;;AAEA,MAAIG,MAAMZ,UAAU,cAAV,EAA0B,CAAC,QAAD,EAAWW,IAAX,CAA1B,EAA4CP,SAA5C,CAAV;;AAEA,MAAIQ,IAAIC,MAAR,EAAgB;AACdC,YAAQC,IAAR,CAAaH,IAAIC,MAAjB;AACD;;AAEDD,QAAMT,eAAea,MAAf,CAAsBL,IAAtB,CAAN;;AAEA,MAAIC,IAAIC,MAAR,EAAgB;AACdC,YAAQC,IAAR,CAAaH,IAAIC,MAAjB;AACD;;AAEDX,MAAIe,IAAJ,CAAU,UAASN,IAAK,+CAAxB;AACD;;AAEDO,OAAOC,OAAP,GAAiB;AACfC,QAAMZ,SADS;AAEfa,eAAa,0CAFE;AAGfV,QAAM,yBAHS,EAAjB",
      "file": "uninstall.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/install",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst spawnSync = require('child_process').spawnSync;\nconst log = require('npmlog');\nconst PackageManager = require('../util/PackageManager');\nconst spawnOpts = {\n  stdio: 'inherit',\n  stdin: 'inherit',\n};\n\nlog.heading = 'rnpm-install';\n\nfunction uninstall(args, config) {\n  const name = args[0];\n\n  var res = spawnSync('react-native', ['unlink', name], spawnOpts);\n\n  if (res.status) {\n    process.exit(res.status);\n  }\n\n  res = PackageManager.remove(name);\n\n  if (res.status) {\n    process.exit(res.status);\n  }\n\n  log.info(`Module ${name} has been successfully uninstalled & unlinked`);\n}\n\nmodule.exports = {\n  func: uninstall,\n  description: 'uninstall and unlink native dependencies',\n  name: 'uninstall <packageName>',\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/upgrade/upgrade.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/upgrade\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/upgrade/upgrade.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/upgrade/upgrade.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "upgrade.js",
      "sourceFileName": "upgrade.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/upgrade",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/upgrade",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "upgrade"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst chalk = require('chalk');\nconst copyProjectTemplateAndReplace = require('../generator/copyProjectTemplateAndReplace');\nconst fs = require('fs');\nconst path = require('path');\nconst printRunInstructions = require('../generator/printRunInstructions');\nconst semver = require('semver');\nconst yarn = require('../util/yarn');\n\n/**\n                                       * Migrate application to a new version of React Native.\n                                       * See http://facebook.github.io/react-native/docs/upgrading.html\n                                       *\n                                       * IMPORTANT: Assumes the cwd() is the project directory.\n                                       * The code here must only be invoked via the CLI:\n                                       * $ cd MyAwesomeApp\n                                       * $ react-native upgrade\n                                       */\nfunction validateAndUpgrade() {\n  const projectDir = process.cwd();\n\n  const packageJSON = JSON.parse(\n  fs.readFileSync(path.resolve(projectDir, 'package.json'), 'utf8'));\n\n\n  warn(\n  'You should consider using the new upgrade tool based on Git. It ' +\n  'makes upgrades easier by resolving most conflicts automatically.\\n' +\n  'To use it:\\n' +\n  '- Go back to the old version of React Native\\n' +\n  '- Run \"npm install -g react-native-git-upgrade\"\\n' +\n  '- Run \"react-native-git-upgrade\"\\n' +\n  'See https://facebook.github.io/react-native/docs/upgrading.html');\n\n\n  const projectName = packageJSON.name;\n  if (!projectName) {\n    warn(\n    'Your project needs to have a name, declared in package.json, ' +\n    'such as \"name\": \"AwesomeApp\". Please add a project name. Aborting.');\n\n    return;\n  }\n\n  const version = packageJSON.dependencies['react-native'];\n  if (!version) {\n    warn(\n    'Your \"package.json\" file doesn\\'t seem to declare \"react-native\" as ' +\n    'a dependency. Nothing to upgrade. Aborting.');\n\n    return;\n  }\n\n  if (version === 'latest' || version === '*') {\n    warn(\n    'Some major releases introduce breaking changes.\\n' +\n    'Please use a caret version number in your \"package.json\" file \\n' +\n    'to avoid breakage. Use e.g. react-native: ^0.38.0. Aborting.');\n\n    return;\n  }\n\n  const installed = JSON.parse(\n  fs.readFileSync(\n  path.resolve(projectDir, 'node_modules/react-native/package.json'),\n  'utf8'));\n\n\n\n  if (!semver.satisfies(installed.version, version)) {\n    warn(\n    'react-native version in \"package.json\" doesn\\'t match ' +\n    'the installed version in \"node_modules\".\\n' +\n    'Try running \"npm install\" to fix this. Aborting.');\n\n    return;\n  }\n\n  const v = version.replace(/^(~|\\^|=)/, '').replace(/x/i, '0');\n\n  if (!semver.valid(v)) {\n    warn(\n    \"A valid version number for 'react-native' is not specified in your \" +\n    \"'package.json' file. Aborting.\");\n\n    return;\n  }\n\n  console.log(\n  'Upgrading project to react-native v' + installed.version + '\\n' +\n  'Check out the release notes and breaking changes: ' +\n  'https://github.com/facebook/react-native/releases/tag/v' +\n  semver.major(v) + '.' + semver.minor(v) + '.0');\n\n\n  // >= v0.21.0, we require react to be a peer dependency\n  if (semver.gte(v, '0.21.0') && !packageJSON.dependencies.react) {\n    warn(\n    'Your \"package.json\" file doesn\\'t seem to have \"react\" as a dependency.\\n' +\n    '\"react\" was changed from a dependency to a peer dependency in react-native v0.21.0.\\n' +\n    'Therefore, it\\'s necessary to include \"react\" in your project\\'s dependencies.\\n' +\n    'Please run \"npm install --save react\", then re-run \"react-native upgrade\".\\n');\n\n    return;\n  }\n\n  if (semver.satisfies(v, '~0.26.0')) {\n    warn(\n    'React Native 0.26 introduced some breaking changes to the native files on iOS. You can\\n' +\n    'perform them manually by checking the release notes or use \"rnpm\" ' +\n    'to do it automatically.\\n' +\n    'Just run:\\n' +\n    '\"npm install -g rnpm && npm install rnpm-plugin-upgrade@0.26 --save-dev\", ' +\n    'then run \"rnpm upgrade\".');\n\n  }\n\n  return new Promise(resolve => {\n    upgradeProjectFiles(projectDir, projectName);\n    console.log(\n    'Successfully upgraded this project to react-native v' + installed.version);\n\n    resolve();\n  });\n}\n\n/**\n   * Once all checks passed, upgrade the project files.\n   */\nfunction upgradeProjectFiles(projectDir, projectName) {\n  // Just owerwrite\n  copyProjectTemplateAndReplace(\n  path.resolve('node_modules', 'react-native', 'local-cli', 'templates', 'HelloWorld'),\n  projectDir,\n  projectName,\n  { upgrade: true });\n\n}\n\nfunction warn(message) {\n  console.warn(chalk.yellow(message));\n}\n\nconst upgradeCommand = {\n  name: 'upgrade',\n  description: 'upgrade your app\\'s template files to the latest version; run this after ' +\n  'updating the react-native version in your package.json and running npm install',\n  func: validateAndUpgrade };\n\n\nmodule.exports = upgradeCommand;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "upgrade.js"
      ],
      "names": [
        "chalk",
        "require",
        "copyProjectTemplateAndReplace",
        "fs",
        "path",
        "printRunInstructions",
        "semver",
        "yarn",
        "validateAndUpgrade",
        "projectDir",
        "process",
        "cwd",
        "packageJSON",
        "JSON",
        "parse",
        "readFileSync",
        "resolve",
        "warn",
        "projectName",
        "name",
        "version",
        "dependencies",
        "installed",
        "satisfies",
        "v",
        "replace",
        "valid",
        "console",
        "log",
        "major",
        "minor",
        "gte",
        "react",
        "Promise",
        "upgradeProjectFiles",
        "upgrade",
        "message",
        "yellow",
        "upgradeCommand",
        "description",
        "func",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,MAAMC,gCAAgCD,QAAQ,4CAAR,CAAtC;AACA,MAAME,KAAKF,QAAQ,IAAR,CAAX;AACA,MAAMG,OAAOH,QAAQ,MAAR,CAAb;AACA,MAAMI,uBAAuBJ,QAAQ,mCAAR,CAA7B;AACA,MAAMK,SAASL,QAAQ,QAAR,CAAf;AACA,MAAMM,OAAON,QAAQ,cAAR,CAAb;;AAEA;;;;;;;;;AASA,SAASO,kBAAT,GAA8B;AAC5B,QAAMC,aAAaC,QAAQC,GAAR,EAAnB;;AAEA,QAAMC,cAAcC,KAAKC,KAAL;AAChBX,KAAGY,YAAH,CAAgBX,KAAKY,OAAL,CAAaP,UAAb,EAAyB,cAAzB,CAAhB,EAA0D,MAA1D,CADgB,CAApB;;;AAIAQ;AACE;AACA,sEADA;AAEA,gBAFA;AAGA,kDAHA;AAIA,qDAJA;AAKA,sCALA;AAMA,mEAPF;;;AAUA,QAAMC,cAAcN,YAAYO,IAAhC;AACA,MAAI,CAACD,WAAL,EAAkB;AAChBD;AACE;AACA,wEAFF;;AAIA;AACD;;AAED,QAAMG,UAAUR,YAAYS,YAAZ,CAAyB,cAAzB,CAAhB;AACA,MAAI,CAACD,OAAL,EAAc;AACZH;AACE;AACA,iDAFF;;AAIA;AACD;;AAED,MAAIG,YAAY,QAAZ,IAAwBA,YAAY,GAAxC,EAA6C;AAC3CH;AACE;AACA,sEADA;AAEA,kEAHF;;AAKA;AACD;;AAED,QAAMK,YAAYT,KAAKC,KAAL;AAChBX,KAAGY,YAAH;AACEX,OAAKY,OAAL,CAAaP,UAAb,EAAyB,wCAAzB,CADF;AAEE,QAFF,CADgB,CAAlB;;;;AAOA,MAAI,CAACH,OAAOiB,SAAP,CAAiBD,UAAUF,OAA3B,EAAoCA,OAApC,CAAL,EAAmD;AACjDH;AACE;AACA,gDADA;AAEA,sDAHF;;AAKA;AACD;;AAED,QAAMO,IAAIJ,QAAQK,OAAR,CAAgB,WAAhB,EAA6B,EAA7B,EAAiCA,OAAjC,CAAyC,IAAzC,EAA+C,GAA/C,CAAV;;AAEA,MAAI,CAACnB,OAAOoB,KAAP,CAAaF,CAAb,CAAL,EAAsB;AACpBP;AACE;AACA,oCAFF;;AAIA;AACD;;AAEDU,UAAQC,GAAR;AACE,0CAAwCN,UAAUF,OAAlD,GAA4D,IAA5D;AACA,sDADA;AAEA,2DAFA;AAGAd,SAAOuB,KAAP,CAAaL,CAAb,CAHA,GAGkB,GAHlB,GAGwBlB,OAAOwB,KAAP,CAAaN,CAAb,CAHxB,GAG0C,IAJ5C;;;AAOA;AACA,MAAIlB,OAAOyB,GAAP,CAAWP,CAAX,EAAc,QAAd,KAA2B,CAACZ,YAAYS,YAAZ,CAAyBW,KAAzD,EAAgE;AAC9Df;AACE;AACA,2FADA;AAEA,sFAFA;AAGA,kFAJF;;AAMA;AACD;;AAED,MAAIX,OAAOiB,SAAP,CAAiBC,CAAjB,EAAoB,SAApB,CAAJ,EAAoC;AAClCP;AACE;AACA,wEADA;AAEA,+BAFA;AAGA,iBAHA;AAIA,gFAJA;AAKA,8BANF;;AAQD;;AAED,SAAO,IAAIgB,OAAJ,CAAajB,OAAD,IAAa;AAC9BkB,wBAAoBzB,UAApB,EAAgCS,WAAhC;AACAS,YAAQC,GAAR;AACE,6DAAyDN,UAAUF,OADrE;;AAGAJ;AACD,GANM,CAAP;AAOD;;AAED;;;AAGA,SAASkB,mBAAT,CAA6BzB,UAA7B,EAAyCS,WAAzC,EAAsD;AACpD;AACAhB;AACEE,OAAKY,OAAL,CAAa,cAAb,EAA6B,cAA7B,EAA6C,WAA7C,EAA0D,WAA1D,EAAuE,YAAvE,CADF;AAEEP,YAFF;AAGES,aAHF;AAIE,IAACiB,SAAS,IAAV,EAJF;;AAMD;;AAED,SAASlB,IAAT,CAAcmB,OAAd,EAAuB;AACrBT,UAAQV,IAAR,CAAajB,MAAMqC,MAAN,CAAaD,OAAb,CAAb;AACD;;AAED,MAAME,iBAAiB;AACrBnB,QAAM,SADe;AAErBoB,eAAa;AACX,kFAHmB;AAIrBC,QAAMhC,kBAJe,EAAvB;;;AAOAiC,OAAOC,OAAP,GAAiBJ,cAAjB",
      "file": "upgrade.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/upgrade",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst chalk = require('chalk');\nconst copyProjectTemplateAndReplace = require('../generator/copyProjectTemplateAndReplace');\nconst fs = require('fs');\nconst path = require('path');\nconst printRunInstructions = require('../generator/printRunInstructions');\nconst semver = require('semver');\nconst yarn = require('../util/yarn');\n\n/**\n * Migrate application to a new version of React Native.\n * See http://facebook.github.io/react-native/docs/upgrading.html\n *\n * IMPORTANT: Assumes the cwd() is the project directory.\n * The code here must only be invoked via the CLI:\n * $ cd MyAwesomeApp\n * $ react-native upgrade\n */\nfunction validateAndUpgrade() {\n  const projectDir = process.cwd();\n\n  const packageJSON = JSON.parse(\n      fs.readFileSync(path.resolve(projectDir, 'package.json'), 'utf8')\n  );\n\n  warn(\n    'You should consider using the new upgrade tool based on Git. It ' +\n    'makes upgrades easier by resolving most conflicts automatically.\\n' +\n    'To use it:\\n' +\n    '- Go back to the old version of React Native\\n' +\n    '- Run \"npm install -g react-native-git-upgrade\"\\n' +\n    '- Run \"react-native-git-upgrade\"\\n' +\n    'See https://facebook.github.io/react-native/docs/upgrading.html'\n  );\n\n  const projectName = packageJSON.name;\n  if (!projectName) {\n    warn(\n      'Your project needs to have a name, declared in package.json, ' +\n      'such as \"name\": \"AwesomeApp\". Please add a project name. Aborting.'\n    );\n    return;\n  }\n\n  const version = packageJSON.dependencies['react-native'];\n  if (!version) {\n    warn(\n      'Your \"package.json\" file doesn\\'t seem to declare \"react-native\" as ' +\n      'a dependency. Nothing to upgrade. Aborting.'\n    );\n    return;\n  }\n\n  if (version === 'latest' || version === '*') {\n    warn(\n      'Some major releases introduce breaking changes.\\n' +\n      'Please use a caret version number in your \"package.json\" file \\n' +\n      'to avoid breakage. Use e.g. react-native: ^0.38.0. Aborting.'\n    );\n    return;\n  }\n\n  const installed = JSON.parse(\n    fs.readFileSync(\n      path.resolve(projectDir, 'node_modules/react-native/package.json'),\n      'utf8'\n    )\n  );\n\n  if (!semver.satisfies(installed.version, version)) {\n    warn(\n      'react-native version in \"package.json\" doesn\\'t match ' +\n      'the installed version in \"node_modules\".\\n' +\n      'Try running \"npm install\" to fix this. Aborting.'\n    );\n    return;\n  }\n\n  const v = version.replace(/^(~|\\^|=)/, '').replace(/x/i, '0');\n\n  if (!semver.valid(v)) {\n    warn(\n      \"A valid version number for 'react-native' is not specified in your \" +\n      \"'package.json' file. Aborting.\"\n    );\n    return;\n  }\n\n  console.log(\n    'Upgrading project to react-native v' + installed.version + '\\n' +\n    'Check out the release notes and breaking changes: ' +\n    'https://github.com/facebook/react-native/releases/tag/v' +\n    semver.major(v) + '.' + semver.minor(v) + '.0'\n  );\n\n  // >= v0.21.0, we require react to be a peer dependency\n  if (semver.gte(v, '0.21.0') && !packageJSON.dependencies.react) {\n    warn(\n      'Your \"package.json\" file doesn\\'t seem to have \"react\" as a dependency.\\n' +\n      '\"react\" was changed from a dependency to a peer dependency in react-native v0.21.0.\\n' +\n      'Therefore, it\\'s necessary to include \"react\" in your project\\'s dependencies.\\n' +\n      'Please run \"npm install --save react\", then re-run \"react-native upgrade\".\\n'\n    );\n    return;\n  }\n\n  if (semver.satisfies(v, '~0.26.0')) {\n    warn(\n      'React Native 0.26 introduced some breaking changes to the native files on iOS. You can\\n' +\n      'perform them manually by checking the release notes or use \"rnpm\" ' +\n      'to do it automatically.\\n' +\n      'Just run:\\n' +\n      '\"npm install -g rnpm && npm install rnpm-plugin-upgrade@0.26 --save-dev\", ' +\n      'then run \"rnpm upgrade\".'\n    );\n  }\n\n  return new Promise((resolve) => {\n    upgradeProjectFiles(projectDir, projectName);\n    console.log(\n      'Successfully upgraded this project to react-native v' + installed.version\n    );\n    resolve();\n  });\n}\n\n/**\n * Once all checks passed, upgrade the project files.\n */\nfunction upgradeProjectFiles(projectDir, projectName) {\n  // Just owerwrite\n  copyProjectTemplateAndReplace(\n    path.resolve('node_modules', 'react-native', 'local-cli', 'templates', 'HelloWorld'),\n    projectDir,\n    projectName,\n    {upgrade: true}\n  );\n}\n\nfunction warn(message) {\n  console.warn(chalk.yellow(message));\n}\n\nconst upgradeCommand = {\n  name: 'upgrade',\n  description: 'upgrade your app\\'s template files to the latest version; run this after ' +\n    'updating the react-native version in your package.json and running npm install',\n  func: validateAndUpgrade,\n};\n\nmodule.exports = upgradeCommand;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator/printRunInstructions.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator/printRunInstructions.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator/printRunInstructions.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "printRunInstructions.js",
      "sourceFileName": "printRunInstructions.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "printRunInstructions"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nvar chalk = require('chalk');\nvar path = require('path');\n\nfunction printRunInstructions(projectDir, projectName) {\n  const absoluteProjectDir = path.resolve(projectDir);\n  // iOS\n  const xcodeProjectPath = path.resolve(projectDir, 'ios', projectName) + '.xcodeproj';\n  const relativeXcodeProjectPath = path.relative(process.cwd(), xcodeProjectPath);\n  console.log(chalk.white.bold('To run your app on iOS:'));\n  console.log('   cd ' + absoluteProjectDir);\n  console.log('   react-native run-ios');\n  console.log('   - or -');\n  console.log('   Open ' + relativeXcodeProjectPath + ' in Xcode');\n  console.log('   Hit the Run button');\n  // Android\n  console.log(chalk.white.bold('To run your app on Android:'));\n  console.log('   cd ' + absoluteProjectDir);\n  console.log('   Have an Android emulator running (quickest way to get started), or a device connected');\n  console.log('   react-native run-android');\n}\n\nmodule.exports = printRunInstructions;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByaW50UnVuSW5zdHJ1Y3Rpb25zLmpzIl0sIm5hbWVzIjpbImNoYWxrIiwicmVxdWlyZSIsInBhdGgiLCJwcmludFJ1bkluc3RydWN0aW9ucyIsInByb2plY3REaXIiLCJwcm9qZWN0TmFtZSIsImFic29sdXRlUHJvamVjdERpciIsInJlc29sdmUiLCJ4Y29kZVByb2plY3RQYXRoIiwicmVsYXRpdmVYY29kZVByb2plY3RQYXRoIiwicmVsYXRpdmUiLCJwcm9jZXNzIiwiY3dkIiwiY29uc29sZSIsImxvZyIsIndoaXRlIiwiYm9sZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLElBQUlBLFFBQVFDLFFBQVEsT0FBUixDQUFaO0FBQ0EsSUFBSUMsT0FBT0QsUUFBUSxNQUFSLENBQVg7O0FBRUEsU0FBU0Usb0JBQVQsQ0FBOEJDLFVBQTlCLEVBQTBDQyxXQUExQyxFQUF1RDtBQUNyRCxRQUFNQyxxQkFBcUJKLEtBQUtLLE9BQUwsQ0FBYUgsVUFBYixDQUEzQjtBQUNBO0FBQ0EsUUFBTUksbUJBQW1CTixLQUFLSyxPQUFMLENBQWFILFVBQWIsRUFBeUIsS0FBekIsRUFBZ0NDLFdBQWhDLElBQStDLFlBQXhFO0FBQ0EsUUFBTUksMkJBQTJCUCxLQUFLUSxRQUFMLENBQWNDLFFBQVFDLEdBQVIsRUFBZCxFQUE2QkosZ0JBQTdCLENBQWpDO0FBQ0FLLFVBQVFDLEdBQVIsQ0FBWWQsTUFBTWUsS0FBTixDQUFZQyxJQUFaLENBQWlCLHlCQUFqQixDQUFaO0FBQ0FILFVBQVFDLEdBQVIsQ0FBWSxXQUFXUixrQkFBdkI7QUFDQU8sVUFBUUMsR0FBUixDQUFZLHlCQUFaO0FBQ0FELFVBQVFDLEdBQVIsQ0FBWSxXQUFaO0FBQ0FELFVBQVFDLEdBQVIsQ0FBWSxhQUFhTCx3QkFBYixHQUF3QyxXQUFwRDtBQUNBSSxVQUFRQyxHQUFSLENBQVksdUJBQVo7QUFDQTtBQUNBRCxVQUFRQyxHQUFSLENBQVlkLE1BQU1lLEtBQU4sQ0FBWUMsSUFBWixDQUFpQiw2QkFBakIsQ0FBWjtBQUNBSCxVQUFRQyxHQUFSLENBQVksV0FBV1Isa0JBQXZCO0FBQ0FPLFVBQVFDLEdBQVIsQ0FBWSwwRkFBWjtBQUNBRCxVQUFRQyxHQUFSLENBQVksNkJBQVo7QUFDRDs7QUFFREcsT0FBT0MsT0FBUCxHQUFpQmYsb0JBQWpCIiwiZmlsZSI6InByaW50UnVuSW5zdHJ1Y3Rpb25zLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2dlbmVyYXRvciIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgY2hhbGsgPSByZXF1aXJlKCdjaGFsaycpO1xudmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5cbmZ1bmN0aW9uIHByaW50UnVuSW5zdHJ1Y3Rpb25zKHByb2plY3REaXIsIHByb2plY3ROYW1lKSB7XG4gIGNvbnN0IGFic29sdXRlUHJvamVjdERpciA9IHBhdGgucmVzb2x2ZShwcm9qZWN0RGlyKTtcbiAgLy8gaU9TXG4gIGNvbnN0IHhjb2RlUHJvamVjdFBhdGggPSBwYXRoLnJlc29sdmUocHJvamVjdERpciwgJ2lvcycsIHByb2plY3ROYW1lKSArICcueGNvZGVwcm9qJztcbiAgY29uc3QgcmVsYXRpdmVYY29kZVByb2plY3RQYXRoID0gcGF0aC5yZWxhdGl2ZShwcm9jZXNzLmN3ZCgpLCB4Y29kZVByb2plY3RQYXRoKTtcbiAgY29uc29sZS5sb2coY2hhbGsud2hpdGUuYm9sZCgnVG8gcnVuIHlvdXIgYXBwIG9uIGlPUzonKSk7XG4gIGNvbnNvbGUubG9nKCcgICBjZCAnICsgYWJzb2x1dGVQcm9qZWN0RGlyKTtcbiAgY29uc29sZS5sb2coJyAgIHJlYWN0LW5hdGl2ZSBydW4taW9zJyk7XG4gIGNvbnNvbGUubG9nKCcgICAtIG9yIC0nKTtcbiAgY29uc29sZS5sb2coJyAgIE9wZW4gJyArIHJlbGF0aXZlWGNvZGVQcm9qZWN0UGF0aCArICcgaW4gWGNvZGUnKTtcbiAgY29uc29sZS5sb2coJyAgIEhpdCB0aGUgUnVuIGJ1dHRvbicpO1xuICAvLyBBbmRyb2lkXG4gIGNvbnNvbGUubG9nKGNoYWxrLndoaXRlLmJvbGQoJ1RvIHJ1biB5b3VyIGFwcCBvbiBBbmRyb2lkOicpKTtcbiAgY29uc29sZS5sb2coJyAgIGNkICcgKyBhYnNvbHV0ZVByb2plY3REaXIpO1xuICBjb25zb2xlLmxvZygnICAgSGF2ZSBhbiBBbmRyb2lkIGVtdWxhdG9yIHJ1bm5pbmcgKHF1aWNrZXN0IHdheSB0byBnZXQgc3RhcnRlZCksIG9yIGEgZGV2aWNlIGNvbm5lY3RlZCcpO1xuICBjb25zb2xlLmxvZygnICAgcmVhY3QtbmF0aXZlIHJ1bi1hbmRyb2lkJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcHJpbnRSdW5JbnN0cnVjdGlvbnM7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "printRunInstructions.js"
      ],
      "names": [
        "chalk",
        "require",
        "path",
        "printRunInstructions",
        "projectDir",
        "projectName",
        "absoluteProjectDir",
        "resolve",
        "xcodeProjectPath",
        "relativeXcodeProjectPath",
        "relative",
        "process",
        "cwd",
        "console",
        "log",
        "white",
        "bold",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;;AAEA,SAASE,oBAAT,CAA8BC,UAA9B,EAA0CC,WAA1C,EAAuD;AACrD,QAAMC,qBAAqBJ,KAAKK,OAAL,CAAaH,UAAb,CAA3B;AACA;AACA,QAAMI,mBAAmBN,KAAKK,OAAL,CAAaH,UAAb,EAAyB,KAAzB,EAAgCC,WAAhC,IAA+C,YAAxE;AACA,QAAMI,2BAA2BP,KAAKQ,QAAL,CAAcC,QAAQC,GAAR,EAAd,EAA6BJ,gBAA7B,CAAjC;AACAK,UAAQC,GAAR,CAAYd,MAAMe,KAAN,CAAYC,IAAZ,CAAiB,yBAAjB,CAAZ;AACAH,UAAQC,GAAR,CAAY,WAAWR,kBAAvB;AACAO,UAAQC,GAAR,CAAY,yBAAZ;AACAD,UAAQC,GAAR,CAAY,WAAZ;AACAD,UAAQC,GAAR,CAAY,aAAaL,wBAAb,GAAwC,WAApD;AACAI,UAAQC,GAAR,CAAY,uBAAZ;AACA;AACAD,UAAQC,GAAR,CAAYd,MAAMe,KAAN,CAAYC,IAAZ,CAAiB,6BAAjB,CAAZ;AACAH,UAAQC,GAAR,CAAY,WAAWR,kBAAvB;AACAO,UAAQC,GAAR,CAAY,0FAAZ;AACAD,UAAQC,GAAR,CAAY,6BAAZ;AACD;;AAEDG,OAAOC,OAAP,GAAiBf,oBAAjB",
      "file": "printRunInstructions.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nvar chalk = require('chalk');\nvar path = require('path');\n\nfunction printRunInstructions(projectDir, projectName) {\n  const absoluteProjectDir = path.resolve(projectDir);\n  // iOS\n  const xcodeProjectPath = path.resolve(projectDir, 'ios', projectName) + '.xcodeproj';\n  const relativeXcodeProjectPath = path.relative(process.cwd(), xcodeProjectPath);\n  console.log(chalk.white.bold('To run your app on iOS:'));\n  console.log('   cd ' + absoluteProjectDir);\n  console.log('   react-native run-ios');\n  console.log('   - or -');\n  console.log('   Open ' + relativeXcodeProjectPath + ' in Xcode');\n  console.log('   Hit the Run button');\n  // Android\n  console.log(chalk.white.bold('To run your app on Android:'));\n  console.log('   cd ' + absoluteProjectDir);\n  console.log('   Have an Android emulator running (quickest way to get started), or a device connected');\n  console.log('   react-native run-android');\n}\n\nmodule.exports = printRunInstructions;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/logAndroid/logAndroid.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/logAndroid\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/logAndroid/logAndroid.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/logAndroid/logAndroid.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "logAndroid.js",
      "sourceFileName": "logAndroid.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/logAndroid",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/logAndroid",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "logAndroid"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst chalk = require('chalk');\nconst child_process = require('child_process');\n\n/**\n                                                 * Starts adb logcat\n                                                 */\nfunction logAndroid() {\n  return new Promise((resolve, reject) => {\n    _logAndroid(resolve, reject);\n  });\n}\n\nfunction _logAndroid() {\n  try {\n    const adbPath = process.env.ANDROID_HOME ?\n    process.env.ANDROID_HOME + '/platform-tools/adb' :\n    'adb';\n\n    const adbArgs = ['logcat', '*:S', 'ReactNative:V', 'ReactNativeJS:V'];\n\n    console.log(chalk.bold(\n    `Starting the logger (${adbPath} ${adbArgs.join(' ')})...`));\n\n\n    const log = child_process.spawnSync(adbPath, adbArgs, { stdio: 'inherit' });\n\n    if (log.error !== null) {\n      throw log.error;\n    }\n\n  } catch (e) {\n    console.log(chalk.red(\n    'adb invocation failed. Do you have adb in your PATH?'));\n\n    return Promise.reject();\n  }\n}\n\nmodule.exports = {\n  name: 'log-android',\n  description: 'starts adb logcat',\n  func: logAndroid };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ0FuZHJvaWQuanMiXSwibmFtZXMiOlsiY2hhbGsiLCJyZXF1aXJlIiwiY2hpbGRfcHJvY2VzcyIsImxvZ0FuZHJvaWQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsIl9sb2dBbmRyb2lkIiwiYWRiUGF0aCIsInByb2Nlc3MiLCJlbnYiLCJBTkRST0lEX0hPTUUiLCJhZGJBcmdzIiwiY29uc29sZSIsImxvZyIsImJvbGQiLCJqb2luIiwic3Bhd25TeW5jIiwic3RkaW8iLCJlcnJvciIsImUiLCJyZWQiLCJtb2R1bGUiLCJleHBvcnRzIiwibmFtZSIsImRlc2NyaXB0aW9uIiwiZnVuYyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUEsTUFBTUEsUUFBUUMsUUFBUSxPQUFSLENBQWQ7QUFDQSxNQUFNQyxnQkFBZ0JELFFBQVEsZUFBUixDQUF0Qjs7QUFFQTs7O0FBR0EsU0FBU0UsVUFBVCxHQUFzQjtBQUNwQixTQUFPLElBQUlDLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDdENDLGdCQUFZRixPQUFaLEVBQXFCQyxNQUFyQjtBQUNELEdBRk0sQ0FBUDtBQUdEOztBQUVELFNBQVNDLFdBQVQsR0FBdUI7QUFDckIsTUFBSTtBQUNGLFVBQU1DLFVBQVVDLFFBQVFDLEdBQVIsQ0FBWUMsWUFBWjtBQUNaRixZQUFRQyxHQUFSLENBQVlDLFlBQVosR0FBMkIscUJBRGY7QUFFWixTQUZKOztBQUlBLFVBQU1DLFVBQVUsQ0FBQyxRQUFELEVBQVcsS0FBWCxFQUFrQixlQUFsQixFQUFtQyxpQkFBbkMsQ0FBaEI7O0FBRUFDLFlBQVFDLEdBQVIsQ0FBWWQsTUFBTWUsSUFBTjtBQUNULDRCQUF1QlAsT0FBUSxJQUFHSSxRQUFRSSxJQUFSLENBQWEsR0FBYixDQUFrQixNQUQzQyxDQUFaOzs7QUFJQSxVQUFNRixNQUFNWixjQUFjZSxTQUFkLENBQXdCVCxPQUF4QixFQUFpQ0ksT0FBakMsRUFBMEMsRUFBQ00sT0FBTyxTQUFSLEVBQTFDLENBQVo7O0FBRUEsUUFBSUosSUFBSUssS0FBSixLQUFjLElBQWxCLEVBQXdCO0FBQ3RCLFlBQU1MLElBQUlLLEtBQVY7QUFDRDs7QUFFRixHQWpCRCxDQWlCRSxPQUFPQyxDQUFQLEVBQVU7QUFDVlAsWUFBUUMsR0FBUixDQUFZZCxNQUFNcUIsR0FBTjtBQUNWLDBEQURVLENBQVo7O0FBR0EsV0FBT2pCLFFBQVFFLE1BQVIsRUFBUDtBQUNEO0FBQ0Y7O0FBRURnQixPQUFPQyxPQUFQLEdBQWlCO0FBQ2ZDLFFBQU0sYUFEUztBQUVmQyxlQUFhLG1CQUZFO0FBR2ZDLFFBQU12QixVQUhTLEVBQWpCIiwiZmlsZSI6ImxvZ0FuZHJvaWQuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbG9nQW5kcm9pZCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBjaGFsayA9IHJlcXVpcmUoJ2NoYWxrJyk7XG5jb25zdCBjaGlsZF9wcm9jZXNzID0gcmVxdWlyZSgnY2hpbGRfcHJvY2VzcycpO1xuXG4vKipcbiAqIFN0YXJ0cyBhZGIgbG9nY2F0XG4gKi9cbmZ1bmN0aW9uIGxvZ0FuZHJvaWQoKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgX2xvZ0FuZHJvaWQocmVzb2x2ZSwgcmVqZWN0KTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIF9sb2dBbmRyb2lkKCkge1xuICB0cnkge1xuICAgIGNvbnN0IGFkYlBhdGggPSBwcm9jZXNzLmVudi5BTkRST0lEX0hPTUVcbiAgICAgID8gcHJvY2Vzcy5lbnYuQU5EUk9JRF9IT01FICsgJy9wbGF0Zm9ybS10b29scy9hZGInXG4gICAgICA6ICdhZGInO1xuXG4gICAgY29uc3QgYWRiQXJncyA9IFsnbG9nY2F0JywgJyo6UycsICdSZWFjdE5hdGl2ZTpWJywgJ1JlYWN0TmF0aXZlSlM6ViddO1xuXG4gICAgY29uc29sZS5sb2coY2hhbGsuYm9sZChcbiAgICAgIGBTdGFydGluZyB0aGUgbG9nZ2VyICgke2FkYlBhdGh9ICR7YWRiQXJncy5qb2luKCcgJyl9KS4uLmBcbiAgICApKTtcblxuICAgIGNvbnN0IGxvZyA9IGNoaWxkX3Byb2Nlc3Muc3Bhd25TeW5jKGFkYlBhdGgsIGFkYkFyZ3MsIHtzdGRpbzogJ2luaGVyaXQnfSk7XG5cbiAgICBpZiAobG9nLmVycm9yICE9PSBudWxsKSB7XG4gICAgICB0aHJvdyBsb2cuZXJyb3I7XG4gICAgfVxuXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjb25zb2xlLmxvZyhjaGFsay5yZWQoXG4gICAgICAnYWRiIGludm9jYXRpb24gZmFpbGVkLiBEbyB5b3UgaGF2ZSBhZGIgaW4geW91ciBQQVRIPydcbiAgICApKTtcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgbmFtZTogJ2xvZy1hbmRyb2lkJyxcbiAgZGVzY3JpcHRpb246ICdzdGFydHMgYWRiIGxvZ2NhdCcsXG4gIGZ1bmM6IGxvZ0FuZHJvaWQsXG59O1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "logAndroid.js"
      ],
      "names": [
        "chalk",
        "require",
        "child_process",
        "logAndroid",
        "Promise",
        "resolve",
        "reject",
        "_logAndroid",
        "adbPath",
        "process",
        "env",
        "ANDROID_HOME",
        "adbArgs",
        "console",
        "log",
        "bold",
        "join",
        "spawnSync",
        "stdio",
        "error",
        "e",
        "red",
        "module",
        "exports",
        "name",
        "description",
        "func"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,MAAMC,gBAAgBD,QAAQ,eAAR,CAAtB;;AAEA;;;AAGA,SAASE,UAAT,GAAsB;AACpB,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,gBAAYF,OAAZ,EAAqBC,MAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASC,WAAT,GAAuB;AACrB,MAAI;AACF,UAAMC,UAAUC,QAAQC,GAAR,CAAYC,YAAZ;AACZF,YAAQC,GAAR,CAAYC,YAAZ,GAA2B,qBADf;AAEZ,SAFJ;;AAIA,UAAMC,UAAU,CAAC,QAAD,EAAW,KAAX,EAAkB,eAAlB,EAAmC,iBAAnC,CAAhB;;AAEAC,YAAQC,GAAR,CAAYd,MAAMe,IAAN;AACT,4BAAuBP,OAAQ,IAAGI,QAAQI,IAAR,CAAa,GAAb,CAAkB,MAD3C,CAAZ;;;AAIA,UAAMF,MAAMZ,cAAce,SAAd,CAAwBT,OAAxB,EAAiCI,OAAjC,EAA0C,EAACM,OAAO,SAAR,EAA1C,CAAZ;;AAEA,QAAIJ,IAAIK,KAAJ,KAAc,IAAlB,EAAwB;AACtB,YAAML,IAAIK,KAAV;AACD;;AAEF,GAjBD,CAiBE,OAAOC,CAAP,EAAU;AACVP,YAAQC,GAAR,CAAYd,MAAMqB,GAAN;AACV,0DADU,CAAZ;;AAGA,WAAOjB,QAAQE,MAAR,EAAP;AACD;AACF;;AAEDgB,OAAOC,OAAP,GAAiB;AACfC,QAAM,aADS;AAEfC,eAAa,mBAFE;AAGfC,QAAMvB,UAHS,EAAjB",
      "file": "logAndroid.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/logAndroid",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst chalk = require('chalk');\nconst child_process = require('child_process');\n\n/**\n * Starts adb logcat\n */\nfunction logAndroid() {\n  return new Promise((resolve, reject) => {\n    _logAndroid(resolve, reject);\n  });\n}\n\nfunction _logAndroid() {\n  try {\n    const adbPath = process.env.ANDROID_HOME\n      ? process.env.ANDROID_HOME + '/platform-tools/adb'\n      : 'adb';\n\n    const adbArgs = ['logcat', '*:S', 'ReactNative:V', 'ReactNativeJS:V'];\n\n    console.log(chalk.bold(\n      `Starting the logger (${adbPath} ${adbArgs.join(' ')})...`\n    ));\n\n    const log = child_process.spawnSync(adbPath, adbArgs, {stdio: 'inherit'});\n\n    if (log.error !== null) {\n      throw log.error;\n    }\n\n  } catch (e) {\n    console.log(chalk.red(\n      'adb invocation failed. Do you have adb in your PATH?'\n    ));\n    return Promise.reject();\n  }\n}\n\nmodule.exports = {\n  name: 'log-android',\n  description: 'starts adb logcat',\n  func: logAndroid,\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/logIOS/logIOS.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/logIOS\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/logIOS/logIOS.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/logIOS/logIOS.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "logIOS.js",
      "sourceFileName": "logIOS.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/logIOS",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/logIOS",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "logIOS"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst chalk = require('chalk');\nconst child_process = require('child_process');\nconst os = require('os');\nconst path = require('path');\n\n/**\n                               * Starts iOS device syslog tail\n                               */\nfunction logIOS() {\n  return new Promise((resolve, reject) => {\n    _logIOS(resolve, reject);\n  });\n}\n\nfunction _logIOS() {\n  let rawDevices;\n\n  try {\n    rawDevices = child_process.execFileSync(\n    'xcrun', ['simctl', 'list', 'devices', '--json'], { encoding: 'utf8' });\n\n  } catch (e) {\n    console.log(chalk.red(\n    'xcrun invocation failed. Please check that Xcode is installed.'));\n\n    return Promise.reject(e);\n  }\n\n  const { devices } = JSON.parse(rawDevices);\n\n  const device = _findAvailableDevice(devices);\n  if (device === undefined) {\n    console.log(chalk.red(\n    'No active iOS device found'));\n\n    return Promise.reject();\n  }\n\n  return tailDeviceLogs(device.udid);\n}\n\nfunction _findAvailableDevice(devices) {\n  for (const key of Object.keys(devices)) {\n    for (const device of devices[key]) {\n      if (device.availability === '(available)' && device.state === 'Booted') {\n        return device;\n      }\n    }\n  }\n}\n\nfunction tailDeviceLogs(udid) {\n  const logDir = path.join(\n  os.homedir(),\n  'Library',\n  'Logs',\n  'CoreSimulator',\n  udid,\n  'asl');\n\n\n  const log =\n  child_process.spawnSync('syslog', ['-w', '-F', 'std', '-d', logDir], { stdio: 'inherit' });\n\n  if (log.error !== null) {\n    console.log(chalk.red(\n    'syslog invocation failed.'));\n\n    return Promise.reject(log.error);\n  }\n}\n\nmodule.exports = {\n  name: 'log-ios',\n  description: 'starts iOS device syslog tail',\n  func: logIOS };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ0lPUy5qcyJdLCJuYW1lcyI6WyJjaGFsayIsInJlcXVpcmUiLCJjaGlsZF9wcm9jZXNzIiwib3MiLCJwYXRoIiwibG9nSU9TIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJfbG9nSU9TIiwicmF3RGV2aWNlcyIsImV4ZWNGaWxlU3luYyIsImVuY29kaW5nIiwiZSIsImNvbnNvbGUiLCJsb2ciLCJyZWQiLCJkZXZpY2VzIiwiSlNPTiIsInBhcnNlIiwiZGV2aWNlIiwiX2ZpbmRBdmFpbGFibGVEZXZpY2UiLCJ1bmRlZmluZWQiLCJ0YWlsRGV2aWNlTG9ncyIsInVkaWQiLCJrZXkiLCJPYmplY3QiLCJrZXlzIiwiYXZhaWxhYmlsaXR5Iiwic3RhdGUiLCJsb2dEaXIiLCJqb2luIiwiaG9tZWRpciIsInNwYXduU3luYyIsInN0ZGlvIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwibmFtZSIsImRlc2NyaXB0aW9uIiwiZnVuYyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUEsTUFBTUEsUUFBUUMsUUFBUSxPQUFSLENBQWQ7QUFDQSxNQUFNQyxnQkFBZ0JELFFBQVEsZUFBUixDQUF0QjtBQUNBLE1BQU1FLEtBQUtGLFFBQVEsSUFBUixDQUFYO0FBQ0EsTUFBTUcsT0FBT0gsUUFBUSxNQUFSLENBQWI7O0FBRUE7OztBQUdBLFNBQVNJLE1BQVQsR0FBa0I7QUFDaEIsU0FBTyxJQUFJQyxPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ3RDQyxZQUFRRixPQUFSLEVBQWlCQyxNQUFqQjtBQUNELEdBRk0sQ0FBUDtBQUdEOztBQUVELFNBQVNDLE9BQVQsR0FBbUI7QUFDakIsTUFBSUMsVUFBSjs7QUFFQSxNQUFJO0FBQ0ZBLGlCQUFhUixjQUFjUyxZQUFkO0FBQ1gsV0FEVyxFQUNGLENBQUMsUUFBRCxFQUFXLE1BQVgsRUFBbUIsU0FBbkIsRUFBOEIsUUFBOUIsQ0FERSxFQUN1QyxFQUFDQyxVQUFVLE1BQVgsRUFEdkMsQ0FBYjs7QUFHRCxHQUpELENBSUUsT0FBT0MsQ0FBUCxFQUFVO0FBQ1ZDLFlBQVFDLEdBQVIsQ0FBWWYsTUFBTWdCLEdBQU47QUFDVixvRUFEVSxDQUFaOztBQUdBLFdBQU9WLFFBQVFFLE1BQVIsQ0FBZUssQ0FBZixDQUFQO0FBQ0Q7O0FBRUQsUUFBTSxFQUFFSSxPQUFGLEtBQWNDLEtBQUtDLEtBQUwsQ0FBV1QsVUFBWCxDQUFwQjs7QUFFQSxRQUFNVSxTQUFTQyxxQkFBcUJKLE9BQXJCLENBQWY7QUFDQSxNQUFJRyxXQUFXRSxTQUFmLEVBQTBCO0FBQ3hCUixZQUFRQyxHQUFSLENBQVlmLE1BQU1nQixHQUFOO0FBQ1YsZ0NBRFUsQ0FBWjs7QUFHQSxXQUFPVixRQUFRRSxNQUFSLEVBQVA7QUFDRDs7QUFFRCxTQUFPZSxlQUFlSCxPQUFPSSxJQUF0QixDQUFQO0FBQ0Q7O0FBRUQsU0FBU0gsb0JBQVQsQ0FBOEJKLE9BQTlCLEVBQXVDO0FBQ3JDLE9BQUssTUFBTVEsR0FBWCxJQUFrQkMsT0FBT0MsSUFBUCxDQUFZVixPQUFaLENBQWxCLEVBQXdDO0FBQ3RDLFNBQUssTUFBTUcsTUFBWCxJQUFxQkgsUUFBUVEsR0FBUixDQUFyQixFQUFtQztBQUNqQyxVQUFJTCxPQUFPUSxZQUFQLEtBQXdCLGFBQXhCLElBQXlDUixPQUFPUyxLQUFQLEtBQWlCLFFBQTlELEVBQXdFO0FBQ3RFLGVBQU9ULE1BQVA7QUFDRDtBQUNGO0FBQ0Y7QUFDRjs7QUFFRCxTQUFTRyxjQUFULENBQXdCQyxJQUF4QixFQUE4QjtBQUM1QixRQUFNTSxTQUFTMUIsS0FBSzJCLElBQUw7QUFDYjVCLEtBQUc2QixPQUFILEVBRGE7QUFFYixXQUZhO0FBR2IsUUFIYTtBQUliLGlCQUphO0FBS2JSLE1BTGE7QUFNYixPQU5hLENBQWY7OztBQVNBLFFBQU1UO0FBQ0piLGdCQUFjK0IsU0FBZCxDQUF3QixRQUF4QixFQUFrQyxDQUFDLElBQUQsRUFBTyxJQUFQLEVBQWEsS0FBYixFQUFvQixJQUFwQixFQUEwQkgsTUFBMUIsQ0FBbEMsRUFBcUUsRUFBQ0ksT0FBTyxTQUFSLEVBQXJFLENBREY7O0FBR0EsTUFBSW5CLElBQUlvQixLQUFKLEtBQWMsSUFBbEIsRUFBd0I7QUFDdEJyQixZQUFRQyxHQUFSLENBQVlmLE1BQU1nQixHQUFOO0FBQ1YsK0JBRFUsQ0FBWjs7QUFHQSxXQUFPVixRQUFRRSxNQUFSLENBQWVPLElBQUlvQixLQUFuQixDQUFQO0FBQ0Q7QUFDRjs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQjtBQUNmQyxRQUFNLFNBRFM7QUFFZkMsZUFBYSwrQkFGRTtBQUdmQyxRQUFNbkMsTUFIUyxFQUFqQiIsImZpbGUiOiJsb2dJT1MuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvbG9nSU9TIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTUtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IGNoYWxrID0gcmVxdWlyZSgnY2hhbGsnKTtcbmNvbnN0IGNoaWxkX3Byb2Nlc3MgPSByZXF1aXJlKCdjaGlsZF9wcm9jZXNzJyk7XG5jb25zdCBvcyA9IHJlcXVpcmUoJ29zJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG4vKipcbiAqIFN0YXJ0cyBpT1MgZGV2aWNlIHN5c2xvZyB0YWlsXG4gKi9cbmZ1bmN0aW9uIGxvZ0lPUygpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBfbG9nSU9TKHJlc29sdmUsIHJlamVjdCk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBfbG9nSU9TKCkge1xuICBsZXQgcmF3RGV2aWNlcztcblxuICB0cnkge1xuICAgIHJhd0RldmljZXMgPSBjaGlsZF9wcm9jZXNzLmV4ZWNGaWxlU3luYyhcbiAgICAgICd4Y3J1bicsIFsnc2ltY3RsJywgJ2xpc3QnLCAnZGV2aWNlcycsICctLWpzb24nXSwge2VuY29kaW5nOiAndXRmOCd9XG4gICAgKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUubG9nKGNoYWxrLnJlZChcbiAgICAgICd4Y3J1biBpbnZvY2F0aW9uIGZhaWxlZC4gUGxlYXNlIGNoZWNrIHRoYXQgWGNvZGUgaXMgaW5zdGFsbGVkLidcbiAgICApKTtcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZSk7XG4gIH1cblxuICBjb25zdCB7IGRldmljZXMgfSA9IEpTT04ucGFyc2UocmF3RGV2aWNlcyk7XG5cbiAgY29uc3QgZGV2aWNlID0gX2ZpbmRBdmFpbGFibGVEZXZpY2UoZGV2aWNlcyk7XG4gIGlmIChkZXZpY2UgPT09IHVuZGVmaW5lZCkge1xuICAgIGNvbnNvbGUubG9nKGNoYWxrLnJlZChcbiAgICAgICdObyBhY3RpdmUgaU9TIGRldmljZSBmb3VuZCdcbiAgICApKTtcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoKTtcbiAgfVxuXG4gIHJldHVybiB0YWlsRGV2aWNlTG9ncyhkZXZpY2UudWRpZCk7XG59XG5cbmZ1bmN0aW9uIF9maW5kQXZhaWxhYmxlRGV2aWNlKGRldmljZXMpIHtcbiAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMoZGV2aWNlcykpIHtcbiAgICBmb3IgKGNvbnN0IGRldmljZSBvZiBkZXZpY2VzW2tleV0pIHtcbiAgICAgIGlmIChkZXZpY2UuYXZhaWxhYmlsaXR5ID09PSAnKGF2YWlsYWJsZSknICYmIGRldmljZS5zdGF0ZSA9PT0gJ0Jvb3RlZCcpIHtcbiAgICAgICAgcmV0dXJuIGRldmljZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gdGFpbERldmljZUxvZ3ModWRpZCkge1xuICBjb25zdCBsb2dEaXIgPSBwYXRoLmpvaW4oXG4gICAgb3MuaG9tZWRpcigpLFxuICAgICdMaWJyYXJ5JyxcbiAgICAnTG9ncycsXG4gICAgJ0NvcmVTaW11bGF0b3InLFxuICAgIHVkaWQsXG4gICAgJ2FzbCcsXG4gICk7XG5cbiAgY29uc3QgbG9nID1cbiAgICBjaGlsZF9wcm9jZXNzLnNwYXduU3luYygnc3lzbG9nJywgWyctdycsICctRicsICdzdGQnLCAnLWQnLCBsb2dEaXJdLCB7c3RkaW86ICdpbmhlcml0J30pO1xuXG4gIGlmIChsb2cuZXJyb3IgIT09IG51bGwpIHtcbiAgICBjb25zb2xlLmxvZyhjaGFsay5yZWQoXG4gICAgICAnc3lzbG9nIGludm9jYXRpb24gZmFpbGVkLidcbiAgICApKTtcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobG9nLmVycm9yKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgbmFtZTogJ2xvZy1pb3MnLFxuICBkZXNjcmlwdGlvbjogJ3N0YXJ0cyBpT1MgZGV2aWNlIHN5c2xvZyB0YWlsJyxcbiAgZnVuYzogbG9nSU9TLFxufTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "logIOS.js"
      ],
      "names": [
        "chalk",
        "require",
        "child_process",
        "os",
        "path",
        "logIOS",
        "Promise",
        "resolve",
        "reject",
        "_logIOS",
        "rawDevices",
        "execFileSync",
        "encoding",
        "e",
        "console",
        "log",
        "red",
        "devices",
        "JSON",
        "parse",
        "device",
        "_findAvailableDevice",
        "undefined",
        "tailDeviceLogs",
        "udid",
        "key",
        "Object",
        "keys",
        "availability",
        "state",
        "logDir",
        "join",
        "homedir",
        "spawnSync",
        "stdio",
        "error",
        "module",
        "exports",
        "name",
        "description",
        "func"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,MAAMC,gBAAgBD,QAAQ,eAAR,CAAtB;AACA,MAAME,KAAKF,QAAQ,IAAR,CAAX;AACA,MAAMG,OAAOH,QAAQ,MAAR,CAAb;;AAEA;;;AAGA,SAASI,MAAT,GAAkB;AAChB,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,YAAQF,OAAR,EAAiBC,MAAjB;AACD,GAFM,CAAP;AAGD;;AAED,SAASC,OAAT,GAAmB;AACjB,MAAIC,UAAJ;;AAEA,MAAI;AACFA,iBAAaR,cAAcS,YAAd;AACX,WADW,EACF,CAAC,QAAD,EAAW,MAAX,EAAmB,SAAnB,EAA8B,QAA9B,CADE,EACuC,EAACC,UAAU,MAAX,EADvC,CAAb;;AAGD,GAJD,CAIE,OAAOC,CAAP,EAAU;AACVC,YAAQC,GAAR,CAAYf,MAAMgB,GAAN;AACV,oEADU,CAAZ;;AAGA,WAAOV,QAAQE,MAAR,CAAeK,CAAf,CAAP;AACD;;AAED,QAAM,EAAEI,OAAF,KAAcC,KAAKC,KAAL,CAAWT,UAAX,CAApB;;AAEA,QAAMU,SAASC,qBAAqBJ,OAArB,CAAf;AACA,MAAIG,WAAWE,SAAf,EAA0B;AACxBR,YAAQC,GAAR,CAAYf,MAAMgB,GAAN;AACV,gCADU,CAAZ;;AAGA,WAAOV,QAAQE,MAAR,EAAP;AACD;;AAED,SAAOe,eAAeH,OAAOI,IAAtB,CAAP;AACD;;AAED,SAASH,oBAAT,CAA8BJ,OAA9B,EAAuC;AACrC,OAAK,MAAMQ,GAAX,IAAkBC,OAAOC,IAAP,CAAYV,OAAZ,CAAlB,EAAwC;AACtC,SAAK,MAAMG,MAAX,IAAqBH,QAAQQ,GAAR,CAArB,EAAmC;AACjC,UAAIL,OAAOQ,YAAP,KAAwB,aAAxB,IAAyCR,OAAOS,KAAP,KAAiB,QAA9D,EAAwE;AACtE,eAAOT,MAAP;AACD;AACF;AACF;AACF;;AAED,SAASG,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,QAAMM,SAAS1B,KAAK2B,IAAL;AACb5B,KAAG6B,OAAH,EADa;AAEb,WAFa;AAGb,QAHa;AAIb,iBAJa;AAKbR,MALa;AAMb,OANa,CAAf;;;AASA,QAAMT;AACJb,gBAAc+B,SAAd,CAAwB,QAAxB,EAAkC,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,EAAoB,IAApB,EAA0BH,MAA1B,CAAlC,EAAqE,EAACI,OAAO,SAAR,EAArE,CADF;;AAGA,MAAInB,IAAIoB,KAAJ,KAAc,IAAlB,EAAwB;AACtBrB,YAAQC,GAAR,CAAYf,MAAMgB,GAAN;AACV,+BADU,CAAZ;;AAGA,WAAOV,QAAQE,MAAR,CAAeO,IAAIoB,KAAnB,CAAP;AACD;AACF;;AAEDC,OAAOC,OAAP,GAAiB;AACfC,QAAM,SADS;AAEfC,eAAa,+BAFE;AAGfC,QAAMnC,MAHS,EAAjB",
      "file": "logIOS.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/logIOS",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst chalk = require('chalk');\nconst child_process = require('child_process');\nconst os = require('os');\nconst path = require('path');\n\n/**\n * Starts iOS device syslog tail\n */\nfunction logIOS() {\n  return new Promise((resolve, reject) => {\n    _logIOS(resolve, reject);\n  });\n}\n\nfunction _logIOS() {\n  let rawDevices;\n\n  try {\n    rawDevices = child_process.execFileSync(\n      'xcrun', ['simctl', 'list', 'devices', '--json'], {encoding: 'utf8'}\n    );\n  } catch (e) {\n    console.log(chalk.red(\n      'xcrun invocation failed. Please check that Xcode is installed.'\n    ));\n    return Promise.reject(e);\n  }\n\n  const { devices } = JSON.parse(rawDevices);\n\n  const device = _findAvailableDevice(devices);\n  if (device === undefined) {\n    console.log(chalk.red(\n      'No active iOS device found'\n    ));\n    return Promise.reject();\n  }\n\n  return tailDeviceLogs(device.udid);\n}\n\nfunction _findAvailableDevice(devices) {\n  for (const key of Object.keys(devices)) {\n    for (const device of devices[key]) {\n      if (device.availability === '(available)' && device.state === 'Booted') {\n        return device;\n      }\n    }\n  }\n}\n\nfunction tailDeviceLogs(udid) {\n  const logDir = path.join(\n    os.homedir(),\n    'Library',\n    'Logs',\n    'CoreSimulator',\n    udid,\n    'asl',\n  );\n\n  const log =\n    child_process.spawnSync('syslog', ['-w', '-F', 'std', '-d', logDir], {stdio: 'inherit'});\n\n  if (log.error !== null) {\n    console.log(chalk.red(\n      'syslog invocation failed.'\n    ));\n    return Promise.reject(log.error);\n  }\n}\n\nmodule.exports = {\n  name: 'log-ios',\n  description: 'starts iOS device syslog tail',\n  func: logIOS,\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/dependencies/dependencies.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/dependencies\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/dependencies/dependencies.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/dependencies/dependencies.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "dependencies.js",
      "sourceFileName": "dependencies.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/dependencies",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/dependencies",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "dependencies"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst Metro = require('metro');\n\nconst denodeify = require('denodeify');\nconst fs = require('fs');\nconst path = require('path');\n\nconst { ASSET_REGISTRY_PATH } = require('../core/Constants');\n\nfunction dependencies(argv, config, args, packagerInstance) {\n  const rootModuleAbsolutePath = args.entryFile;\n  if (!fs.existsSync(rootModuleAbsolutePath)) {\n    return Promise.reject(new Error(`File ${rootModuleAbsolutePath} does not exist`));\n  }\n\n  const transformModulePath =\n  args.transformer ? path.resolve(args.transformer) :\n  typeof config.getTransformModulePath === 'function' ? config.getTransformModulePath() :\n  undefined;\n\n  const packageOpts = {\n    assetRegistryPath: ASSET_REGISTRY_PATH,\n    projectRoots: config.getProjectRoots(),\n    blacklistRE: config.getBlacklistRE(),\n    getPolyfills: config.getPolyfills,\n    getTransformOptions: config.getTransformOptions,\n    hasteImpl: config.hasteImpl,\n    postMinifyProcess: config.postMinifyProcess,\n    transformModulePath: transformModulePath,\n    extraNodeModules: config.extraNodeModules,\n    verbose: config.verbose,\n    workerPath: config.getWorkerPath() };\n\n\n  const relativePath = packageOpts.projectRoots.map(root =>\n  path.relative(\n  root,\n  rootModuleAbsolutePath))[\n\n  0];\n\n  const options = {\n    platform: args.platform,\n    entryFile: relativePath,\n    dev: args.dev,\n    minify: !args.dev,\n    generateSourceMaps: !args.dev };\n\n\n  const writeToFile = args.output;\n  const outStream = writeToFile ?\n  fs.createWriteStream(args.output) :\n  process.stdout;\n\n  return Promise.resolve((packagerInstance ?\n  packagerInstance.getOrderedDependencyPaths(options) :\n  Metro.getOrderedDependencyPaths(packageOpts, options)).then(\n  deps => {\n    deps.forEach(modulePath => {\n      // Temporary hack to disable listing dependencies not under this directory.\n      // Long term, we need either\n      // (a) JS code to not depend on anything outside this directory, or\n      // (b) Come up with a way to declare this dependency in Buck.\n      const isInsideProjectRoots = packageOpts.projectRoots.filter(\n      root => modulePath.startsWith(root)).\n      length > 0;\n\n      if (isInsideProjectRoots) {\n        outStream.write(modulePath + '\\n');\n      }\n    });\n    return writeToFile ?\n    denodeify(outStream.end).bind(outStream)() :\n    Promise.resolve();\n  }));\n\n}\n\nmodule.exports = {\n  name: 'dependencies',\n  func: dependencies,\n  options: [\n  {\n    command: '--entry-file <path>',\n    description: 'Absolute path to the root JS file' },\n  {\n    command: '--output [path]',\n    description: 'File name where to store the output, ex. /tmp/dependencies.txt' },\n  {\n    command: '--platform [extension]',\n    description: 'The platform extension used for selecting modules' },\n  {\n    command: '--transformer [path]',\n    description: 'Specify a custom transformer to be used' },\n  {\n    command: '--max-workers [number]',\n    description: 'Specifies the maximum number of workers the worker-pool ' +\n    'will spawn for transforming files. This defaults to the number of the ' +\n    'cores available on your machine.',\n    parse: workers => Number(workers) },\n  {\n    command: '--dev [boolean]',\n    description: 'If false, skip all dev-only code path',\n    parse: val => val === 'false' ? false : true,\n    default: true },\n  {\n    command: '--verbose',\n    description: 'Enables logging',\n    default: false }] };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "dependencies.js"
      ],
      "names": [
        "Metro",
        "require",
        "denodeify",
        "fs",
        "path",
        "ASSET_REGISTRY_PATH",
        "dependencies",
        "argv",
        "config",
        "args",
        "packagerInstance",
        "rootModuleAbsolutePath",
        "entryFile",
        "existsSync",
        "Promise",
        "reject",
        "Error",
        "transformModulePath",
        "transformer",
        "resolve",
        "getTransformModulePath",
        "undefined",
        "packageOpts",
        "assetRegistryPath",
        "projectRoots",
        "getProjectRoots",
        "blacklistRE",
        "getBlacklistRE",
        "getPolyfills",
        "getTransformOptions",
        "hasteImpl",
        "postMinifyProcess",
        "extraNodeModules",
        "verbose",
        "workerPath",
        "getWorkerPath",
        "relativePath",
        "map",
        "root",
        "relative",
        "options",
        "platform",
        "dev",
        "minify",
        "generateSourceMaps",
        "writeToFile",
        "output",
        "outStream",
        "createWriteStream",
        "process",
        "stdout",
        "getOrderedDependencyPaths",
        "then",
        "deps",
        "forEach",
        "modulePath",
        "isInsideProjectRoots",
        "filter",
        "startsWith",
        "length",
        "write",
        "end",
        "bind",
        "module",
        "exports",
        "name",
        "func",
        "command",
        "description",
        "parse",
        "workers",
        "Number",
        "val",
        "default"
      ],
      "mappings": "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",
      "file": "dependencies.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/dependencies",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst Metro = require('metro');\n\nconst denodeify = require('denodeify');\nconst fs = require('fs');\nconst path = require('path');\n\nconst {ASSET_REGISTRY_PATH} = require('../core/Constants');\n\nfunction dependencies(argv, config, args, packagerInstance) {\n  const rootModuleAbsolutePath = args.entryFile;\n  if (!fs.existsSync(rootModuleAbsolutePath)) {\n    return Promise.reject(new Error(`File ${rootModuleAbsolutePath} does not exist`));\n  }\n\n  const transformModulePath =\n      args.transformer ? path.resolve(args.transformer) :\n      typeof config.getTransformModulePath === 'function' ? config.getTransformModulePath() :\n      undefined;\n\n  const packageOpts = {\n    assetRegistryPath: ASSET_REGISTRY_PATH,\n    projectRoots: config.getProjectRoots(),\n    blacklistRE: config.getBlacklistRE(),\n    getPolyfills: config.getPolyfills,\n    getTransformOptions: config.getTransformOptions,\n    hasteImpl: config.hasteImpl,\n    postMinifyProcess: config.postMinifyProcess,\n    transformModulePath: transformModulePath,\n    extraNodeModules: config.extraNodeModules,\n    verbose: config.verbose,\n    workerPath: config.getWorkerPath(),\n  };\n\n  const relativePath = packageOpts.projectRoots.map(root =>\n    path.relative(\n      root,\n      rootModuleAbsolutePath\n    )\n  )[0];\n\n  const options = {\n    platform: args.platform,\n    entryFile: relativePath,\n    dev: args.dev,\n    minify: !args.dev,\n    generateSourceMaps: !args.dev,\n  };\n\n  const writeToFile = args.output;\n  const outStream = writeToFile\n    ? fs.createWriteStream(args.output)\n    : process.stdout;\n\n  return Promise.resolve((packagerInstance ?\n    packagerInstance.getOrderedDependencyPaths(options) :\n    Metro.getOrderedDependencyPaths(packageOpts, options)).then(\n    deps => {\n      deps.forEach(modulePath => {\n        // Temporary hack to disable listing dependencies not under this directory.\n        // Long term, we need either\n        // (a) JS code to not depend on anything outside this directory, or\n        // (b) Come up with a way to declare this dependency in Buck.\n        const isInsideProjectRoots = packageOpts.projectRoots.filter(\n          root => modulePath.startsWith(root)\n        ).length > 0;\n\n        if (isInsideProjectRoots) {\n          outStream.write(modulePath + '\\n');\n        }\n      });\n      return writeToFile\n        ? denodeify(outStream.end).bind(outStream)()\n        : Promise.resolve();\n    }\n  ));\n}\n\nmodule.exports = {\n  name: 'dependencies',\n  func: dependencies,\n  options: [\n    {\n      command: '--entry-file <path>',\n      description: 'Absolute path to the root JS file',\n    }, {\n      command: '--output [path]',\n      description: 'File name where to store the output, ex. /tmp/dependencies.txt',\n    }, {\n      command: '--platform [extension]',\n      description: 'The platform extension used for selecting modules',\n    }, {\n      command: '--transformer [path]',\n      description: 'Specify a custom transformer to be used'\n    }, {\n      command: '--max-workers [number]',\n      description: 'Specifies the maximum number of workers the worker-pool ' +\n        'will spawn for transforming files. This defaults to the number of the ' +\n        'cores available on your machine.',\n      parse: (workers: string) => Number(workers),\n    }, {\n      command: '--dev [boolean]',\n      description: 'If false, skip all dev-only code path',\n      parse: (val) => val === 'false' ? false : true,\n      default: true,\n    }, {\n      command: '--verbose',\n      description: 'Enables logging',\n      default: false,\n    },\n  ],\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/info/info.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/info\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/info/info.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/info/info.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "info.js",
      "sourceFileName": "info.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/info",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/info",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "info"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst envinfo = require('envinfo');\n\nconst info = function () {\n  const args = Array.prototype.slice.call(arguments)[2];\n\n  try {\n    envinfo.print({\n      packages: typeof args.packages === 'string' ? ['react', 'react-native'].concat(args.packages.split(',')) : args.packages });\n\n  } catch (error) {\n    console.log('Error: unable to print environment info');\n    console.log(error);\n  }\n};\n\nmodule.exports = {\n  name: 'info',\n  description: 'Get relevant version info about OS, toolchain and libraries',\n  options: [\n  {\n    command: '--packages [string]',\n    description: 'Which packages from your package.json to include, in addition to the default React Native and React versions.',\n    default: ['react', 'react-native'] }],\n\n\n  examples: [\n  {\n    desc: 'Get standard version info',\n    cmd: 'react-native info' },\n\n  {\n    desc: 'Get standard version info & specified package versions',\n    cmd: 'react-native info --packages jest,eslint,babel-polyfill' }],\n\n\n  func: info };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZm8uanMiXSwibmFtZXMiOlsiZW52aW5mbyIsInJlcXVpcmUiLCJpbmZvIiwiYXJncyIsIkFycmF5IiwicHJvdG90eXBlIiwic2xpY2UiLCJjYWxsIiwiYXJndW1lbnRzIiwicHJpbnQiLCJwYWNrYWdlcyIsImNvbmNhdCIsInNwbGl0IiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwibW9kdWxlIiwiZXhwb3J0cyIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsIm9wdGlvbnMiLCJjb21tYW5kIiwiZGVmYXVsdCIsImV4YW1wbGVzIiwiZGVzYyIsImNtZCIsImZ1bmMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLE1BQU1BLFVBQVVDLFFBQVEsU0FBUixDQUFoQjs7QUFFQSxNQUFNQyxPQUFPLFlBQVc7QUFDdEIsUUFBTUMsT0FBT0MsTUFBTUMsU0FBTixDQUFnQkMsS0FBaEIsQ0FBc0JDLElBQXRCLENBQTJCQyxTQUEzQixFQUFzQyxDQUF0QyxDQUFiOztBQUVBLE1BQUk7QUFDRlIsWUFBUVMsS0FBUixDQUFjO0FBQ1pDLGdCQUFVLE9BQU9QLEtBQUtPLFFBQVosS0FBeUIsUUFBekIsR0FBb0MsQ0FBQyxPQUFELEVBQVUsY0FBVixFQUEwQkMsTUFBMUIsQ0FBaUNSLEtBQUtPLFFBQUwsQ0FBY0UsS0FBZCxDQUFvQixHQUFwQixDQUFqQyxDQUFwQyxHQUFpR1QsS0FBS08sUUFEcEcsRUFBZDs7QUFHRCxHQUpELENBSUUsT0FBT0csS0FBUCxFQUFjO0FBQ2RDLFlBQVFDLEdBQVIsQ0FBWSx5Q0FBWjtBQUNBRCxZQUFRQyxHQUFSLENBQVlGLEtBQVo7QUFDRDtBQUNGLENBWEQ7O0FBYUFHLE9BQU9DLE9BQVAsR0FBaUI7QUFDZkMsUUFBTSxNQURTO0FBRWZDLGVBQWEsNkRBRkU7QUFHZkMsV0FBUztBQUNQO0FBQ0VDLGFBQVMscUJBRFg7QUFFRUYsaUJBQWEsK0dBRmY7QUFHRUcsYUFBUyxDQUFDLE9BQUQsRUFBVSxjQUFWLENBSFgsRUFETyxDQUhNOzs7QUFVZkMsWUFBVTtBQUNSO0FBQ0VDLFVBQU0sMkJBRFI7QUFFRUMsU0FBSyxtQkFGUCxFQURROztBQUtSO0FBQ0VELFVBQU0sd0RBRFI7QUFFRUMsU0FBSyx5REFGUCxFQUxRLENBVks7OztBQW9CZkMsUUFBTXhCLElBcEJTLEVBQWpCIiwiZmlsZSI6ImluZm8uanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Zpbm9kcHJhamFwYXRpL3JlYWN0LW5hdGl2ZS1tb250aC1zZWxlY3Rvci9leGFtcGxlL2V4YW1wbGUvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9sb2NhbC1jbGkvaW5mbyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE1LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBlbnZpbmZvID0gcmVxdWlyZSgnZW52aW5mbycpO1xuXG5jb25zdCBpbmZvID0gZnVuY3Rpb24oKSB7XG4gIGNvbnN0IGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpWzJdO1xuXG4gIHRyeSB7XG4gICAgZW52aW5mby5wcmludCh7XG4gICAgICBwYWNrYWdlczogdHlwZW9mIGFyZ3MucGFja2FnZXMgPT09ICdzdHJpbmcnID8gWydyZWFjdCcsICdyZWFjdC1uYXRpdmUnXS5jb25jYXQoYXJncy5wYWNrYWdlcy5zcGxpdCgnLCcpKSA6IGFyZ3MucGFja2FnZXNcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmxvZygnRXJyb3I6IHVuYWJsZSB0byBwcmludCBlbnZpcm9ubWVudCBpbmZvJyk7XG4gICAgY29uc29sZS5sb2coZXJyb3IpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgbmFtZTogJ2luZm8nLFxuICBkZXNjcmlwdGlvbjogJ0dldCByZWxldmFudCB2ZXJzaW9uIGluZm8gYWJvdXQgT1MsIHRvb2xjaGFpbiBhbmQgbGlicmFyaWVzJyxcbiAgb3B0aW9uczogW1xuICAgIHtcbiAgICAgIGNvbW1hbmQ6ICctLXBhY2thZ2VzIFtzdHJpbmddJyxcbiAgICAgIGRlc2NyaXB0aW9uOiAnV2hpY2ggcGFja2FnZXMgZnJvbSB5b3VyIHBhY2thZ2UuanNvbiB0byBpbmNsdWRlLCBpbiBhZGRpdGlvbiB0byB0aGUgZGVmYXVsdCBSZWFjdCBOYXRpdmUgYW5kIFJlYWN0IHZlcnNpb25zLicsXG4gICAgICBkZWZhdWx0OiBbJ3JlYWN0JywgJ3JlYWN0LW5hdGl2ZSddXG4gICAgfSxcbiAgXSxcbiAgZXhhbXBsZXM6IFtcbiAgICB7XG4gICAgICBkZXNjOiAnR2V0IHN0YW5kYXJkIHZlcnNpb24gaW5mbycsXG4gICAgICBjbWQ6ICdyZWFjdC1uYXRpdmUgaW5mbycsXG4gICAgfSxcbiAgICB7XG4gICAgICBkZXNjOiAnR2V0IHN0YW5kYXJkIHZlcnNpb24gaW5mbyAmIHNwZWNpZmllZCBwYWNrYWdlIHZlcnNpb25zJyxcbiAgICAgIGNtZDogJ3JlYWN0LW5hdGl2ZSBpbmZvIC0tcGFja2FnZXMgamVzdCxlc2xpbnQsYmFiZWwtcG9seWZpbGwnLFxuICAgIH1cbiAgXSxcbiAgZnVuYzogaW5mbyxcbn07XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "info.js"
      ],
      "names": [
        "envinfo",
        "require",
        "info",
        "args",
        "Array",
        "prototype",
        "slice",
        "call",
        "arguments",
        "print",
        "packages",
        "concat",
        "split",
        "error",
        "console",
        "log",
        "module",
        "exports",
        "name",
        "description",
        "options",
        "command",
        "default",
        "examples",
        "desc",
        "cmd",
        "func"
      ],
      "mappings": "AAAA;;;;;;;;AAQA;;AAEA,MAAMA,UAAUC,QAAQ,SAAR,CAAhB;;AAEA,MAAMC,OAAO,YAAW;AACtB,QAAMC,OAAOC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAb;;AAEA,MAAI;AACFR,YAAQS,KAAR,CAAc;AACZC,gBAAU,OAAOP,KAAKO,QAAZ,KAAyB,QAAzB,GAAoC,CAAC,OAAD,EAAU,cAAV,EAA0BC,MAA1B,CAAiCR,KAAKO,QAAL,CAAcE,KAAd,CAAoB,GAApB,CAAjC,CAApC,GAAiGT,KAAKO,QADpG,EAAd;;AAGD,GAJD,CAIE,OAAOG,KAAP,EAAc;AACdC,YAAQC,GAAR,CAAY,yCAAZ;AACAD,YAAQC,GAAR,CAAYF,KAAZ;AACD;AACF,CAXD;;AAaAG,OAAOC,OAAP,GAAiB;AACfC,QAAM,MADS;AAEfC,eAAa,6DAFE;AAGfC,WAAS;AACP;AACEC,aAAS,qBADX;AAEEF,iBAAa,+GAFf;AAGEG,aAAS,CAAC,OAAD,EAAU,cAAV,CAHX,EADO,CAHM;;;AAUfC,YAAU;AACR;AACEC,UAAM,2BADR;AAEEC,SAAK,mBAFP,EADQ;;AAKR;AACED,UAAM,wDADR;AAEEC,SAAK,yDAFP,EALQ,CAVK;;;AAoBfC,QAAMxB,IApBS,EAAjB",
      "file": "info.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/info",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst envinfo = require('envinfo');\n\nconst info = function() {\n  const args = Array.prototype.slice.call(arguments)[2];\n\n  try {\n    envinfo.print({\n      packages: typeof args.packages === 'string' ? ['react', 'react-native'].concat(args.packages.split(',')) : args.packages\n    });\n  } catch (error) {\n    console.log('Error: unable to print environment info');\n    console.log(error);\n  }\n};\n\nmodule.exports = {\n  name: 'info',\n  description: 'Get relevant version info about OS, toolchain and libraries',\n  options: [\n    {\n      command: '--packages [string]',\n      description: 'Which packages from your package.json to include, in addition to the default React Native and React versions.',\n      default: ['react', 'react-native']\n    },\n  ],\n  examples: [\n    {\n      desc: 'Get standard version info',\n      cmd: 'react-native info',\n    },\n    {\n      desc: 'Get standard version info & specified package versions',\n      cmd: 'react-native info --packages jest,eslint,babel-polyfill',\n    }\n  ],\n  func: info,\n};\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/init/init.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/init\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/init/init.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/init/init.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "init.js",
      "sourceFileName": "init.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/init",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/init",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "init"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst {\n  listTemplatesAndExit,\n  createProjectFromTemplate } =\nrequire('../generator/templates');\nconst execSync = require('child_process').execSync;\nconst fs = require('fs');\nconst minimist = require('minimist');\nconst path = require('path');\nconst printRunInstructions = require('../generator/printRunInstructions');\nconst process = require('process');\nconst yarn = require('../util/yarn');\n\n/**\n                                       * Creates the template for a React Native project given the provided\n                                       * parameters:\n                                       * @param projectDir Templates will be copied here.\n                                       * @param argsOrName Project name or full list of custom arguments\n                                       *                   for the generator.\n                                       * @param options Command line options passed from the react-native-cli directly.\n                                       *                E.g. `{ version: '0.43.0', template: 'navigation' }`\n                                       */\nfunction init(projectDir, argsOrName) {\n  const args = Array.isArray(argsOrName) ?\n  argsOrName // argsOrName was e.g. ['AwesomeApp', '--verbose']\n  : [argsOrName].concat(process.argv.slice(4)); // argsOrName was e.g. 'AwesomeApp'\n\n  // args array is e.g. ['AwesomeApp', '--verbose', '--template', 'navigation']\n  if (!args || args.length === 0) {\n    console.error('react-native init requires a project name.');\n    return;\n  }\n\n  const newProjectName = args[0];\n  const options = minimist(args);\n\n  if (listTemplatesAndExit(newProjectName, options)) {\n    // Just listing templates using 'react-native init --template'\n    // Not creating a new app.\n    return;\n  } else {\n    console.log('Setting up new React Native app in ' + projectDir);\n    generateProject(projectDir, newProjectName, options);\n  }\n}\n\n/**\n   * Generates a new React Native project based on the template.\n   * @param Absolute path at which the project folder should be created.\n   * @param options Command line arguments parsed by minimist.\n   */\nfunction generateProject(destinationRoot, newProjectName, options) {\n  var reactNativePackageJson = require('../../package.json');\n  var { peerDependencies } = reactNativePackageJson;\n  if (!peerDependencies) {\n    console.error('Missing React peer dependency in React Native\\'s package.json. Aborting.');\n    return;\n  }\n\n  var reactVersion = peerDependencies.react;\n  if (!reactVersion) {\n    console.error('Missing React peer dependency in React Native\\'s package.json. Aborting.');\n    return;\n  }\n\n  const yarnVersion =\n  !options.npm &&\n  yarn.getYarnVersionIfAvailable() &&\n  yarn.isGlobalCliUsingYarn(destinationRoot);\n\n  createProjectFromTemplate(destinationRoot, newProjectName, options.template, yarnVersion);\n\n  if (yarnVersion) {\n    console.log('Adding React...');\n    execSync(`yarn add react@${reactVersion}`, { stdio: 'inherit' });\n  } else {\n    console.log('Installing React...');\n    execSync(`npm install react@${reactVersion} --save --save-exact`, { stdio: 'inherit' });\n  }\n  if (!options['skip-jest']) {\n    const jestDeps =\n    `jest babel-jest babel-preset-react-native react-test-renderer@${reactVersion}`;\n\n    if (yarnVersion) {\n      console.log('Adding Jest...');\n      execSync(`yarn add ${jestDeps} --dev --exact`, { stdio: 'inherit' });\n    } else {\n      console.log('Installing Jest...');\n      execSync(`npm install ${jestDeps} --save-dev --save-exact`, { stdio: 'inherit' });\n    }\n    addJestToPackageJson(destinationRoot);\n  }\n  printRunInstructions(destinationRoot, newProjectName);\n}\n\n/**\n   * Add Jest-related stuff to package.json, which was created by the react-native-cli.\n   */\nfunction addJestToPackageJson(destinationRoot) {\n  var packageJSONPath = path.join(destinationRoot, 'package.json');\n  var packageJSON = JSON.parse(fs.readFileSync(packageJSONPath));\n\n  packageJSON.scripts.test = 'jest';\n  packageJSON.jest = {\n    preset: 'react-native' };\n\n  fs.writeFileSync(packageJSONPath, JSON.stringify(packageJSON, null, 2));\n}\n\nmodule.exports = init;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluaXQuanMiXSwibmFtZXMiOlsibGlzdFRlbXBsYXRlc0FuZEV4aXQiLCJjcmVhdGVQcm9qZWN0RnJvbVRlbXBsYXRlIiwicmVxdWlyZSIsImV4ZWNTeW5jIiwiZnMiLCJtaW5pbWlzdCIsInBhdGgiLCJwcmludFJ1bkluc3RydWN0aW9ucyIsInByb2Nlc3MiLCJ5YXJuIiwiaW5pdCIsInByb2plY3REaXIiLCJhcmdzT3JOYW1lIiwiYXJncyIsIkFycmF5IiwiaXNBcnJheSIsImNvbmNhdCIsImFyZ3YiLCJzbGljZSIsImxlbmd0aCIsImNvbnNvbGUiLCJlcnJvciIsIm5ld1Byb2plY3ROYW1lIiwib3B0aW9ucyIsImxvZyIsImdlbmVyYXRlUHJvamVjdCIsImRlc3RpbmF0aW9uUm9vdCIsInJlYWN0TmF0aXZlUGFja2FnZUpzb24iLCJwZWVyRGVwZW5kZW5jaWVzIiwicmVhY3RWZXJzaW9uIiwicmVhY3QiLCJ5YXJuVmVyc2lvbiIsIm5wbSIsImdldFlhcm5WZXJzaW9uSWZBdmFpbGFibGUiLCJpc0dsb2JhbENsaVVzaW5nWWFybiIsInRlbXBsYXRlIiwic3RkaW8iLCJqZXN0RGVwcyIsImFkZEplc3RUb1BhY2thZ2VKc29uIiwicGFja2FnZUpTT05QYXRoIiwiam9pbiIsInBhY2thZ2VKU09OIiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwic2NyaXB0cyIsInRlc3QiLCJqZXN0IiwicHJlc2V0Iiwid3JpdGVGaWxlU3luYyIsInN0cmluZ2lmeSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLE1BQU07QUFDSkEsc0JBREk7QUFFSkMsMkJBRkk7QUFHRkMsUUFBUSx3QkFBUixDQUhKO0FBSUEsTUFBTUMsV0FBV0QsUUFBUSxlQUFSLEVBQXlCQyxRQUExQztBQUNBLE1BQU1DLEtBQUtGLFFBQVEsSUFBUixDQUFYO0FBQ0EsTUFBTUcsV0FBV0gsUUFBUSxVQUFSLENBQWpCO0FBQ0EsTUFBTUks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QUFLa0MsSUFBTCxDQUFVZCxlQUFWLEVBQTJCLGNBQTNCLENBQXRCO0FBQ0EsTUFBSWUsY0FBY0MsS0FBS0MsS0FBTCxDQUFXdkMsR0FBR3dDLFlBQUgsQ0FBZ0JMLGVBQWhCLENBQVgsQ0FBbEI7O0FBRUFFLGNBQVlJLE9BQVosQ0FBb0JDLElBQXBCLEdBQTJCLE1BQTNCO0FBQ0FMLGNBQVlNLElBQVosR0FBbUI7QUFDakJDLFlBQVEsY0FEUyxFQUFuQjs7QUFHQTVDLEtBQUc2QyxhQUFILENBQWlCVixlQUFqQixFQUFrQ0csS0FBS1EsU0FBTCxDQUFlVCxXQUFmLEVBQTRCLElBQTVCLEVBQWtDLENBQWxDLENBQWxDO0FBQ0Q7O0FBRURVLE9BQU9DLE9BQVAsR0FBaUIxQyxJQUFqQiIsImZpbGUiOiJpbml0LmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy92aW5vZHByYWphcGF0aS9yZWFjdC1uYXRpdmUtbW9udGgtc2VsZWN0b3IvZXhhbXBsZS9leGFtcGxlL25vZGVfbW9kdWxlcy9yZWFjdC1uYXRpdmUvbG9jYWwtY2xpL2luaXQiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNS1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3Qge1xuICBsaXN0VGVtcGxhdGVzQW5kRXhpdCxcbiAgY3JlYXRlUHJvamVjdEZyb21UZW1wbGF0ZSxcbn0gPSByZXF1aXJlKCcuLi9nZW5lcmF0b3IvdGVtcGxhdGVzJyk7XG5jb25zdCBleGVjU3luYyA9IHJlcXVpcmUoJ2NoaWxkX3Byb2Nlc3MnKS5leGVjU3luYztcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IG1pbmltaXN0ID0gcmVxdWlyZSgnbWluaW1pc3QnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBwcmludFJ1bkluc3RydWN0aW9ucyA9IHJlcXVpcmUoJy4uL2dlbmVyYXRvci9wcmludFJ1bkluc3RydWN0aW9ucycpO1xuY29uc3QgcHJvY2VzcyA9IHJlcXVpcmUoJ3Byb2Nlc3MnKTtcbmNvbnN0IHlhcm4gPSByZXF1aXJlKCcuLi91dGlsL3lhcm4nKTtcblxuLyoqXG4gKiBDcmVhdGVzIHRoZSB0ZW1wbGF0ZSBmb3IgYSBSZWFjdCBOYXRpdmUgcHJvamVjdCBnaXZlbiB0aGUgcHJvdmlkZWRcbiAqIHBhcmFtZXRlcnM6XG4gKiBAcGFyYW0gcHJvamVjdERpciBUZW1wbGF0ZXMgd2lsbCBiZSBjb3BpZWQgaGVyZS5cbiAqIEBwYXJhbSBhcmdzT3JOYW1lIFByb2plY3QgbmFtZSBvciBmdWxsIGxpc3Qgb2YgY3VzdG9tIGFyZ3VtZW50c1xuICogICAgICAgICAgICAgICAgICAgZm9yIHRoZSBnZW5lcmF0b3IuXG4gKiBAcGFyYW0gb3B0aW9ucyBDb21tYW5kIGxpbmUgb3B0aW9ucyBwYXNzZWQgZnJvbSB0aGUgcmVhY3QtbmF0aXZlLWNsaSBkaXJlY3RseS5cbiAqICAgICAgICAgICAgICAgIEUuZy4gYHsgdmVyc2lvbjogJzAuNDMuMCcsIHRlbXBsYXRlOiAnbmF2aWdhdGlvbicgfWBcbiAqL1xuZnVuY3Rpb24gaW5pdChwcm9qZWN0RGlyLCBhcmdzT3JOYW1lKSB7XG4gIGNvbnN0IGFyZ3MgPSBBcnJheS5pc0FycmF5KGFyZ3NPck5hbWUpXG4gICAgPyBhcmdzT3JOYW1lIC8vIGFyZ3NPck5hbWUgd2FzIGUuZy4gWydBd2Vzb21lQXBwJywgJy0tdmVyYm9zZSddXG4gICAgOiBbYXJnc09yTmFtZV0uY29uY2F0KHByb2Nlc3MuYXJndi5zbGljZSg0KSk7IC8vIGFyZ3NPck5hbWUgd2FzIGUuZy4gJ0F3ZXNvbWVBcHAnXG5cbiAgLy8gYXJncyBhcnJheSBpcyBlLmcuIFsnQXdlc29tZUFwcCcsICctLXZlcmJvc2UnLCAnLS10ZW1wbGF0ZScsICduYXZpZ2F0aW9uJ11cbiAgaWYgKCFhcmdzIHx8IGFyZ3MubGVuZ3RoID09PSAwKSB7XG4gICAgY29uc29sZS5lcnJvcigncmVhY3QtbmF0aXZlIGluaXQgcmVxdWlyZXMgYSBwcm9qZWN0IG5hbWUuJyk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgbmV3UHJvamVjdE5hbWUgPSBhcmdzWzBdO1xuICBjb25zdCBvcHRpb25zID0gbWluaW1pc3QoYXJncyk7XG5cbiAgaWYgKGxpc3RUZW1wbGF0ZXNBbmRFeGl0KG5ld1Byb2plY3ROYW1lLCBvcHRpb25zKSkge1xuICAgIC8vIEp1c3QgbGlzdGluZyB0ZW1wbGF0ZXMgdXNpbmcgJ3JlYWN0LW5hdGl2ZSBpbml0IC0tdGVtcGxhdGUnXG4gICAgLy8gTm90IGNyZWF0aW5nIGEgbmV3IGFwcC5cbiAgICByZXR1cm47XG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS5sb2coJ1NldHRpbmcgdXAgbmV3IFJlYWN0IE5hdGl2ZSBhcHAgaW4gJyArIHByb2plY3REaXIpO1xuICAgIGdlbmVyYXRlUHJvamVjdChwcm9qZWN0RGlyLCBuZXdQcm9qZWN0TmFtZSwgb3B0aW9ucyk7XG4gIH1cbn1cblxuLyoqXG4gKiBHZW5lcmF0ZXMgYSBuZXcgUmVhY3QgTmF0aXZlIHByb2plY3QgYmFzZWQgb24gdGhlIHRlbXBsYXRlLlxuICogQHBhcmFtIEFic29sdXRlIHBhdGggYXQgd2hpY2ggdGhlIHByb2plY3QgZm9sZGVyIHNob3VsZCBiZSBjcmVhdGVkLlxuICogQHBhcmFtIG9wdGlvbnMgQ29tbWFuZCBsaW5lIGFyZ3VtZW50cyBwYXJzZWQgYnkgbWluaW1pc3QuXG4gKi9cbmZ1bmN0aW9uIGdlbmVyYXRlUHJvamVjdChkZXN0aW5hdGlvblJvb3QsIG5ld1Byb2plY3ROYW1lLCBvcHRpb25zKSB7XG4gIHZhciByZWFjdE5hdGl2ZVBhY2thZ2VKc29uID0gcmVxdWlyZSgnLi4vLi4vcGFja2FnZS5qc29uJyk7XG4gIHZhciB7IHBlZXJEZXBlbmRlbmNpZXMgfSA9IHJlYWN0TmF0aXZlUGFja2FnZUpzb247XG4gIGlmICghcGVlckRlcGVuZGVuY2llcykge1xuICAgIGNvbnNvbGUuZXJyb3IoJ01pc3NpbmcgUmVhY3QgcGVlciBkZXBlbmRlbmN5IGluIFJlYWN0IE5hdGl2ZVxcJ3MgcGFja2FnZS5qc29uLiBBYm9ydGluZy4nKTtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgcmVhY3RWZXJzaW9uID0gcGVlckRlcGVuZGVuY2llcy5yZWFjdDtcbiAgaWYgKCFyZWFjdFZlcnNpb24pIHtcbiAgICBjb25zb2xlLmVycm9yKCdNaXNzaW5nIFJlYWN0IHBlZXIgZGVwZW5kZW5jeSBpbiBSZWFjdCBOYXRpdmVcXCdzIHBhY2thZ2UuanNvbi4gQWJvcnRpbmcuJyk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgeWFyblZlcnNpb24gPVxuICAgICghb3B0aW9ucy5ucG0pICYmXG4gICAgeWFybi5nZXRZYXJuVmVyc2lvbklmQXZhaWxhYmxlKCkgJiZcbiAgICB5YXJuLmlzR2xvYmFsQ2xpVXNpbmdZYXJuKGRlc3RpbmF0aW9uUm9vdCk7XG5cbiAgY3JlYXRlUHJvamVjdEZyb21UZW1wbGF0ZShkZXN0aW5hdGlvblJvb3QsIG5ld1Byb2plY3ROYW1lLCBvcHRpb25zLnRlbXBsYXRlLCB5YXJuVmVyc2lvbik7XG5cbiAgaWYgKHlhcm5WZXJzaW9uKSB7XG4gICAgY29uc29sZS5sb2coJ0FkZGluZyBSZWFjdC4uLicpO1xuICAgIGV4ZWNTeW5jKGB5YXJuIGFkZCByZWFjdEAke3JlYWN0VmVyc2lvbn1gLCB7c3RkaW86ICdpbmhlcml0J30pO1xuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUubG9nKCdJbnN0YWxsaW5nIFJlYWN0Li4uJyk7XG4gICAgZXhlY1N5bmMoYG5wbSBpbnN0YWxsIHJlYWN0QCR7cmVhY3RWZXJzaW9ufSAtLXNhdmUgLS1zYXZlLWV4YWN0YCwge3N0ZGlvOiAnaW5oZXJpdCd9KTtcbiAgfVxuICBpZiAoIW9wdGlvbnNbJ3NraXAtamVzdCddKSB7XG4gICAgY29uc3QgamVzdERlcHMgPSAoXG4gICAgICBgamVzdCBiYWJlbC1qZXN0IGJhYmVsLXByZXNldC1yZWFjdC1uYXRpdmUgcmVhY3QtdGVzdC1yZW5kZXJlckAke3JlYWN0VmVyc2lvbn1gXG4gICAgKTtcbiAgICBpZiAoeWFyblZlcnNpb24pIHtcbiAgICAgIGNvbnNvbGUubG9nKCdBZGRpbmcgSmVzdC4uLicpO1xuICAgICAgZXhlY1N5bmMoYHlhcm4gYWRkICR7amVzdERlcHN9IC0tZGV2IC0tZXhhY3RgLCB7c3RkaW86ICdpbmhlcml0J30pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZygnSW5zdGFsbGluZyBKZXN0Li4uJyk7XG4gICAgICBleGVjU3luYyhgbnBtIGluc3RhbGwgJHtqZXN0RGVwc30gLS1zYXZlLWRldiAtLXNhdmUtZXhhY3RgLCB7c3RkaW86ICdpbmhlcml0J30pO1xuICAgIH1cbiAgICBhZGRKZXN0VG9QYWNrYWdlSnNvbihkZXN0aW5hdGlvblJvb3QpO1xuICB9XG4gIHByaW50UnVuSW5zdHJ1Y3Rpb25zKGRlc3RpbmF0aW9uUm9vdCwgbmV3UHJvamVjdE5hbWUpO1xufVxuXG4vKipcbiAqIEFkZCBKZXN0LXJlbGF0ZWQgc3R1ZmYgdG8gcGFja2FnZS5qc29uLCB3aGljaCB3YXMgY3JlYXRlZCBieSB0aGUgcmVhY3QtbmF0aXZlLWNsaS5cbiAqL1xuZnVuY3Rpb24gYWRkSmVzdFRvUGFja2FnZUpzb24oZGVzdGluYXRpb25Sb290KSB7XG4gIHZhciBwYWNrYWdlSlNPTlBhdGggPSBwYXRoLmpvaW4oZGVzdGluYXRpb25Sb290LCAncGFja2FnZS5qc29uJyk7XG4gIHZhciBwYWNrYWdlSlNPTiA9IEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKHBhY2thZ2VKU09OUGF0aCkpO1xuXG4gIHBhY2thZ2VKU09OLnNjcmlwdHMudGVzdCA9ICdqZXN0JztcbiAgcGFja2FnZUpTT04uamVzdCA9IHtcbiAgICBwcmVzZXQ6ICdyZWFjdC1uYXRpdmUnXG4gIH07XG4gIGZzLndyaXRlRmlsZVN5bmMocGFja2FnZUpTT05QYXRoLCBKU09OLnN0cmluZ2lmeShwYWNrYWdlSlNPTiwgbnVsbCwgMikpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluaXQ7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "init.js"
      ],
      "names": [
        "listTemplatesAndExit",
        "createProjectFromTemplate",
        "require",
        "execSync",
        "fs",
        "minimist",
        "path",
        "printRunInstructions",
        "process",
        "yarn",
        "init",
        "projectDir",
        "argsOrName",
        "args",
        "Array",
        "isArray",
        "concat",
        "argv",
        "slice",
        "length",
        "console",
        "error",
        "newProjectName",
        "options",
        "log",
        "generateProject",
        "destinationRoot",
        "reactNativePackageJson",
        "peerDependencies",
        "reactVersion",
        "react",
        "yarnVersion",
        "npm",
        "getYarnVersionIfAvailable",
        "isGlobalCliUsingYarn",
        "template",
        "stdio",
        "jestDeps",
        "addJestToPackageJson",
        "packageJSONPath",
        "join",
        "packageJSON",
        "JSON",
        "parse",
        "readFileSync",
        "scripts",
        "test",
        "jest",
        "preset",
        "writeFileSync",
        "stringify",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "init.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/init",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst {\n  listTemplatesAndExit,\n  createProjectFromTemplate,\n} = require('../generator/templates');\nconst execSync = require('child_process').execSync;\nconst fs = require('fs');\nconst minimist = require('minimist');\nconst path = require('path');\nconst printRunInstructions = require('../generator/printRunInstructions');\nconst process = require('process');\nconst yarn = require('../util/yarn');\n\n/**\n * Creates the template for a React Native project given the provided\n * parameters:\n * @param projectDir Templates will be copied here.\n * @param argsOrName Project name or full list of custom arguments\n *                   for the generator.\n * @param options Command line options passed from the react-native-cli directly.\n *                E.g. `{ version: '0.43.0', template: 'navigation' }`\n */\nfunction init(projectDir, argsOrName) {\n  const args = Array.isArray(argsOrName)\n    ? argsOrName // argsOrName was e.g. ['AwesomeApp', '--verbose']\n    : [argsOrName].concat(process.argv.slice(4)); // argsOrName was e.g. 'AwesomeApp'\n\n  // args array is e.g. ['AwesomeApp', '--verbose', '--template', 'navigation']\n  if (!args || args.length === 0) {\n    console.error('react-native init requires a project name.');\n    return;\n  }\n\n  const newProjectName = args[0];\n  const options = minimist(args);\n\n  if (listTemplatesAndExit(newProjectName, options)) {\n    // Just listing templates using 'react-native init --template'\n    // Not creating a new app.\n    return;\n  } else {\n    console.log('Setting up new React Native app in ' + projectDir);\n    generateProject(projectDir, newProjectName, options);\n  }\n}\n\n/**\n * Generates a new React Native project based on the template.\n * @param Absolute path at which the project folder should be created.\n * @param options Command line arguments parsed by minimist.\n */\nfunction generateProject(destinationRoot, newProjectName, options) {\n  var reactNativePackageJson = require('../../package.json');\n  var { peerDependencies } = reactNativePackageJson;\n  if (!peerDependencies) {\n    console.error('Missing React peer dependency in React Native\\'s package.json. Aborting.');\n    return;\n  }\n\n  var reactVersion = peerDependencies.react;\n  if (!reactVersion) {\n    console.error('Missing React peer dependency in React Native\\'s package.json. Aborting.');\n    return;\n  }\n\n  const yarnVersion =\n    (!options.npm) &&\n    yarn.getYarnVersionIfAvailable() &&\n    yarn.isGlobalCliUsingYarn(destinationRoot);\n\n  createProjectFromTemplate(destinationRoot, newProjectName, options.template, yarnVersion);\n\n  if (yarnVersion) {\n    console.log('Adding React...');\n    execSync(`yarn add react@${reactVersion}`, {stdio: 'inherit'});\n  } else {\n    console.log('Installing React...');\n    execSync(`npm install react@${reactVersion} --save --save-exact`, {stdio: 'inherit'});\n  }\n  if (!options['skip-jest']) {\n    const jestDeps = (\n      `jest babel-jest babel-preset-react-native react-test-renderer@${reactVersion}`\n    );\n    if (yarnVersion) {\n      console.log('Adding Jest...');\n      execSync(`yarn add ${jestDeps} --dev --exact`, {stdio: 'inherit'});\n    } else {\n      console.log('Installing Jest...');\n      execSync(`npm install ${jestDeps} --save-dev --save-exact`, {stdio: 'inherit'});\n    }\n    addJestToPackageJson(destinationRoot);\n  }\n  printRunInstructions(destinationRoot, newProjectName);\n}\n\n/**\n * Add Jest-related stuff to package.json, which was created by the react-native-cli.\n */\nfunction addJestToPackageJson(destinationRoot) {\n  var packageJSONPath = path.join(destinationRoot, 'package.json');\n  var packageJSON = JSON.parse(fs.readFileSync(packageJSONPath));\n\n  packageJSON.scripts.test = 'jest';\n  packageJSON.jest = {\n    preset: 'react-native'\n  };\n  fs.writeFileSync(packageJSONPath, JSON.stringify(packageJSON, null, 2));\n}\n\nmodule.exports = init;\n"
      ]
    },
    "mtime": 1516970254000
  },
  "{\"filename\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator/templates.js\",\"env\":{},\"retainLines\":true,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceMaps\":\"inline\",\"sourceRoot\":\"/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator\",\"babelrc\":false,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator/templates.js",
      "filenameRelative": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator/templates.js",
      "env": {},
      "retainLines": true,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "templates.js",
      "sourceFileName": "templates.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "templates"
    },
    "ignored": false,
    "code": "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst copyProjectTemplateAndReplace = require('./copyProjectTemplateAndReplace');\nconst execSync = require('child_process').execSync;\nconst fs = require('fs');\nconst path = require('path');\n\n/**\n                               * Templates released as part of react-native in local-cli/templates.\n                               */\nconst builtInTemplates = {\n  navigation: 'HelloNavigation' };\n\n\nfunction listTemplatesAndExit(newProjectName, options) {\n  if (options.template === true) {\n    // Just listing templates using 'react-native init --template'.\n    // Not creating a new app.\n    // Print available templates and exit.\n    const templateKeys = Object.keys(builtInTemplates);\n    if (templateKeys.length === 0) {\n      // Just a guard, should never happen as long builtInTemplates\n      // above is defined correctly :)\n      console.log(\n      'There are no templates available besides ' +\n      'the default \"Hello World\" one.');\n\n    } else {\n      console.log(\n      'The available templates are:\\n' +\n      templateKeys.join('\\n') +\n      '\\nYou can use these to create an app based on a template, for example: ' +\n      'you could run: ' +\n      'react-native init ' + newProjectName + ' --template ' + templateKeys[0]);\n\n    }\n    // Exit 'react-native init'\n    return true;\n  }\n  // Continue 'react-native init'\n  return false;\n}\n\n/**\n   * @param destPath Create the new project at this path.\n   * @param newProjectName For example 'AwesomeApp'.\n   * @param template Template to use, for example 'navigation'.\n   * @param yarnVersion Version of yarn available on the system, or null if\n   *                    yarn is not available. For example '0.18.1'.\n   */\nfunction createProjectFromTemplate(destPath, newProjectName, template, yarnVersion) {\n  // Expand the basic 'HelloWorld' template\n  copyProjectTemplateAndReplace(\n  path.resolve('node_modules', 'react-native', 'local-cli', 'templates', 'HelloWorld'),\n  destPath,\n  newProjectName);\n\n\n  if (template === undefined) {\n    // No specific template, use just the HelloWorld template above\n    return;\n  }\n\n  // Keep the files from the 'HelloWorld' template, and overwrite some of them\n  // with the specified project template.\n  // The 'HelloWorld' template contains the native files (these are used by\n  // all templates) and every other template only contains additional JS code.\n  // Reason:\n  // This way we don't have to duplicate the native files in every template.\n  // If we duplicated them we'd make RN larger and risk that people would\n  // forget to maintain all the copies so they would go out of sync.\n  const builtInTemplateName = builtInTemplates[template];\n  if (builtInTemplateName) {\n    // template is e.g. 'navigation',\n    // use the built-in local-cli/templates/HelloNavigation folder\n    createFromBuiltInTemplate(builtInTemplateName, destPath, newProjectName, yarnVersion);\n  } else {\n    // template is e.g. 'ignite',\n    // use the template react-native-template-ignite from npm\n    createFromRemoteTemplate(template, destPath, newProjectName, yarnVersion);\n  }\n}\n\n// (We might want to get rid of built-in templates in the future -\n// publish them to npm and install from there.)\nfunction createFromBuiltInTemplate(templateName, destPath, newProjectName, yarnVersion) {\n  const templatePath = path.resolve(\n  'node_modules', 'react-native', 'local-cli', 'templates', templateName);\n\n  copyProjectTemplateAndReplace(\n  templatePath,\n  destPath,\n  newProjectName);\n\n  installTemplateDependencies(templatePath, yarnVersion);\n}\n\n/**\n   * The following formats are supported for the template:\n   * - 'demo' -> Fetch the package react-native-template-demo from npm\n   * - git://..., http://..., file://... or any other URL supported by npm\n   */\nfunction createFromRemoteTemplate(template, destPath, newProjectName, yarnVersion) {\n  let installPackage;\n  let templateName;\n  if (template.includes('://')) {\n    // URL, e.g. git://, file://\n    installPackage = template;\n    templateName = template.substr(template.lastIndexOf('/') + 1);\n  } else {\n    // e.g 'demo'\n    installPackage = 'react-native-template-' + template;\n    templateName = installPackage;\n  }\n\n  // Check if the template exists\n  console.log(`Fetching template ${installPackage}...`);\n  try {\n    if (yarnVersion) {\n      execSync(`yarn add ${installPackage} --ignore-scripts`, { stdio: 'inherit' });\n    } else {\n      execSync(`npm install ${installPackage} --save --save-exact --ignore-scripts`, { stdio: 'inherit' });\n    }\n    const templatePath = path.resolve(\n    'node_modules', templateName);\n\n    copyProjectTemplateAndReplace(\n    templatePath,\n    destPath,\n    newProjectName,\n    {\n      // Every template contains a dummy package.json file included\n      // only for publishing the template to npm.\n      // We want to ignore this dummy file, otherwise it would overwrite\n      // our project's package.json file.\n      ignorePaths: ['package.json', 'dependencies.json'] });\n\n\n    installTemplateDependencies(templatePath, yarnVersion);\n  } finally {\n    // Clean up the temp files\n    try {\n      if (yarnVersion) {\n        execSync(`yarn remove ${templateName} --ignore-scripts`);\n      } else {\n        execSync(`npm uninstall ${templateName} --ignore-scripts`);\n      }\n    } catch (err) {\n      // Not critical but we still want people to know and report\n      // if this the clean up fails.\n      console.warn(\n      `Failed to clean up template temp files in node_modules/${templateName}. ` +\n      'This is not a critical error, you can work on your app.');\n\n    }\n  }\n}\n\nfunction installTemplateDependencies(templatePath, yarnVersion) {\n  // dependencies.json is a special file that lists additional dependencies\n  // that are required by this template\n  const dependenciesJsonPath = path.resolve(\n  templatePath, 'dependencies.json');\n\n  console.log('Adding dependencies for the project...');\n  if (!fs.existsSync(dependenciesJsonPath)) {\n    console.log('No additional dependencies.');\n    return;\n  }\n\n  let dependencies;\n  try {\n    dependencies = JSON.parse(fs.readFileSync(dependenciesJsonPath));\n  } catch (err) {\n    throw new Error(\n    'Could not parse the template\\'s dependencies.json: ' + err.message);\n\n  }\n  for (let depName in dependencies) {\n    const depVersion = dependencies[depName];\n    const depToInstall = depName + '@' + depVersion;\n    console.log('Adding ' + depToInstall + '...');\n    if (yarnVersion) {\n      execSync(`yarn add ${depToInstall}`, { stdio: 'inherit' });\n    } else {\n      execSync(`npm install ${depToInstall} --save --save-exact`, { stdio: 'inherit' });\n    }\n  }\n  console.log('Linking native dependencies into the project\\'s build files...');\n  execSync('react-native link', { stdio: 'inherit' });\n}\n\nmodule.exports = {\n  listTemplatesAndExit,\n  createProjectFromTemplate };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "templates.js"
      ],
      "names": [
        "copyProjectTemplateAndReplace",
        "require",
        "execSync",
        "fs",
        "path",
        "builtInTemplates",
        "navigation",
        "listTemplatesAndExit",
        "newProjectName",
        "options",
        "template",
        "templateKeys",
        "Object",
        "keys",
        "length",
        "console",
        "log",
        "join",
        "createProjectFromTemplate",
        "destPath",
        "yarnVersion",
        "resolve",
        "undefined",
        "builtInTemplateName",
        "createFromBuiltInTemplate",
        "createFromRemoteTemplate",
        "templateName",
        "templatePath",
        "installTemplateDependencies",
        "installPackage",
        "includes",
        "substr",
        "lastIndexOf",
        "stdio",
        "ignorePaths",
        "err",
        "warn",
        "dependenciesJsonPath",
        "existsSync",
        "dependencies",
        "JSON",
        "parse",
        "readFileSync",
        "Error",
        "message",
        "depName",
        "depVersion",
        "depToInstall",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "templates.js",
      "sourceRoot": "/Users/vinodprajapati/react-native-month-selector/example/example/node_modules/react-native/local-cli/generator",
      "sourcesContent": [
        "/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nconst copyProjectTemplateAndReplace = require('./copyProjectTemplateAndReplace');\nconst execSync = require('child_process').execSync;\nconst fs = require('fs');\nconst path = require('path');\n\n/**\n * Templates released as part of react-native in local-cli/templates.\n */\nconst builtInTemplates = {\n  navigation: 'HelloNavigation',\n};\n\nfunction listTemplatesAndExit(newProjectName, options) {\n  if (options.template === true) {\n    // Just listing templates using 'react-native init --template'.\n    // Not creating a new app.\n    // Print available templates and exit.\n    const templateKeys = Object.keys(builtInTemplates);\n    if (templateKeys.length === 0) {\n      // Just a guard, should never happen as long builtInTemplates\n      // above is defined correctly :)\n      console.log(\n        'There are no templates available besides ' +\n        'the default \"Hello World\" one.'\n      );\n    } else {\n      console.log(\n        'The available templates are:\\n' +\n        templateKeys.join('\\n') +\n        '\\nYou can use these to create an app based on a template, for example: ' +\n        'you could run: ' +\n        'react-native init ' + newProjectName + ' --template ' + templateKeys[0]\n      );\n    }\n    // Exit 'react-native init'\n    return true;\n  }\n  // Continue 'react-native init'\n  return false;\n}\n\n/**\n * @param destPath Create the new project at this path.\n * @param newProjectName For example 'AwesomeApp'.\n * @param template Template to use, for example 'navigation'.\n * @param yarnVersion Version of yarn available on the system, or null if\n *                    yarn is not available. For example '0.18.1'.\n */\nfunction createProjectFromTemplate(destPath, newProjectName, template, yarnVersion) {\n  // Expand the basic 'HelloWorld' template\n  copyProjectTemplateAndReplace(\n    path.resolve('node_modules', 'react-native', 'local-cli', 'templates', 'HelloWorld'),\n    destPath,\n    newProjectName\n  );\n\n  if (template === undefined) {\n    // No specific template, use just the HelloWorld template above\n    return;\n  }\n\n  // Keep the files from the 'HelloWorld' template, and overwrite some of them\n  // with the specified project template.\n  // The 'HelloWorld' template contains the native files (these are used by\n  // all templates) and every other template only contains additional JS code.\n  // Reason:\n  // This way we don't have to duplicate the native files in every template.\n  // If we duplicated them we'd make RN larger and risk that people would\n  // forget to maintain all the copies so they would go out of sync.\n  const builtInTemplateName = builtInTemplates[template];\n  if (builtInTemplateName) {\n    // template is e.g. 'navigation',\n    // use the built-in local-cli/templates/HelloNavigation folder\n    createFromBuiltInTemplate(builtInTemplateName, destPath, newProjectName, yarnVersion);\n  } else {\n    // template is e.g. 'ignite',\n    // use the template react-native-template-ignite from npm\n    createFromRemoteTemplate(template, destPath, newProjectName, yarnVersion);\n  }\n}\n\n// (We might want to get rid of built-in templates in the future -\n// publish them to npm and install from there.)\nfunction createFromBuiltInTemplate(templateName, destPath, newProjectName, yarnVersion) {\n  const templatePath = path.resolve(\n    'node_modules', 'react-native', 'local-cli', 'templates', templateName\n  );\n  copyProjectTemplateAndReplace(\n    templatePath,\n    destPath,\n    newProjectName,\n  );\n  installTemplateDependencies(templatePath, yarnVersion);\n}\n\n/**\n * The following formats are supported for the template:\n * - 'demo' -> Fetch the package react-native-template-demo from npm\n * - git://..., http://..., file://... or any other URL supported by npm\n */\nfunction createFromRemoteTemplate(template, destPath, newProjectName, yarnVersion) {\n  let installPackage;\n  let templateName;\n  if (template.includes('://')) {\n     // URL, e.g. git://, file://\n     installPackage = template;\n     templateName = template.substr(template.lastIndexOf('/') + 1);\n  } else {\n    // e.g 'demo'\n    installPackage = 'react-native-template-' + template;\n    templateName = installPackage;\n  }\n\n  // Check if the template exists\n  console.log(`Fetching template ${installPackage}...`);\n  try {\n    if (yarnVersion) {\n      execSync(`yarn add ${installPackage} --ignore-scripts`, {stdio: 'inherit'});\n    } else {\n      execSync(`npm install ${installPackage} --save --save-exact --ignore-scripts`, {stdio: 'inherit'});\n    }\n    const templatePath = path.resolve(\n      'node_modules', templateName\n    );\n    copyProjectTemplateAndReplace(\n      templatePath,\n      destPath,\n      newProjectName,\n      {\n        // Every template contains a dummy package.json file included\n        // only for publishing the template to npm.\n        // We want to ignore this dummy file, otherwise it would overwrite\n        // our project's package.json file.\n        ignorePaths: ['package.json', 'dependencies.json'],\n      }\n    );\n    installTemplateDependencies(templatePath, yarnVersion);\n  } finally {\n    // Clean up the temp files\n    try {\n      if (yarnVersion) {\n        execSync(`yarn remove ${templateName} --ignore-scripts`);\n      } else {\n        execSync(`npm uninstall ${templateName} --ignore-scripts`);\n      }\n    } catch (err) {\n      // Not critical but we still want people to know and report\n      // if this the clean up fails.\n      console.warn(\n        `Failed to clean up template temp files in node_modules/${templateName}. ` +\n        'This is not a critical error, you can work on your app.'\n      );\n    }\n  }\n}\n\nfunction installTemplateDependencies(templatePath, yarnVersion) {\n  // dependencies.json is a special file that lists additional dependencies\n  // that are required by this template\n  const dependenciesJsonPath = path.resolve(\n    templatePath, 'dependencies.json'\n  );\n  console.log('Adding dependencies for the project...');\n  if (!fs.existsSync(dependenciesJsonPath)) {\n    console.log('No additional dependencies.');\n    return;\n  }\n\n  let dependencies;\n  try {\n    dependencies = JSON.parse(fs.readFileSync(dependenciesJsonPath));\n  } catch (err) {\n    throw new Error(\n      'Could not parse the template\\'s dependencies.json: ' + err.message\n    );\n  }\n  for (let depName in dependencies) {\n    const depVersion = dependencies[depName];\n    const depToInstall = depName + '@' + depVersion;\n    console.log('Adding ' + depToInstall + '...');\n    if (yarnVersion) {\n      execSync(`yarn add ${depToInstall}`, {stdio: 'inherit'});\n    } else {\n      execSync(`npm install ${depToInstall} --save --save-exact`, {stdio: 'inherit'});\n    }\n  }\n  console.log('Linking native dependencies into the project\\'s build files...');\n  execSync('react-native link', {stdio: 'inherit'});\n}\n\nmodule.exports = {\n  listTemplatesAndExit,\n  createProjectFromTemplate,\n};\n"
      ]
    },
    "mtime": 1516970254000
  }
}